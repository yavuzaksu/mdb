<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <import resource="classpath:camel-sonar-beans.xml"/>
    <!-- use this if you have local mongodb installed  -->
    <!-- import resource="classpath:metrics-crawler-context.xml"/ -->

    <camelContext xmlns="http://camel.apache.org/schema/spring">
        <propertyPlaceholder id="properties" location="classpath:application.properties"/>
        <route>
            <from uri="restlet:/project/coverage/worse?restletMethods=GET"/>
            <process ref="jsonOutCreator"/>
            <to uri="http://{{sonar.host}}:{{sonar.port}}/api/resources?metrics=coverage&amp;limit=10"/>
        </route>
        <route>
            <from uri="restlet:http://{{host}}:{{port}}/{{context}}/project/coverage/avg"/>
            <process ref="jsonOutCreator"/>
            <to uri="http://{{sonar.host}}:{{sonar.port}}/api/resources?metrics=coverage&amp;limit=1&amp;bridgeEndpoint=true&amp;throwExceptionOnFailure=false"/>
        </route>

        <route>
            <from uri="restlet:http://{{host}}:{{port}}/{{context}}/project/sonar/issues/aggregated"/>
            <multicast strategyRef="issuesAggregationStrategy" parallelProcessing="true">
                <to uri="http://{{sonar.host}}:{{sonar.port}}/api/issues/search?statuses=OPEN&amp;severities=MAJOR&amp;bridgeEndpoint=true&amp;throwExceptionOnFailure=false"/>
                <to uri="http://{{sonar.host}}:{{sonar.port}}/api/issues/search?statuses=OPEN&amp;severities=MINOR&amp;bridgeEndpoint=true&amp;throwExceptionOnFailure=false"/>
                <to uri="http://{{sonar.host}}:{{sonar.port}}/api/issues/search?statuses=OPEN&amp;severities=BLOCKER&amp;bridgeEndpoint=true&amp;throwExceptionOnFailure=false"/>
                <to uri="http://{{sonar.host}}:{{sonar.port}}/api/issues/search?statuses=OPEN&amp;severities=CRITICAL&amp;bridgeEndpoint=true&amp;throwExceptionOnFailure=false"/>
            </multicast>
            <process ref="processAggregatePrinter" />
        </route>
        <route>
            <from uri="restlet:/project/sonar/issues/all"/>
            <process ref="jsonOutCreator"/>
            <to uri="http://{{sonar.host}}:{{sonar.port}}/api/issues/search?statuses=OPEN&amp;severities=BLOCKER,CRITICAL,MAJOR,MINOR,INFO"/>
        </route>
        <route>
            <from uri="restlet:http://{{host}}:{{port}}/{{context}}/project/sonar/issues/{issueType}"/>
            <process ref="jsonOutCreator"/>
            <to uri="http://{{sonar.host}}:{{sonar.port}}/issues/search?statuses=OPEN&amp;severities=${issueType}"/>
        </route>  
        
        <!-- MONGODB, exposed services
        <route id="mongoIssues">
			<from uri="restlet:/sonar/issues/?restletMethods=GET,POST" />
			<process ref="jsonOutCreator" />
			<setBody>
				<simple>{ issues.project : "${header.projectId}"}</simple>
			</setBody>
			<to
				uri="mongodb:myDb?database=sonar&amp;collection=issues&amp;operation=findAll" />
		</route>-->

		
    </camelContext>
</beans>
