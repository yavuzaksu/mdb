




<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>mini-dashing/application.js at gh-pages · pushmatrix/mini-dashing · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <meta property="fb:app_id" content="1401488693436528"/>

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="pushmatrix/mini-dashing" name="twitter:title" /><meta content="mini-dashing - Dashing without the backend. Prototype." name="twitter:description" /><meta content="https://0.gravatar.com/avatar/e63fb54bc722e924160ced2436a50a28?d=https%3A%2F%2Fidenticons.github.com%2Ff5a242bf3b4d8b036128eee066eaf248.png&amp;r=x&amp;s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://0.gravatar.com/avatar/e63fb54bc722e924160ced2436a50a28?d=https%3A%2F%2Fidenticons.github.com%2Ff5a242bf3b4d8b036128eee066eaf248.png&amp;r=x&amp;s=400" property="og:image" /><meta content="pushmatrix/mini-dashing" property="og:title" /><meta content="https://github.com/pushmatrix/mini-dashing" property="og:url" /><meta content="mini-dashing - Dashing without the backend. Prototype." property="og:description" />

    <meta name="hostname" content="github-fe119-cp1-prd.iad.github.net">
    <meta name="ruby" content="ruby 2.1.0p0-github-tcmalloc (87c9373a41) [x86_64-linux]">
    <link rel="assets" href="https://github.global.ssl.fastly.net/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035/">
    <link rel="xhr-socket" href="/_sockets" />


    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="56804D0B:07F5:3387A:5320C815" name="octolytics-dimension-request_id" />
    

    
    
    <link rel="icon" type="image/x-icon" href="https://github.global.ssl.fastly.net/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="IXr72AI83Fj6WkGxtlTnMsG1Ucxxzsqbz3qS99TaNCk=" name="csrf-token" />

    <link href="https://github.global.ssl.fastly.net/assets/github-adcf123587b068f65ee2420a9a7988231694ba13.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://github.global.ssl.fastly.net/assets/github2-24d91346c0539f14382858bcd027e9283211c0c4.css" media="all" rel="stylesheet" type="text/css" />
    


      <script crossorigin="anonymous" src="https://github.global.ssl.fastly.net/assets/frameworks-9acb89add4e173259bb0e9e81d36276a93db7af4.js" type="text/javascript"></script>
      <script async="async" crossorigin="anonymous" src="https://github.global.ssl.fastly.net/assets/github-7c07a7496f86ac97a4ee0c270dbe1eed4cabfd71.js" type="text/javascript"></script>
      
      <meta http-equiv="x-pjax-version" content="c4751110d85937292fb9f8f61f2819ed">

        <link data-pjax-transient rel='permalink' href='/pushmatrix/mini-dashing/blob/d2344578adff26e64626193e66890b682306d5eb/application.js'>

  <meta name="description" content="mini-dashing - Dashing without the backend. Prototype." />

  <meta content="190692" name="octolytics-dimension-user_id" /><meta content="pushmatrix" name="octolytics-dimension-user_login" /><meta content="12689090" name="octolytics-dimension-repository_id" /><meta content="pushmatrix/mini-dashing" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="12689090" name="octolytics-dimension-repository_network_root_id" /><meta content="pushmatrix/mini-dashing" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/pushmatrix/mini-dashing/commits/gh-pages.atom" rel="alternate" title="Recent Commits to mini-dashing:gh-pages" type="application/atom+xml" />

  </head>


  <body class="logged_out  env-production linux vis-public page-blob">
    <a href="#start-of-content" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


      
      <div class="header header-logged-out">
  <div class="container clearfix">

    <a class="header-logo-wordmark" href="https://github.com/">
      <span class="mega-octicon octicon-logo-github"></span>
    </a>

    <div class="header-actions">
        <a class="button primary" href="/join">Sign up</a>
      <a class="button signin" href="/login?return_to=%2Fpushmatrix%2Fmini-dashing%2Fblob%2Fgh-pages%2Fapplication.js">Sign in</a>
    </div>

    <div class="command-bar js-command-bar  in-repository">

      <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
        <li class="features"><a href="/features">Features</a></li>
          <li class="enterprise"><a href="https://enterprise.github.com/">Enterprise</a></li>
          <li class="blog"><a href="/blog">Blog</a></li>
      </ul>
        <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<input type="text" data-hotkey=" s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    
      data-repo="pushmatrix/mini-dashing"
      data-branch="gh-pages"
      data-sha="b1129145315be1ece7545d6c6a28d692d25ec934"
  >

    <input type="hidden" name="nwo" value="pushmatrix/mini-dashing" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target" role="button" aria-haspopup="true">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container" aria-hidden="true">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="help tooltipped tooltipped-s" aria-label="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
    </div>

  </div>
</div>



      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        

<ul class="pagehead-actions">


  <li>
    <a href="/login?return_to=%2Fpushmatrix%2Fmini-dashing"
    class="minibutton with-count js-toggler-target star-button tooltipped tooltipped-n"
    aria-label="You must be signed in to star a repository" rel="nofollow">
    <span class="octicon octicon-star"></span>Star
  </a>

    <a class="social-count js-social-count" href="/pushmatrix/mini-dashing/stargazers">
      4
    </a>

  </li>

    <li>
      <a href="/login?return_to=%2Fpushmatrix%2Fmini-dashing"
        class="minibutton with-count js-toggler-target fork-button tooltipped tooltipped-n"
        aria-label="You must be signed in to fork a repository" rel="nofollow">
        <span class="octicon octicon-git-branch"></span>Fork
      </a>
      <a href="/pushmatrix/mini-dashing/network" class="social-count">
        0
      </a>
    </li>
</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="repo-label"><span>public</span></span>
          <span class="mega-octicon octicon-repo"></span>
          <span class="author">
            <a href="/pushmatrix" class="url fn" itemprop="url" rel="author"><span itemprop="title">pushmatrix</span></a>
          </span>
          <span class="repohead-name-divider">/</span>
          <strong><a href="/pushmatrix/mini-dashing" class="js-current-repository js-repo-home-link">mini-dashing</a></strong>

          <span class="page-context-loader">
            <img alt="Octocat-spinner-32" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline js-new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            

<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped tooltipped-w" aria-label="Code">
        <a href="/pushmatrix/mini-dashing" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-gotokey="c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_tags repo_branches /pushmatrix/mini-dashing">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped tooltipped-w" aria-label="Issues">
          <a href="/pushmatrix/mini-dashing/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="i" data-selected-links="repo_issues /pushmatrix/mini-dashing/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class='counter'>0</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
        <a href="/pushmatrix/mini-dashing/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="p" data-selected-links="repo_pulls /pushmatrix/mini-dashing/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class='counter'>0</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped tooltipped-w" aria-label="Pulse">
        <a href="/pushmatrix/mini-dashing/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /pushmatrix/mini-dashing/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Graphs">
        <a href="/pushmatrix/mini-dashing/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /pushmatrix/mini-dashing/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Network">
        <a href="/pushmatrix/mini-dashing/network" aria-label="Network" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-selected-links="repo_network /pushmatrix/mini-dashing/network">
          <span class="octicon octicon-git-branch"></span> <span class="full-word">Network</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

              <div class="only-with-full-nav">
                

  

<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/pushmatrix/mini-dashing.git" readonly="readonly">

    <span aria-label="copy to clipboard" class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/pushmatrix/mini-dashing.git" data-copied-hint="copied!"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><strong>Subversion</strong> checkout URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/pushmatrix/mini-dashing" readonly="readonly">

    <span aria-label="copy to clipboard" class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/pushmatrix/mini-dashing" data-copied-hint="copied!"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <span class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <a href="https://help.github.com/articles/which-remote-url-should-i-use">
    <span class="octicon octicon-question"></span>
    </a>
  </span>
</p>



                <a href="/pushmatrix/mini-dashing/archive/gh-pages.zip"
                   class="minibutton sidebar-button"
                   aria-label="Download pushmatrix/mini-dashing as a zip file"
                   title="Download pushmatrix/mini-dashing as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:136a83d66e3d4efbb98ec7102edeaa44 -->

<p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

<a href="/pushmatrix/mini-dashing/find/gh-pages" data-pjax data-hotkey="t" class="js-show-file-finder" style="display:none">Show File Finder</a>

<div class="file-navigation">
  

<div class="select-menu js-menu-container js-select-menu" >
  <span class="minibutton select-menu-button js-menu-target" data-hotkey="w"
    data-master-branch="gh-pages"
    data-ref="gh-pages"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button">gh-pages</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-remove-close js-menu-close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pushmatrix/mini-dashing/blob/gh-pages/application.js"
                 data-name="gh-pages"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="gh-pages">gh-pages</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/pushmatrix/mini-dashing" data-branch="gh-pages" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">mini-dashing</span></a></span></span><span class="separator"> / </span><strong class="final-path">application.js</strong> <span aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="application.js" data-copied-hint="copied!"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


  <div class="commit commit-loader file-history-tease js-deferred-content" data-url="/pushmatrix/mini-dashing/contributors/gh-pages/application.js">
    Fetching contributors…

    <div class="participation">
      <p class="loader-loading"><img alt="Octocat-spinner-32-eaf2f5" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32-EAF2F5.gif" width="16" /></p>
      <p class="loader-error">Cannot retrieve contributors at this time</p>
    </div>
  </div>

<div class="file-box">
  <div class="file">
    <div class="meta clearfix">
      <div class="info file-name">
        <span class="icon"><b class="octicon octicon-file-text"></b></span>
        <span class="mode" title="File Mode">file</span>
        <span class="meta-divider"></span>
          <span>19333 lines (16610 sloc)</span>
          <span class="meta-divider"></span>
        <span>895.888 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
              <a class="minibutton disabled tooltipped tooltipped-w" href="#"
                 aria-label="You must be signed in to make or propose changes">Edit</a>
          <a href="/pushmatrix/mini-dashing/raw/gh-pages/application.js" class="button minibutton " id="raw-url">Raw</a>
            <a href="/pushmatrix/mini-dashing/blame/gh-pages/application.js" class="button minibutton js-update-url-with-hash">Blame</a>
          <a href="/pushmatrix/mini-dashing/commits/gh-pages/application.js" class="button minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->
          <a class="minibutton danger disabled empty-icon tooltipped tooltipped-w" href="#"
             aria-label="You must be signed in to make or propose changes">
          Delete
        </a>
      </div><!-- /.actions -->
    </div>
        <div class="blob-wrapper data type-javascript js-blob-data">
        <table class="file-code file-diff tab-size-8">
          <tr class="file-code-line">
            <td class="blob-line-nums">
              <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
<span id="L20" rel="#L20">20</span>
<span id="L21" rel="#L21">21</span>
<span id="L22" rel="#L22">22</span>
<span id="L23" rel="#L23">23</span>
<span id="L24" rel="#L24">24</span>
<span id="L25" rel="#L25">25</span>
<span id="L26" rel="#L26">26</span>
<span id="L27" rel="#L27">27</span>
<span id="L28" rel="#L28">28</span>
<span id="L29" rel="#L29">29</span>
<span id="L30" rel="#L30">30</span>
<span id="L31" rel="#L31">31</span>
<span id="L32" rel="#L32">32</span>
<span id="L33" rel="#L33">33</span>
<span id="L34" rel="#L34">34</span>
<span id="L35" rel="#L35">35</span>
<span id="L36" rel="#L36">36</span>
<span id="L37" rel="#L37">37</span>
<span id="L38" rel="#L38">38</span>
<span id="L39" rel="#L39">39</span>
<span id="L40" rel="#L40">40</span>
<span id="L41" rel="#L41">41</span>
<span id="L42" rel="#L42">42</span>
<span id="L43" rel="#L43">43</span>
<span id="L44" rel="#L44">44</span>
<span id="L45" rel="#L45">45</span>
<span id="L46" rel="#L46">46</span>
<span id="L47" rel="#L47">47</span>
<span id="L48" rel="#L48">48</span>
<span id="L49" rel="#L49">49</span>
<span id="L50" rel="#L50">50</span>
<span id="L51" rel="#L51">51</span>
<span id="L52" rel="#L52">52</span>
<span id="L53" rel="#L53">53</span>
<span id="L54" rel="#L54">54</span>
<span id="L55" rel="#L55">55</span>
<span id="L56" rel="#L56">56</span>
<span id="L57" rel="#L57">57</span>
<span id="L58" rel="#L58">58</span>
<span id="L59" rel="#L59">59</span>
<span id="L60" rel="#L60">60</span>
<span id="L61" rel="#L61">61</span>
<span id="L62" rel="#L62">62</span>
<span id="L63" rel="#L63">63</span>
<span id="L64" rel="#L64">64</span>
<span id="L65" rel="#L65">65</span>
<span id="L66" rel="#L66">66</span>
<span id="L67" rel="#L67">67</span>
<span id="L68" rel="#L68">68</span>
<span id="L69" rel="#L69">69</span>
<span id="L70" rel="#L70">70</span>
<span id="L71" rel="#L71">71</span>
<span id="L72" rel="#L72">72</span>
<span id="L73" rel="#L73">73</span>
<span id="L74" rel="#L74">74</span>
<span id="L75" rel="#L75">75</span>
<span id="L76" rel="#L76">76</span>
<span id="L77" rel="#L77">77</span>
<span id="L78" rel="#L78">78</span>
<span id="L79" rel="#L79">79</span>
<span id="L80" rel="#L80">80</span>
<span id="L81" rel="#L81">81</span>
<span id="L82" rel="#L82">82</span>
<span id="L83" rel="#L83">83</span>
<span id="L84" rel="#L84">84</span>
<span id="L85" rel="#L85">85</span>
<span id="L86" rel="#L86">86</span>
<span id="L87" rel="#L87">87</span>
<span id="L88" rel="#L88">88</span>
<span id="L89" rel="#L89">89</span>
<span id="L90" rel="#L90">90</span>
<span id="L91" rel="#L91">91</span>
<span id="L92" rel="#L92">92</span>
<span id="L93" rel="#L93">93</span>
<span id="L94" rel="#L94">94</span>
<span id="L95" rel="#L95">95</span>
<span id="L96" rel="#L96">96</span>
<span id="L97" rel="#L97">97</span>
<span id="L98" rel="#L98">98</span>
<span id="L99" rel="#L99">99</span>
<span id="L100" rel="#L100">100</span>
<span id="L101" rel="#L101">101</span>
<span id="L102" rel="#L102">102</span>
<span id="L103" rel="#L103">103</span>
<span id="L104" rel="#L104">104</span>
<span id="L105" rel="#L105">105</span>
<span id="L106" rel="#L106">106</span>
<span id="L107" rel="#L107">107</span>
<span id="L108" rel="#L108">108</span>
<span id="L109" rel="#L109">109</span>
<span id="L110" rel="#L110">110</span>
<span id="L111" rel="#L111">111</span>
<span id="L112" rel="#L112">112</span>
<span id="L113" rel="#L113">113</span>
<span id="L114" rel="#L114">114</span>
<span id="L115" rel="#L115">115</span>
<span id="L116" rel="#L116">116</span>
<span id="L117" rel="#L117">117</span>
<span id="L118" rel="#L118">118</span>
<span id="L119" rel="#L119">119</span>
<span id="L120" rel="#L120">120</span>
<span id="L121" rel="#L121">121</span>
<span id="L122" rel="#L122">122</span>
<span id="L123" rel="#L123">123</span>
<span id="L124" rel="#L124">124</span>
<span id="L125" rel="#L125">125</span>
<span id="L126" rel="#L126">126</span>
<span id="L127" rel="#L127">127</span>
<span id="L128" rel="#L128">128</span>
<span id="L129" rel="#L129">129</span>
<span id="L130" rel="#L130">130</span>
<span id="L131" rel="#L131">131</span>
<span id="L132" rel="#L132">132</span>
<span id="L133" rel="#L133">133</span>
<span id="L134" rel="#L134">134</span>
<span id="L135" rel="#L135">135</span>
<span id="L136" rel="#L136">136</span>
<span id="L137" rel="#L137">137</span>
<span id="L138" rel="#L138">138</span>
<span id="L139" rel="#L139">139</span>
<span id="L140" rel="#L140">140</span>
<span id="L141" rel="#L141">141</span>
<span id="L142" rel="#L142">142</span>
<span id="L143" rel="#L143">143</span>
<span id="L144" rel="#L144">144</span>
<span id="L145" rel="#L145">145</span>
<span id="L146" rel="#L146">146</span>
<span id="L147" rel="#L147">147</span>
<span id="L148" rel="#L148">148</span>
<span id="L149" rel="#L149">149</span>
<span id="L150" rel="#L150">150</span>
<span id="L151" rel="#L151">151</span>
<span id="L152" rel="#L152">152</span>
<span id="L153" rel="#L153">153</span>
<span id="L154" rel="#L154">154</span>
<span id="L155" rel="#L155">155</span>
<span id="L156" rel="#L156">156</span>
<span id="L157" rel="#L157">157</span>
<span id="L158" rel="#L158">158</span>
<span id="L159" rel="#L159">159</span>
<span id="L160" rel="#L160">160</span>
<span id="L161" rel="#L161">161</span>
<span id="L162" rel="#L162">162</span>
<span id="L163" rel="#L163">163</span>
<span id="L164" rel="#L164">164</span>
<span id="L165" rel="#L165">165</span>
<span id="L166" rel="#L166">166</span>
<span id="L167" rel="#L167">167</span>
<span id="L168" rel="#L168">168</span>
<span id="L169" rel="#L169">169</span>
<span id="L170" rel="#L170">170</span>
<span id="L171" rel="#L171">171</span>
<span id="L172" rel="#L172">172</span>
<span id="L173" rel="#L173">173</span>
<span id="L174" rel="#L174">174</span>
<span id="L175" rel="#L175">175</span>
<span id="L176" rel="#L176">176</span>
<span id="L177" rel="#L177">177</span>
<span id="L178" rel="#L178">178</span>
<span id="L179" rel="#L179">179</span>
<span id="L180" rel="#L180">180</span>
<span id="L181" rel="#L181">181</span>
<span id="L182" rel="#L182">182</span>
<span id="L183" rel="#L183">183</span>
<span id="L184" rel="#L184">184</span>
<span id="L185" rel="#L185">185</span>
<span id="L186" rel="#L186">186</span>
<span id="L187" rel="#L187">187</span>
<span id="L188" rel="#L188">188</span>
<span id="L189" rel="#L189">189</span>
<span id="L190" rel="#L190">190</span>
<span id="L191" rel="#L191">191</span>
<span id="L192" rel="#L192">192</span>
<span id="L193" rel="#L193">193</span>
<span id="L194" rel="#L194">194</span>
<span id="L195" rel="#L195">195</span>
<span id="L196" rel="#L196">196</span>
<span id="L197" rel="#L197">197</span>
<span id="L198" rel="#L198">198</span>
<span id="L199" rel="#L199">199</span>
<span id="L200" rel="#L200">200</span>
<span id="L201" rel="#L201">201</span>
<span id="L202" rel="#L202">202</span>
<span id="L203" rel="#L203">203</span>
<span id="L204" rel="#L204">204</span>
<span id="L205" rel="#L205">205</span>
<span id="L206" rel="#L206">206</span>
<span id="L207" rel="#L207">207</span>
<span id="L208" rel="#L208">208</span>
<span id="L209" rel="#L209">209</span>
<span id="L210" rel="#L210">210</span>
<span id="L211" rel="#L211">211</span>
<span id="L212" rel="#L212">212</span>
<span id="L213" rel="#L213">213</span>
<span id="L214" rel="#L214">214</span>
<span id="L215" rel="#L215">215</span>
<span id="L216" rel="#L216">216</span>
<span id="L217" rel="#L217">217</span>
<span id="L218" rel="#L218">218</span>
<span id="L219" rel="#L219">219</span>
<span id="L220" rel="#L220">220</span>
<span id="L221" rel="#L221">221</span>
<span id="L222" rel="#L222">222</span>
<span id="L223" rel="#L223">223</span>
<span id="L224" rel="#L224">224</span>
<span id="L225" rel="#L225">225</span>
<span id="L226" rel="#L226">226</span>
<span id="L227" rel="#L227">227</span>
<span id="L228" rel="#L228">228</span>
<span id="L229" rel="#L229">229</span>
<span id="L230" rel="#L230">230</span>
<span id="L231" rel="#L231">231</span>
<span id="L232" rel="#L232">232</span>
<span id="L233" rel="#L233">233</span>
<span id="L234" rel="#L234">234</span>
<span id="L235" rel="#L235">235</span>
<span id="L236" rel="#L236">236</span>
<span id="L237" rel="#L237">237</span>
<span id="L238" rel="#L238">238</span>
<span id="L239" rel="#L239">239</span>
<span id="L240" rel="#L240">240</span>
<span id="L241" rel="#L241">241</span>
<span id="L242" rel="#L242">242</span>
<span id="L243" rel="#L243">243</span>
<span id="L244" rel="#L244">244</span>
<span id="L245" rel="#L245">245</span>
<span id="L246" rel="#L246">246</span>
<span id="L247" rel="#L247">247</span>
<span id="L248" rel="#L248">248</span>
<span id="L249" rel="#L249">249</span>
<span id="L250" rel="#L250">250</span>
<span id="L251" rel="#L251">251</span>
<span id="L252" rel="#L252">252</span>
<span id="L253" rel="#L253">253</span>
<span id="L254" rel="#L254">254</span>
<span id="L255" rel="#L255">255</span>
<span id="L256" rel="#L256">256</span>
<span id="L257" rel="#L257">257</span>
<span id="L258" rel="#L258">258</span>
<span id="L259" rel="#L259">259</span>
<span id="L260" rel="#L260">260</span>
<span id="L261" rel="#L261">261</span>
<span id="L262" rel="#L262">262</span>
<span id="L263" rel="#L263">263</span>
<span id="L264" rel="#L264">264</span>
<span id="L265" rel="#L265">265</span>
<span id="L266" rel="#L266">266</span>
<span id="L267" rel="#L267">267</span>
<span id="L268" rel="#L268">268</span>
<span id="L269" rel="#L269">269</span>
<span id="L270" rel="#L270">270</span>
<span id="L271" rel="#L271">271</span>
<span id="L272" rel="#L272">272</span>
<span id="L273" rel="#L273">273</span>
<span id="L274" rel="#L274">274</span>
<span id="L275" rel="#L275">275</span>
<span id="L276" rel="#L276">276</span>
<span id="L277" rel="#L277">277</span>
<span id="L278" rel="#L278">278</span>
<span id="L279" rel="#L279">279</span>
<span id="L280" rel="#L280">280</span>
<span id="L281" rel="#L281">281</span>
<span id="L282" rel="#L282">282</span>
<span id="L283" rel="#L283">283</span>
<span id="L284" rel="#L284">284</span>
<span id="L285" rel="#L285">285</span>
<span id="L286" rel="#L286">286</span>
<span id="L287" rel="#L287">287</span>
<span id="L288" rel="#L288">288</span>
<span id="L289" rel="#L289">289</span>
<span id="L290" rel="#L290">290</span>
<span id="L291" rel="#L291">291</span>
<span id="L292" rel="#L292">292</span>
<span id="L293" rel="#L293">293</span>
<span id="L294" rel="#L294">294</span>
<span id="L295" rel="#L295">295</span>
<span id="L296" rel="#L296">296</span>
<span id="L297" rel="#L297">297</span>
<span id="L298" rel="#L298">298</span>
<span id="L299" rel="#L299">299</span>
<span id="L300" rel="#L300">300</span>
<span id="L301" rel="#L301">301</span>
<span id="L302" rel="#L302">302</span>
<span id="L303" rel="#L303">303</span>
<span id="L304" rel="#L304">304</span>
<span id="L305" rel="#L305">305</span>
<span id="L306" rel="#L306">306</span>
<span id="L307" rel="#L307">307</span>
<span id="L308" rel="#L308">308</span>
<span id="L309" rel="#L309">309</span>
<span id="L310" rel="#L310">310</span>
<span id="L311" rel="#L311">311</span>
<span id="L312" rel="#L312">312</span>
<span id="L313" rel="#L313">313</span>
<span id="L314" rel="#L314">314</span>
<span id="L315" rel="#L315">315</span>
<span id="L316" rel="#L316">316</span>
<span id="L317" rel="#L317">317</span>
<span id="L318" rel="#L318">318</span>
<span id="L319" rel="#L319">319</span>
<span id="L320" rel="#L320">320</span>
<span id="L321" rel="#L321">321</span>
<span id="L322" rel="#L322">322</span>
<span id="L323" rel="#L323">323</span>
<span id="L324" rel="#L324">324</span>
<span id="L325" rel="#L325">325</span>
<span id="L326" rel="#L326">326</span>
<span id="L327" rel="#L327">327</span>
<span id="L328" rel="#L328">328</span>
<span id="L329" rel="#L329">329</span>
<span id="L330" rel="#L330">330</span>
<span id="L331" rel="#L331">331</span>
<span id="L332" rel="#L332">332</span>
<span id="L333" rel="#L333">333</span>
<span id="L334" rel="#L334">334</span>
<span id="L335" rel="#L335">335</span>
<span id="L336" rel="#L336">336</span>
<span id="L337" rel="#L337">337</span>
<span id="L338" rel="#L338">338</span>
<span id="L339" rel="#L339">339</span>
<span id="L340" rel="#L340">340</span>
<span id="L341" rel="#L341">341</span>
<span id="L342" rel="#L342">342</span>
<span id="L343" rel="#L343">343</span>
<span id="L344" rel="#L344">344</span>
<span id="L345" rel="#L345">345</span>
<span id="L346" rel="#L346">346</span>
<span id="L347" rel="#L347">347</span>
<span id="L348" rel="#L348">348</span>
<span id="L349" rel="#L349">349</span>
<span id="L350" rel="#L350">350</span>
<span id="L351" rel="#L351">351</span>
<span id="L352" rel="#L352">352</span>
<span id="L353" rel="#L353">353</span>
<span id="L354" rel="#L354">354</span>
<span id="L355" rel="#L355">355</span>
<span id="L356" rel="#L356">356</span>
<span id="L357" rel="#L357">357</span>
<span id="L358" rel="#L358">358</span>
<span id="L359" rel="#L359">359</span>
<span id="L360" rel="#L360">360</span>
<span id="L361" rel="#L361">361</span>
<span id="L362" rel="#L362">362</span>
<span id="L363" rel="#L363">363</span>
<span id="L364" rel="#L364">364</span>
<span id="L365" rel="#L365">365</span>
<span id="L366" rel="#L366">366</span>
<span id="L367" rel="#L367">367</span>
<span id="L368" rel="#L368">368</span>
<span id="L369" rel="#L369">369</span>
<span id="L370" rel="#L370">370</span>
<span id="L371" rel="#L371">371</span>
<span id="L372" rel="#L372">372</span>
<span id="L373" rel="#L373">373</span>
<span id="L374" rel="#L374">374</span>
<span id="L375" rel="#L375">375</span>
<span id="L376" rel="#L376">376</span>
<span id="L377" rel="#L377">377</span>
<span id="L378" rel="#L378">378</span>
<span id="L379" rel="#L379">379</span>
<span id="L380" rel="#L380">380</span>
<span id="L381" rel="#L381">381</span>
<span id="L382" rel="#L382">382</span>
<span id="L383" rel="#L383">383</span>
<span id="L384" rel="#L384">384</span>
<span id="L385" rel="#L385">385</span>
<span id="L386" rel="#L386">386</span>
<span id="L387" rel="#L387">387</span>
<span id="L388" rel="#L388">388</span>
<span id="L389" rel="#L389">389</span>
<span id="L390" rel="#L390">390</span>
<span id="L391" rel="#L391">391</span>
<span id="L392" rel="#L392">392</span>
<span id="L393" rel="#L393">393</span>
<span id="L394" rel="#L394">394</span>
<span id="L395" rel="#L395">395</span>
<span id="L396" rel="#L396">396</span>
<span id="L397" rel="#L397">397</span>
<span id="L398" rel="#L398">398</span>
<span id="L399" rel="#L399">399</span>
<span id="L400" rel="#L400">400</span>
<span id="L401" rel="#L401">401</span>
<span id="L402" rel="#L402">402</span>
<span id="L403" rel="#L403">403</span>
<span id="L404" rel="#L404">404</span>
<span id="L405" rel="#L405">405</span>
<span id="L406" rel="#L406">406</span>
<span id="L407" rel="#L407">407</span>
<span id="L408" rel="#L408">408</span>
<span id="L409" rel="#L409">409</span>
<span id="L410" rel="#L410">410</span>
<span id="L411" rel="#L411">411</span>
<span id="L412" rel="#L412">412</span>
<span id="L413" rel="#L413">413</span>
<span id="L414" rel="#L414">414</span>
<span id="L415" rel="#L415">415</span>
<span id="L416" rel="#L416">416</span>
<span id="L417" rel="#L417">417</span>
<span id="L418" rel="#L418">418</span>
<span id="L419" rel="#L419">419</span>
<span id="L420" rel="#L420">420</span>
<span id="L421" rel="#L421">421</span>
<span id="L422" rel="#L422">422</span>
<span id="L423" rel="#L423">423</span>
<span id="L424" rel="#L424">424</span>
<span id="L425" rel="#L425">425</span>
<span id="L426" rel="#L426">426</span>
<span id="L427" rel="#L427">427</span>
<span id="L428" rel="#L428">428</span>
<span id="L429" rel="#L429">429</span>
<span id="L430" rel="#L430">430</span>
<span id="L431" rel="#L431">431</span>
<span id="L432" rel="#L432">432</span>
<span id="L433" rel="#L433">433</span>
<span id="L434" rel="#L434">434</span>
<span id="L435" rel="#L435">435</span>
<span id="L436" rel="#L436">436</span>
<span id="L437" rel="#L437">437</span>
<span id="L438" rel="#L438">438</span>
<span id="L439" rel="#L439">439</span>
<span id="L440" rel="#L440">440</span>
<span id="L441" rel="#L441">441</span>
<span id="L442" rel="#L442">442</span>
<span id="L443" rel="#L443">443</span>
<span id="L444" rel="#L444">444</span>
<span id="L445" rel="#L445">445</span>
<span id="L446" rel="#L446">446</span>
<span id="L447" rel="#L447">447</span>
<span id="L448" rel="#L448">448</span>
<span id="L449" rel="#L449">449</span>
<span id="L450" rel="#L450">450</span>
<span id="L451" rel="#L451">451</span>
<span id="L452" rel="#L452">452</span>
<span id="L453" rel="#L453">453</span>
<span id="L454" rel="#L454">454</span>
<span id="L455" rel="#L455">455</span>
<span id="L456" rel="#L456">456</span>
<span id="L457" rel="#L457">457</span>
<span id="L458" rel="#L458">458</span>
<span id="L459" rel="#L459">459</span>
<span id="L460" rel="#L460">460</span>
<span id="L461" rel="#L461">461</span>
<span id="L462" rel="#L462">462</span>
<span id="L463" rel="#L463">463</span>
<span id="L464" rel="#L464">464</span>
<span id="L465" rel="#L465">465</span>
<span id="L466" rel="#L466">466</span>
<span id="L467" rel="#L467">467</span>
<span id="L468" rel="#L468">468</span>
<span id="L469" rel="#L469">469</span>
<span id="L470" rel="#L470">470</span>
<span id="L471" rel="#L471">471</span>
<span id="L472" rel="#L472">472</span>
<span id="L473" rel="#L473">473</span>
<span id="L474" rel="#L474">474</span>
<span id="L475" rel="#L475">475</span>
<span id="L476" rel="#L476">476</span>
<span id="L477" rel="#L477">477</span>
<span id="L478" rel="#L478">478</span>
<span id="L479" rel="#L479">479</span>
<span id="L480" rel="#L480">480</span>
<span id="L481" rel="#L481">481</span>
<span id="L482" rel="#L482">482</span>
<span id="L483" rel="#L483">483</span>
<span id="L484" rel="#L484">484</span>
<span id="L485" rel="#L485">485</span>
<span id="L486" rel="#L486">486</span>
<span id="L487" rel="#L487">487</span>
<span id="L488" rel="#L488">488</span>
<span id="L489" rel="#L489">489</span>
<span id="L490" rel="#L490">490</span>
<span id="L491" rel="#L491">491</span>
<span id="L492" rel="#L492">492</span>
<span id="L493" rel="#L493">493</span>
<span id="L494" rel="#L494">494</span>
<span id="L495" rel="#L495">495</span>
<span id="L496" rel="#L496">496</span>
<span id="L497" rel="#L497">497</span>
<span id="L498" rel="#L498">498</span>
<span id="L499" rel="#L499">499</span>
<span id="L500" rel="#L500">500</span>
<span id="L501" rel="#L501">501</span>
<span id="L502" rel="#L502">502</span>
<span id="L503" rel="#L503">503</span>
<span id="L504" rel="#L504">504</span>
<span id="L505" rel="#L505">505</span>
<span id="L506" rel="#L506">506</span>
<span id="L507" rel="#L507">507</span>
<span id="L508" rel="#L508">508</span>
<span id="L509" rel="#L509">509</span>
<span id="L510" rel="#L510">510</span>
<span id="L511" rel="#L511">511</span>
<span id="L512" rel="#L512">512</span>
<span id="L513" rel="#L513">513</span>
<span id="L514" rel="#L514">514</span>
<span id="L515" rel="#L515">515</span>
<span id="L516" rel="#L516">516</span>
<span id="L517" rel="#L517">517</span>
<span id="L518" rel="#L518">518</span>
<span id="L519" rel="#L519">519</span>
<span id="L520" rel="#L520">520</span>
<span id="L521" rel="#L521">521</span>
<span id="L522" rel="#L522">522</span>
<span id="L523" rel="#L523">523</span>
<span id="L524" rel="#L524">524</span>
<span id="L525" rel="#L525">525</span>
<span id="L526" rel="#L526">526</span>
<span id="L527" rel="#L527">527</span>
<span id="L528" rel="#L528">528</span>
<span id="L529" rel="#L529">529</span>
<span id="L530" rel="#L530">530</span>
<span id="L531" rel="#L531">531</span>
<span id="L532" rel="#L532">532</span>
<span id="L533" rel="#L533">533</span>
<span id="L534" rel="#L534">534</span>
<span id="L535" rel="#L535">535</span>
<span id="L536" rel="#L536">536</span>
<span id="L537" rel="#L537">537</span>
<span id="L538" rel="#L538">538</span>
<span id="L539" rel="#L539">539</span>
<span id="L540" rel="#L540">540</span>
<span id="L541" rel="#L541">541</span>
<span id="L542" rel="#L542">542</span>
<span id="L543" rel="#L543">543</span>
<span id="L544" rel="#L544">544</span>
<span id="L545" rel="#L545">545</span>
<span id="L546" rel="#L546">546</span>
<span id="L547" rel="#L547">547</span>
<span id="L548" rel="#L548">548</span>
<span id="L549" rel="#L549">549</span>
<span id="L550" rel="#L550">550</span>
<span id="L551" rel="#L551">551</span>
<span id="L552" rel="#L552">552</span>
<span id="L553" rel="#L553">553</span>
<span id="L554" rel="#L554">554</span>
<span id="L555" rel="#L555">555</span>
<span id="L556" rel="#L556">556</span>
<span id="L557" rel="#L557">557</span>
<span id="L558" rel="#L558">558</span>
<span id="L559" rel="#L559">559</span>
<span id="L560" rel="#L560">560</span>
<span id="L561" rel="#L561">561</span>
<span id="L562" rel="#L562">562</span>
<span id="L563" rel="#L563">563</span>
<span id="L564" rel="#L564">564</span>
<span id="L565" rel="#L565">565</span>
<span id="L566" rel="#L566">566</span>
<span id="L567" rel="#L567">567</span>
<span id="L568" rel="#L568">568</span>
<span id="L569" rel="#L569">569</span>
<span id="L570" rel="#L570">570</span>
<span id="L571" rel="#L571">571</span>
<span id="L572" rel="#L572">572</span>
<span id="L573" rel="#L573">573</span>
<span id="L574" rel="#L574">574</span>
<span id="L575" rel="#L575">575</span>
<span id="L576" rel="#L576">576</span>
<span id="L577" rel="#L577">577</span>
<span id="L578" rel="#L578">578</span>
<span id="L579" rel="#L579">579</span>
<span id="L580" rel="#L580">580</span>
<span id="L581" rel="#L581">581</span>
<span id="L582" rel="#L582">582</span>
<span id="L583" rel="#L583">583</span>
<span id="L584" rel="#L584">584</span>
<span id="L585" rel="#L585">585</span>
<span id="L586" rel="#L586">586</span>
<span id="L587" rel="#L587">587</span>
<span id="L588" rel="#L588">588</span>
<span id="L589" rel="#L589">589</span>
<span id="L590" rel="#L590">590</span>
<span id="L591" rel="#L591">591</span>
<span id="L592" rel="#L592">592</span>
<span id="L593" rel="#L593">593</span>
<span id="L594" rel="#L594">594</span>
<span id="L595" rel="#L595">595</span>
<span id="L596" rel="#L596">596</span>
<span id="L597" rel="#L597">597</span>
<span id="L598" rel="#L598">598</span>
<span id="L599" rel="#L599">599</span>
<span id="L600" rel="#L600">600</span>
<span id="L601" rel="#L601">601</span>
<span id="L602" rel="#L602">602</span>
<span id="L603" rel="#L603">603</span>
<span id="L604" rel="#L604">604</span>
<span id="L605" rel="#L605">605</span>
<span id="L606" rel="#L606">606</span>
<span id="L607" rel="#L607">607</span>
<span id="L608" rel="#L608">608</span>
<span id="L609" rel="#L609">609</span>
<span id="L610" rel="#L610">610</span>
<span id="L611" rel="#L611">611</span>
<span id="L612" rel="#L612">612</span>
<span id="L613" rel="#L613">613</span>
<span id="L614" rel="#L614">614</span>
<span id="L615" rel="#L615">615</span>
<span id="L616" rel="#L616">616</span>
<span id="L617" rel="#L617">617</span>
<span id="L618" rel="#L618">618</span>
<span id="L619" rel="#L619">619</span>
<span id="L620" rel="#L620">620</span>
<span id="L621" rel="#L621">621</span>
<span id="L622" rel="#L622">622</span>
<span id="L623" rel="#L623">623</span>
<span id="L624" rel="#L624">624</span>
<span id="L625" rel="#L625">625</span>
<span id="L626" rel="#L626">626</span>
<span id="L627" rel="#L627">627</span>
<span id="L628" rel="#L628">628</span>
<span id="L629" rel="#L629">629</span>
<span id="L630" rel="#L630">630</span>
<span id="L631" rel="#L631">631</span>
<span id="L632" rel="#L632">632</span>
<span id="L633" rel="#L633">633</span>
<span id="L634" rel="#L634">634</span>
<span id="L635" rel="#L635">635</span>
<span id="L636" rel="#L636">636</span>
<span id="L637" rel="#L637">637</span>
<span id="L638" rel="#L638">638</span>
<span id="L639" rel="#L639">639</span>
<span id="L640" rel="#L640">640</span>
<span id="L641" rel="#L641">641</span>
<span id="L642" rel="#L642">642</span>
<span id="L643" rel="#L643">643</span>
<span id="L644" rel="#L644">644</span>
<span id="L645" rel="#L645">645</span>
<span id="L646" rel="#L646">646</span>
<span id="L647" rel="#L647">647</span>
<span id="L648" rel="#L648">648</span>
<span id="L649" rel="#L649">649</span>
<span id="L650" rel="#L650">650</span>
<span id="L651" rel="#L651">651</span>
<span id="L652" rel="#L652">652</span>
<span id="L653" rel="#L653">653</span>
<span id="L654" rel="#L654">654</span>
<span id="L655" rel="#L655">655</span>
<span id="L656" rel="#L656">656</span>
<span id="L657" rel="#L657">657</span>
<span id="L658" rel="#L658">658</span>
<span id="L659" rel="#L659">659</span>
<span id="L660" rel="#L660">660</span>
<span id="L661" rel="#L661">661</span>
<span id="L662" rel="#L662">662</span>
<span id="L663" rel="#L663">663</span>
<span id="L664" rel="#L664">664</span>
<span id="L665" rel="#L665">665</span>
<span id="L666" rel="#L666">666</span>
<span id="L667" rel="#L667">667</span>
<span id="L668" rel="#L668">668</span>
<span id="L669" rel="#L669">669</span>
<span id="L670" rel="#L670">670</span>
<span id="L671" rel="#L671">671</span>
<span id="L672" rel="#L672">672</span>
<span id="L673" rel="#L673">673</span>
<span id="L674" rel="#L674">674</span>
<span id="L675" rel="#L675">675</span>
<span id="L676" rel="#L676">676</span>
<span id="L677" rel="#L677">677</span>
<span id="L678" rel="#L678">678</span>
<span id="L679" rel="#L679">679</span>
<span id="L680" rel="#L680">680</span>
<span id="L681" rel="#L681">681</span>
<span id="L682" rel="#L682">682</span>
<span id="L683" rel="#L683">683</span>
<span id="L684" rel="#L684">684</span>
<span id="L685" rel="#L685">685</span>
<span id="L686" rel="#L686">686</span>
<span id="L687" rel="#L687">687</span>
<span id="L688" rel="#L688">688</span>
<span id="L689" rel="#L689">689</span>
<span id="L690" rel="#L690">690</span>
<span id="L691" rel="#L691">691</span>
<span id="L692" rel="#L692">692</span>
<span id="L693" rel="#L693">693</span>
<span id="L694" rel="#L694">694</span>
<span id="L695" rel="#L695">695</span>
<span id="L696" rel="#L696">696</span>
<span id="L697" rel="#L697">697</span>
<span id="L698" rel="#L698">698</span>
<span id="L699" rel="#L699">699</span>
<span id="L700" rel="#L700">700</span>
<span id="L701" rel="#L701">701</span>
<span id="L702" rel="#L702">702</span>
<span id="L703" rel="#L703">703</span>
<span id="L704" rel="#L704">704</span>
<span id="L705" rel="#L705">705</span>
<span id="L706" rel="#L706">706</span>
<span id="L707" rel="#L707">707</span>
<span id="L708" rel="#L708">708</span>
<span id="L709" rel="#L709">709</span>
<span id="L710" rel="#L710">710</span>
<span id="L711" rel="#L711">711</span>
<span id="L712" rel="#L712">712</span>
<span id="L713" rel="#L713">713</span>
<span id="L714" rel="#L714">714</span>
<span id="L715" rel="#L715">715</span>
<span id="L716" rel="#L716">716</span>
<span id="L717" rel="#L717">717</span>
<span id="L718" rel="#L718">718</span>
<span id="L719" rel="#L719">719</span>
<span id="L720" rel="#L720">720</span>
<span id="L721" rel="#L721">721</span>
<span id="L722" rel="#L722">722</span>
<span id="L723" rel="#L723">723</span>
<span id="L724" rel="#L724">724</span>
<span id="L725" rel="#L725">725</span>
<span id="L726" rel="#L726">726</span>
<span id="L727" rel="#L727">727</span>
<span id="L728" rel="#L728">728</span>
<span id="L729" rel="#L729">729</span>
<span id="L730" rel="#L730">730</span>
<span id="L731" rel="#L731">731</span>
<span id="L732" rel="#L732">732</span>
<span id="L733" rel="#L733">733</span>
<span id="L734" rel="#L734">734</span>
<span id="L735" rel="#L735">735</span>
<span id="L736" rel="#L736">736</span>
<span id="L737" rel="#L737">737</span>
<span id="L738" rel="#L738">738</span>
<span id="L739" rel="#L739">739</span>
<span id="L740" rel="#L740">740</span>
<span id="L741" rel="#L741">741</span>
<span id="L742" rel="#L742">742</span>
<span id="L743" rel="#L743">743</span>
<span id="L744" rel="#L744">744</span>
<span id="L745" rel="#L745">745</span>
<span id="L746" rel="#L746">746</span>
<span id="L747" rel="#L747">747</span>
<span id="L748" rel="#L748">748</span>
<span id="L749" rel="#L749">749</span>
<span id="L750" rel="#L750">750</span>
<span id="L751" rel="#L751">751</span>
<span id="L752" rel="#L752">752</span>
<span id="L753" rel="#L753">753</span>
<span id="L754" rel="#L754">754</span>
<span id="L755" rel="#L755">755</span>
<span id="L756" rel="#L756">756</span>
<span id="L757" rel="#L757">757</span>
<span id="L758" rel="#L758">758</span>
<span id="L759" rel="#L759">759</span>
<span id="L760" rel="#L760">760</span>
<span id="L761" rel="#L761">761</span>
<span id="L762" rel="#L762">762</span>
<span id="L763" rel="#L763">763</span>
<span id="L764" rel="#L764">764</span>
<span id="L765" rel="#L765">765</span>
<span id="L766" rel="#L766">766</span>
<span id="L767" rel="#L767">767</span>
<span id="L768" rel="#L768">768</span>
<span id="L769" rel="#L769">769</span>
<span id="L770" rel="#L770">770</span>
<span id="L771" rel="#L771">771</span>
<span id="L772" rel="#L772">772</span>
<span id="L773" rel="#L773">773</span>
<span id="L774" rel="#L774">774</span>
<span id="L775" rel="#L775">775</span>
<span id="L776" rel="#L776">776</span>
<span id="L777" rel="#L777">777</span>
<span id="L778" rel="#L778">778</span>
<span id="L779" rel="#L779">779</span>
<span id="L780" rel="#L780">780</span>
<span id="L781" rel="#L781">781</span>
<span id="L782" rel="#L782">782</span>
<span id="L783" rel="#L783">783</span>
<span id="L784" rel="#L784">784</span>
<span id="L785" rel="#L785">785</span>
<span id="L786" rel="#L786">786</span>
<span id="L787" rel="#L787">787</span>
<span id="L788" rel="#L788">788</span>
<span id="L789" rel="#L789">789</span>
<span id="L790" rel="#L790">790</span>
<span id="L791" rel="#L791">791</span>
<span id="L792" rel="#L792">792</span>
<span id="L793" rel="#L793">793</span>
<span id="L794" rel="#L794">794</span>
<span id="L795" rel="#L795">795</span>
<span id="L796" rel="#L796">796</span>
<span id="L797" rel="#L797">797</span>
<span id="L798" rel="#L798">798</span>
<span id="L799" rel="#L799">799</span>
<span id="L800" rel="#L800">800</span>
<span id="L801" rel="#L801">801</span>
<span id="L802" rel="#L802">802</span>
<span id="L803" rel="#L803">803</span>
<span id="L804" rel="#L804">804</span>
<span id="L805" rel="#L805">805</span>
<span id="L806" rel="#L806">806</span>
<span id="L807" rel="#L807">807</span>
<span id="L808" rel="#L808">808</span>
<span id="L809" rel="#L809">809</span>
<span id="L810" rel="#L810">810</span>
<span id="L811" rel="#L811">811</span>
<span id="L812" rel="#L812">812</span>
<span id="L813" rel="#L813">813</span>
<span id="L814" rel="#L814">814</span>
<span id="L815" rel="#L815">815</span>
<span id="L816" rel="#L816">816</span>
<span id="L817" rel="#L817">817</span>
<span id="L818" rel="#L818">818</span>
<span id="L819" rel="#L819">819</span>
<span id="L820" rel="#L820">820</span>
<span id="L821" rel="#L821">821</span>
<span id="L822" rel="#L822">822</span>
<span id="L823" rel="#L823">823</span>
<span id="L824" rel="#L824">824</span>
<span id="L825" rel="#L825">825</span>
<span id="L826" rel="#L826">826</span>
<span id="L827" rel="#L827">827</span>
<span id="L828" rel="#L828">828</span>
<span id="L829" rel="#L829">829</span>
<span id="L830" rel="#L830">830</span>
<span id="L831" rel="#L831">831</span>
<span id="L832" rel="#L832">832</span>
<span id="L833" rel="#L833">833</span>
<span id="L834" rel="#L834">834</span>
<span id="L835" rel="#L835">835</span>
<span id="L836" rel="#L836">836</span>
<span id="L837" rel="#L837">837</span>
<span id="L838" rel="#L838">838</span>
<span id="L839" rel="#L839">839</span>
<span id="L840" rel="#L840">840</span>
<span id="L841" rel="#L841">841</span>
<span id="L842" rel="#L842">842</span>
<span id="L843" rel="#L843">843</span>
<span id="L844" rel="#L844">844</span>
<span id="L845" rel="#L845">845</span>
<span id="L846" rel="#L846">846</span>
<span id="L847" rel="#L847">847</span>
<span id="L848" rel="#L848">848</span>
<span id="L849" rel="#L849">849</span>
<span id="L850" rel="#L850">850</span>
<span id="L851" rel="#L851">851</span>
<span id="L852" rel="#L852">852</span>
<span id="L853" rel="#L853">853</span>
<span id="L854" rel="#L854">854</span>
<span id="L855" rel="#L855">855</span>
<span id="L856" rel="#L856">856</span>
<span id="L857" rel="#L857">857</span>
<span id="L858" rel="#L858">858</span>
<span id="L859" rel="#L859">859</span>
<span id="L860" rel="#L860">860</span>
<span id="L861" rel="#L861">861</span>
<span id="L862" rel="#L862">862</span>
<span id="L863" rel="#L863">863</span>
<span id="L864" rel="#L864">864</span>
<span id="L865" rel="#L865">865</span>
<span id="L866" rel="#L866">866</span>
<span id="L867" rel="#L867">867</span>
<span id="L868" rel="#L868">868</span>
<span id="L869" rel="#L869">869</span>
<span id="L870" rel="#L870">870</span>
<span id="L871" rel="#L871">871</span>
<span id="L872" rel="#L872">872</span>
<span id="L873" rel="#L873">873</span>
<span id="L874" rel="#L874">874</span>
<span id="L875" rel="#L875">875</span>
<span id="L876" rel="#L876">876</span>
<span id="L877" rel="#L877">877</span>
<span id="L878" rel="#L878">878</span>
<span id="L879" rel="#L879">879</span>
<span id="L880" rel="#L880">880</span>
<span id="L881" rel="#L881">881</span>
<span id="L882" rel="#L882">882</span>
<span id="L883" rel="#L883">883</span>
<span id="L884" rel="#L884">884</span>
<span id="L885" rel="#L885">885</span>
<span id="L886" rel="#L886">886</span>
<span id="L887" rel="#L887">887</span>
<span id="L888" rel="#L888">888</span>
<span id="L889" rel="#L889">889</span>
<span id="L890" rel="#L890">890</span>
<span id="L891" rel="#L891">891</span>
<span id="L892" rel="#L892">892</span>
<span id="L893" rel="#L893">893</span>
<span id="L894" rel="#L894">894</span>
<span id="L895" rel="#L895">895</span>
<span id="L896" rel="#L896">896</span>
<span id="L897" rel="#L897">897</span>
<span id="L898" rel="#L898">898</span>
<span id="L899" rel="#L899">899</span>
<span id="L900" rel="#L900">900</span>
<span id="L901" rel="#L901">901</span>
<span id="L902" rel="#L902">902</span>
<span id="L903" rel="#L903">903</span>
<span id="L904" rel="#L904">904</span>
<span id="L905" rel="#L905">905</span>
<span id="L906" rel="#L906">906</span>
<span id="L907" rel="#L907">907</span>
<span id="L908" rel="#L908">908</span>
<span id="L909" rel="#L909">909</span>
<span id="L910" rel="#L910">910</span>
<span id="L911" rel="#L911">911</span>
<span id="L912" rel="#L912">912</span>
<span id="L913" rel="#L913">913</span>
<span id="L914" rel="#L914">914</span>
<span id="L915" rel="#L915">915</span>
<span id="L916" rel="#L916">916</span>
<span id="L917" rel="#L917">917</span>
<span id="L918" rel="#L918">918</span>
<span id="L919" rel="#L919">919</span>
<span id="L920" rel="#L920">920</span>
<span id="L921" rel="#L921">921</span>
<span id="L922" rel="#L922">922</span>
<span id="L923" rel="#L923">923</span>
<span id="L924" rel="#L924">924</span>
<span id="L925" rel="#L925">925</span>
<span id="L926" rel="#L926">926</span>
<span id="L927" rel="#L927">927</span>
<span id="L928" rel="#L928">928</span>
<span id="L929" rel="#L929">929</span>
<span id="L930" rel="#L930">930</span>
<span id="L931" rel="#L931">931</span>
<span id="L932" rel="#L932">932</span>
<span id="L933" rel="#L933">933</span>
<span id="L934" rel="#L934">934</span>
<span id="L935" rel="#L935">935</span>
<span id="L936" rel="#L936">936</span>
<span id="L937" rel="#L937">937</span>
<span id="L938" rel="#L938">938</span>
<span id="L939" rel="#L939">939</span>
<span id="L940" rel="#L940">940</span>
<span id="L941" rel="#L941">941</span>
<span id="L942" rel="#L942">942</span>
<span id="L943" rel="#L943">943</span>
<span id="L944" rel="#L944">944</span>
<span id="L945" rel="#L945">945</span>
<span id="L946" rel="#L946">946</span>
<span id="L947" rel="#L947">947</span>
<span id="L948" rel="#L948">948</span>
<span id="L949" rel="#L949">949</span>
<span id="L950" rel="#L950">950</span>
<span id="L951" rel="#L951">951</span>
<span id="L952" rel="#L952">952</span>
<span id="L953" rel="#L953">953</span>
<span id="L954" rel="#L954">954</span>
<span id="L955" rel="#L955">955</span>
<span id="L956" rel="#L956">956</span>
<span id="L957" rel="#L957">957</span>
<span id="L958" rel="#L958">958</span>
<span id="L959" rel="#L959">959</span>
<span id="L960" rel="#L960">960</span>
<span id="L961" rel="#L961">961</span>
<span id="L962" rel="#L962">962</span>
<span id="L963" rel="#L963">963</span>
<span id="L964" rel="#L964">964</span>
<span id="L965" rel="#L965">965</span>
<span id="L966" rel="#L966">966</span>
<span id="L967" rel="#L967">967</span>
<span id="L968" rel="#L968">968</span>
<span id="L969" rel="#L969">969</span>
<span id="L970" rel="#L970">970</span>
<span id="L971" rel="#L971">971</span>
<span id="L972" rel="#L972">972</span>
<span id="L973" rel="#L973">973</span>
<span id="L974" rel="#L974">974</span>
<span id="L975" rel="#L975">975</span>
<span id="L976" rel="#L976">976</span>
<span id="L977" rel="#L977">977</span>
<span id="L978" rel="#L978">978</span>
<span id="L979" rel="#L979">979</span>
<span id="L980" rel="#L980">980</span>
<span id="L981" rel="#L981">981</span>
<span id="L982" rel="#L982">982</span>
<span id="L983" rel="#L983">983</span>
<span id="L984" rel="#L984">984</span>
<span id="L985" rel="#L985">985</span>
<span id="L986" rel="#L986">986</span>
<span id="L987" rel="#L987">987</span>
<span id="L988" rel="#L988">988</span>
<span id="L989" rel="#L989">989</span>
<span id="L990" rel="#L990">990</span>
<span id="L991" rel="#L991">991</span>
<span id="L992" rel="#L992">992</span>
<span id="L993" rel="#L993">993</span>
<span id="L994" rel="#L994">994</span>
<span id="L995" rel="#L995">995</span>
<span id="L996" rel="#L996">996</span>
<span id="L997" rel="#L997">997</span>
<span id="L998" rel="#L998">998</span>
<span id="L999" rel="#L999">999</span>
<span id="L1000" rel="#L1000">1000</span>
<span id="L1001" rel="#L1001">1001</span>
<span id="L1002" rel="#L1002">1002</span>
<span id="L1003" rel="#L1003">1003</span>
<span id="L1004" rel="#L1004">1004</span>
<span id="L1005" rel="#L1005">1005</span>
<span id="L1006" rel="#L1006">1006</span>
<span id="L1007" rel="#L1007">1007</span>
<span id="L1008" rel="#L1008">1008</span>
<span id="L1009" rel="#L1009">1009</span>
<span id="L1010" rel="#L1010">1010</span>
<span id="L1011" rel="#L1011">1011</span>
<span id="L1012" rel="#L1012">1012</span>
<span id="L1013" rel="#L1013">1013</span>
<span id="L1014" rel="#L1014">1014</span>
<span id="L1015" rel="#L1015">1015</span>
<span id="L1016" rel="#L1016">1016</span>
<span id="L1017" rel="#L1017">1017</span>
<span id="L1018" rel="#L1018">1018</span>
<span id="L1019" rel="#L1019">1019</span>
<span id="L1020" rel="#L1020">1020</span>
<span id="L1021" rel="#L1021">1021</span>
<span id="L1022" rel="#L1022">1022</span>
<span id="L1023" rel="#L1023">1023</span>
<span id="L1024" rel="#L1024">1024</span>
<span id="L1025" rel="#L1025">1025</span>
<span id="L1026" rel="#L1026">1026</span>
<span id="L1027" rel="#L1027">1027</span>
<span id="L1028" rel="#L1028">1028</span>
<span id="L1029" rel="#L1029">1029</span>
<span id="L1030" rel="#L1030">1030</span>
<span id="L1031" rel="#L1031">1031</span>
<span id="L1032" rel="#L1032">1032</span>
<span id="L1033" rel="#L1033">1033</span>
<span id="L1034" rel="#L1034">1034</span>
<span id="L1035" rel="#L1035">1035</span>
<span id="L1036" rel="#L1036">1036</span>
<span id="L1037" rel="#L1037">1037</span>
<span id="L1038" rel="#L1038">1038</span>
<span id="L1039" rel="#L1039">1039</span>
<span id="L1040" rel="#L1040">1040</span>
<span id="L1041" rel="#L1041">1041</span>
<span id="L1042" rel="#L1042">1042</span>
<span id="L1043" rel="#L1043">1043</span>
<span id="L1044" rel="#L1044">1044</span>
<span id="L1045" rel="#L1045">1045</span>
<span id="L1046" rel="#L1046">1046</span>
<span id="L1047" rel="#L1047">1047</span>
<span id="L1048" rel="#L1048">1048</span>
<span id="L1049" rel="#L1049">1049</span>
<span id="L1050" rel="#L1050">1050</span>
<span id="L1051" rel="#L1051">1051</span>
<span id="L1052" rel="#L1052">1052</span>
<span id="L1053" rel="#L1053">1053</span>
<span id="L1054" rel="#L1054">1054</span>
<span id="L1055" rel="#L1055">1055</span>
<span id="L1056" rel="#L1056">1056</span>
<span id="L1057" rel="#L1057">1057</span>
<span id="L1058" rel="#L1058">1058</span>
<span id="L1059" rel="#L1059">1059</span>
<span id="L1060" rel="#L1060">1060</span>
<span id="L1061" rel="#L1061">1061</span>
<span id="L1062" rel="#L1062">1062</span>
<span id="L1063" rel="#L1063">1063</span>
<span id="L1064" rel="#L1064">1064</span>
<span id="L1065" rel="#L1065">1065</span>
<span id="L1066" rel="#L1066">1066</span>
<span id="L1067" rel="#L1067">1067</span>
<span id="L1068" rel="#L1068">1068</span>
<span id="L1069" rel="#L1069">1069</span>
<span id="L1070" rel="#L1070">1070</span>
<span id="L1071" rel="#L1071">1071</span>
<span id="L1072" rel="#L1072">1072</span>
<span id="L1073" rel="#L1073">1073</span>
<span id="L1074" rel="#L1074">1074</span>
<span id="L1075" rel="#L1075">1075</span>
<span id="L1076" rel="#L1076">1076</span>
<span id="L1077" rel="#L1077">1077</span>
<span id="L1078" rel="#L1078">1078</span>
<span id="L1079" rel="#L1079">1079</span>
<span id="L1080" rel="#L1080">1080</span>
<span id="L1081" rel="#L1081">1081</span>
<span id="L1082" rel="#L1082">1082</span>
<span id="L1083" rel="#L1083">1083</span>
<span id="L1084" rel="#L1084">1084</span>
<span id="L1085" rel="#L1085">1085</span>
<span id="L1086" rel="#L1086">1086</span>
<span id="L1087" rel="#L1087">1087</span>
<span id="L1088" rel="#L1088">1088</span>
<span id="L1089" rel="#L1089">1089</span>
<span id="L1090" rel="#L1090">1090</span>
<span id="L1091" rel="#L1091">1091</span>
<span id="L1092" rel="#L1092">1092</span>
<span id="L1093" rel="#L1093">1093</span>
<span id="L1094" rel="#L1094">1094</span>
<span id="L1095" rel="#L1095">1095</span>
<span id="L1096" rel="#L1096">1096</span>
<span id="L1097" rel="#L1097">1097</span>
<span id="L1098" rel="#L1098">1098</span>
<span id="L1099" rel="#L1099">1099</span>
<span id="L1100" rel="#L1100">1100</span>
<span id="L1101" rel="#L1101">1101</span>
<span id="L1102" rel="#L1102">1102</span>
<span id="L1103" rel="#L1103">1103</span>
<span id="L1104" rel="#L1104">1104</span>
<span id="L1105" rel="#L1105">1105</span>
<span id="L1106" rel="#L1106">1106</span>
<span id="L1107" rel="#L1107">1107</span>
<span id="L1108" rel="#L1108">1108</span>
<span id="L1109" rel="#L1109">1109</span>
<span id="L1110" rel="#L1110">1110</span>
<span id="L1111" rel="#L1111">1111</span>
<span id="L1112" rel="#L1112">1112</span>
<span id="L1113" rel="#L1113">1113</span>
<span id="L1114" rel="#L1114">1114</span>
<span id="L1115" rel="#L1115">1115</span>
<span id="L1116" rel="#L1116">1116</span>
<span id="L1117" rel="#L1117">1117</span>
<span id="L1118" rel="#L1118">1118</span>
<span id="L1119" rel="#L1119">1119</span>
<span id="L1120" rel="#L1120">1120</span>
<span id="L1121" rel="#L1121">1121</span>
<span id="L1122" rel="#L1122">1122</span>
<span id="L1123" rel="#L1123">1123</span>
<span id="L1124" rel="#L1124">1124</span>
<span id="L1125" rel="#L1125">1125</span>
<span id="L1126" rel="#L1126">1126</span>
<span id="L1127" rel="#L1127">1127</span>
<span id="L1128" rel="#L1128">1128</span>
<span id="L1129" rel="#L1129">1129</span>
<span id="L1130" rel="#L1130">1130</span>
<span id="L1131" rel="#L1131">1131</span>
<span id="L1132" rel="#L1132">1132</span>
<span id="L1133" rel="#L1133">1133</span>
<span id="L1134" rel="#L1134">1134</span>
<span id="L1135" rel="#L1135">1135</span>
<span id="L1136" rel="#L1136">1136</span>
<span id="L1137" rel="#L1137">1137</span>
<span id="L1138" rel="#L1138">1138</span>
<span id="L1139" rel="#L1139">1139</span>
<span id="L1140" rel="#L1140">1140</span>
<span id="L1141" rel="#L1141">1141</span>
<span id="L1142" rel="#L1142">1142</span>
<span id="L1143" rel="#L1143">1143</span>
<span id="L1144" rel="#L1144">1144</span>
<span id="L1145" rel="#L1145">1145</span>
<span id="L1146" rel="#L1146">1146</span>
<span id="L1147" rel="#L1147">1147</span>
<span id="L1148" rel="#L1148">1148</span>
<span id="L1149" rel="#L1149">1149</span>
<span id="L1150" rel="#L1150">1150</span>
<span id="L1151" rel="#L1151">1151</span>
<span id="L1152" rel="#L1152">1152</span>
<span id="L1153" rel="#L1153">1153</span>
<span id="L1154" rel="#L1154">1154</span>
<span id="L1155" rel="#L1155">1155</span>
<span id="L1156" rel="#L1156">1156</span>
<span id="L1157" rel="#L1157">1157</span>
<span id="L1158" rel="#L1158">1158</span>
<span id="L1159" rel="#L1159">1159</span>
<span id="L1160" rel="#L1160">1160</span>
<span id="L1161" rel="#L1161">1161</span>
<span id="L1162" rel="#L1162">1162</span>
<span id="L1163" rel="#L1163">1163</span>
<span id="L1164" rel="#L1164">1164</span>
<span id="L1165" rel="#L1165">1165</span>
<span id="L1166" rel="#L1166">1166</span>
<span id="L1167" rel="#L1167">1167</span>
<span id="L1168" rel="#L1168">1168</span>
<span id="L1169" rel="#L1169">1169</span>
<span id="L1170" rel="#L1170">1170</span>
<span id="L1171" rel="#L1171">1171</span>
<span id="L1172" rel="#L1172">1172</span>
<span id="L1173" rel="#L1173">1173</span>
<span id="L1174" rel="#L1174">1174</span>
<span id="L1175" rel="#L1175">1175</span>
<span id="L1176" rel="#L1176">1176</span>
<span id="L1177" rel="#L1177">1177</span>
<span id="L1178" rel="#L1178">1178</span>
<span id="L1179" rel="#L1179">1179</span>
<span id="L1180" rel="#L1180">1180</span>
<span id="L1181" rel="#L1181">1181</span>
<span id="L1182" rel="#L1182">1182</span>
<span id="L1183" rel="#L1183">1183</span>
<span id="L1184" rel="#L1184">1184</span>
<span id="L1185" rel="#L1185">1185</span>
<span id="L1186" rel="#L1186">1186</span>
<span id="L1187" rel="#L1187">1187</span>
<span id="L1188" rel="#L1188">1188</span>
<span id="L1189" rel="#L1189">1189</span>
<span id="L1190" rel="#L1190">1190</span>
<span id="L1191" rel="#L1191">1191</span>
<span id="L1192" rel="#L1192">1192</span>
<span id="L1193" rel="#L1193">1193</span>
<span id="L1194" rel="#L1194">1194</span>
<span id="L1195" rel="#L1195">1195</span>
<span id="L1196" rel="#L1196">1196</span>
<span id="L1197" rel="#L1197">1197</span>
<span id="L1198" rel="#L1198">1198</span>
<span id="L1199" rel="#L1199">1199</span>
<span id="L1200" rel="#L1200">1200</span>
<span id="L1201" rel="#L1201">1201</span>
<span id="L1202" rel="#L1202">1202</span>
<span id="L1203" rel="#L1203">1203</span>
<span id="L1204" rel="#L1204">1204</span>
<span id="L1205" rel="#L1205">1205</span>
<span id="L1206" rel="#L1206">1206</span>
<span id="L1207" rel="#L1207">1207</span>
<span id="L1208" rel="#L1208">1208</span>
<span id="L1209" rel="#L1209">1209</span>
<span id="L1210" rel="#L1210">1210</span>
<span id="L1211" rel="#L1211">1211</span>
<span id="L1212" rel="#L1212">1212</span>
<span id="L1213" rel="#L1213">1213</span>
<span id="L1214" rel="#L1214">1214</span>
<span id="L1215" rel="#L1215">1215</span>
<span id="L1216" rel="#L1216">1216</span>
<span id="L1217" rel="#L1217">1217</span>
<span id="L1218" rel="#L1218">1218</span>
<span id="L1219" rel="#L1219">1219</span>
<span id="L1220" rel="#L1220">1220</span>
<span id="L1221" rel="#L1221">1221</span>
<span id="L1222" rel="#L1222">1222</span>
<span id="L1223" rel="#L1223">1223</span>
<span id="L1224" rel="#L1224">1224</span>
<span id="L1225" rel="#L1225">1225</span>
<span id="L1226" rel="#L1226">1226</span>
<span id="L1227" rel="#L1227">1227</span>
<span id="L1228" rel="#L1228">1228</span>
<span id="L1229" rel="#L1229">1229</span>
<span id="L1230" rel="#L1230">1230</span>
<span id="L1231" rel="#L1231">1231</span>
<span id="L1232" rel="#L1232">1232</span>
<span id="L1233" rel="#L1233">1233</span>
<span id="L1234" rel="#L1234">1234</span>
<span id="L1235" rel="#L1235">1235</span>
<span id="L1236" rel="#L1236">1236</span>
<span id="L1237" rel="#L1237">1237</span>
<span id="L1238" rel="#L1238">1238</span>
<span id="L1239" rel="#L1239">1239</span>
<span id="L1240" rel="#L1240">1240</span>
<span id="L1241" rel="#L1241">1241</span>
<span id="L1242" rel="#L1242">1242</span>
<span id="L1243" rel="#L1243">1243</span>
<span id="L1244" rel="#L1244">1244</span>
<span id="L1245" rel="#L1245">1245</span>
<span id="L1246" rel="#L1246">1246</span>
<span id="L1247" rel="#L1247">1247</span>
<span id="L1248" rel="#L1248">1248</span>
<span id="L1249" rel="#L1249">1249</span>
<span id="L1250" rel="#L1250">1250</span>
<span id="L1251" rel="#L1251">1251</span>
<span id="L1252" rel="#L1252">1252</span>
<span id="L1253" rel="#L1253">1253</span>
<span id="L1254" rel="#L1254">1254</span>
<span id="L1255" rel="#L1255">1255</span>
<span id="L1256" rel="#L1256">1256</span>
<span id="L1257" rel="#L1257">1257</span>
<span id="L1258" rel="#L1258">1258</span>
<span id="L1259" rel="#L1259">1259</span>
<span id="L1260" rel="#L1260">1260</span>
<span id="L1261" rel="#L1261">1261</span>
<span id="L1262" rel="#L1262">1262</span>
<span id="L1263" rel="#L1263">1263</span>
<span id="L1264" rel="#L1264">1264</span>
<span id="L1265" rel="#L1265">1265</span>
<span id="L1266" rel="#L1266">1266</span>
<span id="L1267" rel="#L1267">1267</span>
<span id="L1268" rel="#L1268">1268</span>
<span id="L1269" rel="#L1269">1269</span>
<span id="L1270" rel="#L1270">1270</span>
<span id="L1271" rel="#L1271">1271</span>
<span id="L1272" rel="#L1272">1272</span>
<span id="L1273" rel="#L1273">1273</span>
<span id="L1274" rel="#L1274">1274</span>
<span id="L1275" rel="#L1275">1275</span>
<span id="L1276" rel="#L1276">1276</span>
<span id="L1277" rel="#L1277">1277</span>
<span id="L1278" rel="#L1278">1278</span>
<span id="L1279" rel="#L1279">1279</span>
<span id="L1280" rel="#L1280">1280</span>
<span id="L1281" rel="#L1281">1281</span>
<span id="L1282" rel="#L1282">1282</span>
<span id="L1283" rel="#L1283">1283</span>
<span id="L1284" rel="#L1284">1284</span>
<span id="L1285" rel="#L1285">1285</span>
<span id="L1286" rel="#L1286">1286</span>
<span id="L1287" rel="#L1287">1287</span>
<span id="L1288" rel="#L1288">1288</span>
<span id="L1289" rel="#L1289">1289</span>
<span id="L1290" rel="#L1290">1290</span>
<span id="L1291" rel="#L1291">1291</span>
<span id="L1292" rel="#L1292">1292</span>
<span id="L1293" rel="#L1293">1293</span>
<span id="L1294" rel="#L1294">1294</span>
<span id="L1295" rel="#L1295">1295</span>
<span id="L1296" rel="#L1296">1296</span>
<span id="L1297" rel="#L1297">1297</span>
<span id="L1298" rel="#L1298">1298</span>
<span id="L1299" rel="#L1299">1299</span>
<span id="L1300" rel="#L1300">1300</span>
<span id="L1301" rel="#L1301">1301</span>
<span id="L1302" rel="#L1302">1302</span>
<span id="L1303" rel="#L1303">1303</span>
<span id="L1304" rel="#L1304">1304</span>
<span id="L1305" rel="#L1305">1305</span>
<span id="L1306" rel="#L1306">1306</span>
<span id="L1307" rel="#L1307">1307</span>
<span id="L1308" rel="#L1308">1308</span>
<span id="L1309" rel="#L1309">1309</span>
<span id="L1310" rel="#L1310">1310</span>
<span id="L1311" rel="#L1311">1311</span>
<span id="L1312" rel="#L1312">1312</span>
<span id="L1313" rel="#L1313">1313</span>
<span id="L1314" rel="#L1314">1314</span>
<span id="L1315" rel="#L1315">1315</span>
<span id="L1316" rel="#L1316">1316</span>
<span id="L1317" rel="#L1317">1317</span>
<span id="L1318" rel="#L1318">1318</span>
<span id="L1319" rel="#L1319">1319</span>
<span id="L1320" rel="#L1320">1320</span>
<span id="L1321" rel="#L1321">1321</span>
<span id="L1322" rel="#L1322">1322</span>
<span id="L1323" rel="#L1323">1323</span>
<span id="L1324" rel="#L1324">1324</span>
<span id="L1325" rel="#L1325">1325</span>
<span id="L1326" rel="#L1326">1326</span>
<span id="L1327" rel="#L1327">1327</span>
<span id="L1328" rel="#L1328">1328</span>
<span id="L1329" rel="#L1329">1329</span>
<span id="L1330" rel="#L1330">1330</span>
<span id="L1331" rel="#L1331">1331</span>
<span id="L1332" rel="#L1332">1332</span>
<span id="L1333" rel="#L1333">1333</span>
<span id="L1334" rel="#L1334">1334</span>
<span id="L1335" rel="#L1335">1335</span>
<span id="L1336" rel="#L1336">1336</span>
<span id="L1337" rel="#L1337">1337</span>
<span id="L1338" rel="#L1338">1338</span>
<span id="L1339" rel="#L1339">1339</span>
<span id="L1340" rel="#L1340">1340</span>
<span id="L1341" rel="#L1341">1341</span>
<span id="L1342" rel="#L1342">1342</span>
<span id="L1343" rel="#L1343">1343</span>
<span id="L1344" rel="#L1344">1344</span>
<span id="L1345" rel="#L1345">1345</span>
<span id="L1346" rel="#L1346">1346</span>
<span id="L1347" rel="#L1347">1347</span>
<span id="L1348" rel="#L1348">1348</span>
<span id="L1349" rel="#L1349">1349</span>
<span id="L1350" rel="#L1350">1350</span>
<span id="L1351" rel="#L1351">1351</span>
<span id="L1352" rel="#L1352">1352</span>
<span id="L1353" rel="#L1353">1353</span>
<span id="L1354" rel="#L1354">1354</span>
<span id="L1355" rel="#L1355">1355</span>
<span id="L1356" rel="#L1356">1356</span>
<span id="L1357" rel="#L1357">1357</span>
<span id="L1358" rel="#L1358">1358</span>
<span id="L1359" rel="#L1359">1359</span>
<span id="L1360" rel="#L1360">1360</span>
<span id="L1361" rel="#L1361">1361</span>
<span id="L1362" rel="#L1362">1362</span>
<span id="L1363" rel="#L1363">1363</span>
<span id="L1364" rel="#L1364">1364</span>
<span id="L1365" rel="#L1365">1365</span>
<span id="L1366" rel="#L1366">1366</span>
<span id="L1367" rel="#L1367">1367</span>
<span id="L1368" rel="#L1368">1368</span>
<span id="L1369" rel="#L1369">1369</span>
<span id="L1370" rel="#L1370">1370</span>
<span id="L1371" rel="#L1371">1371</span>
<span id="L1372" rel="#L1372">1372</span>
<span id="L1373" rel="#L1373">1373</span>
<span id="L1374" rel="#L1374">1374</span>
<span id="L1375" rel="#L1375">1375</span>
<span id="L1376" rel="#L1376">1376</span>
<span id="L1377" rel="#L1377">1377</span>
<span id="L1378" rel="#L1378">1378</span>
<span id="L1379" rel="#L1379">1379</span>
<span id="L1380" rel="#L1380">1380</span>
<span id="L1381" rel="#L1381">1381</span>
<span id="L1382" rel="#L1382">1382</span>
<span id="L1383" rel="#L1383">1383</span>
<span id="L1384" rel="#L1384">1384</span>
<span id="L1385" rel="#L1385">1385</span>
<span id="L1386" rel="#L1386">1386</span>
<span id="L1387" rel="#L1387">1387</span>
<span id="L1388" rel="#L1388">1388</span>
<span id="L1389" rel="#L1389">1389</span>
<span id="L1390" rel="#L1390">1390</span>
<span id="L1391" rel="#L1391">1391</span>
<span id="L1392" rel="#L1392">1392</span>
<span id="L1393" rel="#L1393">1393</span>
<span id="L1394" rel="#L1394">1394</span>
<span id="L1395" rel="#L1395">1395</span>
<span id="L1396" rel="#L1396">1396</span>
<span id="L1397" rel="#L1397">1397</span>
<span id="L1398" rel="#L1398">1398</span>
<span id="L1399" rel="#L1399">1399</span>
<span id="L1400" rel="#L1400">1400</span>
<span id="L1401" rel="#L1401">1401</span>
<span id="L1402" rel="#L1402">1402</span>
<span id="L1403" rel="#L1403">1403</span>
<span id="L1404" rel="#L1404">1404</span>
<span id="L1405" rel="#L1405">1405</span>
<span id="L1406" rel="#L1406">1406</span>
<span id="L1407" rel="#L1407">1407</span>
<span id="L1408" rel="#L1408">1408</span>
<span id="L1409" rel="#L1409">1409</span>
<span id="L1410" rel="#L1410">1410</span>
<span id="L1411" rel="#L1411">1411</span>
<span id="L1412" rel="#L1412">1412</span>
<span id="L1413" rel="#L1413">1413</span>
<span id="L1414" rel="#L1414">1414</span>
<span id="L1415" rel="#L1415">1415</span>
<span id="L1416" rel="#L1416">1416</span>
<span id="L1417" rel="#L1417">1417</span>
<span id="L1418" rel="#L1418">1418</span>
<span id="L1419" rel="#L1419">1419</span>
<span id="L1420" rel="#L1420">1420</span>
<span id="L1421" rel="#L1421">1421</span>
<span id="L1422" rel="#L1422">1422</span>
<span id="L1423" rel="#L1423">1423</span>
<span id="L1424" rel="#L1424">1424</span>
<span id="L1425" rel="#L1425">1425</span>
<span id="L1426" rel="#L1426">1426</span>
<span id="L1427" rel="#L1427">1427</span>
<span id="L1428" rel="#L1428">1428</span>
<span id="L1429" rel="#L1429">1429</span>
<span id="L1430" rel="#L1430">1430</span>
<span id="L1431" rel="#L1431">1431</span>
<span id="L1432" rel="#L1432">1432</span>
<span id="L1433" rel="#L1433">1433</span>
<span id="L1434" rel="#L1434">1434</span>
<span id="L1435" rel="#L1435">1435</span>
<span id="L1436" rel="#L1436">1436</span>
<span id="L1437" rel="#L1437">1437</span>
<span id="L1438" rel="#L1438">1438</span>
<span id="L1439" rel="#L1439">1439</span>
<span id="L1440" rel="#L1440">1440</span>
<span id="L1441" rel="#L1441">1441</span>
<span id="L1442" rel="#L1442">1442</span>
<span id="L1443" rel="#L1443">1443</span>
<span id="L1444" rel="#L1444">1444</span>
<span id="L1445" rel="#L1445">1445</span>
<span id="L1446" rel="#L1446">1446</span>
<span id="L1447" rel="#L1447">1447</span>
<span id="L1448" rel="#L1448">1448</span>
<span id="L1449" rel="#L1449">1449</span>
<span id="L1450" rel="#L1450">1450</span>
<span id="L1451" rel="#L1451">1451</span>
<span id="L1452" rel="#L1452">1452</span>
<span id="L1453" rel="#L1453">1453</span>
<span id="L1454" rel="#L1454">1454</span>
<span id="L1455" rel="#L1455">1455</span>
<span id="L1456" rel="#L1456">1456</span>
<span id="L1457" rel="#L1457">1457</span>
<span id="L1458" rel="#L1458">1458</span>
<span id="L1459" rel="#L1459">1459</span>
<span id="L1460" rel="#L1460">1460</span>
<span id="L1461" rel="#L1461">1461</span>
<span id="L1462" rel="#L1462">1462</span>
<span id="L1463" rel="#L1463">1463</span>
<span id="L1464" rel="#L1464">1464</span>
<span id="L1465" rel="#L1465">1465</span>
<span id="L1466" rel="#L1466">1466</span>
<span id="L1467" rel="#L1467">1467</span>
<span id="L1468" rel="#L1468">1468</span>
<span id="L1469" rel="#L1469">1469</span>
<span id="L1470" rel="#L1470">1470</span>
<span id="L1471" rel="#L1471">1471</span>
<span id="L1472" rel="#L1472">1472</span>
<span id="L1473" rel="#L1473">1473</span>
<span id="L1474" rel="#L1474">1474</span>
<span id="L1475" rel="#L1475">1475</span>
<span id="L1476" rel="#L1476">1476</span>
<span id="L1477" rel="#L1477">1477</span>
<span id="L1478" rel="#L1478">1478</span>
<span id="L1479" rel="#L1479">1479</span>
<span id="L1480" rel="#L1480">1480</span>
<span id="L1481" rel="#L1481">1481</span>
<span id="L1482" rel="#L1482">1482</span>
<span id="L1483" rel="#L1483">1483</span>
<span id="L1484" rel="#L1484">1484</span>
<span id="L1485" rel="#L1485">1485</span>
<span id="L1486" rel="#L1486">1486</span>
<span id="L1487" rel="#L1487">1487</span>
<span id="L1488" rel="#L1488">1488</span>
<span id="L1489" rel="#L1489">1489</span>
<span id="L1490" rel="#L1490">1490</span>
<span id="L1491" rel="#L1491">1491</span>
<span id="L1492" rel="#L1492">1492</span>
<span id="L1493" rel="#L1493">1493</span>
<span id="L1494" rel="#L1494">1494</span>
<span id="L1495" rel="#L1495">1495</span>
<span id="L1496" rel="#L1496">1496</span>
<span id="L1497" rel="#L1497">1497</span>
<span id="L1498" rel="#L1498">1498</span>
<span id="L1499" rel="#L1499">1499</span>
<span id="L1500" rel="#L1500">1500</span>
<span id="L1501" rel="#L1501">1501</span>
<span id="L1502" rel="#L1502">1502</span>
<span id="L1503" rel="#L1503">1503</span>
<span id="L1504" rel="#L1504">1504</span>
<span id="L1505" rel="#L1505">1505</span>
<span id="L1506" rel="#L1506">1506</span>
<span id="L1507" rel="#L1507">1507</span>
<span id="L1508" rel="#L1508">1508</span>
<span id="L1509" rel="#L1509">1509</span>
<span id="L1510" rel="#L1510">1510</span>
<span id="L1511" rel="#L1511">1511</span>
<span id="L1512" rel="#L1512">1512</span>
<span id="L1513" rel="#L1513">1513</span>
<span id="L1514" rel="#L1514">1514</span>
<span id="L1515" rel="#L1515">1515</span>
<span id="L1516" rel="#L1516">1516</span>
<span id="L1517" rel="#L1517">1517</span>
<span id="L1518" rel="#L1518">1518</span>
<span id="L1519" rel="#L1519">1519</span>
<span id="L1520" rel="#L1520">1520</span>
<span id="L1521" rel="#L1521">1521</span>
<span id="L1522" rel="#L1522">1522</span>
<span id="L1523" rel="#L1523">1523</span>
<span id="L1524" rel="#L1524">1524</span>
<span id="L1525" rel="#L1525">1525</span>
<span id="L1526" rel="#L1526">1526</span>
<span id="L1527" rel="#L1527">1527</span>
<span id="L1528" rel="#L1528">1528</span>
<span id="L1529" rel="#L1529">1529</span>
<span id="L1530" rel="#L1530">1530</span>
<span id="L1531" rel="#L1531">1531</span>
<span id="L1532" rel="#L1532">1532</span>
<span id="L1533" rel="#L1533">1533</span>
<span id="L1534" rel="#L1534">1534</span>
<span id="L1535" rel="#L1535">1535</span>
<span id="L1536" rel="#L1536">1536</span>
<span id="L1537" rel="#L1537">1537</span>
<span id="L1538" rel="#L1538">1538</span>
<span id="L1539" rel="#L1539">1539</span>
<span id="L1540" rel="#L1540">1540</span>
<span id="L1541" rel="#L1541">1541</span>
<span id="L1542" rel="#L1542">1542</span>
<span id="L1543" rel="#L1543">1543</span>
<span id="L1544" rel="#L1544">1544</span>
<span id="L1545" rel="#L1545">1545</span>
<span id="L1546" rel="#L1546">1546</span>
<span id="L1547" rel="#L1547">1547</span>
<span id="L1548" rel="#L1548">1548</span>
<span id="L1549" rel="#L1549">1549</span>
<span id="L1550" rel="#L1550">1550</span>
<span id="L1551" rel="#L1551">1551</span>
<span id="L1552" rel="#L1552">1552</span>
<span id="L1553" rel="#L1553">1553</span>
<span id="L1554" rel="#L1554">1554</span>
<span id="L1555" rel="#L1555">1555</span>
<span id="L1556" rel="#L1556">1556</span>
<span id="L1557" rel="#L1557">1557</span>
<span id="L1558" rel="#L1558">1558</span>
<span id="L1559" rel="#L1559">1559</span>
<span id="L1560" rel="#L1560">1560</span>
<span id="L1561" rel="#L1561">1561</span>
<span id="L1562" rel="#L1562">1562</span>
<span id="L1563" rel="#L1563">1563</span>
<span id="L1564" rel="#L1564">1564</span>
<span id="L1565" rel="#L1565">1565</span>
<span id="L1566" rel="#L1566">1566</span>
<span id="L1567" rel="#L1567">1567</span>
<span id="L1568" rel="#L1568">1568</span>
<span id="L1569" rel="#L1569">1569</span>
<span id="L1570" rel="#L1570">1570</span>
<span id="L1571" rel="#L1571">1571</span>
<span id="L1572" rel="#L1572">1572</span>
<span id="L1573" rel="#L1573">1573</span>
<span id="L1574" rel="#L1574">1574</span>
<span id="L1575" rel="#L1575">1575</span>
<span id="L1576" rel="#L1576">1576</span>
<span id="L1577" rel="#L1577">1577</span>
<span id="L1578" rel="#L1578">1578</span>
<span id="L1579" rel="#L1579">1579</span>
<span id="L1580" rel="#L1580">1580</span>
<span id="L1581" rel="#L1581">1581</span>
<span id="L1582" rel="#L1582">1582</span>
<span id="L1583" rel="#L1583">1583</span>
<span id="L1584" rel="#L1584">1584</span>
<span id="L1585" rel="#L1585">1585</span>
<span id="L1586" rel="#L1586">1586</span>
<span id="L1587" rel="#L1587">1587</span>
<span id="L1588" rel="#L1588">1588</span>
<span id="L1589" rel="#L1589">1589</span>
<span id="L1590" rel="#L1590">1590</span>
<span id="L1591" rel="#L1591">1591</span>
<span id="L1592" rel="#L1592">1592</span>
<span id="L1593" rel="#L1593">1593</span>
<span id="L1594" rel="#L1594">1594</span>
<span id="L1595" rel="#L1595">1595</span>
<span id="L1596" rel="#L1596">1596</span>
<span id="L1597" rel="#L1597">1597</span>
<span id="L1598" rel="#L1598">1598</span>
<span id="L1599" rel="#L1599">1599</span>
<span id="L1600" rel="#L1600">1600</span>
<span id="L1601" rel="#L1601">1601</span>
<span id="L1602" rel="#L1602">1602</span>
<span id="L1603" rel="#L1603">1603</span>
<span id="L1604" rel="#L1604">1604</span>
<span id="L1605" rel="#L1605">1605</span>
<span id="L1606" rel="#L1606">1606</span>
<span id="L1607" rel="#L1607">1607</span>
<span id="L1608" rel="#L1608">1608</span>
<span id="L1609" rel="#L1609">1609</span>
<span id="L1610" rel="#L1610">1610</span>
<span id="L1611" rel="#L1611">1611</span>
<span id="L1612" rel="#L1612">1612</span>
<span id="L1613" rel="#L1613">1613</span>
<span id="L1614" rel="#L1614">1614</span>
<span id="L1615" rel="#L1615">1615</span>
<span id="L1616" rel="#L1616">1616</span>
<span id="L1617" rel="#L1617">1617</span>
<span id="L1618" rel="#L1618">1618</span>
<span id="L1619" rel="#L1619">1619</span>
<span id="L1620" rel="#L1620">1620</span>
<span id="L1621" rel="#L1621">1621</span>
<span id="L1622" rel="#L1622">1622</span>
<span id="L1623" rel="#L1623">1623</span>
<span id="L1624" rel="#L1624">1624</span>
<span id="L1625" rel="#L1625">1625</span>
<span id="L1626" rel="#L1626">1626</span>
<span id="L1627" rel="#L1627">1627</span>
<span id="L1628" rel="#L1628">1628</span>
<span id="L1629" rel="#L1629">1629</span>
<span id="L1630" rel="#L1630">1630</span>
<span id="L1631" rel="#L1631">1631</span>
<span id="L1632" rel="#L1632">1632</span>
<span id="L1633" rel="#L1633">1633</span>
<span id="L1634" rel="#L1634">1634</span>
<span id="L1635" rel="#L1635">1635</span>
<span id="L1636" rel="#L1636">1636</span>
<span id="L1637" rel="#L1637">1637</span>
<span id="L1638" rel="#L1638">1638</span>
<span id="L1639" rel="#L1639">1639</span>
<span id="L1640" rel="#L1640">1640</span>
<span id="L1641" rel="#L1641">1641</span>
<span id="L1642" rel="#L1642">1642</span>
<span id="L1643" rel="#L1643">1643</span>
<span id="L1644" rel="#L1644">1644</span>
<span id="L1645" rel="#L1645">1645</span>
<span id="L1646" rel="#L1646">1646</span>
<span id="L1647" rel="#L1647">1647</span>
<span id="L1648" rel="#L1648">1648</span>
<span id="L1649" rel="#L1649">1649</span>
<span id="L1650" rel="#L1650">1650</span>
<span id="L1651" rel="#L1651">1651</span>
<span id="L1652" rel="#L1652">1652</span>
<span id="L1653" rel="#L1653">1653</span>
<span id="L1654" rel="#L1654">1654</span>
<span id="L1655" rel="#L1655">1655</span>
<span id="L1656" rel="#L1656">1656</span>
<span id="L1657" rel="#L1657">1657</span>
<span id="L1658" rel="#L1658">1658</span>
<span id="L1659" rel="#L1659">1659</span>
<span id="L1660" rel="#L1660">1660</span>
<span id="L1661" rel="#L1661">1661</span>
<span id="L1662" rel="#L1662">1662</span>
<span id="L1663" rel="#L1663">1663</span>
<span id="L1664" rel="#L1664">1664</span>
<span id="L1665" rel="#L1665">1665</span>
<span id="L1666" rel="#L1666">1666</span>
<span id="L1667" rel="#L1667">1667</span>
<span id="L1668" rel="#L1668">1668</span>
<span id="L1669" rel="#L1669">1669</span>
<span id="L1670" rel="#L1670">1670</span>
<span id="L1671" rel="#L1671">1671</span>
<span id="L1672" rel="#L1672">1672</span>
<span id="L1673" rel="#L1673">1673</span>
<span id="L1674" rel="#L1674">1674</span>
<span id="L1675" rel="#L1675">1675</span>
<span id="L1676" rel="#L1676">1676</span>
<span id="L1677" rel="#L1677">1677</span>
<span id="L1678" rel="#L1678">1678</span>
<span id="L1679" rel="#L1679">1679</span>
<span id="L1680" rel="#L1680">1680</span>
<span id="L1681" rel="#L1681">1681</span>
<span id="L1682" rel="#L1682">1682</span>
<span id="L1683" rel="#L1683">1683</span>
<span id="L1684" rel="#L1684">1684</span>
<span id="L1685" rel="#L1685">1685</span>
<span id="L1686" rel="#L1686">1686</span>
<span id="L1687" rel="#L1687">1687</span>
<span id="L1688" rel="#L1688">1688</span>
<span id="L1689" rel="#L1689">1689</span>
<span id="L1690" rel="#L1690">1690</span>
<span id="L1691" rel="#L1691">1691</span>
<span id="L1692" rel="#L1692">1692</span>
<span id="L1693" rel="#L1693">1693</span>
<span id="L1694" rel="#L1694">1694</span>
<span id="L1695" rel="#L1695">1695</span>
<span id="L1696" rel="#L1696">1696</span>
<span id="L1697" rel="#L1697">1697</span>
<span id="L1698" rel="#L1698">1698</span>
<span id="L1699" rel="#L1699">1699</span>
<span id="L1700" rel="#L1700">1700</span>
<span id="L1701" rel="#L1701">1701</span>
<span id="L1702" rel="#L1702">1702</span>
<span id="L1703" rel="#L1703">1703</span>
<span id="L1704" rel="#L1704">1704</span>
<span id="L1705" rel="#L1705">1705</span>
<span id="L1706" rel="#L1706">1706</span>
<span id="L1707" rel="#L1707">1707</span>
<span id="L1708" rel="#L1708">1708</span>
<span id="L1709" rel="#L1709">1709</span>
<span id="L1710" rel="#L1710">1710</span>
<span id="L1711" rel="#L1711">1711</span>
<span id="L1712" rel="#L1712">1712</span>
<span id="L1713" rel="#L1713">1713</span>
<span id="L1714" rel="#L1714">1714</span>
<span id="L1715" rel="#L1715">1715</span>
<span id="L1716" rel="#L1716">1716</span>
<span id="L1717" rel="#L1717">1717</span>
<span id="L1718" rel="#L1718">1718</span>
<span id="L1719" rel="#L1719">1719</span>
<span id="L1720" rel="#L1720">1720</span>
<span id="L1721" rel="#L1721">1721</span>
<span id="L1722" rel="#L1722">1722</span>
<span id="L1723" rel="#L1723">1723</span>
<span id="L1724" rel="#L1724">1724</span>
<span id="L1725" rel="#L1725">1725</span>
<span id="L1726" rel="#L1726">1726</span>
<span id="L1727" rel="#L1727">1727</span>
<span id="L1728" rel="#L1728">1728</span>
<span id="L1729" rel="#L1729">1729</span>
<span id="L1730" rel="#L1730">1730</span>
<span id="L1731" rel="#L1731">1731</span>
<span id="L1732" rel="#L1732">1732</span>
<span id="L1733" rel="#L1733">1733</span>
<span id="L1734" rel="#L1734">1734</span>
<span id="L1735" rel="#L1735">1735</span>
<span id="L1736" rel="#L1736">1736</span>
<span id="L1737" rel="#L1737">1737</span>
<span id="L1738" rel="#L1738">1738</span>
<span id="L1739" rel="#L1739">1739</span>
<span id="L1740" rel="#L1740">1740</span>
<span id="L1741" rel="#L1741">1741</span>
<span id="L1742" rel="#L1742">1742</span>
<span id="L1743" rel="#L1743">1743</span>
<span id="L1744" rel="#L1744">1744</span>
<span id="L1745" rel="#L1745">1745</span>
<span id="L1746" rel="#L1746">1746</span>
<span id="L1747" rel="#L1747">1747</span>
<span id="L1748" rel="#L1748">1748</span>
<span id="L1749" rel="#L1749">1749</span>
<span id="L1750" rel="#L1750">1750</span>
<span id="L1751" rel="#L1751">1751</span>
<span id="L1752" rel="#L1752">1752</span>
<span id="L1753" rel="#L1753">1753</span>
<span id="L1754" rel="#L1754">1754</span>
<span id="L1755" rel="#L1755">1755</span>
<span id="L1756" rel="#L1756">1756</span>
<span id="L1757" rel="#L1757">1757</span>
<span id="L1758" rel="#L1758">1758</span>
<span id="L1759" rel="#L1759">1759</span>
<span id="L1760" rel="#L1760">1760</span>
<span id="L1761" rel="#L1761">1761</span>
<span id="L1762" rel="#L1762">1762</span>
<span id="L1763" rel="#L1763">1763</span>
<span id="L1764" rel="#L1764">1764</span>
<span id="L1765" rel="#L1765">1765</span>
<span id="L1766" rel="#L1766">1766</span>
<span id="L1767" rel="#L1767">1767</span>
<span id="L1768" rel="#L1768">1768</span>
<span id="L1769" rel="#L1769">1769</span>
<span id="L1770" rel="#L1770">1770</span>
<span id="L1771" rel="#L1771">1771</span>
<span id="L1772" rel="#L1772">1772</span>
<span id="L1773" rel="#L1773">1773</span>
<span id="L1774" rel="#L1774">1774</span>
<span id="L1775" rel="#L1775">1775</span>
<span id="L1776" rel="#L1776">1776</span>
<span id="L1777" rel="#L1777">1777</span>
<span id="L1778" rel="#L1778">1778</span>
<span id="L1779" rel="#L1779">1779</span>
<span id="L1780" rel="#L1780">1780</span>
<span id="L1781" rel="#L1781">1781</span>
<span id="L1782" rel="#L1782">1782</span>
<span id="L1783" rel="#L1783">1783</span>
<span id="L1784" rel="#L1784">1784</span>
<span id="L1785" rel="#L1785">1785</span>
<span id="L1786" rel="#L1786">1786</span>
<span id="L1787" rel="#L1787">1787</span>
<span id="L1788" rel="#L1788">1788</span>
<span id="L1789" rel="#L1789">1789</span>
<span id="L1790" rel="#L1790">1790</span>
<span id="L1791" rel="#L1791">1791</span>
<span id="L1792" rel="#L1792">1792</span>
<span id="L1793" rel="#L1793">1793</span>
<span id="L1794" rel="#L1794">1794</span>
<span id="L1795" rel="#L1795">1795</span>
<span id="L1796" rel="#L1796">1796</span>
<span id="L1797" rel="#L1797">1797</span>
<span id="L1798" rel="#L1798">1798</span>
<span id="L1799" rel="#L1799">1799</span>
<span id="L1800" rel="#L1800">1800</span>
<span id="L1801" rel="#L1801">1801</span>
<span id="L1802" rel="#L1802">1802</span>
<span id="L1803" rel="#L1803">1803</span>
<span id="L1804" rel="#L1804">1804</span>
<span id="L1805" rel="#L1805">1805</span>
<span id="L1806" rel="#L1806">1806</span>
<span id="L1807" rel="#L1807">1807</span>
<span id="L1808" rel="#L1808">1808</span>
<span id="L1809" rel="#L1809">1809</span>
<span id="L1810" rel="#L1810">1810</span>
<span id="L1811" rel="#L1811">1811</span>
<span id="L1812" rel="#L1812">1812</span>
<span id="L1813" rel="#L1813">1813</span>
<span id="L1814" rel="#L1814">1814</span>
<span id="L1815" rel="#L1815">1815</span>
<span id="L1816" rel="#L1816">1816</span>
<span id="L1817" rel="#L1817">1817</span>
<span id="L1818" rel="#L1818">1818</span>
<span id="L1819" rel="#L1819">1819</span>
<span id="L1820" rel="#L1820">1820</span>
<span id="L1821" rel="#L1821">1821</span>
<span id="L1822" rel="#L1822">1822</span>
<span id="L1823" rel="#L1823">1823</span>
<span id="L1824" rel="#L1824">1824</span>
<span id="L1825" rel="#L1825">1825</span>
<span id="L1826" rel="#L1826">1826</span>
<span id="L1827" rel="#L1827">1827</span>
<span id="L1828" rel="#L1828">1828</span>
<span id="L1829" rel="#L1829">1829</span>
<span id="L1830" rel="#L1830">1830</span>
<span id="L1831" rel="#L1831">1831</span>
<span id="L1832" rel="#L1832">1832</span>
<span id="L1833" rel="#L1833">1833</span>
<span id="L1834" rel="#L1834">1834</span>
<span id="L1835" rel="#L1835">1835</span>
<span id="L1836" rel="#L1836">1836</span>
<span id="L1837" rel="#L1837">1837</span>
<span id="L1838" rel="#L1838">1838</span>
<span id="L1839" rel="#L1839">1839</span>
<span id="L1840" rel="#L1840">1840</span>
<span id="L1841" rel="#L1841">1841</span>
<span id="L1842" rel="#L1842">1842</span>
<span id="L1843" rel="#L1843">1843</span>
<span id="L1844" rel="#L1844">1844</span>
<span id="L1845" rel="#L1845">1845</span>
<span id="L1846" rel="#L1846">1846</span>
<span id="L1847" rel="#L1847">1847</span>
<span id="L1848" rel="#L1848">1848</span>
<span id="L1849" rel="#L1849">1849</span>
<span id="L1850" rel="#L1850">1850</span>
<span id="L1851" rel="#L1851">1851</span>
<span id="L1852" rel="#L1852">1852</span>
<span id="L1853" rel="#L1853">1853</span>
<span id="L1854" rel="#L1854">1854</span>
<span id="L1855" rel="#L1855">1855</span>
<span id="L1856" rel="#L1856">1856</span>
<span id="L1857" rel="#L1857">1857</span>
<span id="L1858" rel="#L1858">1858</span>
<span id="L1859" rel="#L1859">1859</span>
<span id="L1860" rel="#L1860">1860</span>
<span id="L1861" rel="#L1861">1861</span>
<span id="L1862" rel="#L1862">1862</span>
<span id="L1863" rel="#L1863">1863</span>
<span id="L1864" rel="#L1864">1864</span>
<span id="L1865" rel="#L1865">1865</span>
<span id="L1866" rel="#L1866">1866</span>
<span id="L1867" rel="#L1867">1867</span>
<span id="L1868" rel="#L1868">1868</span>
<span id="L1869" rel="#L1869">1869</span>
<span id="L1870" rel="#L1870">1870</span>
<span id="L1871" rel="#L1871">1871</span>
<span id="L1872" rel="#L1872">1872</span>
<span id="L1873" rel="#L1873">1873</span>
<span id="L1874" rel="#L1874">1874</span>
<span id="L1875" rel="#L1875">1875</span>
<span id="L1876" rel="#L1876">1876</span>
<span id="L1877" rel="#L1877">1877</span>
<span id="L1878" rel="#L1878">1878</span>
<span id="L1879" rel="#L1879">1879</span>
<span id="L1880" rel="#L1880">1880</span>
<span id="L1881" rel="#L1881">1881</span>
<span id="L1882" rel="#L1882">1882</span>
<span id="L1883" rel="#L1883">1883</span>
<span id="L1884" rel="#L1884">1884</span>
<span id="L1885" rel="#L1885">1885</span>
<span id="L1886" rel="#L1886">1886</span>
<span id="L1887" rel="#L1887">1887</span>
<span id="L1888" rel="#L1888">1888</span>
<span id="L1889" rel="#L1889">1889</span>
<span id="L1890" rel="#L1890">1890</span>
<span id="L1891" rel="#L1891">1891</span>
<span id="L1892" rel="#L1892">1892</span>
<span id="L1893" rel="#L1893">1893</span>
<span id="L1894" rel="#L1894">1894</span>
<span id="L1895" rel="#L1895">1895</span>
<span id="L1896" rel="#L1896">1896</span>
<span id="L1897" rel="#L1897">1897</span>
<span id="L1898" rel="#L1898">1898</span>
<span id="L1899" rel="#L1899">1899</span>
<span id="L1900" rel="#L1900">1900</span>
<span id="L1901" rel="#L1901">1901</span>
<span id="L1902" rel="#L1902">1902</span>
<span id="L1903" rel="#L1903">1903</span>
<span id="L1904" rel="#L1904">1904</span>
<span id="L1905" rel="#L1905">1905</span>
<span id="L1906" rel="#L1906">1906</span>
<span id="L1907" rel="#L1907">1907</span>
<span id="L1908" rel="#L1908">1908</span>
<span id="L1909" rel="#L1909">1909</span>
<span id="L1910" rel="#L1910">1910</span>
<span id="L1911" rel="#L1911">1911</span>
<span id="L1912" rel="#L1912">1912</span>
<span id="L1913" rel="#L1913">1913</span>
<span id="L1914" rel="#L1914">1914</span>
<span id="L1915" rel="#L1915">1915</span>
<span id="L1916" rel="#L1916">1916</span>
<span id="L1917" rel="#L1917">1917</span>
<span id="L1918" rel="#L1918">1918</span>
<span id="L1919" rel="#L1919">1919</span>
<span id="L1920" rel="#L1920">1920</span>
<span id="L1921" rel="#L1921">1921</span>
<span id="L1922" rel="#L1922">1922</span>
<span id="L1923" rel="#L1923">1923</span>
<span id="L1924" rel="#L1924">1924</span>
<span id="L1925" rel="#L1925">1925</span>
<span id="L1926" rel="#L1926">1926</span>
<span id="L1927" rel="#L1927">1927</span>
<span id="L1928" rel="#L1928">1928</span>
<span id="L1929" rel="#L1929">1929</span>
<span id="L1930" rel="#L1930">1930</span>
<span id="L1931" rel="#L1931">1931</span>
<span id="L1932" rel="#L1932">1932</span>
<span id="L1933" rel="#L1933">1933</span>
<span id="L1934" rel="#L1934">1934</span>
<span id="L1935" rel="#L1935">1935</span>
<span id="L1936" rel="#L1936">1936</span>
<span id="L1937" rel="#L1937">1937</span>
<span id="L1938" rel="#L1938">1938</span>
<span id="L1939" rel="#L1939">1939</span>
<span id="L1940" rel="#L1940">1940</span>
<span id="L1941" rel="#L1941">1941</span>
<span id="L1942" rel="#L1942">1942</span>
<span id="L1943" rel="#L1943">1943</span>
<span id="L1944" rel="#L1944">1944</span>
<span id="L1945" rel="#L1945">1945</span>
<span id="L1946" rel="#L1946">1946</span>
<span id="L1947" rel="#L1947">1947</span>
<span id="L1948" rel="#L1948">1948</span>
<span id="L1949" rel="#L1949">1949</span>
<span id="L1950" rel="#L1950">1950</span>
<span id="L1951" rel="#L1951">1951</span>
<span id="L1952" rel="#L1952">1952</span>
<span id="L1953" rel="#L1953">1953</span>
<span id="L1954" rel="#L1954">1954</span>
<span id="L1955" rel="#L1955">1955</span>
<span id="L1956" rel="#L1956">1956</span>
<span id="L1957" rel="#L1957">1957</span>
<span id="L1958" rel="#L1958">1958</span>
<span id="L1959" rel="#L1959">1959</span>
<span id="L1960" rel="#L1960">1960</span>
<span id="L1961" rel="#L1961">1961</span>
<span id="L1962" rel="#L1962">1962</span>
<span id="L1963" rel="#L1963">1963</span>
<span id="L1964" rel="#L1964">1964</span>
<span id="L1965" rel="#L1965">1965</span>
<span id="L1966" rel="#L1966">1966</span>
<span id="L1967" rel="#L1967">1967</span>
<span id="L1968" rel="#L1968">1968</span>
<span id="L1969" rel="#L1969">1969</span>
<span id="L1970" rel="#L1970">1970</span>
<span id="L1971" rel="#L1971">1971</span>
<span id="L1972" rel="#L1972">1972</span>
<span id="L1973" rel="#L1973">1973</span>
<span id="L1974" rel="#L1974">1974</span>
<span id="L1975" rel="#L1975">1975</span>
<span id="L1976" rel="#L1976">1976</span>
<span id="L1977" rel="#L1977">1977</span>
<span id="L1978" rel="#L1978">1978</span>
<span id="L1979" rel="#L1979">1979</span>
<span id="L1980" rel="#L1980">1980</span>
<span id="L1981" rel="#L1981">1981</span>
<span id="L1982" rel="#L1982">1982</span>
<span id="L1983" rel="#L1983">1983</span>
<span id="L1984" rel="#L1984">1984</span>
<span id="L1985" rel="#L1985">1985</span>
<span id="L1986" rel="#L1986">1986</span>
<span id="L1987" rel="#L1987">1987</span>
<span id="L1988" rel="#L1988">1988</span>
<span id="L1989" rel="#L1989">1989</span>
<span id="L1990" rel="#L1990">1990</span>
<span id="L1991" rel="#L1991">1991</span>
<span id="L1992" rel="#L1992">1992</span>
<span id="L1993" rel="#L1993">1993</span>
<span id="L1994" rel="#L1994">1994</span>
<span id="L1995" rel="#L1995">1995</span>
<span id="L1996" rel="#L1996">1996</span>
<span id="L1997" rel="#L1997">1997</span>
<span id="L1998" rel="#L1998">1998</span>
<span id="L1999" rel="#L1999">1999</span>
<span id="L2000" rel="#L2000">2000</span>
<span id="L2001" rel="#L2001">2001</span>
<span id="L2002" rel="#L2002">2002</span>
<span id="L2003" rel="#L2003">2003</span>
<span id="L2004" rel="#L2004">2004</span>
<span id="L2005" rel="#L2005">2005</span>
<span id="L2006" rel="#L2006">2006</span>
<span id="L2007" rel="#L2007">2007</span>
<span id="L2008" rel="#L2008">2008</span>
<span id="L2009" rel="#L2009">2009</span>
<span id="L2010" rel="#L2010">2010</span>
<span id="L2011" rel="#L2011">2011</span>
<span id="L2012" rel="#L2012">2012</span>
<span id="L2013" rel="#L2013">2013</span>
<span id="L2014" rel="#L2014">2014</span>
<span id="L2015" rel="#L2015">2015</span>
<span id="L2016" rel="#L2016">2016</span>
<span id="L2017" rel="#L2017">2017</span>
<span id="L2018" rel="#L2018">2018</span>
<span id="L2019" rel="#L2019">2019</span>
<span id="L2020" rel="#L2020">2020</span>
<span id="L2021" rel="#L2021">2021</span>
<span id="L2022" rel="#L2022">2022</span>
<span id="L2023" rel="#L2023">2023</span>
<span id="L2024" rel="#L2024">2024</span>
<span id="L2025" rel="#L2025">2025</span>
<span id="L2026" rel="#L2026">2026</span>
<span id="L2027" rel="#L2027">2027</span>
<span id="L2028" rel="#L2028">2028</span>
<span id="L2029" rel="#L2029">2029</span>
<span id="L2030" rel="#L2030">2030</span>
<span id="L2031" rel="#L2031">2031</span>
<span id="L2032" rel="#L2032">2032</span>
<span id="L2033" rel="#L2033">2033</span>
<span id="L2034" rel="#L2034">2034</span>
<span id="L2035" rel="#L2035">2035</span>
<span id="L2036" rel="#L2036">2036</span>
<span id="L2037" rel="#L2037">2037</span>
<span id="L2038" rel="#L2038">2038</span>
<span id="L2039" rel="#L2039">2039</span>
<span id="L2040" rel="#L2040">2040</span>
<span id="L2041" rel="#L2041">2041</span>
<span id="L2042" rel="#L2042">2042</span>
<span id="L2043" rel="#L2043">2043</span>
<span id="L2044" rel="#L2044">2044</span>
<span id="L2045" rel="#L2045">2045</span>
<span id="L2046" rel="#L2046">2046</span>
<span id="L2047" rel="#L2047">2047</span>
<span id="L2048" rel="#L2048">2048</span>
<span id="L2049" rel="#L2049">2049</span>
<span id="L2050" rel="#L2050">2050</span>
<span id="L2051" rel="#L2051">2051</span>
<span id="L2052" rel="#L2052">2052</span>
<span id="L2053" rel="#L2053">2053</span>
<span id="L2054" rel="#L2054">2054</span>
<span id="L2055" rel="#L2055">2055</span>
<span id="L2056" rel="#L2056">2056</span>
<span id="L2057" rel="#L2057">2057</span>
<span id="L2058" rel="#L2058">2058</span>
<span id="L2059" rel="#L2059">2059</span>
<span id="L2060" rel="#L2060">2060</span>
<span id="L2061" rel="#L2061">2061</span>
<span id="L2062" rel="#L2062">2062</span>
<span id="L2063" rel="#L2063">2063</span>
<span id="L2064" rel="#L2064">2064</span>
<span id="L2065" rel="#L2065">2065</span>
<span id="L2066" rel="#L2066">2066</span>
<span id="L2067" rel="#L2067">2067</span>
<span id="L2068" rel="#L2068">2068</span>
<span id="L2069" rel="#L2069">2069</span>
<span id="L2070" rel="#L2070">2070</span>
<span id="L2071" rel="#L2071">2071</span>
<span id="L2072" rel="#L2072">2072</span>
<span id="L2073" rel="#L2073">2073</span>
<span id="L2074" rel="#L2074">2074</span>
<span id="L2075" rel="#L2075">2075</span>
<span id="L2076" rel="#L2076">2076</span>
<span id="L2077" rel="#L2077">2077</span>
<span id="L2078" rel="#L2078">2078</span>
<span id="L2079" rel="#L2079">2079</span>
<span id="L2080" rel="#L2080">2080</span>
<span id="L2081" rel="#L2081">2081</span>
<span id="L2082" rel="#L2082">2082</span>
<span id="L2083" rel="#L2083">2083</span>
<span id="L2084" rel="#L2084">2084</span>
<span id="L2085" rel="#L2085">2085</span>
<span id="L2086" rel="#L2086">2086</span>
<span id="L2087" rel="#L2087">2087</span>
<span id="L2088" rel="#L2088">2088</span>
<span id="L2089" rel="#L2089">2089</span>
<span id="L2090" rel="#L2090">2090</span>
<span id="L2091" rel="#L2091">2091</span>
<span id="L2092" rel="#L2092">2092</span>
<span id="L2093" rel="#L2093">2093</span>
<span id="L2094" rel="#L2094">2094</span>
<span id="L2095" rel="#L2095">2095</span>
<span id="L2096" rel="#L2096">2096</span>
<span id="L2097" rel="#L2097">2097</span>
<span id="L2098" rel="#L2098">2098</span>
<span id="L2099" rel="#L2099">2099</span>
<span id="L2100" rel="#L2100">2100</span>
<span id="L2101" rel="#L2101">2101</span>
<span id="L2102" rel="#L2102">2102</span>
<span id="L2103" rel="#L2103">2103</span>
<span id="L2104" rel="#L2104">2104</span>
<span id="L2105" rel="#L2105">2105</span>
<span id="L2106" rel="#L2106">2106</span>
<span id="L2107" rel="#L2107">2107</span>
<span id="L2108" rel="#L2108">2108</span>
<span id="L2109" rel="#L2109">2109</span>
<span id="L2110" rel="#L2110">2110</span>
<span id="L2111" rel="#L2111">2111</span>
<span id="L2112" rel="#L2112">2112</span>
<span id="L2113" rel="#L2113">2113</span>
<span id="L2114" rel="#L2114">2114</span>
<span id="L2115" rel="#L2115">2115</span>
<span id="L2116" rel="#L2116">2116</span>
<span id="L2117" rel="#L2117">2117</span>
<span id="L2118" rel="#L2118">2118</span>
<span id="L2119" rel="#L2119">2119</span>
<span id="L2120" rel="#L2120">2120</span>
<span id="L2121" rel="#L2121">2121</span>
<span id="L2122" rel="#L2122">2122</span>
<span id="L2123" rel="#L2123">2123</span>
<span id="L2124" rel="#L2124">2124</span>
<span id="L2125" rel="#L2125">2125</span>
<span id="L2126" rel="#L2126">2126</span>
<span id="L2127" rel="#L2127">2127</span>
<span id="L2128" rel="#L2128">2128</span>
<span id="L2129" rel="#L2129">2129</span>
<span id="L2130" rel="#L2130">2130</span>
<span id="L2131" rel="#L2131">2131</span>
<span id="L2132" rel="#L2132">2132</span>
<span id="L2133" rel="#L2133">2133</span>
<span id="L2134" rel="#L2134">2134</span>
<span id="L2135" rel="#L2135">2135</span>
<span id="L2136" rel="#L2136">2136</span>
<span id="L2137" rel="#L2137">2137</span>
<span id="L2138" rel="#L2138">2138</span>
<span id="L2139" rel="#L2139">2139</span>
<span id="L2140" rel="#L2140">2140</span>
<span id="L2141" rel="#L2141">2141</span>
<span id="L2142" rel="#L2142">2142</span>
<span id="L2143" rel="#L2143">2143</span>
<span id="L2144" rel="#L2144">2144</span>
<span id="L2145" rel="#L2145">2145</span>
<span id="L2146" rel="#L2146">2146</span>
<span id="L2147" rel="#L2147">2147</span>
<span id="L2148" rel="#L2148">2148</span>
<span id="L2149" rel="#L2149">2149</span>
<span id="L2150" rel="#L2150">2150</span>
<span id="L2151" rel="#L2151">2151</span>
<span id="L2152" rel="#L2152">2152</span>
<span id="L2153" rel="#L2153">2153</span>
<span id="L2154" rel="#L2154">2154</span>
<span id="L2155" rel="#L2155">2155</span>
<span id="L2156" rel="#L2156">2156</span>
<span id="L2157" rel="#L2157">2157</span>
<span id="L2158" rel="#L2158">2158</span>
<span id="L2159" rel="#L2159">2159</span>
<span id="L2160" rel="#L2160">2160</span>
<span id="L2161" rel="#L2161">2161</span>
<span id="L2162" rel="#L2162">2162</span>
<span id="L2163" rel="#L2163">2163</span>
<span id="L2164" rel="#L2164">2164</span>
<span id="L2165" rel="#L2165">2165</span>
<span id="L2166" rel="#L2166">2166</span>
<span id="L2167" rel="#L2167">2167</span>
<span id="L2168" rel="#L2168">2168</span>
<span id="L2169" rel="#L2169">2169</span>
<span id="L2170" rel="#L2170">2170</span>
<span id="L2171" rel="#L2171">2171</span>
<span id="L2172" rel="#L2172">2172</span>
<span id="L2173" rel="#L2173">2173</span>
<span id="L2174" rel="#L2174">2174</span>
<span id="L2175" rel="#L2175">2175</span>
<span id="L2176" rel="#L2176">2176</span>
<span id="L2177" rel="#L2177">2177</span>
<span id="L2178" rel="#L2178">2178</span>
<span id="L2179" rel="#L2179">2179</span>
<span id="L2180" rel="#L2180">2180</span>
<span id="L2181" rel="#L2181">2181</span>
<span id="L2182" rel="#L2182">2182</span>
<span id="L2183" rel="#L2183">2183</span>
<span id="L2184" rel="#L2184">2184</span>
<span id="L2185" rel="#L2185">2185</span>
<span id="L2186" rel="#L2186">2186</span>
<span id="L2187" rel="#L2187">2187</span>
<span id="L2188" rel="#L2188">2188</span>
<span id="L2189" rel="#L2189">2189</span>
<span id="L2190" rel="#L2190">2190</span>
<span id="L2191" rel="#L2191">2191</span>
<span id="L2192" rel="#L2192">2192</span>
<span id="L2193" rel="#L2193">2193</span>
<span id="L2194" rel="#L2194">2194</span>
<span id="L2195" rel="#L2195">2195</span>
<span id="L2196" rel="#L2196">2196</span>
<span id="L2197" rel="#L2197">2197</span>
<span id="L2198" rel="#L2198">2198</span>
<span id="L2199" rel="#L2199">2199</span>
<span id="L2200" rel="#L2200">2200</span>
<span id="L2201" rel="#L2201">2201</span>
<span id="L2202" rel="#L2202">2202</span>
<span id="L2203" rel="#L2203">2203</span>
<span id="L2204" rel="#L2204">2204</span>
<span id="L2205" rel="#L2205">2205</span>
<span id="L2206" rel="#L2206">2206</span>
<span id="L2207" rel="#L2207">2207</span>
<span id="L2208" rel="#L2208">2208</span>
<span id="L2209" rel="#L2209">2209</span>
<span id="L2210" rel="#L2210">2210</span>
<span id="L2211" rel="#L2211">2211</span>
<span id="L2212" rel="#L2212">2212</span>
<span id="L2213" rel="#L2213">2213</span>
<span id="L2214" rel="#L2214">2214</span>
<span id="L2215" rel="#L2215">2215</span>
<span id="L2216" rel="#L2216">2216</span>
<span id="L2217" rel="#L2217">2217</span>
<span id="L2218" rel="#L2218">2218</span>
<span id="L2219" rel="#L2219">2219</span>
<span id="L2220" rel="#L2220">2220</span>
<span id="L2221" rel="#L2221">2221</span>
<span id="L2222" rel="#L2222">2222</span>
<span id="L2223" rel="#L2223">2223</span>
<span id="L2224" rel="#L2224">2224</span>
<span id="L2225" rel="#L2225">2225</span>
<span id="L2226" rel="#L2226">2226</span>
<span id="L2227" rel="#L2227">2227</span>
<span id="L2228" rel="#L2228">2228</span>
<span id="L2229" rel="#L2229">2229</span>
<span id="L2230" rel="#L2230">2230</span>
<span id="L2231" rel="#L2231">2231</span>
<span id="L2232" rel="#L2232">2232</span>
<span id="L2233" rel="#L2233">2233</span>
<span id="L2234" rel="#L2234">2234</span>
<span id="L2235" rel="#L2235">2235</span>
<span id="L2236" rel="#L2236">2236</span>
<span id="L2237" rel="#L2237">2237</span>
<span id="L2238" rel="#L2238">2238</span>
<span id="L2239" rel="#L2239">2239</span>
<span id="L2240" rel="#L2240">2240</span>
<span id="L2241" rel="#L2241">2241</span>
<span id="L2242" rel="#L2242">2242</span>
<span id="L2243" rel="#L2243">2243</span>
<span id="L2244" rel="#L2244">2244</span>
<span id="L2245" rel="#L2245">2245</span>
<span id="L2246" rel="#L2246">2246</span>
<span id="L2247" rel="#L2247">2247</span>
<span id="L2248" rel="#L2248">2248</span>
<span id="L2249" rel="#L2249">2249</span>
<span id="L2250" rel="#L2250">2250</span>
<span id="L2251" rel="#L2251">2251</span>
<span id="L2252" rel="#L2252">2252</span>
<span id="L2253" rel="#L2253">2253</span>
<span id="L2254" rel="#L2254">2254</span>
<span id="L2255" rel="#L2255">2255</span>
<span id="L2256" rel="#L2256">2256</span>
<span id="L2257" rel="#L2257">2257</span>
<span id="L2258" rel="#L2258">2258</span>
<span id="L2259" rel="#L2259">2259</span>
<span id="L2260" rel="#L2260">2260</span>
<span id="L2261" rel="#L2261">2261</span>
<span id="L2262" rel="#L2262">2262</span>
<span id="L2263" rel="#L2263">2263</span>
<span id="L2264" rel="#L2264">2264</span>
<span id="L2265" rel="#L2265">2265</span>
<span id="L2266" rel="#L2266">2266</span>
<span id="L2267" rel="#L2267">2267</span>
<span id="L2268" rel="#L2268">2268</span>
<span id="L2269" rel="#L2269">2269</span>
<span id="L2270" rel="#L2270">2270</span>
<span id="L2271" rel="#L2271">2271</span>
<span id="L2272" rel="#L2272">2272</span>
<span id="L2273" rel="#L2273">2273</span>
<span id="L2274" rel="#L2274">2274</span>
<span id="L2275" rel="#L2275">2275</span>
<span id="L2276" rel="#L2276">2276</span>
<span id="L2277" rel="#L2277">2277</span>
<span id="L2278" rel="#L2278">2278</span>
<span id="L2279" rel="#L2279">2279</span>
<span id="L2280" rel="#L2280">2280</span>
<span id="L2281" rel="#L2281">2281</span>
<span id="L2282" rel="#L2282">2282</span>
<span id="L2283" rel="#L2283">2283</span>
<span id="L2284" rel="#L2284">2284</span>
<span id="L2285" rel="#L2285">2285</span>
<span id="L2286" rel="#L2286">2286</span>
<span id="L2287" rel="#L2287">2287</span>
<span id="L2288" rel="#L2288">2288</span>
<span id="L2289" rel="#L2289">2289</span>
<span id="L2290" rel="#L2290">2290</span>
<span id="L2291" rel="#L2291">2291</span>
<span id="L2292" rel="#L2292">2292</span>
<span id="L2293" rel="#L2293">2293</span>
<span id="L2294" rel="#L2294">2294</span>
<span id="L2295" rel="#L2295">2295</span>
<span id="L2296" rel="#L2296">2296</span>
<span id="L2297" rel="#L2297">2297</span>
<span id="L2298" rel="#L2298">2298</span>
<span id="L2299" rel="#L2299">2299</span>
<span id="L2300" rel="#L2300">2300</span>
<span id="L2301" rel="#L2301">2301</span>
<span id="L2302" rel="#L2302">2302</span>
<span id="L2303" rel="#L2303">2303</span>
<span id="L2304" rel="#L2304">2304</span>
<span id="L2305" rel="#L2305">2305</span>
<span id="L2306" rel="#L2306">2306</span>
<span id="L2307" rel="#L2307">2307</span>
<span id="L2308" rel="#L2308">2308</span>
<span id="L2309" rel="#L2309">2309</span>
<span id="L2310" rel="#L2310">2310</span>
<span id="L2311" rel="#L2311">2311</span>
<span id="L2312" rel="#L2312">2312</span>
<span id="L2313" rel="#L2313">2313</span>
<span id="L2314" rel="#L2314">2314</span>
<span id="L2315" rel="#L2315">2315</span>
<span id="L2316" rel="#L2316">2316</span>
<span id="L2317" rel="#L2317">2317</span>
<span id="L2318" rel="#L2318">2318</span>
<span id="L2319" rel="#L2319">2319</span>
<span id="L2320" rel="#L2320">2320</span>
<span id="L2321" rel="#L2321">2321</span>
<span id="L2322" rel="#L2322">2322</span>
<span id="L2323" rel="#L2323">2323</span>
<span id="L2324" rel="#L2324">2324</span>
<span id="L2325" rel="#L2325">2325</span>
<span id="L2326" rel="#L2326">2326</span>
<span id="L2327" rel="#L2327">2327</span>
<span id="L2328" rel="#L2328">2328</span>
<span id="L2329" rel="#L2329">2329</span>
<span id="L2330" rel="#L2330">2330</span>
<span id="L2331" rel="#L2331">2331</span>
<span id="L2332" rel="#L2332">2332</span>
<span id="L2333" rel="#L2333">2333</span>
<span id="L2334" rel="#L2334">2334</span>
<span id="L2335" rel="#L2335">2335</span>
<span id="L2336" rel="#L2336">2336</span>
<span id="L2337" rel="#L2337">2337</span>
<span id="L2338" rel="#L2338">2338</span>
<span id="L2339" rel="#L2339">2339</span>
<span id="L2340" rel="#L2340">2340</span>
<span id="L2341" rel="#L2341">2341</span>
<span id="L2342" rel="#L2342">2342</span>
<span id="L2343" rel="#L2343">2343</span>
<span id="L2344" rel="#L2344">2344</span>
<span id="L2345" rel="#L2345">2345</span>
<span id="L2346" rel="#L2346">2346</span>
<span id="L2347" rel="#L2347">2347</span>
<span id="L2348" rel="#L2348">2348</span>
<span id="L2349" rel="#L2349">2349</span>
<span id="L2350" rel="#L2350">2350</span>
<span id="L2351" rel="#L2351">2351</span>
<span id="L2352" rel="#L2352">2352</span>
<span id="L2353" rel="#L2353">2353</span>
<span id="L2354" rel="#L2354">2354</span>
<span id="L2355" rel="#L2355">2355</span>
<span id="L2356" rel="#L2356">2356</span>
<span id="L2357" rel="#L2357">2357</span>
<span id="L2358" rel="#L2358">2358</span>
<span id="L2359" rel="#L2359">2359</span>
<span id="L2360" rel="#L2360">2360</span>
<span id="L2361" rel="#L2361">2361</span>
<span id="L2362" rel="#L2362">2362</span>
<span id="L2363" rel="#L2363">2363</span>
<span id="L2364" rel="#L2364">2364</span>
<span id="L2365" rel="#L2365">2365</span>
<span id="L2366" rel="#L2366">2366</span>
<span id="L2367" rel="#L2367">2367</span>
<span id="L2368" rel="#L2368">2368</span>
<span id="L2369" rel="#L2369">2369</span>
<span id="L2370" rel="#L2370">2370</span>
<span id="L2371" rel="#L2371">2371</span>
<span id="L2372" rel="#L2372">2372</span>
<span id="L2373" rel="#L2373">2373</span>
<span id="L2374" rel="#L2374">2374</span>
<span id="L2375" rel="#L2375">2375</span>
<span id="L2376" rel="#L2376">2376</span>
<span id="L2377" rel="#L2377">2377</span>
<span id="L2378" rel="#L2378">2378</span>
<span id="L2379" rel="#L2379">2379</span>
<span id="L2380" rel="#L2380">2380</span>
<span id="L2381" rel="#L2381">2381</span>
<span id="L2382" rel="#L2382">2382</span>
<span id="L2383" rel="#L2383">2383</span>
<span id="L2384" rel="#L2384">2384</span>
<span id="L2385" rel="#L2385">2385</span>
<span id="L2386" rel="#L2386">2386</span>
<span id="L2387" rel="#L2387">2387</span>
<span id="L2388" rel="#L2388">2388</span>
<span id="L2389" rel="#L2389">2389</span>
<span id="L2390" rel="#L2390">2390</span>
<span id="L2391" rel="#L2391">2391</span>
<span id="L2392" rel="#L2392">2392</span>
<span id="L2393" rel="#L2393">2393</span>
<span id="L2394" rel="#L2394">2394</span>
<span id="L2395" rel="#L2395">2395</span>
<span id="L2396" rel="#L2396">2396</span>
<span id="L2397" rel="#L2397">2397</span>
<span id="L2398" rel="#L2398">2398</span>
<span id="L2399" rel="#L2399">2399</span>
<span id="L2400" rel="#L2400">2400</span>
<span id="L2401" rel="#L2401">2401</span>
<span id="L2402" rel="#L2402">2402</span>
<span id="L2403" rel="#L2403">2403</span>
<span id="L2404" rel="#L2404">2404</span>
<span id="L2405" rel="#L2405">2405</span>
<span id="L2406" rel="#L2406">2406</span>
<span id="L2407" rel="#L2407">2407</span>
<span id="L2408" rel="#L2408">2408</span>
<span id="L2409" rel="#L2409">2409</span>
<span id="L2410" rel="#L2410">2410</span>
<span id="L2411" rel="#L2411">2411</span>
<span id="L2412" rel="#L2412">2412</span>
<span id="L2413" rel="#L2413">2413</span>
<span id="L2414" rel="#L2414">2414</span>
<span id="L2415" rel="#L2415">2415</span>
<span id="L2416" rel="#L2416">2416</span>
<span id="L2417" rel="#L2417">2417</span>
<span id="L2418" rel="#L2418">2418</span>
<span id="L2419" rel="#L2419">2419</span>
<span id="L2420" rel="#L2420">2420</span>
<span id="L2421" rel="#L2421">2421</span>
<span id="L2422" rel="#L2422">2422</span>
<span id="L2423" rel="#L2423">2423</span>
<span id="L2424" rel="#L2424">2424</span>
<span id="L2425" rel="#L2425">2425</span>
<span id="L2426" rel="#L2426">2426</span>
<span id="L2427" rel="#L2427">2427</span>
<span id="L2428" rel="#L2428">2428</span>
<span id="L2429" rel="#L2429">2429</span>
<span id="L2430" rel="#L2430">2430</span>
<span id="L2431" rel="#L2431">2431</span>
<span id="L2432" rel="#L2432">2432</span>
<span id="L2433" rel="#L2433">2433</span>
<span id="L2434" rel="#L2434">2434</span>
<span id="L2435" rel="#L2435">2435</span>
<span id="L2436" rel="#L2436">2436</span>
<span id="L2437" rel="#L2437">2437</span>
<span id="L2438" rel="#L2438">2438</span>
<span id="L2439" rel="#L2439">2439</span>
<span id="L2440" rel="#L2440">2440</span>
<span id="L2441" rel="#L2441">2441</span>
<span id="L2442" rel="#L2442">2442</span>
<span id="L2443" rel="#L2443">2443</span>
<span id="L2444" rel="#L2444">2444</span>
<span id="L2445" rel="#L2445">2445</span>
<span id="L2446" rel="#L2446">2446</span>
<span id="L2447" rel="#L2447">2447</span>
<span id="L2448" rel="#L2448">2448</span>
<span id="L2449" rel="#L2449">2449</span>
<span id="L2450" rel="#L2450">2450</span>
<span id="L2451" rel="#L2451">2451</span>
<span id="L2452" rel="#L2452">2452</span>
<span id="L2453" rel="#L2453">2453</span>
<span id="L2454" rel="#L2454">2454</span>
<span id="L2455" rel="#L2455">2455</span>
<span id="L2456" rel="#L2456">2456</span>
<span id="L2457" rel="#L2457">2457</span>
<span id="L2458" rel="#L2458">2458</span>
<span id="L2459" rel="#L2459">2459</span>
<span id="L2460" rel="#L2460">2460</span>
<span id="L2461" rel="#L2461">2461</span>
<span id="L2462" rel="#L2462">2462</span>
<span id="L2463" rel="#L2463">2463</span>
<span id="L2464" rel="#L2464">2464</span>
<span id="L2465" rel="#L2465">2465</span>
<span id="L2466" rel="#L2466">2466</span>
<span id="L2467" rel="#L2467">2467</span>
<span id="L2468" rel="#L2468">2468</span>
<span id="L2469" rel="#L2469">2469</span>
<span id="L2470" rel="#L2470">2470</span>
<span id="L2471" rel="#L2471">2471</span>
<span id="L2472" rel="#L2472">2472</span>
<span id="L2473" rel="#L2473">2473</span>
<span id="L2474" rel="#L2474">2474</span>
<span id="L2475" rel="#L2475">2475</span>
<span id="L2476" rel="#L2476">2476</span>
<span id="L2477" rel="#L2477">2477</span>
<span id="L2478" rel="#L2478">2478</span>
<span id="L2479" rel="#L2479">2479</span>
<span id="L2480" rel="#L2480">2480</span>
<span id="L2481" rel="#L2481">2481</span>
<span id="L2482" rel="#L2482">2482</span>
<span id="L2483" rel="#L2483">2483</span>
<span id="L2484" rel="#L2484">2484</span>
<span id="L2485" rel="#L2485">2485</span>
<span id="L2486" rel="#L2486">2486</span>
<span id="L2487" rel="#L2487">2487</span>
<span id="L2488" rel="#L2488">2488</span>
<span id="L2489" rel="#L2489">2489</span>
<span id="L2490" rel="#L2490">2490</span>
<span id="L2491" rel="#L2491">2491</span>
<span id="L2492" rel="#L2492">2492</span>
<span id="L2493" rel="#L2493">2493</span>
<span id="L2494" rel="#L2494">2494</span>
<span id="L2495" rel="#L2495">2495</span>
<span id="L2496" rel="#L2496">2496</span>
<span id="L2497" rel="#L2497">2497</span>
<span id="L2498" rel="#L2498">2498</span>
<span id="L2499" rel="#L2499">2499</span>
<span id="L2500" rel="#L2500">2500</span>
<span id="L2501" rel="#L2501">2501</span>
<span id="L2502" rel="#L2502">2502</span>
<span id="L2503" rel="#L2503">2503</span>
<span id="L2504" rel="#L2504">2504</span>
<span id="L2505" rel="#L2505">2505</span>
<span id="L2506" rel="#L2506">2506</span>
<span id="L2507" rel="#L2507">2507</span>
<span id="L2508" rel="#L2508">2508</span>
<span id="L2509" rel="#L2509">2509</span>
<span id="L2510" rel="#L2510">2510</span>
<span id="L2511" rel="#L2511">2511</span>
<span id="L2512" rel="#L2512">2512</span>
<span id="L2513" rel="#L2513">2513</span>
<span id="L2514" rel="#L2514">2514</span>
<span id="L2515" rel="#L2515">2515</span>
<span id="L2516" rel="#L2516">2516</span>
<span id="L2517" rel="#L2517">2517</span>
<span id="L2518" rel="#L2518">2518</span>
<span id="L2519" rel="#L2519">2519</span>
<span id="L2520" rel="#L2520">2520</span>
<span id="L2521" rel="#L2521">2521</span>
<span id="L2522" rel="#L2522">2522</span>
<span id="L2523" rel="#L2523">2523</span>
<span id="L2524" rel="#L2524">2524</span>
<span id="L2525" rel="#L2525">2525</span>
<span id="L2526" rel="#L2526">2526</span>
<span id="L2527" rel="#L2527">2527</span>
<span id="L2528" rel="#L2528">2528</span>
<span id="L2529" rel="#L2529">2529</span>
<span id="L2530" rel="#L2530">2530</span>
<span id="L2531" rel="#L2531">2531</span>
<span id="L2532" rel="#L2532">2532</span>
<span id="L2533" rel="#L2533">2533</span>
<span id="L2534" rel="#L2534">2534</span>
<span id="L2535" rel="#L2535">2535</span>
<span id="L2536" rel="#L2536">2536</span>
<span id="L2537" rel="#L2537">2537</span>
<span id="L2538" rel="#L2538">2538</span>
<span id="L2539" rel="#L2539">2539</span>
<span id="L2540" rel="#L2540">2540</span>
<span id="L2541" rel="#L2541">2541</span>
<span id="L2542" rel="#L2542">2542</span>
<span id="L2543" rel="#L2543">2543</span>
<span id="L2544" rel="#L2544">2544</span>
<span id="L2545" rel="#L2545">2545</span>
<span id="L2546" rel="#L2546">2546</span>
<span id="L2547" rel="#L2547">2547</span>
<span id="L2548" rel="#L2548">2548</span>
<span id="L2549" rel="#L2549">2549</span>
<span id="L2550" rel="#L2550">2550</span>
<span id="L2551" rel="#L2551">2551</span>
<span id="L2552" rel="#L2552">2552</span>
<span id="L2553" rel="#L2553">2553</span>
<span id="L2554" rel="#L2554">2554</span>
<span id="L2555" rel="#L2555">2555</span>
<span id="L2556" rel="#L2556">2556</span>
<span id="L2557" rel="#L2557">2557</span>
<span id="L2558" rel="#L2558">2558</span>
<span id="L2559" rel="#L2559">2559</span>
<span id="L2560" rel="#L2560">2560</span>
<span id="L2561" rel="#L2561">2561</span>
<span id="L2562" rel="#L2562">2562</span>
<span id="L2563" rel="#L2563">2563</span>
<span id="L2564" rel="#L2564">2564</span>
<span id="L2565" rel="#L2565">2565</span>
<span id="L2566" rel="#L2566">2566</span>
<span id="L2567" rel="#L2567">2567</span>
<span id="L2568" rel="#L2568">2568</span>
<span id="L2569" rel="#L2569">2569</span>
<span id="L2570" rel="#L2570">2570</span>
<span id="L2571" rel="#L2571">2571</span>
<span id="L2572" rel="#L2572">2572</span>
<span id="L2573" rel="#L2573">2573</span>
<span id="L2574" rel="#L2574">2574</span>
<span id="L2575" rel="#L2575">2575</span>
<span id="L2576" rel="#L2576">2576</span>
<span id="L2577" rel="#L2577">2577</span>
<span id="L2578" rel="#L2578">2578</span>
<span id="L2579" rel="#L2579">2579</span>
<span id="L2580" rel="#L2580">2580</span>
<span id="L2581" rel="#L2581">2581</span>
<span id="L2582" rel="#L2582">2582</span>
<span id="L2583" rel="#L2583">2583</span>
<span id="L2584" rel="#L2584">2584</span>
<span id="L2585" rel="#L2585">2585</span>
<span id="L2586" rel="#L2586">2586</span>
<span id="L2587" rel="#L2587">2587</span>
<span id="L2588" rel="#L2588">2588</span>
<span id="L2589" rel="#L2589">2589</span>
<span id="L2590" rel="#L2590">2590</span>
<span id="L2591" rel="#L2591">2591</span>
<span id="L2592" rel="#L2592">2592</span>
<span id="L2593" rel="#L2593">2593</span>
<span id="L2594" rel="#L2594">2594</span>
<span id="L2595" rel="#L2595">2595</span>
<span id="L2596" rel="#L2596">2596</span>
<span id="L2597" rel="#L2597">2597</span>
<span id="L2598" rel="#L2598">2598</span>
<span id="L2599" rel="#L2599">2599</span>
<span id="L2600" rel="#L2600">2600</span>
<span id="L2601" rel="#L2601">2601</span>
<span id="L2602" rel="#L2602">2602</span>
<span id="L2603" rel="#L2603">2603</span>
<span id="L2604" rel="#L2604">2604</span>
<span id="L2605" rel="#L2605">2605</span>
<span id="L2606" rel="#L2606">2606</span>
<span id="L2607" rel="#L2607">2607</span>
<span id="L2608" rel="#L2608">2608</span>
<span id="L2609" rel="#L2609">2609</span>
<span id="L2610" rel="#L2610">2610</span>
<span id="L2611" rel="#L2611">2611</span>
<span id="L2612" rel="#L2612">2612</span>
<span id="L2613" rel="#L2613">2613</span>
<span id="L2614" rel="#L2614">2614</span>
<span id="L2615" rel="#L2615">2615</span>
<span id="L2616" rel="#L2616">2616</span>
<span id="L2617" rel="#L2617">2617</span>
<span id="L2618" rel="#L2618">2618</span>
<span id="L2619" rel="#L2619">2619</span>
<span id="L2620" rel="#L2620">2620</span>
<span id="L2621" rel="#L2621">2621</span>
<span id="L2622" rel="#L2622">2622</span>
<span id="L2623" rel="#L2623">2623</span>
<span id="L2624" rel="#L2624">2624</span>
<span id="L2625" rel="#L2625">2625</span>
<span id="L2626" rel="#L2626">2626</span>
<span id="L2627" rel="#L2627">2627</span>
<span id="L2628" rel="#L2628">2628</span>
<span id="L2629" rel="#L2629">2629</span>
<span id="L2630" rel="#L2630">2630</span>
<span id="L2631" rel="#L2631">2631</span>
<span id="L2632" rel="#L2632">2632</span>
<span id="L2633" rel="#L2633">2633</span>
<span id="L2634" rel="#L2634">2634</span>
<span id="L2635" rel="#L2635">2635</span>
<span id="L2636" rel="#L2636">2636</span>
<span id="L2637" rel="#L2637">2637</span>
<span id="L2638" rel="#L2638">2638</span>
<span id="L2639" rel="#L2639">2639</span>
<span id="L2640" rel="#L2640">2640</span>
<span id="L2641" rel="#L2641">2641</span>
<span id="L2642" rel="#L2642">2642</span>
<span id="L2643" rel="#L2643">2643</span>
<span id="L2644" rel="#L2644">2644</span>
<span id="L2645" rel="#L2645">2645</span>
<span id="L2646" rel="#L2646">2646</span>
<span id="L2647" rel="#L2647">2647</span>
<span id="L2648" rel="#L2648">2648</span>
<span id="L2649" rel="#L2649">2649</span>
<span id="L2650" rel="#L2650">2650</span>
<span id="L2651" rel="#L2651">2651</span>
<span id="L2652" rel="#L2652">2652</span>
<span id="L2653" rel="#L2653">2653</span>
<span id="L2654" rel="#L2654">2654</span>
<span id="L2655" rel="#L2655">2655</span>
<span id="L2656" rel="#L2656">2656</span>
<span id="L2657" rel="#L2657">2657</span>
<span id="L2658" rel="#L2658">2658</span>
<span id="L2659" rel="#L2659">2659</span>
<span id="L2660" rel="#L2660">2660</span>
<span id="L2661" rel="#L2661">2661</span>
<span id="L2662" rel="#L2662">2662</span>
<span id="L2663" rel="#L2663">2663</span>
<span id="L2664" rel="#L2664">2664</span>
<span id="L2665" rel="#L2665">2665</span>
<span id="L2666" rel="#L2666">2666</span>
<span id="L2667" rel="#L2667">2667</span>
<span id="L2668" rel="#L2668">2668</span>
<span id="L2669" rel="#L2669">2669</span>
<span id="L2670" rel="#L2670">2670</span>
<span id="L2671" rel="#L2671">2671</span>
<span id="L2672" rel="#L2672">2672</span>
<span id="L2673" rel="#L2673">2673</span>
<span id="L2674" rel="#L2674">2674</span>
<span id="L2675" rel="#L2675">2675</span>
<span id="L2676" rel="#L2676">2676</span>
<span id="L2677" rel="#L2677">2677</span>
<span id="L2678" rel="#L2678">2678</span>
<span id="L2679" rel="#L2679">2679</span>
<span id="L2680" rel="#L2680">2680</span>
<span id="L2681" rel="#L2681">2681</span>
<span id="L2682" rel="#L2682">2682</span>
<span id="L2683" rel="#L2683">2683</span>
<span id="L2684" rel="#L2684">2684</span>
<span id="L2685" rel="#L2685">2685</span>
<span id="L2686" rel="#L2686">2686</span>
<span id="L2687" rel="#L2687">2687</span>
<span id="L2688" rel="#L2688">2688</span>
<span id="L2689" rel="#L2689">2689</span>
<span id="L2690" rel="#L2690">2690</span>
<span id="L2691" rel="#L2691">2691</span>
<span id="L2692" rel="#L2692">2692</span>
<span id="L2693" rel="#L2693">2693</span>
<span id="L2694" rel="#L2694">2694</span>
<span id="L2695" rel="#L2695">2695</span>
<span id="L2696" rel="#L2696">2696</span>
<span id="L2697" rel="#L2697">2697</span>
<span id="L2698" rel="#L2698">2698</span>
<span id="L2699" rel="#L2699">2699</span>
<span id="L2700" rel="#L2700">2700</span>
<span id="L2701" rel="#L2701">2701</span>
<span id="L2702" rel="#L2702">2702</span>
<span id="L2703" rel="#L2703">2703</span>
<span id="L2704" rel="#L2704">2704</span>
<span id="L2705" rel="#L2705">2705</span>
<span id="L2706" rel="#L2706">2706</span>
<span id="L2707" rel="#L2707">2707</span>
<span id="L2708" rel="#L2708">2708</span>
<span id="L2709" rel="#L2709">2709</span>
<span id="L2710" rel="#L2710">2710</span>
<span id="L2711" rel="#L2711">2711</span>
<span id="L2712" rel="#L2712">2712</span>
<span id="L2713" rel="#L2713">2713</span>
<span id="L2714" rel="#L2714">2714</span>
<span id="L2715" rel="#L2715">2715</span>
<span id="L2716" rel="#L2716">2716</span>
<span id="L2717" rel="#L2717">2717</span>
<span id="L2718" rel="#L2718">2718</span>
<span id="L2719" rel="#L2719">2719</span>
<span id="L2720" rel="#L2720">2720</span>
<span id="L2721" rel="#L2721">2721</span>
<span id="L2722" rel="#L2722">2722</span>
<span id="L2723" rel="#L2723">2723</span>
<span id="L2724" rel="#L2724">2724</span>
<span id="L2725" rel="#L2725">2725</span>
<span id="L2726" rel="#L2726">2726</span>
<span id="L2727" rel="#L2727">2727</span>
<span id="L2728" rel="#L2728">2728</span>
<span id="L2729" rel="#L2729">2729</span>
<span id="L2730" rel="#L2730">2730</span>
<span id="L2731" rel="#L2731">2731</span>
<span id="L2732" rel="#L2732">2732</span>
<span id="L2733" rel="#L2733">2733</span>
<span id="L2734" rel="#L2734">2734</span>
<span id="L2735" rel="#L2735">2735</span>
<span id="L2736" rel="#L2736">2736</span>
<span id="L2737" rel="#L2737">2737</span>
<span id="L2738" rel="#L2738">2738</span>
<span id="L2739" rel="#L2739">2739</span>
<span id="L2740" rel="#L2740">2740</span>
<span id="L2741" rel="#L2741">2741</span>
<span id="L2742" rel="#L2742">2742</span>
<span id="L2743" rel="#L2743">2743</span>
<span id="L2744" rel="#L2744">2744</span>
<span id="L2745" rel="#L2745">2745</span>
<span id="L2746" rel="#L2746">2746</span>
<span id="L2747" rel="#L2747">2747</span>
<span id="L2748" rel="#L2748">2748</span>
<span id="L2749" rel="#L2749">2749</span>
<span id="L2750" rel="#L2750">2750</span>
<span id="L2751" rel="#L2751">2751</span>
<span id="L2752" rel="#L2752">2752</span>
<span id="L2753" rel="#L2753">2753</span>
<span id="L2754" rel="#L2754">2754</span>
<span id="L2755" rel="#L2755">2755</span>
<span id="L2756" rel="#L2756">2756</span>
<span id="L2757" rel="#L2757">2757</span>
<span id="L2758" rel="#L2758">2758</span>
<span id="L2759" rel="#L2759">2759</span>
<span id="L2760" rel="#L2760">2760</span>
<span id="L2761" rel="#L2761">2761</span>
<span id="L2762" rel="#L2762">2762</span>
<span id="L2763" rel="#L2763">2763</span>
<span id="L2764" rel="#L2764">2764</span>
<span id="L2765" rel="#L2765">2765</span>
<span id="L2766" rel="#L2766">2766</span>
<span id="L2767" rel="#L2767">2767</span>
<span id="L2768" rel="#L2768">2768</span>
<span id="L2769" rel="#L2769">2769</span>
<span id="L2770" rel="#L2770">2770</span>
<span id="L2771" rel="#L2771">2771</span>
<span id="L2772" rel="#L2772">2772</span>
<span id="L2773" rel="#L2773">2773</span>
<span id="L2774" rel="#L2774">2774</span>
<span id="L2775" rel="#L2775">2775</span>
<span id="L2776" rel="#L2776">2776</span>
<span id="L2777" rel="#L2777">2777</span>
<span id="L2778" rel="#L2778">2778</span>
<span id="L2779" rel="#L2779">2779</span>
<span id="L2780" rel="#L2780">2780</span>
<span id="L2781" rel="#L2781">2781</span>
<span id="L2782" rel="#L2782">2782</span>
<span id="L2783" rel="#L2783">2783</span>
<span id="L2784" rel="#L2784">2784</span>
<span id="L2785" rel="#L2785">2785</span>
<span id="L2786" rel="#L2786">2786</span>
<span id="L2787" rel="#L2787">2787</span>
<span id="L2788" rel="#L2788">2788</span>
<span id="L2789" rel="#L2789">2789</span>
<span id="L2790" rel="#L2790">2790</span>
<span id="L2791" rel="#L2791">2791</span>
<span id="L2792" rel="#L2792">2792</span>
<span id="L2793" rel="#L2793">2793</span>
<span id="L2794" rel="#L2794">2794</span>
<span id="L2795" rel="#L2795">2795</span>
<span id="L2796" rel="#L2796">2796</span>
<span id="L2797" rel="#L2797">2797</span>
<span id="L2798" rel="#L2798">2798</span>
<span id="L2799" rel="#L2799">2799</span>
<span id="L2800" rel="#L2800">2800</span>
<span id="L2801" rel="#L2801">2801</span>
<span id="L2802" rel="#L2802">2802</span>
<span id="L2803" rel="#L2803">2803</span>
<span id="L2804" rel="#L2804">2804</span>
<span id="L2805" rel="#L2805">2805</span>
<span id="L2806" rel="#L2806">2806</span>
<span id="L2807" rel="#L2807">2807</span>
<span id="L2808" rel="#L2808">2808</span>
<span id="L2809" rel="#L2809">2809</span>
<span id="L2810" rel="#L2810">2810</span>
<span id="L2811" rel="#L2811">2811</span>
<span id="L2812" rel="#L2812">2812</span>
<span id="L2813" rel="#L2813">2813</span>
<span id="L2814" rel="#L2814">2814</span>
<span id="L2815" rel="#L2815">2815</span>
<span id="L2816" rel="#L2816">2816</span>
<span id="L2817" rel="#L2817">2817</span>
<span id="L2818" rel="#L2818">2818</span>
<span id="L2819" rel="#L2819">2819</span>
<span id="L2820" rel="#L2820">2820</span>
<span id="L2821" rel="#L2821">2821</span>
<span id="L2822" rel="#L2822">2822</span>
<span id="L2823" rel="#L2823">2823</span>
<span id="L2824" rel="#L2824">2824</span>
<span id="L2825" rel="#L2825">2825</span>
<span id="L2826" rel="#L2826">2826</span>
<span id="L2827" rel="#L2827">2827</span>
<span id="L2828" rel="#L2828">2828</span>
<span id="L2829" rel="#L2829">2829</span>
<span id="L2830" rel="#L2830">2830</span>
<span id="L2831" rel="#L2831">2831</span>
<span id="L2832" rel="#L2832">2832</span>
<span id="L2833" rel="#L2833">2833</span>
<span id="L2834" rel="#L2834">2834</span>
<span id="L2835" rel="#L2835">2835</span>
<span id="L2836" rel="#L2836">2836</span>
<span id="L2837" rel="#L2837">2837</span>
<span id="L2838" rel="#L2838">2838</span>
<span id="L2839" rel="#L2839">2839</span>
<span id="L2840" rel="#L2840">2840</span>
<span id="L2841" rel="#L2841">2841</span>
<span id="L2842" rel="#L2842">2842</span>
<span id="L2843" rel="#L2843">2843</span>
<span id="L2844" rel="#L2844">2844</span>
<span id="L2845" rel="#L2845">2845</span>
<span id="L2846" rel="#L2846">2846</span>
<span id="L2847" rel="#L2847">2847</span>
<span id="L2848" rel="#L2848">2848</span>
<span id="L2849" rel="#L2849">2849</span>
<span id="L2850" rel="#L2850">2850</span>
<span id="L2851" rel="#L2851">2851</span>
<span id="L2852" rel="#L2852">2852</span>
<span id="L2853" rel="#L2853">2853</span>
<span id="L2854" rel="#L2854">2854</span>
<span id="L2855" rel="#L2855">2855</span>
<span id="L2856" rel="#L2856">2856</span>
<span id="L2857" rel="#L2857">2857</span>
<span id="L2858" rel="#L2858">2858</span>
<span id="L2859" rel="#L2859">2859</span>
<span id="L2860" rel="#L2860">2860</span>
<span id="L2861" rel="#L2861">2861</span>
<span id="L2862" rel="#L2862">2862</span>
<span id="L2863" rel="#L2863">2863</span>
<span id="L2864" rel="#L2864">2864</span>
<span id="L2865" rel="#L2865">2865</span>
<span id="L2866" rel="#L2866">2866</span>
<span id="L2867" rel="#L2867">2867</span>
<span id="L2868" rel="#L2868">2868</span>
<span id="L2869" rel="#L2869">2869</span>
<span id="L2870" rel="#L2870">2870</span>
<span id="L2871" rel="#L2871">2871</span>
<span id="L2872" rel="#L2872">2872</span>
<span id="L2873" rel="#L2873">2873</span>
<span id="L2874" rel="#L2874">2874</span>
<span id="L2875" rel="#L2875">2875</span>
<span id="L2876" rel="#L2876">2876</span>
<span id="L2877" rel="#L2877">2877</span>
<span id="L2878" rel="#L2878">2878</span>
<span id="L2879" rel="#L2879">2879</span>
<span id="L2880" rel="#L2880">2880</span>
<span id="L2881" rel="#L2881">2881</span>
<span id="L2882" rel="#L2882">2882</span>
<span id="L2883" rel="#L2883">2883</span>
<span id="L2884" rel="#L2884">2884</span>
<span id="L2885" rel="#L2885">2885</span>
<span id="L2886" rel="#L2886">2886</span>
<span id="L2887" rel="#L2887">2887</span>
<span id="L2888" rel="#L2888">2888</span>
<span id="L2889" rel="#L2889">2889</span>
<span id="L2890" rel="#L2890">2890</span>
<span id="L2891" rel="#L2891">2891</span>
<span id="L2892" rel="#L2892">2892</span>
<span id="L2893" rel="#L2893">2893</span>
<span id="L2894" rel="#L2894">2894</span>
<span id="L2895" rel="#L2895">2895</span>
<span id="L2896" rel="#L2896">2896</span>
<span id="L2897" rel="#L2897">2897</span>
<span id="L2898" rel="#L2898">2898</span>
<span id="L2899" rel="#L2899">2899</span>
<span id="L2900" rel="#L2900">2900</span>
<span id="L2901" rel="#L2901">2901</span>
<span id="L2902" rel="#L2902">2902</span>
<span id="L2903" rel="#L2903">2903</span>
<span id="L2904" rel="#L2904">2904</span>
<span id="L2905" rel="#L2905">2905</span>
<span id="L2906" rel="#L2906">2906</span>
<span id="L2907" rel="#L2907">2907</span>
<span id="L2908" rel="#L2908">2908</span>
<span id="L2909" rel="#L2909">2909</span>
<span id="L2910" rel="#L2910">2910</span>
<span id="L2911" rel="#L2911">2911</span>
<span id="L2912" rel="#L2912">2912</span>
<span id="L2913" rel="#L2913">2913</span>
<span id="L2914" rel="#L2914">2914</span>
<span id="L2915" rel="#L2915">2915</span>
<span id="L2916" rel="#L2916">2916</span>
<span id="L2917" rel="#L2917">2917</span>
<span id="L2918" rel="#L2918">2918</span>
<span id="L2919" rel="#L2919">2919</span>
<span id="L2920" rel="#L2920">2920</span>
<span id="L2921" rel="#L2921">2921</span>
<span id="L2922" rel="#L2922">2922</span>
<span id="L2923" rel="#L2923">2923</span>
<span id="L2924" rel="#L2924">2924</span>
<span id="L2925" rel="#L2925">2925</span>
<span id="L2926" rel="#L2926">2926</span>
<span id="L2927" rel="#L2927">2927</span>
<span id="L2928" rel="#L2928">2928</span>
<span id="L2929" rel="#L2929">2929</span>
<span id="L2930" rel="#L2930">2930</span>
<span id="L2931" rel="#L2931">2931</span>
<span id="L2932" rel="#L2932">2932</span>
<span id="L2933" rel="#L2933">2933</span>
<span id="L2934" rel="#L2934">2934</span>
<span id="L2935" rel="#L2935">2935</span>
<span id="L2936" rel="#L2936">2936</span>
<span id="L2937" rel="#L2937">2937</span>
<span id="L2938" rel="#L2938">2938</span>
<span id="L2939" rel="#L2939">2939</span>
<span id="L2940" rel="#L2940">2940</span>
<span id="L2941" rel="#L2941">2941</span>
<span id="L2942" rel="#L2942">2942</span>
<span id="L2943" rel="#L2943">2943</span>
<span id="L2944" rel="#L2944">2944</span>
<span id="L2945" rel="#L2945">2945</span>
<span id="L2946" rel="#L2946">2946</span>
<span id="L2947" rel="#L2947">2947</span>
<span id="L2948" rel="#L2948">2948</span>
<span id="L2949" rel="#L2949">2949</span>
<span id="L2950" rel="#L2950">2950</span>
<span id="L2951" rel="#L2951">2951</span>
<span id="L2952" rel="#L2952">2952</span>
<span id="L2953" rel="#L2953">2953</span>
<span id="L2954" rel="#L2954">2954</span>
<span id="L2955" rel="#L2955">2955</span>
<span id="L2956" rel="#L2956">2956</span>
<span id="L2957" rel="#L2957">2957</span>
<span id="L2958" rel="#L2958">2958</span>
<span id="L2959" rel="#L2959">2959</span>
<span id="L2960" rel="#L2960">2960</span>
<span id="L2961" rel="#L2961">2961</span>
<span id="L2962" rel="#L2962">2962</span>
<span id="L2963" rel="#L2963">2963</span>
<span id="L2964" rel="#L2964">2964</span>
<span id="L2965" rel="#L2965">2965</span>
<span id="L2966" rel="#L2966">2966</span>
<span id="L2967" rel="#L2967">2967</span>
<span id="L2968" rel="#L2968">2968</span>
<span id="L2969" rel="#L2969">2969</span>
<span id="L2970" rel="#L2970">2970</span>
<span id="L2971" rel="#L2971">2971</span>
<span id="L2972" rel="#L2972">2972</span>
<span id="L2973" rel="#L2973">2973</span>
<span id="L2974" rel="#L2974">2974</span>
<span id="L2975" rel="#L2975">2975</span>
<span id="L2976" rel="#L2976">2976</span>
<span id="L2977" rel="#L2977">2977</span>
<span id="L2978" rel="#L2978">2978</span>
<span id="L2979" rel="#L2979">2979</span>
<span id="L2980" rel="#L2980">2980</span>
<span id="L2981" rel="#L2981">2981</span>
<span id="L2982" rel="#L2982">2982</span>
<span id="L2983" rel="#L2983">2983</span>
<span id="L2984" rel="#L2984">2984</span>
<span id="L2985" rel="#L2985">2985</span>
<span id="L2986" rel="#L2986">2986</span>
<span id="L2987" rel="#L2987">2987</span>
<span id="L2988" rel="#L2988">2988</span>
<span id="L2989" rel="#L2989">2989</span>
<span id="L2990" rel="#L2990">2990</span>
<span id="L2991" rel="#L2991">2991</span>
<span id="L2992" rel="#L2992">2992</span>
<span id="L2993" rel="#L2993">2993</span>
<span id="L2994" rel="#L2994">2994</span>
<span id="L2995" rel="#L2995">2995</span>
<span id="L2996" rel="#L2996">2996</span>
<span id="L2997" rel="#L2997">2997</span>
<span id="L2998" rel="#L2998">2998</span>
<span id="L2999" rel="#L2999">2999</span>
<span id="L3000" rel="#L3000">3000</span>
<span id="L3001" rel="#L3001">3001</span>
<span id="L3002" rel="#L3002">3002</span>
<span id="L3003" rel="#L3003">3003</span>
<span id="L3004" rel="#L3004">3004</span>
<span id="L3005" rel="#L3005">3005</span>
<span id="L3006" rel="#L3006">3006</span>
<span id="L3007" rel="#L3007">3007</span>
<span id="L3008" rel="#L3008">3008</span>
<span id="L3009" rel="#L3009">3009</span>
<span id="L3010" rel="#L3010">3010</span>
<span id="L3011" rel="#L3011">3011</span>
<span id="L3012" rel="#L3012">3012</span>
<span id="L3013" rel="#L3013">3013</span>
<span id="L3014" rel="#L3014">3014</span>
<span id="L3015" rel="#L3015">3015</span>
<span id="L3016" rel="#L3016">3016</span>
<span id="L3017" rel="#L3017">3017</span>
<span id="L3018" rel="#L3018">3018</span>
<span id="L3019" rel="#L3019">3019</span>
<span id="L3020" rel="#L3020">3020</span>
<span id="L3021" rel="#L3021">3021</span>
<span id="L3022" rel="#L3022">3022</span>
<span id="L3023" rel="#L3023">3023</span>
<span id="L3024" rel="#L3024">3024</span>
<span id="L3025" rel="#L3025">3025</span>
<span id="L3026" rel="#L3026">3026</span>
<span id="L3027" rel="#L3027">3027</span>
<span id="L3028" rel="#L3028">3028</span>
<span id="L3029" rel="#L3029">3029</span>
<span id="L3030" rel="#L3030">3030</span>
<span id="L3031" rel="#L3031">3031</span>
<span id="L3032" rel="#L3032">3032</span>
<span id="L3033" rel="#L3033">3033</span>
<span id="L3034" rel="#L3034">3034</span>
<span id="L3035" rel="#L3035">3035</span>
<span id="L3036" rel="#L3036">3036</span>
<span id="L3037" rel="#L3037">3037</span>
<span id="L3038" rel="#L3038">3038</span>
<span id="L3039" rel="#L3039">3039</span>
<span id="L3040" rel="#L3040">3040</span>
<span id="L3041" rel="#L3041">3041</span>
<span id="L3042" rel="#L3042">3042</span>
<span id="L3043" rel="#L3043">3043</span>
<span id="L3044" rel="#L3044">3044</span>
<span id="L3045" rel="#L3045">3045</span>
<span id="L3046" rel="#L3046">3046</span>
<span id="L3047" rel="#L3047">3047</span>
<span id="L3048" rel="#L3048">3048</span>
<span id="L3049" rel="#L3049">3049</span>
<span id="L3050" rel="#L3050">3050</span>
<span id="L3051" rel="#L3051">3051</span>
<span id="L3052" rel="#L3052">3052</span>
<span id="L3053" rel="#L3053">3053</span>
<span id="L3054" rel="#L3054">3054</span>
<span id="L3055" rel="#L3055">3055</span>
<span id="L3056" rel="#L3056">3056</span>
<span id="L3057" rel="#L3057">3057</span>
<span id="L3058" rel="#L3058">3058</span>
<span id="L3059" rel="#L3059">3059</span>
<span id="L3060" rel="#L3060">3060</span>
<span id="L3061" rel="#L3061">3061</span>
<span id="L3062" rel="#L3062">3062</span>
<span id="L3063" rel="#L3063">3063</span>
<span id="L3064" rel="#L3064">3064</span>
<span id="L3065" rel="#L3065">3065</span>
<span id="L3066" rel="#L3066">3066</span>
<span id="L3067" rel="#L3067">3067</span>
<span id="L3068" rel="#L3068">3068</span>
<span id="L3069" rel="#L3069">3069</span>
<span id="L3070" rel="#L3070">3070</span>
<span id="L3071" rel="#L3071">3071</span>
<span id="L3072" rel="#L3072">3072</span>
<span id="L3073" rel="#L3073">3073</span>
<span id="L3074" rel="#L3074">3074</span>
<span id="L3075" rel="#L3075">3075</span>
<span id="L3076" rel="#L3076">3076</span>
<span id="L3077" rel="#L3077">3077</span>
<span id="L3078" rel="#L3078">3078</span>
<span id="L3079" rel="#L3079">3079</span>
<span id="L3080" rel="#L3080">3080</span>
<span id="L3081" rel="#L3081">3081</span>
<span id="L3082" rel="#L3082">3082</span>
<span id="L3083" rel="#L3083">3083</span>
<span id="L3084" rel="#L3084">3084</span>
<span id="L3085" rel="#L3085">3085</span>
<span id="L3086" rel="#L3086">3086</span>
<span id="L3087" rel="#L3087">3087</span>
<span id="L3088" rel="#L3088">3088</span>
<span id="L3089" rel="#L3089">3089</span>
<span id="L3090" rel="#L3090">3090</span>
<span id="L3091" rel="#L3091">3091</span>
<span id="L3092" rel="#L3092">3092</span>
<span id="L3093" rel="#L3093">3093</span>
<span id="L3094" rel="#L3094">3094</span>
<span id="L3095" rel="#L3095">3095</span>
<span id="L3096" rel="#L3096">3096</span>
<span id="L3097" rel="#L3097">3097</span>
<span id="L3098" rel="#L3098">3098</span>
<span id="L3099" rel="#L3099">3099</span>
<span id="L3100" rel="#L3100">3100</span>
<span id="L3101" rel="#L3101">3101</span>
<span id="L3102" rel="#L3102">3102</span>
<span id="L3103" rel="#L3103">3103</span>
<span id="L3104" rel="#L3104">3104</span>
<span id="L3105" rel="#L3105">3105</span>
<span id="L3106" rel="#L3106">3106</span>
<span id="L3107" rel="#L3107">3107</span>
<span id="L3108" rel="#L3108">3108</span>
<span id="L3109" rel="#L3109">3109</span>
<span id="L3110" rel="#L3110">3110</span>
<span id="L3111" rel="#L3111">3111</span>
<span id="L3112" rel="#L3112">3112</span>
<span id="L3113" rel="#L3113">3113</span>
<span id="L3114" rel="#L3114">3114</span>
<span id="L3115" rel="#L3115">3115</span>
<span id="L3116" rel="#L3116">3116</span>
<span id="L3117" rel="#L3117">3117</span>
<span id="L3118" rel="#L3118">3118</span>
<span id="L3119" rel="#L3119">3119</span>
<span id="L3120" rel="#L3120">3120</span>
<span id="L3121" rel="#L3121">3121</span>
<span id="L3122" rel="#L3122">3122</span>
<span id="L3123" rel="#L3123">3123</span>
<span id="L3124" rel="#L3124">3124</span>
<span id="L3125" rel="#L3125">3125</span>
<span id="L3126" rel="#L3126">3126</span>
<span id="L3127" rel="#L3127">3127</span>
<span id="L3128" rel="#L3128">3128</span>
<span id="L3129" rel="#L3129">3129</span>
<span id="L3130" rel="#L3130">3130</span>
<span id="L3131" rel="#L3131">3131</span>
<span id="L3132" rel="#L3132">3132</span>
<span id="L3133" rel="#L3133">3133</span>
<span id="L3134" rel="#L3134">3134</span>
<span id="L3135" rel="#L3135">3135</span>
<span id="L3136" rel="#L3136">3136</span>
<span id="L3137" rel="#L3137">3137</span>
<span id="L3138" rel="#L3138">3138</span>
<span id="L3139" rel="#L3139">3139</span>
<span id="L3140" rel="#L3140">3140</span>
<span id="L3141" rel="#L3141">3141</span>
<span id="L3142" rel="#L3142">3142</span>
<span id="L3143" rel="#L3143">3143</span>
<span id="L3144" rel="#L3144">3144</span>
<span id="L3145" rel="#L3145">3145</span>
<span id="L3146" rel="#L3146">3146</span>
<span id="L3147" rel="#L3147">3147</span>
<span id="L3148" rel="#L3148">3148</span>
<span id="L3149" rel="#L3149">3149</span>
<span id="L3150" rel="#L3150">3150</span>
<span id="L3151" rel="#L3151">3151</span>
<span id="L3152" rel="#L3152">3152</span>
<span id="L3153" rel="#L3153">3153</span>
<span id="L3154" rel="#L3154">3154</span>
<span id="L3155" rel="#L3155">3155</span>
<span id="L3156" rel="#L3156">3156</span>
<span id="L3157" rel="#L3157">3157</span>
<span id="L3158" rel="#L3158">3158</span>
<span id="L3159" rel="#L3159">3159</span>
<span id="L3160" rel="#L3160">3160</span>
<span id="L3161" rel="#L3161">3161</span>
<span id="L3162" rel="#L3162">3162</span>
<span id="L3163" rel="#L3163">3163</span>
<span id="L3164" rel="#L3164">3164</span>
<span id="L3165" rel="#L3165">3165</span>
<span id="L3166" rel="#L3166">3166</span>
<span id="L3167" rel="#L3167">3167</span>
<span id="L3168" rel="#L3168">3168</span>
<span id="L3169" rel="#L3169">3169</span>
<span id="L3170" rel="#L3170">3170</span>
<span id="L3171" rel="#L3171">3171</span>
<span id="L3172" rel="#L3172">3172</span>
<span id="L3173" rel="#L3173">3173</span>
<span id="L3174" rel="#L3174">3174</span>
<span id="L3175" rel="#L3175">3175</span>
<span id="L3176" rel="#L3176">3176</span>
<span id="L3177" rel="#L3177">3177</span>
<span id="L3178" rel="#L3178">3178</span>
<span id="L3179" rel="#L3179">3179</span>
<span id="L3180" rel="#L3180">3180</span>
<span id="L3181" rel="#L3181">3181</span>
<span id="L3182" rel="#L3182">3182</span>
<span id="L3183" rel="#L3183">3183</span>
<span id="L3184" rel="#L3184">3184</span>
<span id="L3185" rel="#L3185">3185</span>
<span id="L3186" rel="#L3186">3186</span>
<span id="L3187" rel="#L3187">3187</span>
<span id="L3188" rel="#L3188">3188</span>
<span id="L3189" rel="#L3189">3189</span>
<span id="L3190" rel="#L3190">3190</span>
<span id="L3191" rel="#L3191">3191</span>
<span id="L3192" rel="#L3192">3192</span>
<span id="L3193" rel="#L3193">3193</span>
<span id="L3194" rel="#L3194">3194</span>
<span id="L3195" rel="#L3195">3195</span>
<span id="L3196" rel="#L3196">3196</span>
<span id="L3197" rel="#L3197">3197</span>
<span id="L3198" rel="#L3198">3198</span>
<span id="L3199" rel="#L3199">3199</span>
<span id="L3200" rel="#L3200">3200</span>
<span id="L3201" rel="#L3201">3201</span>
<span id="L3202" rel="#L3202">3202</span>
<span id="L3203" rel="#L3203">3203</span>
<span id="L3204" rel="#L3204">3204</span>
<span id="L3205" rel="#L3205">3205</span>
<span id="L3206" rel="#L3206">3206</span>
<span id="L3207" rel="#L3207">3207</span>
<span id="L3208" rel="#L3208">3208</span>
<span id="L3209" rel="#L3209">3209</span>
<span id="L3210" rel="#L3210">3210</span>
<span id="L3211" rel="#L3211">3211</span>
<span id="L3212" rel="#L3212">3212</span>
<span id="L3213" rel="#L3213">3213</span>
<span id="L3214" rel="#L3214">3214</span>
<span id="L3215" rel="#L3215">3215</span>
<span id="L3216" rel="#L3216">3216</span>
<span id="L3217" rel="#L3217">3217</span>
<span id="L3218" rel="#L3218">3218</span>
<span id="L3219" rel="#L3219">3219</span>
<span id="L3220" rel="#L3220">3220</span>
<span id="L3221" rel="#L3221">3221</span>
<span id="L3222" rel="#L3222">3222</span>
<span id="L3223" rel="#L3223">3223</span>
<span id="L3224" rel="#L3224">3224</span>
<span id="L3225" rel="#L3225">3225</span>
<span id="L3226" rel="#L3226">3226</span>
<span id="L3227" rel="#L3227">3227</span>
<span id="L3228" rel="#L3228">3228</span>
<span id="L3229" rel="#L3229">3229</span>
<span id="L3230" rel="#L3230">3230</span>
<span id="L3231" rel="#L3231">3231</span>
<span id="L3232" rel="#L3232">3232</span>
<span id="L3233" rel="#L3233">3233</span>
<span id="L3234" rel="#L3234">3234</span>
<span id="L3235" rel="#L3235">3235</span>
<span id="L3236" rel="#L3236">3236</span>
<span id="L3237" rel="#L3237">3237</span>
<span id="L3238" rel="#L3238">3238</span>
<span id="L3239" rel="#L3239">3239</span>
<span id="L3240" rel="#L3240">3240</span>
<span id="L3241" rel="#L3241">3241</span>
<span id="L3242" rel="#L3242">3242</span>
<span id="L3243" rel="#L3243">3243</span>
<span id="L3244" rel="#L3244">3244</span>
<span id="L3245" rel="#L3245">3245</span>
<span id="L3246" rel="#L3246">3246</span>
<span id="L3247" rel="#L3247">3247</span>
<span id="L3248" rel="#L3248">3248</span>
<span id="L3249" rel="#L3249">3249</span>
<span id="L3250" rel="#L3250">3250</span>
<span id="L3251" rel="#L3251">3251</span>
<span id="L3252" rel="#L3252">3252</span>
<span id="L3253" rel="#L3253">3253</span>
<span id="L3254" rel="#L3254">3254</span>
<span id="L3255" rel="#L3255">3255</span>
<span id="L3256" rel="#L3256">3256</span>
<span id="L3257" rel="#L3257">3257</span>
<span id="L3258" rel="#L3258">3258</span>
<span id="L3259" rel="#L3259">3259</span>
<span id="L3260" rel="#L3260">3260</span>
<span id="L3261" rel="#L3261">3261</span>
<span id="L3262" rel="#L3262">3262</span>
<span id="L3263" rel="#L3263">3263</span>
<span id="L3264" rel="#L3264">3264</span>
<span id="L3265" rel="#L3265">3265</span>
<span id="L3266" rel="#L3266">3266</span>
<span id="L3267" rel="#L3267">3267</span>
<span id="L3268" rel="#L3268">3268</span>
<span id="L3269" rel="#L3269">3269</span>
<span id="L3270" rel="#L3270">3270</span>
<span id="L3271" rel="#L3271">3271</span>
<span id="L3272" rel="#L3272">3272</span>
<span id="L3273" rel="#L3273">3273</span>
<span id="L3274" rel="#L3274">3274</span>
<span id="L3275" rel="#L3275">3275</span>
<span id="L3276" rel="#L3276">3276</span>
<span id="L3277" rel="#L3277">3277</span>
<span id="L3278" rel="#L3278">3278</span>
<span id="L3279" rel="#L3279">3279</span>
<span id="L3280" rel="#L3280">3280</span>
<span id="L3281" rel="#L3281">3281</span>
<span id="L3282" rel="#L3282">3282</span>
<span id="L3283" rel="#L3283">3283</span>
<span id="L3284" rel="#L3284">3284</span>
<span id="L3285" rel="#L3285">3285</span>
<span id="L3286" rel="#L3286">3286</span>
<span id="L3287" rel="#L3287">3287</span>
<span id="L3288" rel="#L3288">3288</span>
<span id="L3289" rel="#L3289">3289</span>
<span id="L3290" rel="#L3290">3290</span>
<span id="L3291" rel="#L3291">3291</span>
<span id="L3292" rel="#L3292">3292</span>
<span id="L3293" rel="#L3293">3293</span>
<span id="L3294" rel="#L3294">3294</span>
<span id="L3295" rel="#L3295">3295</span>
<span id="L3296" rel="#L3296">3296</span>
<span id="L3297" rel="#L3297">3297</span>
<span id="L3298" rel="#L3298">3298</span>
<span id="L3299" rel="#L3299">3299</span>
<span id="L3300" rel="#L3300">3300</span>
<span id="L3301" rel="#L3301">3301</span>
<span id="L3302" rel="#L3302">3302</span>
<span id="L3303" rel="#L3303">3303</span>
<span id="L3304" rel="#L3304">3304</span>
<span id="L3305" rel="#L3305">3305</span>
<span id="L3306" rel="#L3306">3306</span>
<span id="L3307" rel="#L3307">3307</span>
<span id="L3308" rel="#L3308">3308</span>
<span id="L3309" rel="#L3309">3309</span>
<span id="L3310" rel="#L3310">3310</span>
<span id="L3311" rel="#L3311">3311</span>
<span id="L3312" rel="#L3312">3312</span>
<span id="L3313" rel="#L3313">3313</span>
<span id="L3314" rel="#L3314">3314</span>
<span id="L3315" rel="#L3315">3315</span>
<span id="L3316" rel="#L3316">3316</span>
<span id="L3317" rel="#L3317">3317</span>
<span id="L3318" rel="#L3318">3318</span>
<span id="L3319" rel="#L3319">3319</span>
<span id="L3320" rel="#L3320">3320</span>
<span id="L3321" rel="#L3321">3321</span>
<span id="L3322" rel="#L3322">3322</span>
<span id="L3323" rel="#L3323">3323</span>
<span id="L3324" rel="#L3324">3324</span>
<span id="L3325" rel="#L3325">3325</span>
<span id="L3326" rel="#L3326">3326</span>
<span id="L3327" rel="#L3327">3327</span>
<span id="L3328" rel="#L3328">3328</span>
<span id="L3329" rel="#L3329">3329</span>
<span id="L3330" rel="#L3330">3330</span>
<span id="L3331" rel="#L3331">3331</span>
<span id="L3332" rel="#L3332">3332</span>
<span id="L3333" rel="#L3333">3333</span>
<span id="L3334" rel="#L3334">3334</span>
<span id="L3335" rel="#L3335">3335</span>
<span id="L3336" rel="#L3336">3336</span>
<span id="L3337" rel="#L3337">3337</span>
<span id="L3338" rel="#L3338">3338</span>
<span id="L3339" rel="#L3339">3339</span>
<span id="L3340" rel="#L3340">3340</span>
<span id="L3341" rel="#L3341">3341</span>
<span id="L3342" rel="#L3342">3342</span>
<span id="L3343" rel="#L3343">3343</span>
<span id="L3344" rel="#L3344">3344</span>
<span id="L3345" rel="#L3345">3345</span>
<span id="L3346" rel="#L3346">3346</span>
<span id="L3347" rel="#L3347">3347</span>
<span id="L3348" rel="#L3348">3348</span>
<span id="L3349" rel="#L3349">3349</span>
<span id="L3350" rel="#L3350">3350</span>
<span id="L3351" rel="#L3351">3351</span>
<span id="L3352" rel="#L3352">3352</span>
<span id="L3353" rel="#L3353">3353</span>
<span id="L3354" rel="#L3354">3354</span>
<span id="L3355" rel="#L3355">3355</span>
<span id="L3356" rel="#L3356">3356</span>
<span id="L3357" rel="#L3357">3357</span>
<span id="L3358" rel="#L3358">3358</span>
<span id="L3359" rel="#L3359">3359</span>
<span id="L3360" rel="#L3360">3360</span>
<span id="L3361" rel="#L3361">3361</span>
<span id="L3362" rel="#L3362">3362</span>
<span id="L3363" rel="#L3363">3363</span>
<span id="L3364" rel="#L3364">3364</span>
<span id="L3365" rel="#L3365">3365</span>
<span id="L3366" rel="#L3366">3366</span>
<span id="L3367" rel="#L3367">3367</span>
<span id="L3368" rel="#L3368">3368</span>
<span id="L3369" rel="#L3369">3369</span>
<span id="L3370" rel="#L3370">3370</span>
<span id="L3371" rel="#L3371">3371</span>
<span id="L3372" rel="#L3372">3372</span>
<span id="L3373" rel="#L3373">3373</span>
<span id="L3374" rel="#L3374">3374</span>
<span id="L3375" rel="#L3375">3375</span>
<span id="L3376" rel="#L3376">3376</span>
<span id="L3377" rel="#L3377">3377</span>
<span id="L3378" rel="#L3378">3378</span>
<span id="L3379" rel="#L3379">3379</span>
<span id="L3380" rel="#L3380">3380</span>
<span id="L3381" rel="#L3381">3381</span>
<span id="L3382" rel="#L3382">3382</span>
<span id="L3383" rel="#L3383">3383</span>
<span id="L3384" rel="#L3384">3384</span>
<span id="L3385" rel="#L3385">3385</span>
<span id="L3386" rel="#L3386">3386</span>
<span id="L3387" rel="#L3387">3387</span>
<span id="L3388" rel="#L3388">3388</span>
<span id="L3389" rel="#L3389">3389</span>
<span id="L3390" rel="#L3390">3390</span>
<span id="L3391" rel="#L3391">3391</span>
<span id="L3392" rel="#L3392">3392</span>
<span id="L3393" rel="#L3393">3393</span>
<span id="L3394" rel="#L3394">3394</span>
<span id="L3395" rel="#L3395">3395</span>
<span id="L3396" rel="#L3396">3396</span>
<span id="L3397" rel="#L3397">3397</span>
<span id="L3398" rel="#L3398">3398</span>
<span id="L3399" rel="#L3399">3399</span>
<span id="L3400" rel="#L3400">3400</span>
<span id="L3401" rel="#L3401">3401</span>
<span id="L3402" rel="#L3402">3402</span>
<span id="L3403" rel="#L3403">3403</span>
<span id="L3404" rel="#L3404">3404</span>
<span id="L3405" rel="#L3405">3405</span>
<span id="L3406" rel="#L3406">3406</span>
<span id="L3407" rel="#L3407">3407</span>
<span id="L3408" rel="#L3408">3408</span>
<span id="L3409" rel="#L3409">3409</span>
<span id="L3410" rel="#L3410">3410</span>
<span id="L3411" rel="#L3411">3411</span>
<span id="L3412" rel="#L3412">3412</span>
<span id="L3413" rel="#L3413">3413</span>
<span id="L3414" rel="#L3414">3414</span>
<span id="L3415" rel="#L3415">3415</span>
<span id="L3416" rel="#L3416">3416</span>
<span id="L3417" rel="#L3417">3417</span>
<span id="L3418" rel="#L3418">3418</span>
<span id="L3419" rel="#L3419">3419</span>
<span id="L3420" rel="#L3420">3420</span>
<span id="L3421" rel="#L3421">3421</span>
<span id="L3422" rel="#L3422">3422</span>
<span id="L3423" rel="#L3423">3423</span>
<span id="L3424" rel="#L3424">3424</span>
<span id="L3425" rel="#L3425">3425</span>
<span id="L3426" rel="#L3426">3426</span>
<span id="L3427" rel="#L3427">3427</span>
<span id="L3428" rel="#L3428">3428</span>
<span id="L3429" rel="#L3429">3429</span>
<span id="L3430" rel="#L3430">3430</span>
<span id="L3431" rel="#L3431">3431</span>
<span id="L3432" rel="#L3432">3432</span>
<span id="L3433" rel="#L3433">3433</span>
<span id="L3434" rel="#L3434">3434</span>
<span id="L3435" rel="#L3435">3435</span>
<span id="L3436" rel="#L3436">3436</span>
<span id="L3437" rel="#L3437">3437</span>
<span id="L3438" rel="#L3438">3438</span>
<span id="L3439" rel="#L3439">3439</span>
<span id="L3440" rel="#L3440">3440</span>
<span id="L3441" rel="#L3441">3441</span>
<span id="L3442" rel="#L3442">3442</span>
<span id="L3443" rel="#L3443">3443</span>
<span id="L3444" rel="#L3444">3444</span>
<span id="L3445" rel="#L3445">3445</span>
<span id="L3446" rel="#L3446">3446</span>
<span id="L3447" rel="#L3447">3447</span>
<span id="L3448" rel="#L3448">3448</span>
<span id="L3449" rel="#L3449">3449</span>
<span id="L3450" rel="#L3450">3450</span>
<span id="L3451" rel="#L3451">3451</span>
<span id="L3452" rel="#L3452">3452</span>
<span id="L3453" rel="#L3453">3453</span>
<span id="L3454" rel="#L3454">3454</span>
<span id="L3455" rel="#L3455">3455</span>
<span id="L3456" rel="#L3456">3456</span>
<span id="L3457" rel="#L3457">3457</span>
<span id="L3458" rel="#L3458">3458</span>
<span id="L3459" rel="#L3459">3459</span>
<span id="L3460" rel="#L3460">3460</span>
<span id="L3461" rel="#L3461">3461</span>
<span id="L3462" rel="#L3462">3462</span>
<span id="L3463" rel="#L3463">3463</span>
<span id="L3464" rel="#L3464">3464</span>
<span id="L3465" rel="#L3465">3465</span>
<span id="L3466" rel="#L3466">3466</span>
<span id="L3467" rel="#L3467">3467</span>
<span id="L3468" rel="#L3468">3468</span>
<span id="L3469" rel="#L3469">3469</span>
<span id="L3470" rel="#L3470">3470</span>
<span id="L3471" rel="#L3471">3471</span>
<span id="L3472" rel="#L3472">3472</span>
<span id="L3473" rel="#L3473">3473</span>
<span id="L3474" rel="#L3474">3474</span>
<span id="L3475" rel="#L3475">3475</span>
<span id="L3476" rel="#L3476">3476</span>
<span id="L3477" rel="#L3477">3477</span>
<span id="L3478" rel="#L3478">3478</span>
<span id="L3479" rel="#L3479">3479</span>
<span id="L3480" rel="#L3480">3480</span>
<span id="L3481" rel="#L3481">3481</span>
<span id="L3482" rel="#L3482">3482</span>
<span id="L3483" rel="#L3483">3483</span>
<span id="L3484" rel="#L3484">3484</span>
<span id="L3485" rel="#L3485">3485</span>
<span id="L3486" rel="#L3486">3486</span>
<span id="L3487" rel="#L3487">3487</span>
<span id="L3488" rel="#L3488">3488</span>
<span id="L3489" rel="#L3489">3489</span>
<span id="L3490" rel="#L3490">3490</span>
<span id="L3491" rel="#L3491">3491</span>
<span id="L3492" rel="#L3492">3492</span>
<span id="L3493" rel="#L3493">3493</span>
<span id="L3494" rel="#L3494">3494</span>
<span id="L3495" rel="#L3495">3495</span>
<span id="L3496" rel="#L3496">3496</span>
<span id="L3497" rel="#L3497">3497</span>
<span id="L3498" rel="#L3498">3498</span>
<span id="L3499" rel="#L3499">3499</span>
<span id="L3500" rel="#L3500">3500</span>
<span id="L3501" rel="#L3501">3501</span>
<span id="L3502" rel="#L3502">3502</span>
<span id="L3503" rel="#L3503">3503</span>
<span id="L3504" rel="#L3504">3504</span>
<span id="L3505" rel="#L3505">3505</span>
<span id="L3506" rel="#L3506">3506</span>
<span id="L3507" rel="#L3507">3507</span>
<span id="L3508" rel="#L3508">3508</span>
<span id="L3509" rel="#L3509">3509</span>
<span id="L3510" rel="#L3510">3510</span>
<span id="L3511" rel="#L3511">3511</span>
<span id="L3512" rel="#L3512">3512</span>
<span id="L3513" rel="#L3513">3513</span>
<span id="L3514" rel="#L3514">3514</span>
<span id="L3515" rel="#L3515">3515</span>
<span id="L3516" rel="#L3516">3516</span>
<span id="L3517" rel="#L3517">3517</span>
<span id="L3518" rel="#L3518">3518</span>
<span id="L3519" rel="#L3519">3519</span>
<span id="L3520" rel="#L3520">3520</span>
<span id="L3521" rel="#L3521">3521</span>
<span id="L3522" rel="#L3522">3522</span>
<span id="L3523" rel="#L3523">3523</span>
<span id="L3524" rel="#L3524">3524</span>
<span id="L3525" rel="#L3525">3525</span>
<span id="L3526" rel="#L3526">3526</span>
<span id="L3527" rel="#L3527">3527</span>
<span id="L3528" rel="#L3528">3528</span>
<span id="L3529" rel="#L3529">3529</span>
<span id="L3530" rel="#L3530">3530</span>
<span id="L3531" rel="#L3531">3531</span>
<span id="L3532" rel="#L3532">3532</span>
<span id="L3533" rel="#L3533">3533</span>
<span id="L3534" rel="#L3534">3534</span>
<span id="L3535" rel="#L3535">3535</span>
<span id="L3536" rel="#L3536">3536</span>
<span id="L3537" rel="#L3537">3537</span>
<span id="L3538" rel="#L3538">3538</span>
<span id="L3539" rel="#L3539">3539</span>
<span id="L3540" rel="#L3540">3540</span>
<span id="L3541" rel="#L3541">3541</span>
<span id="L3542" rel="#L3542">3542</span>
<span id="L3543" rel="#L3543">3543</span>
<span id="L3544" rel="#L3544">3544</span>
<span id="L3545" rel="#L3545">3545</span>
<span id="L3546" rel="#L3546">3546</span>
<span id="L3547" rel="#L3547">3547</span>
<span id="L3548" rel="#L3548">3548</span>
<span id="L3549" rel="#L3549">3549</span>
<span id="L3550" rel="#L3550">3550</span>
<span id="L3551" rel="#L3551">3551</span>
<span id="L3552" rel="#L3552">3552</span>
<span id="L3553" rel="#L3553">3553</span>
<span id="L3554" rel="#L3554">3554</span>
<span id="L3555" rel="#L3555">3555</span>
<span id="L3556" rel="#L3556">3556</span>
<span id="L3557" rel="#L3557">3557</span>
<span id="L3558" rel="#L3558">3558</span>
<span id="L3559" rel="#L3559">3559</span>
<span id="L3560" rel="#L3560">3560</span>
<span id="L3561" rel="#L3561">3561</span>
<span id="L3562" rel="#L3562">3562</span>
<span id="L3563" rel="#L3563">3563</span>
<span id="L3564" rel="#L3564">3564</span>
<span id="L3565" rel="#L3565">3565</span>
<span id="L3566" rel="#L3566">3566</span>
<span id="L3567" rel="#L3567">3567</span>
<span id="L3568" rel="#L3568">3568</span>
<span id="L3569" rel="#L3569">3569</span>
<span id="L3570" rel="#L3570">3570</span>
<span id="L3571" rel="#L3571">3571</span>
<span id="L3572" rel="#L3572">3572</span>
<span id="L3573" rel="#L3573">3573</span>
<span id="L3574" rel="#L3574">3574</span>
<span id="L3575" rel="#L3575">3575</span>
<span id="L3576" rel="#L3576">3576</span>
<span id="L3577" rel="#L3577">3577</span>
<span id="L3578" rel="#L3578">3578</span>
<span id="L3579" rel="#L3579">3579</span>
<span id="L3580" rel="#L3580">3580</span>
<span id="L3581" rel="#L3581">3581</span>
<span id="L3582" rel="#L3582">3582</span>
<span id="L3583" rel="#L3583">3583</span>
<span id="L3584" rel="#L3584">3584</span>
<span id="L3585" rel="#L3585">3585</span>
<span id="L3586" rel="#L3586">3586</span>
<span id="L3587" rel="#L3587">3587</span>
<span id="L3588" rel="#L3588">3588</span>
<span id="L3589" rel="#L3589">3589</span>
<span id="L3590" rel="#L3590">3590</span>
<span id="L3591" rel="#L3591">3591</span>
<span id="L3592" rel="#L3592">3592</span>
<span id="L3593" rel="#L3593">3593</span>
<span id="L3594" rel="#L3594">3594</span>
<span id="L3595" rel="#L3595">3595</span>
<span id="L3596" rel="#L3596">3596</span>
<span id="L3597" rel="#L3597">3597</span>
<span id="L3598" rel="#L3598">3598</span>
<span id="L3599" rel="#L3599">3599</span>
<span id="L3600" rel="#L3600">3600</span>
<span id="L3601" rel="#L3601">3601</span>
<span id="L3602" rel="#L3602">3602</span>
<span id="L3603" rel="#L3603">3603</span>
<span id="L3604" rel="#L3604">3604</span>
<span id="L3605" rel="#L3605">3605</span>
<span id="L3606" rel="#L3606">3606</span>
<span id="L3607" rel="#L3607">3607</span>
<span id="L3608" rel="#L3608">3608</span>
<span id="L3609" rel="#L3609">3609</span>
<span id="L3610" rel="#L3610">3610</span>
<span id="L3611" rel="#L3611">3611</span>
<span id="L3612" rel="#L3612">3612</span>
<span id="L3613" rel="#L3613">3613</span>
<span id="L3614" rel="#L3614">3614</span>
<span id="L3615" rel="#L3615">3615</span>
<span id="L3616" rel="#L3616">3616</span>
<span id="L3617" rel="#L3617">3617</span>
<span id="L3618" rel="#L3618">3618</span>
<span id="L3619" rel="#L3619">3619</span>
<span id="L3620" rel="#L3620">3620</span>
<span id="L3621" rel="#L3621">3621</span>
<span id="L3622" rel="#L3622">3622</span>
<span id="L3623" rel="#L3623">3623</span>
<span id="L3624" rel="#L3624">3624</span>
<span id="L3625" rel="#L3625">3625</span>
<span id="L3626" rel="#L3626">3626</span>
<span id="L3627" rel="#L3627">3627</span>
<span id="L3628" rel="#L3628">3628</span>
<span id="L3629" rel="#L3629">3629</span>
<span id="L3630" rel="#L3630">3630</span>
<span id="L3631" rel="#L3631">3631</span>
<span id="L3632" rel="#L3632">3632</span>
<span id="L3633" rel="#L3633">3633</span>
<span id="L3634" rel="#L3634">3634</span>
<span id="L3635" rel="#L3635">3635</span>
<span id="L3636" rel="#L3636">3636</span>
<span id="L3637" rel="#L3637">3637</span>
<span id="L3638" rel="#L3638">3638</span>
<span id="L3639" rel="#L3639">3639</span>
<span id="L3640" rel="#L3640">3640</span>
<span id="L3641" rel="#L3641">3641</span>
<span id="L3642" rel="#L3642">3642</span>
<span id="L3643" rel="#L3643">3643</span>
<span id="L3644" rel="#L3644">3644</span>
<span id="L3645" rel="#L3645">3645</span>
<span id="L3646" rel="#L3646">3646</span>
<span id="L3647" rel="#L3647">3647</span>
<span id="L3648" rel="#L3648">3648</span>
<span id="L3649" rel="#L3649">3649</span>
<span id="L3650" rel="#L3650">3650</span>
<span id="L3651" rel="#L3651">3651</span>
<span id="L3652" rel="#L3652">3652</span>
<span id="L3653" rel="#L3653">3653</span>
<span id="L3654" rel="#L3654">3654</span>
<span id="L3655" rel="#L3655">3655</span>
<span id="L3656" rel="#L3656">3656</span>
<span id="L3657" rel="#L3657">3657</span>
<span id="L3658" rel="#L3658">3658</span>
<span id="L3659" rel="#L3659">3659</span>
<span id="L3660" rel="#L3660">3660</span>
<span id="L3661" rel="#L3661">3661</span>
<span id="L3662" rel="#L3662">3662</span>
<span id="L3663" rel="#L3663">3663</span>
<span id="L3664" rel="#L3664">3664</span>
<span id="L3665" rel="#L3665">3665</span>
<span id="L3666" rel="#L3666">3666</span>
<span id="L3667" rel="#L3667">3667</span>
<span id="L3668" rel="#L3668">3668</span>
<span id="L3669" rel="#L3669">3669</span>
<span id="L3670" rel="#L3670">3670</span>
<span id="L3671" rel="#L3671">3671</span>
<span id="L3672" rel="#L3672">3672</span>
<span id="L3673" rel="#L3673">3673</span>
<span id="L3674" rel="#L3674">3674</span>
<span id="L3675" rel="#L3675">3675</span>
<span id="L3676" rel="#L3676">3676</span>
<span id="L3677" rel="#L3677">3677</span>
<span id="L3678" rel="#L3678">3678</span>
<span id="L3679" rel="#L3679">3679</span>
<span id="L3680" rel="#L3680">3680</span>
<span id="L3681" rel="#L3681">3681</span>
<span id="L3682" rel="#L3682">3682</span>
<span id="L3683" rel="#L3683">3683</span>
<span id="L3684" rel="#L3684">3684</span>
<span id="L3685" rel="#L3685">3685</span>
<span id="L3686" rel="#L3686">3686</span>
<span id="L3687" rel="#L3687">3687</span>
<span id="L3688" rel="#L3688">3688</span>
<span id="L3689" rel="#L3689">3689</span>
<span id="L3690" rel="#L3690">3690</span>
<span id="L3691" rel="#L3691">3691</span>
<span id="L3692" rel="#L3692">3692</span>
<span id="L3693" rel="#L3693">3693</span>
<span id="L3694" rel="#L3694">3694</span>
<span id="L3695" rel="#L3695">3695</span>
<span id="L3696" rel="#L3696">3696</span>
<span id="L3697" rel="#L3697">3697</span>
<span id="L3698" rel="#L3698">3698</span>
<span id="L3699" rel="#L3699">3699</span>
<span id="L3700" rel="#L3700">3700</span>
<span id="L3701" rel="#L3701">3701</span>
<span id="L3702" rel="#L3702">3702</span>
<span id="L3703" rel="#L3703">3703</span>
<span id="L3704" rel="#L3704">3704</span>
<span id="L3705" rel="#L3705">3705</span>
<span id="L3706" rel="#L3706">3706</span>
<span id="L3707" rel="#L3707">3707</span>
<span id="L3708" rel="#L3708">3708</span>
<span id="L3709" rel="#L3709">3709</span>
<span id="L3710" rel="#L3710">3710</span>
<span id="L3711" rel="#L3711">3711</span>
<span id="L3712" rel="#L3712">3712</span>
<span id="L3713" rel="#L3713">3713</span>
<span id="L3714" rel="#L3714">3714</span>
<span id="L3715" rel="#L3715">3715</span>
<span id="L3716" rel="#L3716">3716</span>
<span id="L3717" rel="#L3717">3717</span>
<span id="L3718" rel="#L3718">3718</span>
<span id="L3719" rel="#L3719">3719</span>
<span id="L3720" rel="#L3720">3720</span>
<span id="L3721" rel="#L3721">3721</span>
<span id="L3722" rel="#L3722">3722</span>
<span id="L3723" rel="#L3723">3723</span>
<span id="L3724" rel="#L3724">3724</span>
<span id="L3725" rel="#L3725">3725</span>
<span id="L3726" rel="#L3726">3726</span>
<span id="L3727" rel="#L3727">3727</span>
<span id="L3728" rel="#L3728">3728</span>
<span id="L3729" rel="#L3729">3729</span>
<span id="L3730" rel="#L3730">3730</span>
<span id="L3731" rel="#L3731">3731</span>
<span id="L3732" rel="#L3732">3732</span>
<span id="L3733" rel="#L3733">3733</span>
<span id="L3734" rel="#L3734">3734</span>
<span id="L3735" rel="#L3735">3735</span>
<span id="L3736" rel="#L3736">3736</span>
<span id="L3737" rel="#L3737">3737</span>
<span id="L3738" rel="#L3738">3738</span>
<span id="L3739" rel="#L3739">3739</span>
<span id="L3740" rel="#L3740">3740</span>
<span id="L3741" rel="#L3741">3741</span>
<span id="L3742" rel="#L3742">3742</span>
<span id="L3743" rel="#L3743">3743</span>
<span id="L3744" rel="#L3744">3744</span>
<span id="L3745" rel="#L3745">3745</span>
<span id="L3746" rel="#L3746">3746</span>
<span id="L3747" rel="#L3747">3747</span>
<span id="L3748" rel="#L3748">3748</span>
<span id="L3749" rel="#L3749">3749</span>
<span id="L3750" rel="#L3750">3750</span>
<span id="L3751" rel="#L3751">3751</span>
<span id="L3752" rel="#L3752">3752</span>
<span id="L3753" rel="#L3753">3753</span>
<span id="L3754" rel="#L3754">3754</span>
<span id="L3755" rel="#L3755">3755</span>
<span id="L3756" rel="#L3756">3756</span>
<span id="L3757" rel="#L3757">3757</span>
<span id="L3758" rel="#L3758">3758</span>
<span id="L3759" rel="#L3759">3759</span>
<span id="L3760" rel="#L3760">3760</span>
<span id="L3761" rel="#L3761">3761</span>
<span id="L3762" rel="#L3762">3762</span>
<span id="L3763" rel="#L3763">3763</span>
<span id="L3764" rel="#L3764">3764</span>
<span id="L3765" rel="#L3765">3765</span>
<span id="L3766" rel="#L3766">3766</span>
<span id="L3767" rel="#L3767">3767</span>
<span id="L3768" rel="#L3768">3768</span>
<span id="L3769" rel="#L3769">3769</span>
<span id="L3770" rel="#L3770">3770</span>
<span id="L3771" rel="#L3771">3771</span>
<span id="L3772" rel="#L3772">3772</span>
<span id="L3773" rel="#L3773">3773</span>
<span id="L3774" rel="#L3774">3774</span>
<span id="L3775" rel="#L3775">3775</span>
<span id="L3776" rel="#L3776">3776</span>
<span id="L3777" rel="#L3777">3777</span>
<span id="L3778" rel="#L3778">3778</span>
<span id="L3779" rel="#L3779">3779</span>
<span id="L3780" rel="#L3780">3780</span>
<span id="L3781" rel="#L3781">3781</span>
<span id="L3782" rel="#L3782">3782</span>
<span id="L3783" rel="#L3783">3783</span>
<span id="L3784" rel="#L3784">3784</span>
<span id="L3785" rel="#L3785">3785</span>
<span id="L3786" rel="#L3786">3786</span>
<span id="L3787" rel="#L3787">3787</span>
<span id="L3788" rel="#L3788">3788</span>
<span id="L3789" rel="#L3789">3789</span>
<span id="L3790" rel="#L3790">3790</span>
<span id="L3791" rel="#L3791">3791</span>
<span id="L3792" rel="#L3792">3792</span>
<span id="L3793" rel="#L3793">3793</span>
<span id="L3794" rel="#L3794">3794</span>
<span id="L3795" rel="#L3795">3795</span>
<span id="L3796" rel="#L3796">3796</span>
<span id="L3797" rel="#L3797">3797</span>
<span id="L3798" rel="#L3798">3798</span>
<span id="L3799" rel="#L3799">3799</span>
<span id="L3800" rel="#L3800">3800</span>
<span id="L3801" rel="#L3801">3801</span>
<span id="L3802" rel="#L3802">3802</span>
<span id="L3803" rel="#L3803">3803</span>
<span id="L3804" rel="#L3804">3804</span>
<span id="L3805" rel="#L3805">3805</span>
<span id="L3806" rel="#L3806">3806</span>
<span id="L3807" rel="#L3807">3807</span>
<span id="L3808" rel="#L3808">3808</span>
<span id="L3809" rel="#L3809">3809</span>
<span id="L3810" rel="#L3810">3810</span>
<span id="L3811" rel="#L3811">3811</span>
<span id="L3812" rel="#L3812">3812</span>
<span id="L3813" rel="#L3813">3813</span>
<span id="L3814" rel="#L3814">3814</span>
<span id="L3815" rel="#L3815">3815</span>
<span id="L3816" rel="#L3816">3816</span>
<span id="L3817" rel="#L3817">3817</span>
<span id="L3818" rel="#L3818">3818</span>
<span id="L3819" rel="#L3819">3819</span>
<span id="L3820" rel="#L3820">3820</span>
<span id="L3821" rel="#L3821">3821</span>
<span id="L3822" rel="#L3822">3822</span>
<span id="L3823" rel="#L3823">3823</span>
<span id="L3824" rel="#L3824">3824</span>
<span id="L3825" rel="#L3825">3825</span>
<span id="L3826" rel="#L3826">3826</span>
<span id="L3827" rel="#L3827">3827</span>
<span id="L3828" rel="#L3828">3828</span>
<span id="L3829" rel="#L3829">3829</span>
<span id="L3830" rel="#L3830">3830</span>
<span id="L3831" rel="#L3831">3831</span>
<span id="L3832" rel="#L3832">3832</span>
<span id="L3833" rel="#L3833">3833</span>
<span id="L3834" rel="#L3834">3834</span>
<span id="L3835" rel="#L3835">3835</span>
<span id="L3836" rel="#L3836">3836</span>
<span id="L3837" rel="#L3837">3837</span>
<span id="L3838" rel="#L3838">3838</span>
<span id="L3839" rel="#L3839">3839</span>
<span id="L3840" rel="#L3840">3840</span>
<span id="L3841" rel="#L3841">3841</span>
<span id="L3842" rel="#L3842">3842</span>
<span id="L3843" rel="#L3843">3843</span>
<span id="L3844" rel="#L3844">3844</span>
<span id="L3845" rel="#L3845">3845</span>
<span id="L3846" rel="#L3846">3846</span>
<span id="L3847" rel="#L3847">3847</span>
<span id="L3848" rel="#L3848">3848</span>
<span id="L3849" rel="#L3849">3849</span>
<span id="L3850" rel="#L3850">3850</span>
<span id="L3851" rel="#L3851">3851</span>
<span id="L3852" rel="#L3852">3852</span>
<span id="L3853" rel="#L3853">3853</span>
<span id="L3854" rel="#L3854">3854</span>
<span id="L3855" rel="#L3855">3855</span>
<span id="L3856" rel="#L3856">3856</span>
<span id="L3857" rel="#L3857">3857</span>
<span id="L3858" rel="#L3858">3858</span>
<span id="L3859" rel="#L3859">3859</span>
<span id="L3860" rel="#L3860">3860</span>
<span id="L3861" rel="#L3861">3861</span>
<span id="L3862" rel="#L3862">3862</span>
<span id="L3863" rel="#L3863">3863</span>
<span id="L3864" rel="#L3864">3864</span>
<span id="L3865" rel="#L3865">3865</span>
<span id="L3866" rel="#L3866">3866</span>
<span id="L3867" rel="#L3867">3867</span>
<span id="L3868" rel="#L3868">3868</span>
<span id="L3869" rel="#L3869">3869</span>
<span id="L3870" rel="#L3870">3870</span>
<span id="L3871" rel="#L3871">3871</span>
<span id="L3872" rel="#L3872">3872</span>
<span id="L3873" rel="#L3873">3873</span>
<span id="L3874" rel="#L3874">3874</span>
<span id="L3875" rel="#L3875">3875</span>
<span id="L3876" rel="#L3876">3876</span>
<span id="L3877" rel="#L3877">3877</span>
<span id="L3878" rel="#L3878">3878</span>
<span id="L3879" rel="#L3879">3879</span>
<span id="L3880" rel="#L3880">3880</span>
<span id="L3881" rel="#L3881">3881</span>
<span id="L3882" rel="#L3882">3882</span>
<span id="L3883" rel="#L3883">3883</span>
<span id="L3884" rel="#L3884">3884</span>
<span id="L3885" rel="#L3885">3885</span>
<span id="L3886" rel="#L3886">3886</span>
<span id="L3887" rel="#L3887">3887</span>
<span id="L3888" rel="#L3888">3888</span>
<span id="L3889" rel="#L3889">3889</span>
<span id="L3890" rel="#L3890">3890</span>
<span id="L3891" rel="#L3891">3891</span>
<span id="L3892" rel="#L3892">3892</span>
<span id="L3893" rel="#L3893">3893</span>
<span id="L3894" rel="#L3894">3894</span>
<span id="L3895" rel="#L3895">3895</span>
<span id="L3896" rel="#L3896">3896</span>
<span id="L3897" rel="#L3897">3897</span>
<span id="L3898" rel="#L3898">3898</span>
<span id="L3899" rel="#L3899">3899</span>
<span id="L3900" rel="#L3900">3900</span>
<span id="L3901" rel="#L3901">3901</span>
<span id="L3902" rel="#L3902">3902</span>
<span id="L3903" rel="#L3903">3903</span>
<span id="L3904" rel="#L3904">3904</span>
<span id="L3905" rel="#L3905">3905</span>
<span id="L3906" rel="#L3906">3906</span>
<span id="L3907" rel="#L3907">3907</span>
<span id="L3908" rel="#L3908">3908</span>
<span id="L3909" rel="#L3909">3909</span>
<span id="L3910" rel="#L3910">3910</span>
<span id="L3911" rel="#L3911">3911</span>
<span id="L3912" rel="#L3912">3912</span>
<span id="L3913" rel="#L3913">3913</span>
<span id="L3914" rel="#L3914">3914</span>
<span id="L3915" rel="#L3915">3915</span>
<span id="L3916" rel="#L3916">3916</span>
<span id="L3917" rel="#L3917">3917</span>
<span id="L3918" rel="#L3918">3918</span>
<span id="L3919" rel="#L3919">3919</span>
<span id="L3920" rel="#L3920">3920</span>
<span id="L3921" rel="#L3921">3921</span>
<span id="L3922" rel="#L3922">3922</span>
<span id="L3923" rel="#L3923">3923</span>
<span id="L3924" rel="#L3924">3924</span>
<span id="L3925" rel="#L3925">3925</span>
<span id="L3926" rel="#L3926">3926</span>
<span id="L3927" rel="#L3927">3927</span>
<span id="L3928" rel="#L3928">3928</span>
<span id="L3929" rel="#L3929">3929</span>
<span id="L3930" rel="#L3930">3930</span>
<span id="L3931" rel="#L3931">3931</span>
<span id="L3932" rel="#L3932">3932</span>
<span id="L3933" rel="#L3933">3933</span>
<span id="L3934" rel="#L3934">3934</span>
<span id="L3935" rel="#L3935">3935</span>
<span id="L3936" rel="#L3936">3936</span>
<span id="L3937" rel="#L3937">3937</span>
<span id="L3938" rel="#L3938">3938</span>
<span id="L3939" rel="#L3939">3939</span>
<span id="L3940" rel="#L3940">3940</span>
<span id="L3941" rel="#L3941">3941</span>
<span id="L3942" rel="#L3942">3942</span>
<span id="L3943" rel="#L3943">3943</span>
<span id="L3944" rel="#L3944">3944</span>
<span id="L3945" rel="#L3945">3945</span>
<span id="L3946" rel="#L3946">3946</span>
<span id="L3947" rel="#L3947">3947</span>
<span id="L3948" rel="#L3948">3948</span>
<span id="L3949" rel="#L3949">3949</span>
<span id="L3950" rel="#L3950">3950</span>
<span id="L3951" rel="#L3951">3951</span>
<span id="L3952" rel="#L3952">3952</span>
<span id="L3953" rel="#L3953">3953</span>
<span id="L3954" rel="#L3954">3954</span>
<span id="L3955" rel="#L3955">3955</span>
<span id="L3956" rel="#L3956">3956</span>
<span id="L3957" rel="#L3957">3957</span>
<span id="L3958" rel="#L3958">3958</span>
<span id="L3959" rel="#L3959">3959</span>
<span id="L3960" rel="#L3960">3960</span>
<span id="L3961" rel="#L3961">3961</span>
<span id="L3962" rel="#L3962">3962</span>
<span id="L3963" rel="#L3963">3963</span>
<span id="L3964" rel="#L3964">3964</span>
<span id="L3965" rel="#L3965">3965</span>
<span id="L3966" rel="#L3966">3966</span>
<span id="L3967" rel="#L3967">3967</span>
<span id="L3968" rel="#L3968">3968</span>
<span id="L3969" rel="#L3969">3969</span>
<span id="L3970" rel="#L3970">3970</span>
<span id="L3971" rel="#L3971">3971</span>
<span id="L3972" rel="#L3972">3972</span>
<span id="L3973" rel="#L3973">3973</span>
<span id="L3974" rel="#L3974">3974</span>
<span id="L3975" rel="#L3975">3975</span>
<span id="L3976" rel="#L3976">3976</span>
<span id="L3977" rel="#L3977">3977</span>
<span id="L3978" rel="#L3978">3978</span>
<span id="L3979" rel="#L3979">3979</span>
<span id="L3980" rel="#L3980">3980</span>
<span id="L3981" rel="#L3981">3981</span>
<span id="L3982" rel="#L3982">3982</span>
<span id="L3983" rel="#L3983">3983</span>
<span id="L3984" rel="#L3984">3984</span>
<span id="L3985" rel="#L3985">3985</span>
<span id="L3986" rel="#L3986">3986</span>
<span id="L3987" rel="#L3987">3987</span>
<span id="L3988" rel="#L3988">3988</span>
<span id="L3989" rel="#L3989">3989</span>
<span id="L3990" rel="#L3990">3990</span>
<span id="L3991" rel="#L3991">3991</span>
<span id="L3992" rel="#L3992">3992</span>
<span id="L3993" rel="#L3993">3993</span>
<span id="L3994" rel="#L3994">3994</span>
<span id="L3995" rel="#L3995">3995</span>
<span id="L3996" rel="#L3996">3996</span>
<span id="L3997" rel="#L3997">3997</span>
<span id="L3998" rel="#L3998">3998</span>
<span id="L3999" rel="#L3999">3999</span>
<span id="L4000" rel="#L4000">4000</span>
<span id="L4001" rel="#L4001">4001</span>
<span id="L4002" rel="#L4002">4002</span>
<span id="L4003" rel="#L4003">4003</span>
<span id="L4004" rel="#L4004">4004</span>
<span id="L4005" rel="#L4005">4005</span>
<span id="L4006" rel="#L4006">4006</span>
<span id="L4007" rel="#L4007">4007</span>
<span id="L4008" rel="#L4008">4008</span>
<span id="L4009" rel="#L4009">4009</span>
<span id="L4010" rel="#L4010">4010</span>
<span id="L4011" rel="#L4011">4011</span>
<span id="L4012" rel="#L4012">4012</span>
<span id="L4013" rel="#L4013">4013</span>
<span id="L4014" rel="#L4014">4014</span>
<span id="L4015" rel="#L4015">4015</span>
<span id="L4016" rel="#L4016">4016</span>
<span id="L4017" rel="#L4017">4017</span>
<span id="L4018" rel="#L4018">4018</span>
<span id="L4019" rel="#L4019">4019</span>
<span id="L4020" rel="#L4020">4020</span>
<span id="L4021" rel="#L4021">4021</span>
<span id="L4022" rel="#L4022">4022</span>
<span id="L4023" rel="#L4023">4023</span>
<span id="L4024" rel="#L4024">4024</span>
<span id="L4025" rel="#L4025">4025</span>
<span id="L4026" rel="#L4026">4026</span>
<span id="L4027" rel="#L4027">4027</span>
<span id="L4028" rel="#L4028">4028</span>
<span id="L4029" rel="#L4029">4029</span>
<span id="L4030" rel="#L4030">4030</span>
<span id="L4031" rel="#L4031">4031</span>
<span id="L4032" rel="#L4032">4032</span>
<span id="L4033" rel="#L4033">4033</span>
<span id="L4034" rel="#L4034">4034</span>
<span id="L4035" rel="#L4035">4035</span>
<span id="L4036" rel="#L4036">4036</span>
<span id="L4037" rel="#L4037">4037</span>
<span id="L4038" rel="#L4038">4038</span>
<span id="L4039" rel="#L4039">4039</span>
<span id="L4040" rel="#L4040">4040</span>
<span id="L4041" rel="#L4041">4041</span>
<span id="L4042" rel="#L4042">4042</span>
<span id="L4043" rel="#L4043">4043</span>
<span id="L4044" rel="#L4044">4044</span>
<span id="L4045" rel="#L4045">4045</span>
<span id="L4046" rel="#L4046">4046</span>
<span id="L4047" rel="#L4047">4047</span>
<span id="L4048" rel="#L4048">4048</span>
<span id="L4049" rel="#L4049">4049</span>
<span id="L4050" rel="#L4050">4050</span>
<span id="L4051" rel="#L4051">4051</span>
<span id="L4052" rel="#L4052">4052</span>
<span id="L4053" rel="#L4053">4053</span>
<span id="L4054" rel="#L4054">4054</span>
<span id="L4055" rel="#L4055">4055</span>
<span id="L4056" rel="#L4056">4056</span>
<span id="L4057" rel="#L4057">4057</span>
<span id="L4058" rel="#L4058">4058</span>
<span id="L4059" rel="#L4059">4059</span>
<span id="L4060" rel="#L4060">4060</span>
<span id="L4061" rel="#L4061">4061</span>
<span id="L4062" rel="#L4062">4062</span>
<span id="L4063" rel="#L4063">4063</span>
<span id="L4064" rel="#L4064">4064</span>
<span id="L4065" rel="#L4065">4065</span>
<span id="L4066" rel="#L4066">4066</span>
<span id="L4067" rel="#L4067">4067</span>
<span id="L4068" rel="#L4068">4068</span>
<span id="L4069" rel="#L4069">4069</span>
<span id="L4070" rel="#L4070">4070</span>
<span id="L4071" rel="#L4071">4071</span>
<span id="L4072" rel="#L4072">4072</span>
<span id="L4073" rel="#L4073">4073</span>
<span id="L4074" rel="#L4074">4074</span>
<span id="L4075" rel="#L4075">4075</span>
<span id="L4076" rel="#L4076">4076</span>
<span id="L4077" rel="#L4077">4077</span>
<span id="L4078" rel="#L4078">4078</span>
<span id="L4079" rel="#L4079">4079</span>
<span id="L4080" rel="#L4080">4080</span>
<span id="L4081" rel="#L4081">4081</span>
<span id="L4082" rel="#L4082">4082</span>
<span id="L4083" rel="#L4083">4083</span>
<span id="L4084" rel="#L4084">4084</span>
<span id="L4085" rel="#L4085">4085</span>
<span id="L4086" rel="#L4086">4086</span>
<span id="L4087" rel="#L4087">4087</span>
<span id="L4088" rel="#L4088">4088</span>
<span id="L4089" rel="#L4089">4089</span>
<span id="L4090" rel="#L4090">4090</span>
<span id="L4091" rel="#L4091">4091</span>
<span id="L4092" rel="#L4092">4092</span>
<span id="L4093" rel="#L4093">4093</span>
<span id="L4094" rel="#L4094">4094</span>
<span id="L4095" rel="#L4095">4095</span>
<span id="L4096" rel="#L4096">4096</span>
<span id="L4097" rel="#L4097">4097</span>
<span id="L4098" rel="#L4098">4098</span>
<span id="L4099" rel="#L4099">4099</span>
<span id="L4100" rel="#L4100">4100</span>
<span id="L4101" rel="#L4101">4101</span>
<span id="L4102" rel="#L4102">4102</span>
<span id="L4103" rel="#L4103">4103</span>
<span id="L4104" rel="#L4104">4104</span>
<span id="L4105" rel="#L4105">4105</span>
<span id="L4106" rel="#L4106">4106</span>
<span id="L4107" rel="#L4107">4107</span>
<span id="L4108" rel="#L4108">4108</span>
<span id="L4109" rel="#L4109">4109</span>
<span id="L4110" rel="#L4110">4110</span>
<span id="L4111" rel="#L4111">4111</span>
<span id="L4112" rel="#L4112">4112</span>
<span id="L4113" rel="#L4113">4113</span>
<span id="L4114" rel="#L4114">4114</span>
<span id="L4115" rel="#L4115">4115</span>
<span id="L4116" rel="#L4116">4116</span>
<span id="L4117" rel="#L4117">4117</span>
<span id="L4118" rel="#L4118">4118</span>
<span id="L4119" rel="#L4119">4119</span>
<span id="L4120" rel="#L4120">4120</span>
<span id="L4121" rel="#L4121">4121</span>
<span id="L4122" rel="#L4122">4122</span>
<span id="L4123" rel="#L4123">4123</span>
<span id="L4124" rel="#L4124">4124</span>
<span id="L4125" rel="#L4125">4125</span>
<span id="L4126" rel="#L4126">4126</span>
<span id="L4127" rel="#L4127">4127</span>
<span id="L4128" rel="#L4128">4128</span>
<span id="L4129" rel="#L4129">4129</span>
<span id="L4130" rel="#L4130">4130</span>
<span id="L4131" rel="#L4131">4131</span>
<span id="L4132" rel="#L4132">4132</span>
<span id="L4133" rel="#L4133">4133</span>
<span id="L4134" rel="#L4134">4134</span>
<span id="L4135" rel="#L4135">4135</span>
<span id="L4136" rel="#L4136">4136</span>
<span id="L4137" rel="#L4137">4137</span>
<span id="L4138" rel="#L4138">4138</span>
<span id="L4139" rel="#L4139">4139</span>
<span id="L4140" rel="#L4140">4140</span>
<span id="L4141" rel="#L4141">4141</span>
<span id="L4142" rel="#L4142">4142</span>
<span id="L4143" rel="#L4143">4143</span>
<span id="L4144" rel="#L4144">4144</span>
<span id="L4145" rel="#L4145">4145</span>
<span id="L4146" rel="#L4146">4146</span>
<span id="L4147" rel="#L4147">4147</span>
<span id="L4148" rel="#L4148">4148</span>
<span id="L4149" rel="#L4149">4149</span>
<span id="L4150" rel="#L4150">4150</span>
<span id="L4151" rel="#L4151">4151</span>
<span id="L4152" rel="#L4152">4152</span>
<span id="L4153" rel="#L4153">4153</span>
<span id="L4154" rel="#L4154">4154</span>
<span id="L4155" rel="#L4155">4155</span>
<span id="L4156" rel="#L4156">4156</span>
<span id="L4157" rel="#L4157">4157</span>
<span id="L4158" rel="#L4158">4158</span>
<span id="L4159" rel="#L4159">4159</span>
<span id="L4160" rel="#L4160">4160</span>
<span id="L4161" rel="#L4161">4161</span>
<span id="L4162" rel="#L4162">4162</span>
<span id="L4163" rel="#L4163">4163</span>
<span id="L4164" rel="#L4164">4164</span>
<span id="L4165" rel="#L4165">4165</span>
<span id="L4166" rel="#L4166">4166</span>
<span id="L4167" rel="#L4167">4167</span>
<span id="L4168" rel="#L4168">4168</span>
<span id="L4169" rel="#L4169">4169</span>
<span id="L4170" rel="#L4170">4170</span>
<span id="L4171" rel="#L4171">4171</span>
<span id="L4172" rel="#L4172">4172</span>
<span id="L4173" rel="#L4173">4173</span>
<span id="L4174" rel="#L4174">4174</span>
<span id="L4175" rel="#L4175">4175</span>
<span id="L4176" rel="#L4176">4176</span>
<span id="L4177" rel="#L4177">4177</span>
<span id="L4178" rel="#L4178">4178</span>
<span id="L4179" rel="#L4179">4179</span>
<span id="L4180" rel="#L4180">4180</span>
<span id="L4181" rel="#L4181">4181</span>
<span id="L4182" rel="#L4182">4182</span>
<span id="L4183" rel="#L4183">4183</span>
<span id="L4184" rel="#L4184">4184</span>
<span id="L4185" rel="#L4185">4185</span>
<span id="L4186" rel="#L4186">4186</span>
<span id="L4187" rel="#L4187">4187</span>
<span id="L4188" rel="#L4188">4188</span>
<span id="L4189" rel="#L4189">4189</span>
<span id="L4190" rel="#L4190">4190</span>
<span id="L4191" rel="#L4191">4191</span>
<span id="L4192" rel="#L4192">4192</span>
<span id="L4193" rel="#L4193">4193</span>
<span id="L4194" rel="#L4194">4194</span>
<span id="L4195" rel="#L4195">4195</span>
<span id="L4196" rel="#L4196">4196</span>
<span id="L4197" rel="#L4197">4197</span>
<span id="L4198" rel="#L4198">4198</span>
<span id="L4199" rel="#L4199">4199</span>
<span id="L4200" rel="#L4200">4200</span>
<span id="L4201" rel="#L4201">4201</span>
<span id="L4202" rel="#L4202">4202</span>
<span id="L4203" rel="#L4203">4203</span>
<span id="L4204" rel="#L4204">4204</span>
<span id="L4205" rel="#L4205">4205</span>
<span id="L4206" rel="#L4206">4206</span>
<span id="L4207" rel="#L4207">4207</span>
<span id="L4208" rel="#L4208">4208</span>
<span id="L4209" rel="#L4209">4209</span>
<span id="L4210" rel="#L4210">4210</span>
<span id="L4211" rel="#L4211">4211</span>
<span id="L4212" rel="#L4212">4212</span>
<span id="L4213" rel="#L4213">4213</span>
<span id="L4214" rel="#L4214">4214</span>
<span id="L4215" rel="#L4215">4215</span>
<span id="L4216" rel="#L4216">4216</span>
<span id="L4217" rel="#L4217">4217</span>
<span id="L4218" rel="#L4218">4218</span>
<span id="L4219" rel="#L4219">4219</span>
<span id="L4220" rel="#L4220">4220</span>
<span id="L4221" rel="#L4221">4221</span>
<span id="L4222" rel="#L4222">4222</span>
<span id="L4223" rel="#L4223">4223</span>
<span id="L4224" rel="#L4224">4224</span>
<span id="L4225" rel="#L4225">4225</span>
<span id="L4226" rel="#L4226">4226</span>
<span id="L4227" rel="#L4227">4227</span>
<span id="L4228" rel="#L4228">4228</span>
<span id="L4229" rel="#L4229">4229</span>
<span id="L4230" rel="#L4230">4230</span>
<span id="L4231" rel="#L4231">4231</span>
<span id="L4232" rel="#L4232">4232</span>
<span id="L4233" rel="#L4233">4233</span>
<span id="L4234" rel="#L4234">4234</span>
<span id="L4235" rel="#L4235">4235</span>
<span id="L4236" rel="#L4236">4236</span>
<span id="L4237" rel="#L4237">4237</span>
<span id="L4238" rel="#L4238">4238</span>
<span id="L4239" rel="#L4239">4239</span>
<span id="L4240" rel="#L4240">4240</span>
<span id="L4241" rel="#L4241">4241</span>
<span id="L4242" rel="#L4242">4242</span>
<span id="L4243" rel="#L4243">4243</span>
<span id="L4244" rel="#L4244">4244</span>
<span id="L4245" rel="#L4245">4245</span>
<span id="L4246" rel="#L4246">4246</span>
<span id="L4247" rel="#L4247">4247</span>
<span id="L4248" rel="#L4248">4248</span>
<span id="L4249" rel="#L4249">4249</span>
<span id="L4250" rel="#L4250">4250</span>
<span id="L4251" rel="#L4251">4251</span>
<span id="L4252" rel="#L4252">4252</span>
<span id="L4253" rel="#L4253">4253</span>
<span id="L4254" rel="#L4254">4254</span>
<span id="L4255" rel="#L4255">4255</span>
<span id="L4256" rel="#L4256">4256</span>
<span id="L4257" rel="#L4257">4257</span>
<span id="L4258" rel="#L4258">4258</span>
<span id="L4259" rel="#L4259">4259</span>
<span id="L4260" rel="#L4260">4260</span>
<span id="L4261" rel="#L4261">4261</span>
<span id="L4262" rel="#L4262">4262</span>
<span id="L4263" rel="#L4263">4263</span>
<span id="L4264" rel="#L4264">4264</span>
<span id="L4265" rel="#L4265">4265</span>
<span id="L4266" rel="#L4266">4266</span>
<span id="L4267" rel="#L4267">4267</span>
<span id="L4268" rel="#L4268">4268</span>
<span id="L4269" rel="#L4269">4269</span>
<span id="L4270" rel="#L4270">4270</span>
<span id="L4271" rel="#L4271">4271</span>
<span id="L4272" rel="#L4272">4272</span>
<span id="L4273" rel="#L4273">4273</span>
<span id="L4274" rel="#L4274">4274</span>
<span id="L4275" rel="#L4275">4275</span>
<span id="L4276" rel="#L4276">4276</span>
<span id="L4277" rel="#L4277">4277</span>
<span id="L4278" rel="#L4278">4278</span>
<span id="L4279" rel="#L4279">4279</span>
<span id="L4280" rel="#L4280">4280</span>
<span id="L4281" rel="#L4281">4281</span>
<span id="L4282" rel="#L4282">4282</span>
<span id="L4283" rel="#L4283">4283</span>
<span id="L4284" rel="#L4284">4284</span>
<span id="L4285" rel="#L4285">4285</span>
<span id="L4286" rel="#L4286">4286</span>
<span id="L4287" rel="#L4287">4287</span>
<span id="L4288" rel="#L4288">4288</span>
<span id="L4289" rel="#L4289">4289</span>
<span id="L4290" rel="#L4290">4290</span>
<span id="L4291" rel="#L4291">4291</span>
<span id="L4292" rel="#L4292">4292</span>
<span id="L4293" rel="#L4293">4293</span>
<span id="L4294" rel="#L4294">4294</span>
<span id="L4295" rel="#L4295">4295</span>
<span id="L4296" rel="#L4296">4296</span>
<span id="L4297" rel="#L4297">4297</span>
<span id="L4298" rel="#L4298">4298</span>
<span id="L4299" rel="#L4299">4299</span>
<span id="L4300" rel="#L4300">4300</span>
<span id="L4301" rel="#L4301">4301</span>
<span id="L4302" rel="#L4302">4302</span>
<span id="L4303" rel="#L4303">4303</span>
<span id="L4304" rel="#L4304">4304</span>
<span id="L4305" rel="#L4305">4305</span>
<span id="L4306" rel="#L4306">4306</span>
<span id="L4307" rel="#L4307">4307</span>
<span id="L4308" rel="#L4308">4308</span>
<span id="L4309" rel="#L4309">4309</span>
<span id="L4310" rel="#L4310">4310</span>
<span id="L4311" rel="#L4311">4311</span>
<span id="L4312" rel="#L4312">4312</span>
<span id="L4313" rel="#L4313">4313</span>
<span id="L4314" rel="#L4314">4314</span>
<span id="L4315" rel="#L4315">4315</span>
<span id="L4316" rel="#L4316">4316</span>
<span id="L4317" rel="#L4317">4317</span>
<span id="L4318" rel="#L4318">4318</span>
<span id="L4319" rel="#L4319">4319</span>
<span id="L4320" rel="#L4320">4320</span>
<span id="L4321" rel="#L4321">4321</span>
<span id="L4322" rel="#L4322">4322</span>
<span id="L4323" rel="#L4323">4323</span>
<span id="L4324" rel="#L4324">4324</span>
<span id="L4325" rel="#L4325">4325</span>
<span id="L4326" rel="#L4326">4326</span>
<span id="L4327" rel="#L4327">4327</span>
<span id="L4328" rel="#L4328">4328</span>
<span id="L4329" rel="#L4329">4329</span>
<span id="L4330" rel="#L4330">4330</span>
<span id="L4331" rel="#L4331">4331</span>
<span id="L4332" rel="#L4332">4332</span>
<span id="L4333" rel="#L4333">4333</span>
<span id="L4334" rel="#L4334">4334</span>
<span id="L4335" rel="#L4335">4335</span>
<span id="L4336" rel="#L4336">4336</span>
<span id="L4337" rel="#L4337">4337</span>
<span id="L4338" rel="#L4338">4338</span>
<span id="L4339" rel="#L4339">4339</span>
<span id="L4340" rel="#L4340">4340</span>
<span id="L4341" rel="#L4341">4341</span>
<span id="L4342" rel="#L4342">4342</span>
<span id="L4343" rel="#L4343">4343</span>
<span id="L4344" rel="#L4344">4344</span>
<span id="L4345" rel="#L4345">4345</span>
<span id="L4346" rel="#L4346">4346</span>
<span id="L4347" rel="#L4347">4347</span>
<span id="L4348" rel="#L4348">4348</span>
<span id="L4349" rel="#L4349">4349</span>
<span id="L4350" rel="#L4350">4350</span>
<span id="L4351" rel="#L4351">4351</span>
<span id="L4352" rel="#L4352">4352</span>
<span id="L4353" rel="#L4353">4353</span>
<span id="L4354" rel="#L4354">4354</span>
<span id="L4355" rel="#L4355">4355</span>
<span id="L4356" rel="#L4356">4356</span>
<span id="L4357" rel="#L4357">4357</span>
<span id="L4358" rel="#L4358">4358</span>
<span id="L4359" rel="#L4359">4359</span>
<span id="L4360" rel="#L4360">4360</span>
<span id="L4361" rel="#L4361">4361</span>
<span id="L4362" rel="#L4362">4362</span>
<span id="L4363" rel="#L4363">4363</span>
<span id="L4364" rel="#L4364">4364</span>
<span id="L4365" rel="#L4365">4365</span>
<span id="L4366" rel="#L4366">4366</span>
<span id="L4367" rel="#L4367">4367</span>
<span id="L4368" rel="#L4368">4368</span>
<span id="L4369" rel="#L4369">4369</span>
<span id="L4370" rel="#L4370">4370</span>
<span id="L4371" rel="#L4371">4371</span>
<span id="L4372" rel="#L4372">4372</span>
<span id="L4373" rel="#L4373">4373</span>
<span id="L4374" rel="#L4374">4374</span>
<span id="L4375" rel="#L4375">4375</span>
<span id="L4376" rel="#L4376">4376</span>
<span id="L4377" rel="#L4377">4377</span>
<span id="L4378" rel="#L4378">4378</span>
<span id="L4379" rel="#L4379">4379</span>
<span id="L4380" rel="#L4380">4380</span>
<span id="L4381" rel="#L4381">4381</span>
<span id="L4382" rel="#L4382">4382</span>
<span id="L4383" rel="#L4383">4383</span>
<span id="L4384" rel="#L4384">4384</span>
<span id="L4385" rel="#L4385">4385</span>
<span id="L4386" rel="#L4386">4386</span>
<span id="L4387" rel="#L4387">4387</span>
<span id="L4388" rel="#L4388">4388</span>
<span id="L4389" rel="#L4389">4389</span>
<span id="L4390" rel="#L4390">4390</span>
<span id="L4391" rel="#L4391">4391</span>
<span id="L4392" rel="#L4392">4392</span>
<span id="L4393" rel="#L4393">4393</span>
<span id="L4394" rel="#L4394">4394</span>
<span id="L4395" rel="#L4395">4395</span>
<span id="L4396" rel="#L4396">4396</span>
<span id="L4397" rel="#L4397">4397</span>
<span id="L4398" rel="#L4398">4398</span>
<span id="L4399" rel="#L4399">4399</span>
<span id="L4400" rel="#L4400">4400</span>
<span id="L4401" rel="#L4401">4401</span>
<span id="L4402" rel="#L4402">4402</span>
<span id="L4403" rel="#L4403">4403</span>
<span id="L4404" rel="#L4404">4404</span>
<span id="L4405" rel="#L4405">4405</span>
<span id="L4406" rel="#L4406">4406</span>
<span id="L4407" rel="#L4407">4407</span>
<span id="L4408" rel="#L4408">4408</span>
<span id="L4409" rel="#L4409">4409</span>
<span id="L4410" rel="#L4410">4410</span>
<span id="L4411" rel="#L4411">4411</span>
<span id="L4412" rel="#L4412">4412</span>
<span id="L4413" rel="#L4413">4413</span>
<span id="L4414" rel="#L4414">4414</span>
<span id="L4415" rel="#L4415">4415</span>
<span id="L4416" rel="#L4416">4416</span>
<span id="L4417" rel="#L4417">4417</span>
<span id="L4418" rel="#L4418">4418</span>
<span id="L4419" rel="#L4419">4419</span>
<span id="L4420" rel="#L4420">4420</span>
<span id="L4421" rel="#L4421">4421</span>
<span id="L4422" rel="#L4422">4422</span>
<span id="L4423" rel="#L4423">4423</span>
<span id="L4424" rel="#L4424">4424</span>
<span id="L4425" rel="#L4425">4425</span>
<span id="L4426" rel="#L4426">4426</span>
<span id="L4427" rel="#L4427">4427</span>
<span id="L4428" rel="#L4428">4428</span>
<span id="L4429" rel="#L4429">4429</span>
<span id="L4430" rel="#L4430">4430</span>
<span id="L4431" rel="#L4431">4431</span>
<span id="L4432" rel="#L4432">4432</span>
<span id="L4433" rel="#L4433">4433</span>
<span id="L4434" rel="#L4434">4434</span>
<span id="L4435" rel="#L4435">4435</span>
<span id="L4436" rel="#L4436">4436</span>
<span id="L4437" rel="#L4437">4437</span>
<span id="L4438" rel="#L4438">4438</span>
<span id="L4439" rel="#L4439">4439</span>
<span id="L4440" rel="#L4440">4440</span>
<span id="L4441" rel="#L4441">4441</span>
<span id="L4442" rel="#L4442">4442</span>
<span id="L4443" rel="#L4443">4443</span>
<span id="L4444" rel="#L4444">4444</span>
<span id="L4445" rel="#L4445">4445</span>
<span id="L4446" rel="#L4446">4446</span>
<span id="L4447" rel="#L4447">4447</span>
<span id="L4448" rel="#L4448">4448</span>
<span id="L4449" rel="#L4449">4449</span>
<span id="L4450" rel="#L4450">4450</span>
<span id="L4451" rel="#L4451">4451</span>
<span id="L4452" rel="#L4452">4452</span>
<span id="L4453" rel="#L4453">4453</span>
<span id="L4454" rel="#L4454">4454</span>
<span id="L4455" rel="#L4455">4455</span>
<span id="L4456" rel="#L4456">4456</span>
<span id="L4457" rel="#L4457">4457</span>
<span id="L4458" rel="#L4458">4458</span>
<span id="L4459" rel="#L4459">4459</span>
<span id="L4460" rel="#L4460">4460</span>
<span id="L4461" rel="#L4461">4461</span>
<span id="L4462" rel="#L4462">4462</span>
<span id="L4463" rel="#L4463">4463</span>
<span id="L4464" rel="#L4464">4464</span>
<span id="L4465" rel="#L4465">4465</span>
<span id="L4466" rel="#L4466">4466</span>
<span id="L4467" rel="#L4467">4467</span>
<span id="L4468" rel="#L4468">4468</span>
<span id="L4469" rel="#L4469">4469</span>
<span id="L4470" rel="#L4470">4470</span>
<span id="L4471" rel="#L4471">4471</span>
<span id="L4472" rel="#L4472">4472</span>
<span id="L4473" rel="#L4473">4473</span>
<span id="L4474" rel="#L4474">4474</span>
<span id="L4475" rel="#L4475">4475</span>
<span id="L4476" rel="#L4476">4476</span>
<span id="L4477" rel="#L4477">4477</span>
<span id="L4478" rel="#L4478">4478</span>
<span id="L4479" rel="#L4479">4479</span>
<span id="L4480" rel="#L4480">4480</span>
<span id="L4481" rel="#L4481">4481</span>
<span id="L4482" rel="#L4482">4482</span>
<span id="L4483" rel="#L4483">4483</span>
<span id="L4484" rel="#L4484">4484</span>
<span id="L4485" rel="#L4485">4485</span>
<span id="L4486" rel="#L4486">4486</span>
<span id="L4487" rel="#L4487">4487</span>
<span id="L4488" rel="#L4488">4488</span>
<span id="L4489" rel="#L4489">4489</span>
<span id="L4490" rel="#L4490">4490</span>
<span id="L4491" rel="#L4491">4491</span>
<span id="L4492" rel="#L4492">4492</span>
<span id="L4493" rel="#L4493">4493</span>
<span id="L4494" rel="#L4494">4494</span>
<span id="L4495" rel="#L4495">4495</span>
<span id="L4496" rel="#L4496">4496</span>
<span id="L4497" rel="#L4497">4497</span>
<span id="L4498" rel="#L4498">4498</span>
<span id="L4499" rel="#L4499">4499</span>
<span id="L4500" rel="#L4500">4500</span>
<span id="L4501" rel="#L4501">4501</span>
<span id="L4502" rel="#L4502">4502</span>
<span id="L4503" rel="#L4503">4503</span>
<span id="L4504" rel="#L4504">4504</span>
<span id="L4505" rel="#L4505">4505</span>
<span id="L4506" rel="#L4506">4506</span>
<span id="L4507" rel="#L4507">4507</span>
<span id="L4508" rel="#L4508">4508</span>
<span id="L4509" rel="#L4509">4509</span>
<span id="L4510" rel="#L4510">4510</span>
<span id="L4511" rel="#L4511">4511</span>
<span id="L4512" rel="#L4512">4512</span>
<span id="L4513" rel="#L4513">4513</span>
<span id="L4514" rel="#L4514">4514</span>
<span id="L4515" rel="#L4515">4515</span>
<span id="L4516" rel="#L4516">4516</span>
<span id="L4517" rel="#L4517">4517</span>
<span id="L4518" rel="#L4518">4518</span>
<span id="L4519" rel="#L4519">4519</span>
<span id="L4520" rel="#L4520">4520</span>
<span id="L4521" rel="#L4521">4521</span>
<span id="L4522" rel="#L4522">4522</span>
<span id="L4523" rel="#L4523">4523</span>
<span id="L4524" rel="#L4524">4524</span>
<span id="L4525" rel="#L4525">4525</span>
<span id="L4526" rel="#L4526">4526</span>
<span id="L4527" rel="#L4527">4527</span>
<span id="L4528" rel="#L4528">4528</span>
<span id="L4529" rel="#L4529">4529</span>
<span id="L4530" rel="#L4530">4530</span>
<span id="L4531" rel="#L4531">4531</span>
<span id="L4532" rel="#L4532">4532</span>
<span id="L4533" rel="#L4533">4533</span>
<span id="L4534" rel="#L4534">4534</span>
<span id="L4535" rel="#L4535">4535</span>
<span id="L4536" rel="#L4536">4536</span>
<span id="L4537" rel="#L4537">4537</span>
<span id="L4538" rel="#L4538">4538</span>
<span id="L4539" rel="#L4539">4539</span>
<span id="L4540" rel="#L4540">4540</span>
<span id="L4541" rel="#L4541">4541</span>
<span id="L4542" rel="#L4542">4542</span>
<span id="L4543" rel="#L4543">4543</span>
<span id="L4544" rel="#L4544">4544</span>
<span id="L4545" rel="#L4545">4545</span>
<span id="L4546" rel="#L4546">4546</span>
<span id="L4547" rel="#L4547">4547</span>
<span id="L4548" rel="#L4548">4548</span>
<span id="L4549" rel="#L4549">4549</span>
<span id="L4550" rel="#L4550">4550</span>
<span id="L4551" rel="#L4551">4551</span>
<span id="L4552" rel="#L4552">4552</span>
<span id="L4553" rel="#L4553">4553</span>
<span id="L4554" rel="#L4554">4554</span>
<span id="L4555" rel="#L4555">4555</span>
<span id="L4556" rel="#L4556">4556</span>
<span id="L4557" rel="#L4557">4557</span>
<span id="L4558" rel="#L4558">4558</span>
<span id="L4559" rel="#L4559">4559</span>
<span id="L4560" rel="#L4560">4560</span>
<span id="L4561" rel="#L4561">4561</span>
<span id="L4562" rel="#L4562">4562</span>
<span id="L4563" rel="#L4563">4563</span>
<span id="L4564" rel="#L4564">4564</span>
<span id="L4565" rel="#L4565">4565</span>
<span id="L4566" rel="#L4566">4566</span>
<span id="L4567" rel="#L4567">4567</span>
<span id="L4568" rel="#L4568">4568</span>
<span id="L4569" rel="#L4569">4569</span>
<span id="L4570" rel="#L4570">4570</span>
<span id="L4571" rel="#L4571">4571</span>
<span id="L4572" rel="#L4572">4572</span>
<span id="L4573" rel="#L4573">4573</span>
<span id="L4574" rel="#L4574">4574</span>
<span id="L4575" rel="#L4575">4575</span>
<span id="L4576" rel="#L4576">4576</span>
<span id="L4577" rel="#L4577">4577</span>
<span id="L4578" rel="#L4578">4578</span>
<span id="L4579" rel="#L4579">4579</span>
<span id="L4580" rel="#L4580">4580</span>
<span id="L4581" rel="#L4581">4581</span>
<span id="L4582" rel="#L4582">4582</span>
<span id="L4583" rel="#L4583">4583</span>
<span id="L4584" rel="#L4584">4584</span>
<span id="L4585" rel="#L4585">4585</span>
<span id="L4586" rel="#L4586">4586</span>
<span id="L4587" rel="#L4587">4587</span>
<span id="L4588" rel="#L4588">4588</span>
<span id="L4589" rel="#L4589">4589</span>
<span id="L4590" rel="#L4590">4590</span>
<span id="L4591" rel="#L4591">4591</span>
<span id="L4592" rel="#L4592">4592</span>
<span id="L4593" rel="#L4593">4593</span>
<span id="L4594" rel="#L4594">4594</span>
<span id="L4595" rel="#L4595">4595</span>
<span id="L4596" rel="#L4596">4596</span>
<span id="L4597" rel="#L4597">4597</span>
<span id="L4598" rel="#L4598">4598</span>
<span id="L4599" rel="#L4599">4599</span>
<span id="L4600" rel="#L4600">4600</span>
<span id="L4601" rel="#L4601">4601</span>
<span id="L4602" rel="#L4602">4602</span>
<span id="L4603" rel="#L4603">4603</span>
<span id="L4604" rel="#L4604">4604</span>
<span id="L4605" rel="#L4605">4605</span>
<span id="L4606" rel="#L4606">4606</span>
<span id="L4607" rel="#L4607">4607</span>
<span id="L4608" rel="#L4608">4608</span>
<span id="L4609" rel="#L4609">4609</span>
<span id="L4610" rel="#L4610">4610</span>
<span id="L4611" rel="#L4611">4611</span>
<span id="L4612" rel="#L4612">4612</span>
<span id="L4613" rel="#L4613">4613</span>
<span id="L4614" rel="#L4614">4614</span>
<span id="L4615" rel="#L4615">4615</span>
<span id="L4616" rel="#L4616">4616</span>
<span id="L4617" rel="#L4617">4617</span>
<span id="L4618" rel="#L4618">4618</span>
<span id="L4619" rel="#L4619">4619</span>
<span id="L4620" rel="#L4620">4620</span>
<span id="L4621" rel="#L4621">4621</span>
<span id="L4622" rel="#L4622">4622</span>
<span id="L4623" rel="#L4623">4623</span>
<span id="L4624" rel="#L4624">4624</span>
<span id="L4625" rel="#L4625">4625</span>
<span id="L4626" rel="#L4626">4626</span>
<span id="L4627" rel="#L4627">4627</span>
<span id="L4628" rel="#L4628">4628</span>
<span id="L4629" rel="#L4629">4629</span>
<span id="L4630" rel="#L4630">4630</span>
<span id="L4631" rel="#L4631">4631</span>
<span id="L4632" rel="#L4632">4632</span>
<span id="L4633" rel="#L4633">4633</span>
<span id="L4634" rel="#L4634">4634</span>
<span id="L4635" rel="#L4635">4635</span>
<span id="L4636" rel="#L4636">4636</span>
<span id="L4637" rel="#L4637">4637</span>
<span id="L4638" rel="#L4638">4638</span>
<span id="L4639" rel="#L4639">4639</span>
<span id="L4640" rel="#L4640">4640</span>
<span id="L4641" rel="#L4641">4641</span>
<span id="L4642" rel="#L4642">4642</span>
<span id="L4643" rel="#L4643">4643</span>
<span id="L4644" rel="#L4644">4644</span>
<span id="L4645" rel="#L4645">4645</span>
<span id="L4646" rel="#L4646">4646</span>
<span id="L4647" rel="#L4647">4647</span>
<span id="L4648" rel="#L4648">4648</span>
<span id="L4649" rel="#L4649">4649</span>
<span id="L4650" rel="#L4650">4650</span>
<span id="L4651" rel="#L4651">4651</span>
<span id="L4652" rel="#L4652">4652</span>
<span id="L4653" rel="#L4653">4653</span>
<span id="L4654" rel="#L4654">4654</span>
<span id="L4655" rel="#L4655">4655</span>
<span id="L4656" rel="#L4656">4656</span>
<span id="L4657" rel="#L4657">4657</span>
<span id="L4658" rel="#L4658">4658</span>
<span id="L4659" rel="#L4659">4659</span>
<span id="L4660" rel="#L4660">4660</span>
<span id="L4661" rel="#L4661">4661</span>
<span id="L4662" rel="#L4662">4662</span>
<span id="L4663" rel="#L4663">4663</span>
<span id="L4664" rel="#L4664">4664</span>
<span id="L4665" rel="#L4665">4665</span>
<span id="L4666" rel="#L4666">4666</span>
<span id="L4667" rel="#L4667">4667</span>
<span id="L4668" rel="#L4668">4668</span>
<span id="L4669" rel="#L4669">4669</span>
<span id="L4670" rel="#L4670">4670</span>
<span id="L4671" rel="#L4671">4671</span>
<span id="L4672" rel="#L4672">4672</span>
<span id="L4673" rel="#L4673">4673</span>
<span id="L4674" rel="#L4674">4674</span>
<span id="L4675" rel="#L4675">4675</span>
<span id="L4676" rel="#L4676">4676</span>
<span id="L4677" rel="#L4677">4677</span>
<span id="L4678" rel="#L4678">4678</span>
<span id="L4679" rel="#L4679">4679</span>
<span id="L4680" rel="#L4680">4680</span>
<span id="L4681" rel="#L4681">4681</span>
<span id="L4682" rel="#L4682">4682</span>
<span id="L4683" rel="#L4683">4683</span>
<span id="L4684" rel="#L4684">4684</span>
<span id="L4685" rel="#L4685">4685</span>
<span id="L4686" rel="#L4686">4686</span>
<span id="L4687" rel="#L4687">4687</span>
<span id="L4688" rel="#L4688">4688</span>
<span id="L4689" rel="#L4689">4689</span>
<span id="L4690" rel="#L4690">4690</span>
<span id="L4691" rel="#L4691">4691</span>
<span id="L4692" rel="#L4692">4692</span>
<span id="L4693" rel="#L4693">4693</span>
<span id="L4694" rel="#L4694">4694</span>
<span id="L4695" rel="#L4695">4695</span>
<span id="L4696" rel="#L4696">4696</span>
<span id="L4697" rel="#L4697">4697</span>
<span id="L4698" rel="#L4698">4698</span>
<span id="L4699" rel="#L4699">4699</span>
<span id="L4700" rel="#L4700">4700</span>
<span id="L4701" rel="#L4701">4701</span>
<span id="L4702" rel="#L4702">4702</span>
<span id="L4703" rel="#L4703">4703</span>
<span id="L4704" rel="#L4704">4704</span>
<span id="L4705" rel="#L4705">4705</span>
<span id="L4706" rel="#L4706">4706</span>
<span id="L4707" rel="#L4707">4707</span>
<span id="L4708" rel="#L4708">4708</span>
<span id="L4709" rel="#L4709">4709</span>
<span id="L4710" rel="#L4710">4710</span>
<span id="L4711" rel="#L4711">4711</span>
<span id="L4712" rel="#L4712">4712</span>
<span id="L4713" rel="#L4713">4713</span>
<span id="L4714" rel="#L4714">4714</span>
<span id="L4715" rel="#L4715">4715</span>
<span id="L4716" rel="#L4716">4716</span>
<span id="L4717" rel="#L4717">4717</span>
<span id="L4718" rel="#L4718">4718</span>
<span id="L4719" rel="#L4719">4719</span>
<span id="L4720" rel="#L4720">4720</span>
<span id="L4721" rel="#L4721">4721</span>
<span id="L4722" rel="#L4722">4722</span>
<span id="L4723" rel="#L4723">4723</span>
<span id="L4724" rel="#L4724">4724</span>
<span id="L4725" rel="#L4725">4725</span>
<span id="L4726" rel="#L4726">4726</span>
<span id="L4727" rel="#L4727">4727</span>
<span id="L4728" rel="#L4728">4728</span>
<span id="L4729" rel="#L4729">4729</span>
<span id="L4730" rel="#L4730">4730</span>
<span id="L4731" rel="#L4731">4731</span>
<span id="L4732" rel="#L4732">4732</span>
<span id="L4733" rel="#L4733">4733</span>
<span id="L4734" rel="#L4734">4734</span>
<span id="L4735" rel="#L4735">4735</span>
<span id="L4736" rel="#L4736">4736</span>
<span id="L4737" rel="#L4737">4737</span>
<span id="L4738" rel="#L4738">4738</span>
<span id="L4739" rel="#L4739">4739</span>
<span id="L4740" rel="#L4740">4740</span>
<span id="L4741" rel="#L4741">4741</span>
<span id="L4742" rel="#L4742">4742</span>
<span id="L4743" rel="#L4743">4743</span>
<span id="L4744" rel="#L4744">4744</span>
<span id="L4745" rel="#L4745">4745</span>
<span id="L4746" rel="#L4746">4746</span>
<span id="L4747" rel="#L4747">4747</span>
<span id="L4748" rel="#L4748">4748</span>
<span id="L4749" rel="#L4749">4749</span>
<span id="L4750" rel="#L4750">4750</span>
<span id="L4751" rel="#L4751">4751</span>
<span id="L4752" rel="#L4752">4752</span>
<span id="L4753" rel="#L4753">4753</span>
<span id="L4754" rel="#L4754">4754</span>
<span id="L4755" rel="#L4755">4755</span>
<span id="L4756" rel="#L4756">4756</span>
<span id="L4757" rel="#L4757">4757</span>
<span id="L4758" rel="#L4758">4758</span>
<span id="L4759" rel="#L4759">4759</span>
<span id="L4760" rel="#L4760">4760</span>
<span id="L4761" rel="#L4761">4761</span>
<span id="L4762" rel="#L4762">4762</span>
<span id="L4763" rel="#L4763">4763</span>
<span id="L4764" rel="#L4764">4764</span>
<span id="L4765" rel="#L4765">4765</span>
<span id="L4766" rel="#L4766">4766</span>
<span id="L4767" rel="#L4767">4767</span>
<span id="L4768" rel="#L4768">4768</span>
<span id="L4769" rel="#L4769">4769</span>
<span id="L4770" rel="#L4770">4770</span>
<span id="L4771" rel="#L4771">4771</span>
<span id="L4772" rel="#L4772">4772</span>
<span id="L4773" rel="#L4773">4773</span>
<span id="L4774" rel="#L4774">4774</span>
<span id="L4775" rel="#L4775">4775</span>
<span id="L4776" rel="#L4776">4776</span>
<span id="L4777" rel="#L4777">4777</span>
<span id="L4778" rel="#L4778">4778</span>
<span id="L4779" rel="#L4779">4779</span>
<span id="L4780" rel="#L4780">4780</span>
<span id="L4781" rel="#L4781">4781</span>
<span id="L4782" rel="#L4782">4782</span>
<span id="L4783" rel="#L4783">4783</span>
<span id="L4784" rel="#L4784">4784</span>
<span id="L4785" rel="#L4785">4785</span>
<span id="L4786" rel="#L4786">4786</span>
<span id="L4787" rel="#L4787">4787</span>
<span id="L4788" rel="#L4788">4788</span>
<span id="L4789" rel="#L4789">4789</span>
<span id="L4790" rel="#L4790">4790</span>
<span id="L4791" rel="#L4791">4791</span>
<span id="L4792" rel="#L4792">4792</span>
<span id="L4793" rel="#L4793">4793</span>
<span id="L4794" rel="#L4794">4794</span>
<span id="L4795" rel="#L4795">4795</span>
<span id="L4796" rel="#L4796">4796</span>
<span id="L4797" rel="#L4797">4797</span>
<span id="L4798" rel="#L4798">4798</span>
<span id="L4799" rel="#L4799">4799</span>
<span id="L4800" rel="#L4800">4800</span>
<span id="L4801" rel="#L4801">4801</span>
<span id="L4802" rel="#L4802">4802</span>
<span id="L4803" rel="#L4803">4803</span>
<span id="L4804" rel="#L4804">4804</span>
<span id="L4805" rel="#L4805">4805</span>
<span id="L4806" rel="#L4806">4806</span>
<span id="L4807" rel="#L4807">4807</span>
<span id="L4808" rel="#L4808">4808</span>
<span id="L4809" rel="#L4809">4809</span>
<span id="L4810" rel="#L4810">4810</span>
<span id="L4811" rel="#L4811">4811</span>
<span id="L4812" rel="#L4812">4812</span>
<span id="L4813" rel="#L4813">4813</span>
<span id="L4814" rel="#L4814">4814</span>
<span id="L4815" rel="#L4815">4815</span>
<span id="L4816" rel="#L4816">4816</span>
<span id="L4817" rel="#L4817">4817</span>
<span id="L4818" rel="#L4818">4818</span>
<span id="L4819" rel="#L4819">4819</span>
<span id="L4820" rel="#L4820">4820</span>
<span id="L4821" rel="#L4821">4821</span>
<span id="L4822" rel="#L4822">4822</span>
<span id="L4823" rel="#L4823">4823</span>
<span id="L4824" rel="#L4824">4824</span>
<span id="L4825" rel="#L4825">4825</span>
<span id="L4826" rel="#L4826">4826</span>
<span id="L4827" rel="#L4827">4827</span>
<span id="L4828" rel="#L4828">4828</span>
<span id="L4829" rel="#L4829">4829</span>
<span id="L4830" rel="#L4830">4830</span>
<span id="L4831" rel="#L4831">4831</span>
<span id="L4832" rel="#L4832">4832</span>
<span id="L4833" rel="#L4833">4833</span>
<span id="L4834" rel="#L4834">4834</span>
<span id="L4835" rel="#L4835">4835</span>
<span id="L4836" rel="#L4836">4836</span>
<span id="L4837" rel="#L4837">4837</span>
<span id="L4838" rel="#L4838">4838</span>
<span id="L4839" rel="#L4839">4839</span>
<span id="L4840" rel="#L4840">4840</span>
<span id="L4841" rel="#L4841">4841</span>
<span id="L4842" rel="#L4842">4842</span>
<span id="L4843" rel="#L4843">4843</span>
<span id="L4844" rel="#L4844">4844</span>
<span id="L4845" rel="#L4845">4845</span>
<span id="L4846" rel="#L4846">4846</span>
<span id="L4847" rel="#L4847">4847</span>
<span id="L4848" rel="#L4848">4848</span>
<span id="L4849" rel="#L4849">4849</span>
<span id="L4850" rel="#L4850">4850</span>
<span id="L4851" rel="#L4851">4851</span>
<span id="L4852" rel="#L4852">4852</span>
<span id="L4853" rel="#L4853">4853</span>
<span id="L4854" rel="#L4854">4854</span>
<span id="L4855" rel="#L4855">4855</span>
<span id="L4856" rel="#L4856">4856</span>
<span id="L4857" rel="#L4857">4857</span>
<span id="L4858" rel="#L4858">4858</span>
<span id="L4859" rel="#L4859">4859</span>
<span id="L4860" rel="#L4860">4860</span>
<span id="L4861" rel="#L4861">4861</span>
<span id="L4862" rel="#L4862">4862</span>
<span id="L4863" rel="#L4863">4863</span>
<span id="L4864" rel="#L4864">4864</span>
<span id="L4865" rel="#L4865">4865</span>
<span id="L4866" rel="#L4866">4866</span>
<span id="L4867" rel="#L4867">4867</span>
<span id="L4868" rel="#L4868">4868</span>
<span id="L4869" rel="#L4869">4869</span>
<span id="L4870" rel="#L4870">4870</span>
<span id="L4871" rel="#L4871">4871</span>
<span id="L4872" rel="#L4872">4872</span>
<span id="L4873" rel="#L4873">4873</span>
<span id="L4874" rel="#L4874">4874</span>
<span id="L4875" rel="#L4875">4875</span>
<span id="L4876" rel="#L4876">4876</span>
<span id="L4877" rel="#L4877">4877</span>
<span id="L4878" rel="#L4878">4878</span>
<span id="L4879" rel="#L4879">4879</span>
<span id="L4880" rel="#L4880">4880</span>
<span id="L4881" rel="#L4881">4881</span>
<span id="L4882" rel="#L4882">4882</span>
<span id="L4883" rel="#L4883">4883</span>
<span id="L4884" rel="#L4884">4884</span>
<span id="L4885" rel="#L4885">4885</span>
<span id="L4886" rel="#L4886">4886</span>
<span id="L4887" rel="#L4887">4887</span>
<span id="L4888" rel="#L4888">4888</span>
<span id="L4889" rel="#L4889">4889</span>
<span id="L4890" rel="#L4890">4890</span>
<span id="L4891" rel="#L4891">4891</span>
<span id="L4892" rel="#L4892">4892</span>
<span id="L4893" rel="#L4893">4893</span>
<span id="L4894" rel="#L4894">4894</span>
<span id="L4895" rel="#L4895">4895</span>
<span id="L4896" rel="#L4896">4896</span>
<span id="L4897" rel="#L4897">4897</span>
<span id="L4898" rel="#L4898">4898</span>
<span id="L4899" rel="#L4899">4899</span>
<span id="L4900" rel="#L4900">4900</span>
<span id="L4901" rel="#L4901">4901</span>
<span id="L4902" rel="#L4902">4902</span>
<span id="L4903" rel="#L4903">4903</span>
<span id="L4904" rel="#L4904">4904</span>
<span id="L4905" rel="#L4905">4905</span>
<span id="L4906" rel="#L4906">4906</span>
<span id="L4907" rel="#L4907">4907</span>
<span id="L4908" rel="#L4908">4908</span>
<span id="L4909" rel="#L4909">4909</span>
<span id="L4910" rel="#L4910">4910</span>
<span id="L4911" rel="#L4911">4911</span>
<span id="L4912" rel="#L4912">4912</span>
<span id="L4913" rel="#L4913">4913</span>
<span id="L4914" rel="#L4914">4914</span>
<span id="L4915" rel="#L4915">4915</span>
<span id="L4916" rel="#L4916">4916</span>
<span id="L4917" rel="#L4917">4917</span>
<span id="L4918" rel="#L4918">4918</span>
<span id="L4919" rel="#L4919">4919</span>
<span id="L4920" rel="#L4920">4920</span>
<span id="L4921" rel="#L4921">4921</span>
<span id="L4922" rel="#L4922">4922</span>
<span id="L4923" rel="#L4923">4923</span>
<span id="L4924" rel="#L4924">4924</span>
<span id="L4925" rel="#L4925">4925</span>
<span id="L4926" rel="#L4926">4926</span>
<span id="L4927" rel="#L4927">4927</span>
<span id="L4928" rel="#L4928">4928</span>
<span id="L4929" rel="#L4929">4929</span>
<span id="L4930" rel="#L4930">4930</span>
<span id="L4931" rel="#L4931">4931</span>
<span id="L4932" rel="#L4932">4932</span>
<span id="L4933" rel="#L4933">4933</span>
<span id="L4934" rel="#L4934">4934</span>
<span id="L4935" rel="#L4935">4935</span>
<span id="L4936" rel="#L4936">4936</span>
<span id="L4937" rel="#L4937">4937</span>
<span id="L4938" rel="#L4938">4938</span>
<span id="L4939" rel="#L4939">4939</span>
<span id="L4940" rel="#L4940">4940</span>
<span id="L4941" rel="#L4941">4941</span>
<span id="L4942" rel="#L4942">4942</span>
<span id="L4943" rel="#L4943">4943</span>
<span id="L4944" rel="#L4944">4944</span>
<span id="L4945" rel="#L4945">4945</span>
<span id="L4946" rel="#L4946">4946</span>
<span id="L4947" rel="#L4947">4947</span>
<span id="L4948" rel="#L4948">4948</span>
<span id="L4949" rel="#L4949">4949</span>
<span id="L4950" rel="#L4950">4950</span>
<span id="L4951" rel="#L4951">4951</span>
<span id="L4952" rel="#L4952">4952</span>
<span id="L4953" rel="#L4953">4953</span>
<span id="L4954" rel="#L4954">4954</span>
<span id="L4955" rel="#L4955">4955</span>
<span id="L4956" rel="#L4956">4956</span>
<span id="L4957" rel="#L4957">4957</span>
<span id="L4958" rel="#L4958">4958</span>
<span id="L4959" rel="#L4959">4959</span>
<span id="L4960" rel="#L4960">4960</span>
<span id="L4961" rel="#L4961">4961</span>
<span id="L4962" rel="#L4962">4962</span>
<span id="L4963" rel="#L4963">4963</span>
<span id="L4964" rel="#L4964">4964</span>
<span id="L4965" rel="#L4965">4965</span>
<span id="L4966" rel="#L4966">4966</span>
<span id="L4967" rel="#L4967">4967</span>
<span id="L4968" rel="#L4968">4968</span>
<span id="L4969" rel="#L4969">4969</span>
<span id="L4970" rel="#L4970">4970</span>
<span id="L4971" rel="#L4971">4971</span>
<span id="L4972" rel="#L4972">4972</span>
<span id="L4973" rel="#L4973">4973</span>
<span id="L4974" rel="#L4974">4974</span>
<span id="L4975" rel="#L4975">4975</span>
<span id="L4976" rel="#L4976">4976</span>
<span id="L4977" rel="#L4977">4977</span>
<span id="L4978" rel="#L4978">4978</span>
<span id="L4979" rel="#L4979">4979</span>
<span id="L4980" rel="#L4980">4980</span>
<span id="L4981" rel="#L4981">4981</span>
<span id="L4982" rel="#L4982">4982</span>
<span id="L4983" rel="#L4983">4983</span>
<span id="L4984" rel="#L4984">4984</span>
<span id="L4985" rel="#L4985">4985</span>
<span id="L4986" rel="#L4986">4986</span>
<span id="L4987" rel="#L4987">4987</span>
<span id="L4988" rel="#L4988">4988</span>
<span id="L4989" rel="#L4989">4989</span>
<span id="L4990" rel="#L4990">4990</span>
<span id="L4991" rel="#L4991">4991</span>
<span id="L4992" rel="#L4992">4992</span>
<span id="L4993" rel="#L4993">4993</span>
<span id="L4994" rel="#L4994">4994</span>
<span id="L4995" rel="#L4995">4995</span>
<span id="L4996" rel="#L4996">4996</span>
<span id="L4997" rel="#L4997">4997</span>
<span id="L4998" rel="#L4998">4998</span>
<span id="L4999" rel="#L4999">4999</span>
<span id="L5000" rel="#L5000">5000</span>
<span id="L5001" rel="#L5001">5001</span>
<span id="L5002" rel="#L5002">5002</span>
<span id="L5003" rel="#L5003">5003</span>
<span id="L5004" rel="#L5004">5004</span>
<span id="L5005" rel="#L5005">5005</span>
<span id="L5006" rel="#L5006">5006</span>
<span id="L5007" rel="#L5007">5007</span>
<span id="L5008" rel="#L5008">5008</span>
<span id="L5009" rel="#L5009">5009</span>
<span id="L5010" rel="#L5010">5010</span>
<span id="L5011" rel="#L5011">5011</span>
<span id="L5012" rel="#L5012">5012</span>
<span id="L5013" rel="#L5013">5013</span>
<span id="L5014" rel="#L5014">5014</span>
<span id="L5015" rel="#L5015">5015</span>
<span id="L5016" rel="#L5016">5016</span>
<span id="L5017" rel="#L5017">5017</span>
<span id="L5018" rel="#L5018">5018</span>
<span id="L5019" rel="#L5019">5019</span>
<span id="L5020" rel="#L5020">5020</span>
<span id="L5021" rel="#L5021">5021</span>
<span id="L5022" rel="#L5022">5022</span>
<span id="L5023" rel="#L5023">5023</span>
<span id="L5024" rel="#L5024">5024</span>
<span id="L5025" rel="#L5025">5025</span>
<span id="L5026" rel="#L5026">5026</span>
<span id="L5027" rel="#L5027">5027</span>
<span id="L5028" rel="#L5028">5028</span>
<span id="L5029" rel="#L5029">5029</span>
<span id="L5030" rel="#L5030">5030</span>
<span id="L5031" rel="#L5031">5031</span>
<span id="L5032" rel="#L5032">5032</span>
<span id="L5033" rel="#L5033">5033</span>
<span id="L5034" rel="#L5034">5034</span>
<span id="L5035" rel="#L5035">5035</span>
<span id="L5036" rel="#L5036">5036</span>
<span id="L5037" rel="#L5037">5037</span>
<span id="L5038" rel="#L5038">5038</span>
<span id="L5039" rel="#L5039">5039</span>
<span id="L5040" rel="#L5040">5040</span>
<span id="L5041" rel="#L5041">5041</span>
<span id="L5042" rel="#L5042">5042</span>
<span id="L5043" rel="#L5043">5043</span>
<span id="L5044" rel="#L5044">5044</span>
<span id="L5045" rel="#L5045">5045</span>
<span id="L5046" rel="#L5046">5046</span>
<span id="L5047" rel="#L5047">5047</span>
<span id="L5048" rel="#L5048">5048</span>
<span id="L5049" rel="#L5049">5049</span>
<span id="L5050" rel="#L5050">5050</span>
<span id="L5051" rel="#L5051">5051</span>
<span id="L5052" rel="#L5052">5052</span>
<span id="L5053" rel="#L5053">5053</span>
<span id="L5054" rel="#L5054">5054</span>
<span id="L5055" rel="#L5055">5055</span>
<span id="L5056" rel="#L5056">5056</span>
<span id="L5057" rel="#L5057">5057</span>
<span id="L5058" rel="#L5058">5058</span>
<span id="L5059" rel="#L5059">5059</span>
<span id="L5060" rel="#L5060">5060</span>
<span id="L5061" rel="#L5061">5061</span>
<span id="L5062" rel="#L5062">5062</span>
<span id="L5063" rel="#L5063">5063</span>
<span id="L5064" rel="#L5064">5064</span>
<span id="L5065" rel="#L5065">5065</span>
<span id="L5066" rel="#L5066">5066</span>
<span id="L5067" rel="#L5067">5067</span>
<span id="L5068" rel="#L5068">5068</span>
<span id="L5069" rel="#L5069">5069</span>
<span id="L5070" rel="#L5070">5070</span>
<span id="L5071" rel="#L5071">5071</span>
<span id="L5072" rel="#L5072">5072</span>
<span id="L5073" rel="#L5073">5073</span>
<span id="L5074" rel="#L5074">5074</span>
<span id="L5075" rel="#L5075">5075</span>
<span id="L5076" rel="#L5076">5076</span>
<span id="L5077" rel="#L5077">5077</span>
<span id="L5078" rel="#L5078">5078</span>
<span id="L5079" rel="#L5079">5079</span>
<span id="L5080" rel="#L5080">5080</span>
<span id="L5081" rel="#L5081">5081</span>
<span id="L5082" rel="#L5082">5082</span>
<span id="L5083" rel="#L5083">5083</span>
<span id="L5084" rel="#L5084">5084</span>
<span id="L5085" rel="#L5085">5085</span>
<span id="L5086" rel="#L5086">5086</span>
<span id="L5087" rel="#L5087">5087</span>
<span id="L5088" rel="#L5088">5088</span>
<span id="L5089" rel="#L5089">5089</span>
<span id="L5090" rel="#L5090">5090</span>
<span id="L5091" rel="#L5091">5091</span>
<span id="L5092" rel="#L5092">5092</span>
<span id="L5093" rel="#L5093">5093</span>
<span id="L5094" rel="#L5094">5094</span>
<span id="L5095" rel="#L5095">5095</span>
<span id="L5096" rel="#L5096">5096</span>
<span id="L5097" rel="#L5097">5097</span>
<span id="L5098" rel="#L5098">5098</span>
<span id="L5099" rel="#L5099">5099</span>
<span id="L5100" rel="#L5100">5100</span>
<span id="L5101" rel="#L5101">5101</span>
<span id="L5102" rel="#L5102">5102</span>
<span id="L5103" rel="#L5103">5103</span>
<span id="L5104" rel="#L5104">5104</span>
<span id="L5105" rel="#L5105">5105</span>
<span id="L5106" rel="#L5106">5106</span>
<span id="L5107" rel="#L5107">5107</span>
<span id="L5108" rel="#L5108">5108</span>
<span id="L5109" rel="#L5109">5109</span>
<span id="L5110" rel="#L5110">5110</span>
<span id="L5111" rel="#L5111">5111</span>
<span id="L5112" rel="#L5112">5112</span>
<span id="L5113" rel="#L5113">5113</span>
<span id="L5114" rel="#L5114">5114</span>
<span id="L5115" rel="#L5115">5115</span>
<span id="L5116" rel="#L5116">5116</span>
<span id="L5117" rel="#L5117">5117</span>
<span id="L5118" rel="#L5118">5118</span>
<span id="L5119" rel="#L5119">5119</span>
<span id="L5120" rel="#L5120">5120</span>
<span id="L5121" rel="#L5121">5121</span>
<span id="L5122" rel="#L5122">5122</span>
<span id="L5123" rel="#L5123">5123</span>
<span id="L5124" rel="#L5124">5124</span>
<span id="L5125" rel="#L5125">5125</span>
<span id="L5126" rel="#L5126">5126</span>
<span id="L5127" rel="#L5127">5127</span>
<span id="L5128" rel="#L5128">5128</span>
<span id="L5129" rel="#L5129">5129</span>
<span id="L5130" rel="#L5130">5130</span>
<span id="L5131" rel="#L5131">5131</span>
<span id="L5132" rel="#L5132">5132</span>
<span id="L5133" rel="#L5133">5133</span>
<span id="L5134" rel="#L5134">5134</span>
<span id="L5135" rel="#L5135">5135</span>
<span id="L5136" rel="#L5136">5136</span>
<span id="L5137" rel="#L5137">5137</span>
<span id="L5138" rel="#L5138">5138</span>
<span id="L5139" rel="#L5139">5139</span>
<span id="L5140" rel="#L5140">5140</span>
<span id="L5141" rel="#L5141">5141</span>
<span id="L5142" rel="#L5142">5142</span>
<span id="L5143" rel="#L5143">5143</span>
<span id="L5144" rel="#L5144">5144</span>
<span id="L5145" rel="#L5145">5145</span>
<span id="L5146" rel="#L5146">5146</span>
<span id="L5147" rel="#L5147">5147</span>
<span id="L5148" rel="#L5148">5148</span>
<span id="L5149" rel="#L5149">5149</span>
<span id="L5150" rel="#L5150">5150</span>
<span id="L5151" rel="#L5151">5151</span>
<span id="L5152" rel="#L5152">5152</span>
<span id="L5153" rel="#L5153">5153</span>
<span id="L5154" rel="#L5154">5154</span>
<span id="L5155" rel="#L5155">5155</span>
<span id="L5156" rel="#L5156">5156</span>
<span id="L5157" rel="#L5157">5157</span>
<span id="L5158" rel="#L5158">5158</span>
<span id="L5159" rel="#L5159">5159</span>
<span id="L5160" rel="#L5160">5160</span>
<span id="L5161" rel="#L5161">5161</span>
<span id="L5162" rel="#L5162">5162</span>
<span id="L5163" rel="#L5163">5163</span>
<span id="L5164" rel="#L5164">5164</span>
<span id="L5165" rel="#L5165">5165</span>
<span id="L5166" rel="#L5166">5166</span>
<span id="L5167" rel="#L5167">5167</span>
<span id="L5168" rel="#L5168">5168</span>
<span id="L5169" rel="#L5169">5169</span>
<span id="L5170" rel="#L5170">5170</span>
<span id="L5171" rel="#L5171">5171</span>
<span id="L5172" rel="#L5172">5172</span>
<span id="L5173" rel="#L5173">5173</span>
<span id="L5174" rel="#L5174">5174</span>
<span id="L5175" rel="#L5175">5175</span>
<span id="L5176" rel="#L5176">5176</span>
<span id="L5177" rel="#L5177">5177</span>
<span id="L5178" rel="#L5178">5178</span>
<span id="L5179" rel="#L5179">5179</span>
<span id="L5180" rel="#L5180">5180</span>
<span id="L5181" rel="#L5181">5181</span>
<span id="L5182" rel="#L5182">5182</span>
<span id="L5183" rel="#L5183">5183</span>
<span id="L5184" rel="#L5184">5184</span>
<span id="L5185" rel="#L5185">5185</span>
<span id="L5186" rel="#L5186">5186</span>
<span id="L5187" rel="#L5187">5187</span>
<span id="L5188" rel="#L5188">5188</span>
<span id="L5189" rel="#L5189">5189</span>
<span id="L5190" rel="#L5190">5190</span>
<span id="L5191" rel="#L5191">5191</span>
<span id="L5192" rel="#L5192">5192</span>
<span id="L5193" rel="#L5193">5193</span>
<span id="L5194" rel="#L5194">5194</span>
<span id="L5195" rel="#L5195">5195</span>
<span id="L5196" rel="#L5196">5196</span>
<span id="L5197" rel="#L5197">5197</span>
<span id="L5198" rel="#L5198">5198</span>
<span id="L5199" rel="#L5199">5199</span>
<span id="L5200" rel="#L5200">5200</span>
<span id="L5201" rel="#L5201">5201</span>
<span id="L5202" rel="#L5202">5202</span>
<span id="L5203" rel="#L5203">5203</span>
<span id="L5204" rel="#L5204">5204</span>
<span id="L5205" rel="#L5205">5205</span>
<span id="L5206" rel="#L5206">5206</span>
<span id="L5207" rel="#L5207">5207</span>
<span id="L5208" rel="#L5208">5208</span>
<span id="L5209" rel="#L5209">5209</span>
<span id="L5210" rel="#L5210">5210</span>
<span id="L5211" rel="#L5211">5211</span>
<span id="L5212" rel="#L5212">5212</span>
<span id="L5213" rel="#L5213">5213</span>
<span id="L5214" rel="#L5214">5214</span>
<span id="L5215" rel="#L5215">5215</span>
<span id="L5216" rel="#L5216">5216</span>
<span id="L5217" rel="#L5217">5217</span>
<span id="L5218" rel="#L5218">5218</span>
<span id="L5219" rel="#L5219">5219</span>
<span id="L5220" rel="#L5220">5220</span>
<span id="L5221" rel="#L5221">5221</span>
<span id="L5222" rel="#L5222">5222</span>
<span id="L5223" rel="#L5223">5223</span>
<span id="L5224" rel="#L5224">5224</span>
<span id="L5225" rel="#L5225">5225</span>
<span id="L5226" rel="#L5226">5226</span>
<span id="L5227" rel="#L5227">5227</span>
<span id="L5228" rel="#L5228">5228</span>
<span id="L5229" rel="#L5229">5229</span>
<span id="L5230" rel="#L5230">5230</span>
<span id="L5231" rel="#L5231">5231</span>
<span id="L5232" rel="#L5232">5232</span>
<span id="L5233" rel="#L5233">5233</span>
<span id="L5234" rel="#L5234">5234</span>
<span id="L5235" rel="#L5235">5235</span>
<span id="L5236" rel="#L5236">5236</span>
<span id="L5237" rel="#L5237">5237</span>
<span id="L5238" rel="#L5238">5238</span>
<span id="L5239" rel="#L5239">5239</span>
<span id="L5240" rel="#L5240">5240</span>
<span id="L5241" rel="#L5241">5241</span>
<span id="L5242" rel="#L5242">5242</span>
<span id="L5243" rel="#L5243">5243</span>
<span id="L5244" rel="#L5244">5244</span>
<span id="L5245" rel="#L5245">5245</span>
<span id="L5246" rel="#L5246">5246</span>
<span id="L5247" rel="#L5247">5247</span>
<span id="L5248" rel="#L5248">5248</span>
<span id="L5249" rel="#L5249">5249</span>
<span id="L5250" rel="#L5250">5250</span>
<span id="L5251" rel="#L5251">5251</span>
<span id="L5252" rel="#L5252">5252</span>
<span id="L5253" rel="#L5253">5253</span>
<span id="L5254" rel="#L5254">5254</span>
<span id="L5255" rel="#L5255">5255</span>
<span id="L5256" rel="#L5256">5256</span>
<span id="L5257" rel="#L5257">5257</span>
<span id="L5258" rel="#L5258">5258</span>
<span id="L5259" rel="#L5259">5259</span>
<span id="L5260" rel="#L5260">5260</span>
<span id="L5261" rel="#L5261">5261</span>
<span id="L5262" rel="#L5262">5262</span>
<span id="L5263" rel="#L5263">5263</span>
<span id="L5264" rel="#L5264">5264</span>
<span id="L5265" rel="#L5265">5265</span>
<span id="L5266" rel="#L5266">5266</span>
<span id="L5267" rel="#L5267">5267</span>
<span id="L5268" rel="#L5268">5268</span>
<span id="L5269" rel="#L5269">5269</span>
<span id="L5270" rel="#L5270">5270</span>
<span id="L5271" rel="#L5271">5271</span>
<span id="L5272" rel="#L5272">5272</span>
<span id="L5273" rel="#L5273">5273</span>
<span id="L5274" rel="#L5274">5274</span>
<span id="L5275" rel="#L5275">5275</span>
<span id="L5276" rel="#L5276">5276</span>
<span id="L5277" rel="#L5277">5277</span>
<span id="L5278" rel="#L5278">5278</span>
<span id="L5279" rel="#L5279">5279</span>
<span id="L5280" rel="#L5280">5280</span>
<span id="L5281" rel="#L5281">5281</span>
<span id="L5282" rel="#L5282">5282</span>
<span id="L5283" rel="#L5283">5283</span>
<span id="L5284" rel="#L5284">5284</span>
<span id="L5285" rel="#L5285">5285</span>
<span id="L5286" rel="#L5286">5286</span>
<span id="L5287" rel="#L5287">5287</span>
<span id="L5288" rel="#L5288">5288</span>
<span id="L5289" rel="#L5289">5289</span>
<span id="L5290" rel="#L5290">5290</span>
<span id="L5291" rel="#L5291">5291</span>
<span id="L5292" rel="#L5292">5292</span>
<span id="L5293" rel="#L5293">5293</span>
<span id="L5294" rel="#L5294">5294</span>
<span id="L5295" rel="#L5295">5295</span>
<span id="L5296" rel="#L5296">5296</span>
<span id="L5297" rel="#L5297">5297</span>
<span id="L5298" rel="#L5298">5298</span>
<span id="L5299" rel="#L5299">5299</span>
<span id="L5300" rel="#L5300">5300</span>
<span id="L5301" rel="#L5301">5301</span>
<span id="L5302" rel="#L5302">5302</span>
<span id="L5303" rel="#L5303">5303</span>
<span id="L5304" rel="#L5304">5304</span>
<span id="L5305" rel="#L5305">5305</span>
<span id="L5306" rel="#L5306">5306</span>
<span id="L5307" rel="#L5307">5307</span>
<span id="L5308" rel="#L5308">5308</span>
<span id="L5309" rel="#L5309">5309</span>
<span id="L5310" rel="#L5310">5310</span>
<span id="L5311" rel="#L5311">5311</span>
<span id="L5312" rel="#L5312">5312</span>
<span id="L5313" rel="#L5313">5313</span>
<span id="L5314" rel="#L5314">5314</span>
<span id="L5315" rel="#L5315">5315</span>
<span id="L5316" rel="#L5316">5316</span>
<span id="L5317" rel="#L5317">5317</span>
<span id="L5318" rel="#L5318">5318</span>
<span id="L5319" rel="#L5319">5319</span>
<span id="L5320" rel="#L5320">5320</span>
<span id="L5321" rel="#L5321">5321</span>
<span id="L5322" rel="#L5322">5322</span>
<span id="L5323" rel="#L5323">5323</span>
<span id="L5324" rel="#L5324">5324</span>
<span id="L5325" rel="#L5325">5325</span>
<span id="L5326" rel="#L5326">5326</span>
<span id="L5327" rel="#L5327">5327</span>
<span id="L5328" rel="#L5328">5328</span>
<span id="L5329" rel="#L5329">5329</span>
<span id="L5330" rel="#L5330">5330</span>
<span id="L5331" rel="#L5331">5331</span>
<span id="L5332" rel="#L5332">5332</span>
<span id="L5333" rel="#L5333">5333</span>
<span id="L5334" rel="#L5334">5334</span>
<span id="L5335" rel="#L5335">5335</span>
<span id="L5336" rel="#L5336">5336</span>
<span id="L5337" rel="#L5337">5337</span>
<span id="L5338" rel="#L5338">5338</span>
<span id="L5339" rel="#L5339">5339</span>
<span id="L5340" rel="#L5340">5340</span>
<span id="L5341" rel="#L5341">5341</span>
<span id="L5342" rel="#L5342">5342</span>
<span id="L5343" rel="#L5343">5343</span>
<span id="L5344" rel="#L5344">5344</span>
<span id="L5345" rel="#L5345">5345</span>
<span id="L5346" rel="#L5346">5346</span>
<span id="L5347" rel="#L5347">5347</span>
<span id="L5348" rel="#L5348">5348</span>
<span id="L5349" rel="#L5349">5349</span>
<span id="L5350" rel="#L5350">5350</span>
<span id="L5351" rel="#L5351">5351</span>
<span id="L5352" rel="#L5352">5352</span>
<span id="L5353" rel="#L5353">5353</span>
<span id="L5354" rel="#L5354">5354</span>
<span id="L5355" rel="#L5355">5355</span>
<span id="L5356" rel="#L5356">5356</span>
<span id="L5357" rel="#L5357">5357</span>
<span id="L5358" rel="#L5358">5358</span>
<span id="L5359" rel="#L5359">5359</span>
<span id="L5360" rel="#L5360">5360</span>
<span id="L5361" rel="#L5361">5361</span>
<span id="L5362" rel="#L5362">5362</span>
<span id="L5363" rel="#L5363">5363</span>
<span id="L5364" rel="#L5364">5364</span>
<span id="L5365" rel="#L5365">5365</span>
<span id="L5366" rel="#L5366">5366</span>
<span id="L5367" rel="#L5367">5367</span>
<span id="L5368" rel="#L5368">5368</span>
<span id="L5369" rel="#L5369">5369</span>
<span id="L5370" rel="#L5370">5370</span>
<span id="L5371" rel="#L5371">5371</span>
<span id="L5372" rel="#L5372">5372</span>
<span id="L5373" rel="#L5373">5373</span>
<span id="L5374" rel="#L5374">5374</span>
<span id="L5375" rel="#L5375">5375</span>
<span id="L5376" rel="#L5376">5376</span>
<span id="L5377" rel="#L5377">5377</span>
<span id="L5378" rel="#L5378">5378</span>
<span id="L5379" rel="#L5379">5379</span>
<span id="L5380" rel="#L5380">5380</span>
<span id="L5381" rel="#L5381">5381</span>
<span id="L5382" rel="#L5382">5382</span>
<span id="L5383" rel="#L5383">5383</span>
<span id="L5384" rel="#L5384">5384</span>
<span id="L5385" rel="#L5385">5385</span>
<span id="L5386" rel="#L5386">5386</span>
<span id="L5387" rel="#L5387">5387</span>
<span id="L5388" rel="#L5388">5388</span>
<span id="L5389" rel="#L5389">5389</span>
<span id="L5390" rel="#L5390">5390</span>
<span id="L5391" rel="#L5391">5391</span>
<span id="L5392" rel="#L5392">5392</span>
<span id="L5393" rel="#L5393">5393</span>
<span id="L5394" rel="#L5394">5394</span>
<span id="L5395" rel="#L5395">5395</span>
<span id="L5396" rel="#L5396">5396</span>
<span id="L5397" rel="#L5397">5397</span>
<span id="L5398" rel="#L5398">5398</span>
<span id="L5399" rel="#L5399">5399</span>
<span id="L5400" rel="#L5400">5400</span>
<span id="L5401" rel="#L5401">5401</span>
<span id="L5402" rel="#L5402">5402</span>
<span id="L5403" rel="#L5403">5403</span>
<span id="L5404" rel="#L5404">5404</span>
<span id="L5405" rel="#L5405">5405</span>
<span id="L5406" rel="#L5406">5406</span>
<span id="L5407" rel="#L5407">5407</span>
<span id="L5408" rel="#L5408">5408</span>
<span id="L5409" rel="#L5409">5409</span>
<span id="L5410" rel="#L5410">5410</span>
<span id="L5411" rel="#L5411">5411</span>
<span id="L5412" rel="#L5412">5412</span>
<span id="L5413" rel="#L5413">5413</span>
<span id="L5414" rel="#L5414">5414</span>
<span id="L5415" rel="#L5415">5415</span>
<span id="L5416" rel="#L5416">5416</span>
<span id="L5417" rel="#L5417">5417</span>
<span id="L5418" rel="#L5418">5418</span>
<span id="L5419" rel="#L5419">5419</span>
<span id="L5420" rel="#L5420">5420</span>
<span id="L5421" rel="#L5421">5421</span>
<span id="L5422" rel="#L5422">5422</span>
<span id="L5423" rel="#L5423">5423</span>
<span id="L5424" rel="#L5424">5424</span>
<span id="L5425" rel="#L5425">5425</span>
<span id="L5426" rel="#L5426">5426</span>
<span id="L5427" rel="#L5427">5427</span>
<span id="L5428" rel="#L5428">5428</span>
<span id="L5429" rel="#L5429">5429</span>
<span id="L5430" rel="#L5430">5430</span>
<span id="L5431" rel="#L5431">5431</span>
<span id="L5432" rel="#L5432">5432</span>
<span id="L5433" rel="#L5433">5433</span>
<span id="L5434" rel="#L5434">5434</span>
<span id="L5435" rel="#L5435">5435</span>
<span id="L5436" rel="#L5436">5436</span>
<span id="L5437" rel="#L5437">5437</span>
<span id="L5438" rel="#L5438">5438</span>
<span id="L5439" rel="#L5439">5439</span>
<span id="L5440" rel="#L5440">5440</span>
<span id="L5441" rel="#L5441">5441</span>
<span id="L5442" rel="#L5442">5442</span>
<span id="L5443" rel="#L5443">5443</span>
<span id="L5444" rel="#L5444">5444</span>
<span id="L5445" rel="#L5445">5445</span>
<span id="L5446" rel="#L5446">5446</span>
<span id="L5447" rel="#L5447">5447</span>
<span id="L5448" rel="#L5448">5448</span>
<span id="L5449" rel="#L5449">5449</span>
<span id="L5450" rel="#L5450">5450</span>
<span id="L5451" rel="#L5451">5451</span>
<span id="L5452" rel="#L5452">5452</span>
<span id="L5453" rel="#L5453">5453</span>
<span id="L5454" rel="#L5454">5454</span>
<span id="L5455" rel="#L5455">5455</span>
<span id="L5456" rel="#L5456">5456</span>
<span id="L5457" rel="#L5457">5457</span>
<span id="L5458" rel="#L5458">5458</span>
<span id="L5459" rel="#L5459">5459</span>
<span id="L5460" rel="#L5460">5460</span>
<span id="L5461" rel="#L5461">5461</span>
<span id="L5462" rel="#L5462">5462</span>
<span id="L5463" rel="#L5463">5463</span>
<span id="L5464" rel="#L5464">5464</span>
<span id="L5465" rel="#L5465">5465</span>
<span id="L5466" rel="#L5466">5466</span>
<span id="L5467" rel="#L5467">5467</span>
<span id="L5468" rel="#L5468">5468</span>
<span id="L5469" rel="#L5469">5469</span>
<span id="L5470" rel="#L5470">5470</span>
<span id="L5471" rel="#L5471">5471</span>
<span id="L5472" rel="#L5472">5472</span>
<span id="L5473" rel="#L5473">5473</span>
<span id="L5474" rel="#L5474">5474</span>
<span id="L5475" rel="#L5475">5475</span>
<span id="L5476" rel="#L5476">5476</span>
<span id="L5477" rel="#L5477">5477</span>
<span id="L5478" rel="#L5478">5478</span>
<span id="L5479" rel="#L5479">5479</span>
<span id="L5480" rel="#L5480">5480</span>
<span id="L5481" rel="#L5481">5481</span>
<span id="L5482" rel="#L5482">5482</span>
<span id="L5483" rel="#L5483">5483</span>
<span id="L5484" rel="#L5484">5484</span>
<span id="L5485" rel="#L5485">5485</span>
<span id="L5486" rel="#L5486">5486</span>
<span id="L5487" rel="#L5487">5487</span>
<span id="L5488" rel="#L5488">5488</span>
<span id="L5489" rel="#L5489">5489</span>
<span id="L5490" rel="#L5490">5490</span>
<span id="L5491" rel="#L5491">5491</span>
<span id="L5492" rel="#L5492">5492</span>
<span id="L5493" rel="#L5493">5493</span>
<span id="L5494" rel="#L5494">5494</span>
<span id="L5495" rel="#L5495">5495</span>
<span id="L5496" rel="#L5496">5496</span>
<span id="L5497" rel="#L5497">5497</span>
<span id="L5498" rel="#L5498">5498</span>
<span id="L5499" rel="#L5499">5499</span>
<span id="L5500" rel="#L5500">5500</span>
<span id="L5501" rel="#L5501">5501</span>
<span id="L5502" rel="#L5502">5502</span>
<span id="L5503" rel="#L5503">5503</span>
<span id="L5504" rel="#L5504">5504</span>
<span id="L5505" rel="#L5505">5505</span>
<span id="L5506" rel="#L5506">5506</span>
<span id="L5507" rel="#L5507">5507</span>
<span id="L5508" rel="#L5508">5508</span>
<span id="L5509" rel="#L5509">5509</span>
<span id="L5510" rel="#L5510">5510</span>
<span id="L5511" rel="#L5511">5511</span>
<span id="L5512" rel="#L5512">5512</span>
<span id="L5513" rel="#L5513">5513</span>
<span id="L5514" rel="#L5514">5514</span>
<span id="L5515" rel="#L5515">5515</span>
<span id="L5516" rel="#L5516">5516</span>
<span id="L5517" rel="#L5517">5517</span>
<span id="L5518" rel="#L5518">5518</span>
<span id="L5519" rel="#L5519">5519</span>
<span id="L5520" rel="#L5520">5520</span>
<span id="L5521" rel="#L5521">5521</span>
<span id="L5522" rel="#L5522">5522</span>
<span id="L5523" rel="#L5523">5523</span>
<span id="L5524" rel="#L5524">5524</span>
<span id="L5525" rel="#L5525">5525</span>
<span id="L5526" rel="#L5526">5526</span>
<span id="L5527" rel="#L5527">5527</span>
<span id="L5528" rel="#L5528">5528</span>
<span id="L5529" rel="#L5529">5529</span>
<span id="L5530" rel="#L5530">5530</span>
<span id="L5531" rel="#L5531">5531</span>
<span id="L5532" rel="#L5532">5532</span>
<span id="L5533" rel="#L5533">5533</span>
<span id="L5534" rel="#L5534">5534</span>
<span id="L5535" rel="#L5535">5535</span>
<span id="L5536" rel="#L5536">5536</span>
<span id="L5537" rel="#L5537">5537</span>
<span id="L5538" rel="#L5538">5538</span>
<span id="L5539" rel="#L5539">5539</span>
<span id="L5540" rel="#L5540">5540</span>
<span id="L5541" rel="#L5541">5541</span>
<span id="L5542" rel="#L5542">5542</span>
<span id="L5543" rel="#L5543">5543</span>
<span id="L5544" rel="#L5544">5544</span>
<span id="L5545" rel="#L5545">5545</span>
<span id="L5546" rel="#L5546">5546</span>
<span id="L5547" rel="#L5547">5547</span>
<span id="L5548" rel="#L5548">5548</span>
<span id="L5549" rel="#L5549">5549</span>
<span id="L5550" rel="#L5550">5550</span>
<span id="L5551" rel="#L5551">5551</span>
<span id="L5552" rel="#L5552">5552</span>
<span id="L5553" rel="#L5553">5553</span>
<span id="L5554" rel="#L5554">5554</span>
<span id="L5555" rel="#L5555">5555</span>
<span id="L5556" rel="#L5556">5556</span>
<span id="L5557" rel="#L5557">5557</span>
<span id="L5558" rel="#L5558">5558</span>
<span id="L5559" rel="#L5559">5559</span>
<span id="L5560" rel="#L5560">5560</span>
<span id="L5561" rel="#L5561">5561</span>
<span id="L5562" rel="#L5562">5562</span>
<span id="L5563" rel="#L5563">5563</span>
<span id="L5564" rel="#L5564">5564</span>
<span id="L5565" rel="#L5565">5565</span>
<span id="L5566" rel="#L5566">5566</span>
<span id="L5567" rel="#L5567">5567</span>
<span id="L5568" rel="#L5568">5568</span>
<span id="L5569" rel="#L5569">5569</span>
<span id="L5570" rel="#L5570">5570</span>
<span id="L5571" rel="#L5571">5571</span>
<span id="L5572" rel="#L5572">5572</span>
<span id="L5573" rel="#L5573">5573</span>
<span id="L5574" rel="#L5574">5574</span>
<span id="L5575" rel="#L5575">5575</span>
<span id="L5576" rel="#L5576">5576</span>
<span id="L5577" rel="#L5577">5577</span>
<span id="L5578" rel="#L5578">5578</span>
<span id="L5579" rel="#L5579">5579</span>
<span id="L5580" rel="#L5580">5580</span>
<span id="L5581" rel="#L5581">5581</span>
<span id="L5582" rel="#L5582">5582</span>
<span id="L5583" rel="#L5583">5583</span>
<span id="L5584" rel="#L5584">5584</span>
<span id="L5585" rel="#L5585">5585</span>
<span id="L5586" rel="#L5586">5586</span>
<span id="L5587" rel="#L5587">5587</span>
<span id="L5588" rel="#L5588">5588</span>
<span id="L5589" rel="#L5589">5589</span>
<span id="L5590" rel="#L5590">5590</span>
<span id="L5591" rel="#L5591">5591</span>
<span id="L5592" rel="#L5592">5592</span>
<span id="L5593" rel="#L5593">5593</span>
<span id="L5594" rel="#L5594">5594</span>
<span id="L5595" rel="#L5595">5595</span>
<span id="L5596" rel="#L5596">5596</span>
<span id="L5597" rel="#L5597">5597</span>
<span id="L5598" rel="#L5598">5598</span>
<span id="L5599" rel="#L5599">5599</span>
<span id="L5600" rel="#L5600">5600</span>
<span id="L5601" rel="#L5601">5601</span>
<span id="L5602" rel="#L5602">5602</span>
<span id="L5603" rel="#L5603">5603</span>
<span id="L5604" rel="#L5604">5604</span>
<span id="L5605" rel="#L5605">5605</span>
<span id="L5606" rel="#L5606">5606</span>
<span id="L5607" rel="#L5607">5607</span>
<span id="L5608" rel="#L5608">5608</span>
<span id="L5609" rel="#L5609">5609</span>
<span id="L5610" rel="#L5610">5610</span>
<span id="L5611" rel="#L5611">5611</span>
<span id="L5612" rel="#L5612">5612</span>
<span id="L5613" rel="#L5613">5613</span>
<span id="L5614" rel="#L5614">5614</span>
<span id="L5615" rel="#L5615">5615</span>
<span id="L5616" rel="#L5616">5616</span>
<span id="L5617" rel="#L5617">5617</span>
<span id="L5618" rel="#L5618">5618</span>
<span id="L5619" rel="#L5619">5619</span>
<span id="L5620" rel="#L5620">5620</span>
<span id="L5621" rel="#L5621">5621</span>
<span id="L5622" rel="#L5622">5622</span>
<span id="L5623" rel="#L5623">5623</span>
<span id="L5624" rel="#L5624">5624</span>
<span id="L5625" rel="#L5625">5625</span>
<span id="L5626" rel="#L5626">5626</span>
<span id="L5627" rel="#L5627">5627</span>
<span id="L5628" rel="#L5628">5628</span>
<span id="L5629" rel="#L5629">5629</span>
<span id="L5630" rel="#L5630">5630</span>
<span id="L5631" rel="#L5631">5631</span>
<span id="L5632" rel="#L5632">5632</span>
<span id="L5633" rel="#L5633">5633</span>
<span id="L5634" rel="#L5634">5634</span>
<span id="L5635" rel="#L5635">5635</span>
<span id="L5636" rel="#L5636">5636</span>
<span id="L5637" rel="#L5637">5637</span>
<span id="L5638" rel="#L5638">5638</span>
<span id="L5639" rel="#L5639">5639</span>
<span id="L5640" rel="#L5640">5640</span>
<span id="L5641" rel="#L5641">5641</span>
<span id="L5642" rel="#L5642">5642</span>
<span id="L5643" rel="#L5643">5643</span>
<span id="L5644" rel="#L5644">5644</span>
<span id="L5645" rel="#L5645">5645</span>
<span id="L5646" rel="#L5646">5646</span>
<span id="L5647" rel="#L5647">5647</span>
<span id="L5648" rel="#L5648">5648</span>
<span id="L5649" rel="#L5649">5649</span>
<span id="L5650" rel="#L5650">5650</span>
<span id="L5651" rel="#L5651">5651</span>
<span id="L5652" rel="#L5652">5652</span>
<span id="L5653" rel="#L5653">5653</span>
<span id="L5654" rel="#L5654">5654</span>
<span id="L5655" rel="#L5655">5655</span>
<span id="L5656" rel="#L5656">5656</span>
<span id="L5657" rel="#L5657">5657</span>
<span id="L5658" rel="#L5658">5658</span>
<span id="L5659" rel="#L5659">5659</span>
<span id="L5660" rel="#L5660">5660</span>
<span id="L5661" rel="#L5661">5661</span>
<span id="L5662" rel="#L5662">5662</span>
<span id="L5663" rel="#L5663">5663</span>
<span id="L5664" rel="#L5664">5664</span>
<span id="L5665" rel="#L5665">5665</span>
<span id="L5666" rel="#L5666">5666</span>
<span id="L5667" rel="#L5667">5667</span>
<span id="L5668" rel="#L5668">5668</span>
<span id="L5669" rel="#L5669">5669</span>
<span id="L5670" rel="#L5670">5670</span>
<span id="L5671" rel="#L5671">5671</span>
<span id="L5672" rel="#L5672">5672</span>
<span id="L5673" rel="#L5673">5673</span>
<span id="L5674" rel="#L5674">5674</span>
<span id="L5675" rel="#L5675">5675</span>
<span id="L5676" rel="#L5676">5676</span>
<span id="L5677" rel="#L5677">5677</span>
<span id="L5678" rel="#L5678">5678</span>
<span id="L5679" rel="#L5679">5679</span>
<span id="L5680" rel="#L5680">5680</span>
<span id="L5681" rel="#L5681">5681</span>
<span id="L5682" rel="#L5682">5682</span>
<span id="L5683" rel="#L5683">5683</span>
<span id="L5684" rel="#L5684">5684</span>
<span id="L5685" rel="#L5685">5685</span>
<span id="L5686" rel="#L5686">5686</span>
<span id="L5687" rel="#L5687">5687</span>
<span id="L5688" rel="#L5688">5688</span>
<span id="L5689" rel="#L5689">5689</span>
<span id="L5690" rel="#L5690">5690</span>
<span id="L5691" rel="#L5691">5691</span>
<span id="L5692" rel="#L5692">5692</span>
<span id="L5693" rel="#L5693">5693</span>
<span id="L5694" rel="#L5694">5694</span>
<span id="L5695" rel="#L5695">5695</span>
<span id="L5696" rel="#L5696">5696</span>
<span id="L5697" rel="#L5697">5697</span>
<span id="L5698" rel="#L5698">5698</span>
<span id="L5699" rel="#L5699">5699</span>
<span id="L5700" rel="#L5700">5700</span>
<span id="L5701" rel="#L5701">5701</span>
<span id="L5702" rel="#L5702">5702</span>
<span id="L5703" rel="#L5703">5703</span>
<span id="L5704" rel="#L5704">5704</span>
<span id="L5705" rel="#L5705">5705</span>
<span id="L5706" rel="#L5706">5706</span>
<span id="L5707" rel="#L5707">5707</span>
<span id="L5708" rel="#L5708">5708</span>
<span id="L5709" rel="#L5709">5709</span>
<span id="L5710" rel="#L5710">5710</span>
<span id="L5711" rel="#L5711">5711</span>
<span id="L5712" rel="#L5712">5712</span>
<span id="L5713" rel="#L5713">5713</span>
<span id="L5714" rel="#L5714">5714</span>
<span id="L5715" rel="#L5715">5715</span>
<span id="L5716" rel="#L5716">5716</span>
<span id="L5717" rel="#L5717">5717</span>
<span id="L5718" rel="#L5718">5718</span>
<span id="L5719" rel="#L5719">5719</span>
<span id="L5720" rel="#L5720">5720</span>
<span id="L5721" rel="#L5721">5721</span>
<span id="L5722" rel="#L5722">5722</span>
<span id="L5723" rel="#L5723">5723</span>
<span id="L5724" rel="#L5724">5724</span>
<span id="L5725" rel="#L5725">5725</span>
<span id="L5726" rel="#L5726">5726</span>
<span id="L5727" rel="#L5727">5727</span>
<span id="L5728" rel="#L5728">5728</span>
<span id="L5729" rel="#L5729">5729</span>
<span id="L5730" rel="#L5730">5730</span>
<span id="L5731" rel="#L5731">5731</span>
<span id="L5732" rel="#L5732">5732</span>
<span id="L5733" rel="#L5733">5733</span>
<span id="L5734" rel="#L5734">5734</span>
<span id="L5735" rel="#L5735">5735</span>
<span id="L5736" rel="#L5736">5736</span>
<span id="L5737" rel="#L5737">5737</span>
<span id="L5738" rel="#L5738">5738</span>
<span id="L5739" rel="#L5739">5739</span>
<span id="L5740" rel="#L5740">5740</span>
<span id="L5741" rel="#L5741">5741</span>
<span id="L5742" rel="#L5742">5742</span>
<span id="L5743" rel="#L5743">5743</span>
<span id="L5744" rel="#L5744">5744</span>
<span id="L5745" rel="#L5745">5745</span>
<span id="L5746" rel="#L5746">5746</span>
<span id="L5747" rel="#L5747">5747</span>
<span id="L5748" rel="#L5748">5748</span>
<span id="L5749" rel="#L5749">5749</span>
<span id="L5750" rel="#L5750">5750</span>
<span id="L5751" rel="#L5751">5751</span>
<span id="L5752" rel="#L5752">5752</span>
<span id="L5753" rel="#L5753">5753</span>
<span id="L5754" rel="#L5754">5754</span>
<span id="L5755" rel="#L5755">5755</span>
<span id="L5756" rel="#L5756">5756</span>
<span id="L5757" rel="#L5757">5757</span>
<span id="L5758" rel="#L5758">5758</span>
<span id="L5759" rel="#L5759">5759</span>
<span id="L5760" rel="#L5760">5760</span>
<span id="L5761" rel="#L5761">5761</span>
<span id="L5762" rel="#L5762">5762</span>
<span id="L5763" rel="#L5763">5763</span>
<span id="L5764" rel="#L5764">5764</span>
<span id="L5765" rel="#L5765">5765</span>
<span id="L5766" rel="#L5766">5766</span>
<span id="L5767" rel="#L5767">5767</span>
<span id="L5768" rel="#L5768">5768</span>
<span id="L5769" rel="#L5769">5769</span>
<span id="L5770" rel="#L5770">5770</span>
<span id="L5771" rel="#L5771">5771</span>
<span id="L5772" rel="#L5772">5772</span>
<span id="L5773" rel="#L5773">5773</span>
<span id="L5774" rel="#L5774">5774</span>
<span id="L5775" rel="#L5775">5775</span>
<span id="L5776" rel="#L5776">5776</span>
<span id="L5777" rel="#L5777">5777</span>
<span id="L5778" rel="#L5778">5778</span>
<span id="L5779" rel="#L5779">5779</span>
<span id="L5780" rel="#L5780">5780</span>
<span id="L5781" rel="#L5781">5781</span>
<span id="L5782" rel="#L5782">5782</span>
<span id="L5783" rel="#L5783">5783</span>
<span id="L5784" rel="#L5784">5784</span>
<span id="L5785" rel="#L5785">5785</span>
<span id="L5786" rel="#L5786">5786</span>
<span id="L5787" rel="#L5787">5787</span>
<span id="L5788" rel="#L5788">5788</span>
<span id="L5789" rel="#L5789">5789</span>
<span id="L5790" rel="#L5790">5790</span>
<span id="L5791" rel="#L5791">5791</span>
<span id="L5792" rel="#L5792">5792</span>
<span id="L5793" rel="#L5793">5793</span>
<span id="L5794" rel="#L5794">5794</span>
<span id="L5795" rel="#L5795">5795</span>
<span id="L5796" rel="#L5796">5796</span>
<span id="L5797" rel="#L5797">5797</span>
<span id="L5798" rel="#L5798">5798</span>
<span id="L5799" rel="#L5799">5799</span>
<span id="L5800" rel="#L5800">5800</span>
<span id="L5801" rel="#L5801">5801</span>
<span id="L5802" rel="#L5802">5802</span>
<span id="L5803" rel="#L5803">5803</span>
<span id="L5804" rel="#L5804">5804</span>
<span id="L5805" rel="#L5805">5805</span>
<span id="L5806" rel="#L5806">5806</span>
<span id="L5807" rel="#L5807">5807</span>
<span id="L5808" rel="#L5808">5808</span>
<span id="L5809" rel="#L5809">5809</span>
<span id="L5810" rel="#L5810">5810</span>
<span id="L5811" rel="#L5811">5811</span>
<span id="L5812" rel="#L5812">5812</span>
<span id="L5813" rel="#L5813">5813</span>
<span id="L5814" rel="#L5814">5814</span>
<span id="L5815" rel="#L5815">5815</span>
<span id="L5816" rel="#L5816">5816</span>
<span id="L5817" rel="#L5817">5817</span>
<span id="L5818" rel="#L5818">5818</span>
<span id="L5819" rel="#L5819">5819</span>
<span id="L5820" rel="#L5820">5820</span>
<span id="L5821" rel="#L5821">5821</span>
<span id="L5822" rel="#L5822">5822</span>
<span id="L5823" rel="#L5823">5823</span>
<span id="L5824" rel="#L5824">5824</span>
<span id="L5825" rel="#L5825">5825</span>
<span id="L5826" rel="#L5826">5826</span>
<span id="L5827" rel="#L5827">5827</span>
<span id="L5828" rel="#L5828">5828</span>
<span id="L5829" rel="#L5829">5829</span>
<span id="L5830" rel="#L5830">5830</span>
<span id="L5831" rel="#L5831">5831</span>
<span id="L5832" rel="#L5832">5832</span>
<span id="L5833" rel="#L5833">5833</span>
<span id="L5834" rel="#L5834">5834</span>
<span id="L5835" rel="#L5835">5835</span>
<span id="L5836" rel="#L5836">5836</span>
<span id="L5837" rel="#L5837">5837</span>
<span id="L5838" rel="#L5838">5838</span>
<span id="L5839" rel="#L5839">5839</span>
<span id="L5840" rel="#L5840">5840</span>
<span id="L5841" rel="#L5841">5841</span>
<span id="L5842" rel="#L5842">5842</span>
<span id="L5843" rel="#L5843">5843</span>
<span id="L5844" rel="#L5844">5844</span>
<span id="L5845" rel="#L5845">5845</span>
<span id="L5846" rel="#L5846">5846</span>
<span id="L5847" rel="#L5847">5847</span>
<span id="L5848" rel="#L5848">5848</span>
<span id="L5849" rel="#L5849">5849</span>
<span id="L5850" rel="#L5850">5850</span>
<span id="L5851" rel="#L5851">5851</span>
<span id="L5852" rel="#L5852">5852</span>
<span id="L5853" rel="#L5853">5853</span>
<span id="L5854" rel="#L5854">5854</span>
<span id="L5855" rel="#L5855">5855</span>
<span id="L5856" rel="#L5856">5856</span>
<span id="L5857" rel="#L5857">5857</span>
<span id="L5858" rel="#L5858">5858</span>
<span id="L5859" rel="#L5859">5859</span>
<span id="L5860" rel="#L5860">5860</span>
<span id="L5861" rel="#L5861">5861</span>
<span id="L5862" rel="#L5862">5862</span>
<span id="L5863" rel="#L5863">5863</span>
<span id="L5864" rel="#L5864">5864</span>
<span id="L5865" rel="#L5865">5865</span>
<span id="L5866" rel="#L5866">5866</span>
<span id="L5867" rel="#L5867">5867</span>
<span id="L5868" rel="#L5868">5868</span>
<span id="L5869" rel="#L5869">5869</span>
<span id="L5870" rel="#L5870">5870</span>
<span id="L5871" rel="#L5871">5871</span>
<span id="L5872" rel="#L5872">5872</span>
<span id="L5873" rel="#L5873">5873</span>
<span id="L5874" rel="#L5874">5874</span>
<span id="L5875" rel="#L5875">5875</span>
<span id="L5876" rel="#L5876">5876</span>
<span id="L5877" rel="#L5877">5877</span>
<span id="L5878" rel="#L5878">5878</span>
<span id="L5879" rel="#L5879">5879</span>
<span id="L5880" rel="#L5880">5880</span>
<span id="L5881" rel="#L5881">5881</span>
<span id="L5882" rel="#L5882">5882</span>
<span id="L5883" rel="#L5883">5883</span>
<span id="L5884" rel="#L5884">5884</span>
<span id="L5885" rel="#L5885">5885</span>
<span id="L5886" rel="#L5886">5886</span>
<span id="L5887" rel="#L5887">5887</span>
<span id="L5888" rel="#L5888">5888</span>
<span id="L5889" rel="#L5889">5889</span>
<span id="L5890" rel="#L5890">5890</span>
<span id="L5891" rel="#L5891">5891</span>
<span id="L5892" rel="#L5892">5892</span>
<span id="L5893" rel="#L5893">5893</span>
<span id="L5894" rel="#L5894">5894</span>
<span id="L5895" rel="#L5895">5895</span>
<span id="L5896" rel="#L5896">5896</span>
<span id="L5897" rel="#L5897">5897</span>
<span id="L5898" rel="#L5898">5898</span>
<span id="L5899" rel="#L5899">5899</span>
<span id="L5900" rel="#L5900">5900</span>
<span id="L5901" rel="#L5901">5901</span>
<span id="L5902" rel="#L5902">5902</span>
<span id="L5903" rel="#L5903">5903</span>
<span id="L5904" rel="#L5904">5904</span>
<span id="L5905" rel="#L5905">5905</span>
<span id="L5906" rel="#L5906">5906</span>
<span id="L5907" rel="#L5907">5907</span>
<span id="L5908" rel="#L5908">5908</span>
<span id="L5909" rel="#L5909">5909</span>
<span id="L5910" rel="#L5910">5910</span>
<span id="L5911" rel="#L5911">5911</span>
<span id="L5912" rel="#L5912">5912</span>
<span id="L5913" rel="#L5913">5913</span>
<span id="L5914" rel="#L5914">5914</span>
<span id="L5915" rel="#L5915">5915</span>
<span id="L5916" rel="#L5916">5916</span>
<span id="L5917" rel="#L5917">5917</span>
<span id="L5918" rel="#L5918">5918</span>
<span id="L5919" rel="#L5919">5919</span>
<span id="L5920" rel="#L5920">5920</span>
<span id="L5921" rel="#L5921">5921</span>
<span id="L5922" rel="#L5922">5922</span>
<span id="L5923" rel="#L5923">5923</span>
<span id="L5924" rel="#L5924">5924</span>
<span id="L5925" rel="#L5925">5925</span>
<span id="L5926" rel="#L5926">5926</span>
<span id="L5927" rel="#L5927">5927</span>
<span id="L5928" rel="#L5928">5928</span>
<span id="L5929" rel="#L5929">5929</span>
<span id="L5930" rel="#L5930">5930</span>
<span id="L5931" rel="#L5931">5931</span>
<span id="L5932" rel="#L5932">5932</span>
<span id="L5933" rel="#L5933">5933</span>
<span id="L5934" rel="#L5934">5934</span>
<span id="L5935" rel="#L5935">5935</span>
<span id="L5936" rel="#L5936">5936</span>
<span id="L5937" rel="#L5937">5937</span>
<span id="L5938" rel="#L5938">5938</span>
<span id="L5939" rel="#L5939">5939</span>
<span id="L5940" rel="#L5940">5940</span>
<span id="L5941" rel="#L5941">5941</span>
<span id="L5942" rel="#L5942">5942</span>
<span id="L5943" rel="#L5943">5943</span>
<span id="L5944" rel="#L5944">5944</span>
<span id="L5945" rel="#L5945">5945</span>
<span id="L5946" rel="#L5946">5946</span>
<span id="L5947" rel="#L5947">5947</span>
<span id="L5948" rel="#L5948">5948</span>
<span id="L5949" rel="#L5949">5949</span>
<span id="L5950" rel="#L5950">5950</span>
<span id="L5951" rel="#L5951">5951</span>
<span id="L5952" rel="#L5952">5952</span>
<span id="L5953" rel="#L5953">5953</span>
<span id="L5954" rel="#L5954">5954</span>
<span id="L5955" rel="#L5955">5955</span>
<span id="L5956" rel="#L5956">5956</span>
<span id="L5957" rel="#L5957">5957</span>
<span id="L5958" rel="#L5958">5958</span>
<span id="L5959" rel="#L5959">5959</span>
<span id="L5960" rel="#L5960">5960</span>
<span id="L5961" rel="#L5961">5961</span>
<span id="L5962" rel="#L5962">5962</span>
<span id="L5963" rel="#L5963">5963</span>
<span id="L5964" rel="#L5964">5964</span>
<span id="L5965" rel="#L5965">5965</span>
<span id="L5966" rel="#L5966">5966</span>
<span id="L5967" rel="#L5967">5967</span>
<span id="L5968" rel="#L5968">5968</span>
<span id="L5969" rel="#L5969">5969</span>
<span id="L5970" rel="#L5970">5970</span>
<span id="L5971" rel="#L5971">5971</span>
<span id="L5972" rel="#L5972">5972</span>
<span id="L5973" rel="#L5973">5973</span>
<span id="L5974" rel="#L5974">5974</span>
<span id="L5975" rel="#L5975">5975</span>
<span id="L5976" rel="#L5976">5976</span>
<span id="L5977" rel="#L5977">5977</span>
<span id="L5978" rel="#L5978">5978</span>
<span id="L5979" rel="#L5979">5979</span>
<span id="L5980" rel="#L5980">5980</span>
<span id="L5981" rel="#L5981">5981</span>
<span id="L5982" rel="#L5982">5982</span>
<span id="L5983" rel="#L5983">5983</span>
<span id="L5984" rel="#L5984">5984</span>
<span id="L5985" rel="#L5985">5985</span>
<span id="L5986" rel="#L5986">5986</span>
<span id="L5987" rel="#L5987">5987</span>
<span id="L5988" rel="#L5988">5988</span>
<span id="L5989" rel="#L5989">5989</span>
<span id="L5990" rel="#L5990">5990</span>
<span id="L5991" rel="#L5991">5991</span>
<span id="L5992" rel="#L5992">5992</span>
<span id="L5993" rel="#L5993">5993</span>
<span id="L5994" rel="#L5994">5994</span>
<span id="L5995" rel="#L5995">5995</span>
<span id="L5996" rel="#L5996">5996</span>
<span id="L5997" rel="#L5997">5997</span>
<span id="L5998" rel="#L5998">5998</span>
<span id="L5999" rel="#L5999">5999</span>
<span id="L6000" rel="#L6000">6000</span>
<span id="L6001" rel="#L6001">6001</span>
<span id="L6002" rel="#L6002">6002</span>
<span id="L6003" rel="#L6003">6003</span>
<span id="L6004" rel="#L6004">6004</span>
<span id="L6005" rel="#L6005">6005</span>
<span id="L6006" rel="#L6006">6006</span>
<span id="L6007" rel="#L6007">6007</span>
<span id="L6008" rel="#L6008">6008</span>
<span id="L6009" rel="#L6009">6009</span>
<span id="L6010" rel="#L6010">6010</span>
<span id="L6011" rel="#L6011">6011</span>
<span id="L6012" rel="#L6012">6012</span>
<span id="L6013" rel="#L6013">6013</span>
<span id="L6014" rel="#L6014">6014</span>
<span id="L6015" rel="#L6015">6015</span>
<span id="L6016" rel="#L6016">6016</span>
<span id="L6017" rel="#L6017">6017</span>
<span id="L6018" rel="#L6018">6018</span>
<span id="L6019" rel="#L6019">6019</span>
<span id="L6020" rel="#L6020">6020</span>
<span id="L6021" rel="#L6021">6021</span>
<span id="L6022" rel="#L6022">6022</span>
<span id="L6023" rel="#L6023">6023</span>
<span id="L6024" rel="#L6024">6024</span>
<span id="L6025" rel="#L6025">6025</span>
<span id="L6026" rel="#L6026">6026</span>
<span id="L6027" rel="#L6027">6027</span>
<span id="L6028" rel="#L6028">6028</span>
<span id="L6029" rel="#L6029">6029</span>
<span id="L6030" rel="#L6030">6030</span>
<span id="L6031" rel="#L6031">6031</span>
<span id="L6032" rel="#L6032">6032</span>
<span id="L6033" rel="#L6033">6033</span>
<span id="L6034" rel="#L6034">6034</span>
<span id="L6035" rel="#L6035">6035</span>
<span id="L6036" rel="#L6036">6036</span>
<span id="L6037" rel="#L6037">6037</span>
<span id="L6038" rel="#L6038">6038</span>
<span id="L6039" rel="#L6039">6039</span>
<span id="L6040" rel="#L6040">6040</span>
<span id="L6041" rel="#L6041">6041</span>
<span id="L6042" rel="#L6042">6042</span>
<span id="L6043" rel="#L6043">6043</span>
<span id="L6044" rel="#L6044">6044</span>
<span id="L6045" rel="#L6045">6045</span>
<span id="L6046" rel="#L6046">6046</span>
<span id="L6047" rel="#L6047">6047</span>
<span id="L6048" rel="#L6048">6048</span>
<span id="L6049" rel="#L6049">6049</span>
<span id="L6050" rel="#L6050">6050</span>
<span id="L6051" rel="#L6051">6051</span>
<span id="L6052" rel="#L6052">6052</span>
<span id="L6053" rel="#L6053">6053</span>
<span id="L6054" rel="#L6054">6054</span>
<span id="L6055" rel="#L6055">6055</span>
<span id="L6056" rel="#L6056">6056</span>
<span id="L6057" rel="#L6057">6057</span>
<span id="L6058" rel="#L6058">6058</span>
<span id="L6059" rel="#L6059">6059</span>
<span id="L6060" rel="#L6060">6060</span>
<span id="L6061" rel="#L6061">6061</span>
<span id="L6062" rel="#L6062">6062</span>
<span id="L6063" rel="#L6063">6063</span>
<span id="L6064" rel="#L6064">6064</span>
<span id="L6065" rel="#L6065">6065</span>
<span id="L6066" rel="#L6066">6066</span>
<span id="L6067" rel="#L6067">6067</span>
<span id="L6068" rel="#L6068">6068</span>
<span id="L6069" rel="#L6069">6069</span>
<span id="L6070" rel="#L6070">6070</span>
<span id="L6071" rel="#L6071">6071</span>
<span id="L6072" rel="#L6072">6072</span>
<span id="L6073" rel="#L6073">6073</span>
<span id="L6074" rel="#L6074">6074</span>
<span id="L6075" rel="#L6075">6075</span>
<span id="L6076" rel="#L6076">6076</span>
<span id="L6077" rel="#L6077">6077</span>
<span id="L6078" rel="#L6078">6078</span>
<span id="L6079" rel="#L6079">6079</span>
<span id="L6080" rel="#L6080">6080</span>
<span id="L6081" rel="#L6081">6081</span>
<span id="L6082" rel="#L6082">6082</span>
<span id="L6083" rel="#L6083">6083</span>
<span id="L6084" rel="#L6084">6084</span>
<span id="L6085" rel="#L6085">6085</span>
<span id="L6086" rel="#L6086">6086</span>
<span id="L6087" rel="#L6087">6087</span>
<span id="L6088" rel="#L6088">6088</span>
<span id="L6089" rel="#L6089">6089</span>
<span id="L6090" rel="#L6090">6090</span>
<span id="L6091" rel="#L6091">6091</span>
<span id="L6092" rel="#L6092">6092</span>
<span id="L6093" rel="#L6093">6093</span>
<span id="L6094" rel="#L6094">6094</span>
<span id="L6095" rel="#L6095">6095</span>
<span id="L6096" rel="#L6096">6096</span>
<span id="L6097" rel="#L6097">6097</span>
<span id="L6098" rel="#L6098">6098</span>
<span id="L6099" rel="#L6099">6099</span>
<span id="L6100" rel="#L6100">6100</span>
<span id="L6101" rel="#L6101">6101</span>
<span id="L6102" rel="#L6102">6102</span>
<span id="L6103" rel="#L6103">6103</span>
<span id="L6104" rel="#L6104">6104</span>
<span id="L6105" rel="#L6105">6105</span>
<span id="L6106" rel="#L6106">6106</span>
<span id="L6107" rel="#L6107">6107</span>
<span id="L6108" rel="#L6108">6108</span>
<span id="L6109" rel="#L6109">6109</span>
<span id="L6110" rel="#L6110">6110</span>
<span id="L6111" rel="#L6111">6111</span>
<span id="L6112" rel="#L6112">6112</span>
<span id="L6113" rel="#L6113">6113</span>
<span id="L6114" rel="#L6114">6114</span>
<span id="L6115" rel="#L6115">6115</span>
<span id="L6116" rel="#L6116">6116</span>
<span id="L6117" rel="#L6117">6117</span>
<span id="L6118" rel="#L6118">6118</span>
<span id="L6119" rel="#L6119">6119</span>
<span id="L6120" rel="#L6120">6120</span>
<span id="L6121" rel="#L6121">6121</span>
<span id="L6122" rel="#L6122">6122</span>
<span id="L6123" rel="#L6123">6123</span>
<span id="L6124" rel="#L6124">6124</span>
<span id="L6125" rel="#L6125">6125</span>
<span id="L6126" rel="#L6126">6126</span>
<span id="L6127" rel="#L6127">6127</span>
<span id="L6128" rel="#L6128">6128</span>
<span id="L6129" rel="#L6129">6129</span>
<span id="L6130" rel="#L6130">6130</span>
<span id="L6131" rel="#L6131">6131</span>
<span id="L6132" rel="#L6132">6132</span>
<span id="L6133" rel="#L6133">6133</span>
<span id="L6134" rel="#L6134">6134</span>
<span id="L6135" rel="#L6135">6135</span>
<span id="L6136" rel="#L6136">6136</span>
<span id="L6137" rel="#L6137">6137</span>
<span id="L6138" rel="#L6138">6138</span>
<span id="L6139" rel="#L6139">6139</span>
<span id="L6140" rel="#L6140">6140</span>
<span id="L6141" rel="#L6141">6141</span>
<span id="L6142" rel="#L6142">6142</span>
<span id="L6143" rel="#L6143">6143</span>
<span id="L6144" rel="#L6144">6144</span>
<span id="L6145" rel="#L6145">6145</span>
<span id="L6146" rel="#L6146">6146</span>
<span id="L6147" rel="#L6147">6147</span>
<span id="L6148" rel="#L6148">6148</span>
<span id="L6149" rel="#L6149">6149</span>
<span id="L6150" rel="#L6150">6150</span>
<span id="L6151" rel="#L6151">6151</span>
<span id="L6152" rel="#L6152">6152</span>
<span id="L6153" rel="#L6153">6153</span>
<span id="L6154" rel="#L6154">6154</span>
<span id="L6155" rel="#L6155">6155</span>
<span id="L6156" rel="#L6156">6156</span>
<span id="L6157" rel="#L6157">6157</span>
<span id="L6158" rel="#L6158">6158</span>
<span id="L6159" rel="#L6159">6159</span>
<span id="L6160" rel="#L6160">6160</span>
<span id="L6161" rel="#L6161">6161</span>
<span id="L6162" rel="#L6162">6162</span>
<span id="L6163" rel="#L6163">6163</span>
<span id="L6164" rel="#L6164">6164</span>
<span id="L6165" rel="#L6165">6165</span>
<span id="L6166" rel="#L6166">6166</span>
<span id="L6167" rel="#L6167">6167</span>
<span id="L6168" rel="#L6168">6168</span>
<span id="L6169" rel="#L6169">6169</span>
<span id="L6170" rel="#L6170">6170</span>
<span id="L6171" rel="#L6171">6171</span>
<span id="L6172" rel="#L6172">6172</span>
<span id="L6173" rel="#L6173">6173</span>
<span id="L6174" rel="#L6174">6174</span>
<span id="L6175" rel="#L6175">6175</span>
<span id="L6176" rel="#L6176">6176</span>
<span id="L6177" rel="#L6177">6177</span>
<span id="L6178" rel="#L6178">6178</span>
<span id="L6179" rel="#L6179">6179</span>
<span id="L6180" rel="#L6180">6180</span>
<span id="L6181" rel="#L6181">6181</span>
<span id="L6182" rel="#L6182">6182</span>
<span id="L6183" rel="#L6183">6183</span>
<span id="L6184" rel="#L6184">6184</span>
<span id="L6185" rel="#L6185">6185</span>
<span id="L6186" rel="#L6186">6186</span>
<span id="L6187" rel="#L6187">6187</span>
<span id="L6188" rel="#L6188">6188</span>
<span id="L6189" rel="#L6189">6189</span>
<span id="L6190" rel="#L6190">6190</span>
<span id="L6191" rel="#L6191">6191</span>
<span id="L6192" rel="#L6192">6192</span>
<span id="L6193" rel="#L6193">6193</span>
<span id="L6194" rel="#L6194">6194</span>
<span id="L6195" rel="#L6195">6195</span>
<span id="L6196" rel="#L6196">6196</span>
<span id="L6197" rel="#L6197">6197</span>
<span id="L6198" rel="#L6198">6198</span>
<span id="L6199" rel="#L6199">6199</span>
<span id="L6200" rel="#L6200">6200</span>
<span id="L6201" rel="#L6201">6201</span>
<span id="L6202" rel="#L6202">6202</span>
<span id="L6203" rel="#L6203">6203</span>
<span id="L6204" rel="#L6204">6204</span>
<span id="L6205" rel="#L6205">6205</span>
<span id="L6206" rel="#L6206">6206</span>
<span id="L6207" rel="#L6207">6207</span>
<span id="L6208" rel="#L6208">6208</span>
<span id="L6209" rel="#L6209">6209</span>
<span id="L6210" rel="#L6210">6210</span>
<span id="L6211" rel="#L6211">6211</span>
<span id="L6212" rel="#L6212">6212</span>
<span id="L6213" rel="#L6213">6213</span>
<span id="L6214" rel="#L6214">6214</span>
<span id="L6215" rel="#L6215">6215</span>
<span id="L6216" rel="#L6216">6216</span>
<span id="L6217" rel="#L6217">6217</span>
<span id="L6218" rel="#L6218">6218</span>
<span id="L6219" rel="#L6219">6219</span>
<span id="L6220" rel="#L6220">6220</span>
<span id="L6221" rel="#L6221">6221</span>
<span id="L6222" rel="#L6222">6222</span>
<span id="L6223" rel="#L6223">6223</span>
<span id="L6224" rel="#L6224">6224</span>
<span id="L6225" rel="#L6225">6225</span>
<span id="L6226" rel="#L6226">6226</span>
<span id="L6227" rel="#L6227">6227</span>
<span id="L6228" rel="#L6228">6228</span>
<span id="L6229" rel="#L6229">6229</span>
<span id="L6230" rel="#L6230">6230</span>
<span id="L6231" rel="#L6231">6231</span>
<span id="L6232" rel="#L6232">6232</span>
<span id="L6233" rel="#L6233">6233</span>
<span id="L6234" rel="#L6234">6234</span>
<span id="L6235" rel="#L6235">6235</span>
<span id="L6236" rel="#L6236">6236</span>
<span id="L6237" rel="#L6237">6237</span>
<span id="L6238" rel="#L6238">6238</span>
<span id="L6239" rel="#L6239">6239</span>
<span id="L6240" rel="#L6240">6240</span>
<span id="L6241" rel="#L6241">6241</span>
<span id="L6242" rel="#L6242">6242</span>
<span id="L6243" rel="#L6243">6243</span>
<span id="L6244" rel="#L6244">6244</span>
<span id="L6245" rel="#L6245">6245</span>
<span id="L6246" rel="#L6246">6246</span>
<span id="L6247" rel="#L6247">6247</span>
<span id="L6248" rel="#L6248">6248</span>
<span id="L6249" rel="#L6249">6249</span>
<span id="L6250" rel="#L6250">6250</span>
<span id="L6251" rel="#L6251">6251</span>
<span id="L6252" rel="#L6252">6252</span>
<span id="L6253" rel="#L6253">6253</span>
<span id="L6254" rel="#L6254">6254</span>
<span id="L6255" rel="#L6255">6255</span>
<span id="L6256" rel="#L6256">6256</span>
<span id="L6257" rel="#L6257">6257</span>
<span id="L6258" rel="#L6258">6258</span>
<span id="L6259" rel="#L6259">6259</span>
<span id="L6260" rel="#L6260">6260</span>
<span id="L6261" rel="#L6261">6261</span>
<span id="L6262" rel="#L6262">6262</span>
<span id="L6263" rel="#L6263">6263</span>
<span id="L6264" rel="#L6264">6264</span>
<span id="L6265" rel="#L6265">6265</span>
<span id="L6266" rel="#L6266">6266</span>
<span id="L6267" rel="#L6267">6267</span>
<span id="L6268" rel="#L6268">6268</span>
<span id="L6269" rel="#L6269">6269</span>
<span id="L6270" rel="#L6270">6270</span>
<span id="L6271" rel="#L6271">6271</span>
<span id="L6272" rel="#L6272">6272</span>
<span id="L6273" rel="#L6273">6273</span>
<span id="L6274" rel="#L6274">6274</span>
<span id="L6275" rel="#L6275">6275</span>
<span id="L6276" rel="#L6276">6276</span>
<span id="L6277" rel="#L6277">6277</span>
<span id="L6278" rel="#L6278">6278</span>
<span id="L6279" rel="#L6279">6279</span>
<span id="L6280" rel="#L6280">6280</span>
<span id="L6281" rel="#L6281">6281</span>
<span id="L6282" rel="#L6282">6282</span>
<span id="L6283" rel="#L6283">6283</span>
<span id="L6284" rel="#L6284">6284</span>
<span id="L6285" rel="#L6285">6285</span>
<span id="L6286" rel="#L6286">6286</span>
<span id="L6287" rel="#L6287">6287</span>
<span id="L6288" rel="#L6288">6288</span>
<span id="L6289" rel="#L6289">6289</span>
<span id="L6290" rel="#L6290">6290</span>
<span id="L6291" rel="#L6291">6291</span>
<span id="L6292" rel="#L6292">6292</span>
<span id="L6293" rel="#L6293">6293</span>
<span id="L6294" rel="#L6294">6294</span>
<span id="L6295" rel="#L6295">6295</span>
<span id="L6296" rel="#L6296">6296</span>
<span id="L6297" rel="#L6297">6297</span>
<span id="L6298" rel="#L6298">6298</span>
<span id="L6299" rel="#L6299">6299</span>
<span id="L6300" rel="#L6300">6300</span>
<span id="L6301" rel="#L6301">6301</span>
<span id="L6302" rel="#L6302">6302</span>
<span id="L6303" rel="#L6303">6303</span>
<span id="L6304" rel="#L6304">6304</span>
<span id="L6305" rel="#L6305">6305</span>
<span id="L6306" rel="#L6306">6306</span>
<span id="L6307" rel="#L6307">6307</span>
<span id="L6308" rel="#L6308">6308</span>
<span id="L6309" rel="#L6309">6309</span>
<span id="L6310" rel="#L6310">6310</span>
<span id="L6311" rel="#L6311">6311</span>
<span id="L6312" rel="#L6312">6312</span>
<span id="L6313" rel="#L6313">6313</span>
<span id="L6314" rel="#L6314">6314</span>
<span id="L6315" rel="#L6315">6315</span>
<span id="L6316" rel="#L6316">6316</span>
<span id="L6317" rel="#L6317">6317</span>
<span id="L6318" rel="#L6318">6318</span>
<span id="L6319" rel="#L6319">6319</span>
<span id="L6320" rel="#L6320">6320</span>
<span id="L6321" rel="#L6321">6321</span>
<span id="L6322" rel="#L6322">6322</span>
<span id="L6323" rel="#L6323">6323</span>
<span id="L6324" rel="#L6324">6324</span>
<span id="L6325" rel="#L6325">6325</span>
<span id="L6326" rel="#L6326">6326</span>
<span id="L6327" rel="#L6327">6327</span>
<span id="L6328" rel="#L6328">6328</span>
<span id="L6329" rel="#L6329">6329</span>
<span id="L6330" rel="#L6330">6330</span>
<span id="L6331" rel="#L6331">6331</span>
<span id="L6332" rel="#L6332">6332</span>
<span id="L6333" rel="#L6333">6333</span>
<span id="L6334" rel="#L6334">6334</span>
<span id="L6335" rel="#L6335">6335</span>
<span id="L6336" rel="#L6336">6336</span>
<span id="L6337" rel="#L6337">6337</span>
<span id="L6338" rel="#L6338">6338</span>
<span id="L6339" rel="#L6339">6339</span>
<span id="L6340" rel="#L6340">6340</span>
<span id="L6341" rel="#L6341">6341</span>
<span id="L6342" rel="#L6342">6342</span>
<span id="L6343" rel="#L6343">6343</span>
<span id="L6344" rel="#L6344">6344</span>
<span id="L6345" rel="#L6345">6345</span>
<span id="L6346" rel="#L6346">6346</span>
<span id="L6347" rel="#L6347">6347</span>
<span id="L6348" rel="#L6348">6348</span>
<span id="L6349" rel="#L6349">6349</span>
<span id="L6350" rel="#L6350">6350</span>
<span id="L6351" rel="#L6351">6351</span>
<span id="L6352" rel="#L6352">6352</span>
<span id="L6353" rel="#L6353">6353</span>
<span id="L6354" rel="#L6354">6354</span>
<span id="L6355" rel="#L6355">6355</span>
<span id="L6356" rel="#L6356">6356</span>
<span id="L6357" rel="#L6357">6357</span>
<span id="L6358" rel="#L6358">6358</span>
<span id="L6359" rel="#L6359">6359</span>
<span id="L6360" rel="#L6360">6360</span>
<span id="L6361" rel="#L6361">6361</span>
<span id="L6362" rel="#L6362">6362</span>
<span id="L6363" rel="#L6363">6363</span>
<span id="L6364" rel="#L6364">6364</span>
<span id="L6365" rel="#L6365">6365</span>
<span id="L6366" rel="#L6366">6366</span>
<span id="L6367" rel="#L6367">6367</span>
<span id="L6368" rel="#L6368">6368</span>
<span id="L6369" rel="#L6369">6369</span>
<span id="L6370" rel="#L6370">6370</span>
<span id="L6371" rel="#L6371">6371</span>
<span id="L6372" rel="#L6372">6372</span>
<span id="L6373" rel="#L6373">6373</span>
<span id="L6374" rel="#L6374">6374</span>
<span id="L6375" rel="#L6375">6375</span>
<span id="L6376" rel="#L6376">6376</span>
<span id="L6377" rel="#L6377">6377</span>
<span id="L6378" rel="#L6378">6378</span>
<span id="L6379" rel="#L6379">6379</span>
<span id="L6380" rel="#L6380">6380</span>
<span id="L6381" rel="#L6381">6381</span>
<span id="L6382" rel="#L6382">6382</span>
<span id="L6383" rel="#L6383">6383</span>
<span id="L6384" rel="#L6384">6384</span>
<span id="L6385" rel="#L6385">6385</span>
<span id="L6386" rel="#L6386">6386</span>
<span id="L6387" rel="#L6387">6387</span>
<span id="L6388" rel="#L6388">6388</span>
<span id="L6389" rel="#L6389">6389</span>
<span id="L6390" rel="#L6390">6390</span>
<span id="L6391" rel="#L6391">6391</span>
<span id="L6392" rel="#L6392">6392</span>
<span id="L6393" rel="#L6393">6393</span>
<span id="L6394" rel="#L6394">6394</span>
<span id="L6395" rel="#L6395">6395</span>
<span id="L6396" rel="#L6396">6396</span>
<span id="L6397" rel="#L6397">6397</span>
<span id="L6398" rel="#L6398">6398</span>
<span id="L6399" rel="#L6399">6399</span>
<span id="L6400" rel="#L6400">6400</span>
<span id="L6401" rel="#L6401">6401</span>
<span id="L6402" rel="#L6402">6402</span>
<span id="L6403" rel="#L6403">6403</span>
<span id="L6404" rel="#L6404">6404</span>
<span id="L6405" rel="#L6405">6405</span>
<span id="L6406" rel="#L6406">6406</span>
<span id="L6407" rel="#L6407">6407</span>
<span id="L6408" rel="#L6408">6408</span>
<span id="L6409" rel="#L6409">6409</span>
<span id="L6410" rel="#L6410">6410</span>
<span id="L6411" rel="#L6411">6411</span>
<span id="L6412" rel="#L6412">6412</span>
<span id="L6413" rel="#L6413">6413</span>
<span id="L6414" rel="#L6414">6414</span>
<span id="L6415" rel="#L6415">6415</span>
<span id="L6416" rel="#L6416">6416</span>
<span id="L6417" rel="#L6417">6417</span>
<span id="L6418" rel="#L6418">6418</span>
<span id="L6419" rel="#L6419">6419</span>
<span id="L6420" rel="#L6420">6420</span>
<span id="L6421" rel="#L6421">6421</span>
<span id="L6422" rel="#L6422">6422</span>
<span id="L6423" rel="#L6423">6423</span>
<span id="L6424" rel="#L6424">6424</span>
<span id="L6425" rel="#L6425">6425</span>
<span id="L6426" rel="#L6426">6426</span>
<span id="L6427" rel="#L6427">6427</span>
<span id="L6428" rel="#L6428">6428</span>
<span id="L6429" rel="#L6429">6429</span>
<span id="L6430" rel="#L6430">6430</span>
<span id="L6431" rel="#L6431">6431</span>
<span id="L6432" rel="#L6432">6432</span>
<span id="L6433" rel="#L6433">6433</span>
<span id="L6434" rel="#L6434">6434</span>
<span id="L6435" rel="#L6435">6435</span>
<span id="L6436" rel="#L6436">6436</span>
<span id="L6437" rel="#L6437">6437</span>
<span id="L6438" rel="#L6438">6438</span>
<span id="L6439" rel="#L6439">6439</span>
<span id="L6440" rel="#L6440">6440</span>
<span id="L6441" rel="#L6441">6441</span>
<span id="L6442" rel="#L6442">6442</span>
<span id="L6443" rel="#L6443">6443</span>
<span id="L6444" rel="#L6444">6444</span>
<span id="L6445" rel="#L6445">6445</span>
<span id="L6446" rel="#L6446">6446</span>
<span id="L6447" rel="#L6447">6447</span>
<span id="L6448" rel="#L6448">6448</span>
<span id="L6449" rel="#L6449">6449</span>
<span id="L6450" rel="#L6450">6450</span>
<span id="L6451" rel="#L6451">6451</span>
<span id="L6452" rel="#L6452">6452</span>
<span id="L6453" rel="#L6453">6453</span>
<span id="L6454" rel="#L6454">6454</span>
<span id="L6455" rel="#L6455">6455</span>
<span id="L6456" rel="#L6456">6456</span>
<span id="L6457" rel="#L6457">6457</span>
<span id="L6458" rel="#L6458">6458</span>
<span id="L6459" rel="#L6459">6459</span>
<span id="L6460" rel="#L6460">6460</span>
<span id="L6461" rel="#L6461">6461</span>
<span id="L6462" rel="#L6462">6462</span>
<span id="L6463" rel="#L6463">6463</span>
<span id="L6464" rel="#L6464">6464</span>
<span id="L6465" rel="#L6465">6465</span>
<span id="L6466" rel="#L6466">6466</span>
<span id="L6467" rel="#L6467">6467</span>
<span id="L6468" rel="#L6468">6468</span>
<span id="L6469" rel="#L6469">6469</span>
<span id="L6470" rel="#L6470">6470</span>
<span id="L6471" rel="#L6471">6471</span>
<span id="L6472" rel="#L6472">6472</span>
<span id="L6473" rel="#L6473">6473</span>
<span id="L6474" rel="#L6474">6474</span>
<span id="L6475" rel="#L6475">6475</span>
<span id="L6476" rel="#L6476">6476</span>
<span id="L6477" rel="#L6477">6477</span>
<span id="L6478" rel="#L6478">6478</span>
<span id="L6479" rel="#L6479">6479</span>
<span id="L6480" rel="#L6480">6480</span>
<span id="L6481" rel="#L6481">6481</span>
<span id="L6482" rel="#L6482">6482</span>
<span id="L6483" rel="#L6483">6483</span>
<span id="L6484" rel="#L6484">6484</span>
<span id="L6485" rel="#L6485">6485</span>
<span id="L6486" rel="#L6486">6486</span>
<span id="L6487" rel="#L6487">6487</span>
<span id="L6488" rel="#L6488">6488</span>
<span id="L6489" rel="#L6489">6489</span>
<span id="L6490" rel="#L6490">6490</span>
<span id="L6491" rel="#L6491">6491</span>
<span id="L6492" rel="#L6492">6492</span>
<span id="L6493" rel="#L6493">6493</span>
<span id="L6494" rel="#L6494">6494</span>
<span id="L6495" rel="#L6495">6495</span>
<span id="L6496" rel="#L6496">6496</span>
<span id="L6497" rel="#L6497">6497</span>
<span id="L6498" rel="#L6498">6498</span>
<span id="L6499" rel="#L6499">6499</span>
<span id="L6500" rel="#L6500">6500</span>
<span id="L6501" rel="#L6501">6501</span>
<span id="L6502" rel="#L6502">6502</span>
<span id="L6503" rel="#L6503">6503</span>
<span id="L6504" rel="#L6504">6504</span>
<span id="L6505" rel="#L6505">6505</span>
<span id="L6506" rel="#L6506">6506</span>
<span id="L6507" rel="#L6507">6507</span>
<span id="L6508" rel="#L6508">6508</span>
<span id="L6509" rel="#L6509">6509</span>
<span id="L6510" rel="#L6510">6510</span>
<span id="L6511" rel="#L6511">6511</span>
<span id="L6512" rel="#L6512">6512</span>
<span id="L6513" rel="#L6513">6513</span>
<span id="L6514" rel="#L6514">6514</span>
<span id="L6515" rel="#L6515">6515</span>
<span id="L6516" rel="#L6516">6516</span>
<span id="L6517" rel="#L6517">6517</span>
<span id="L6518" rel="#L6518">6518</span>
<span id="L6519" rel="#L6519">6519</span>
<span id="L6520" rel="#L6520">6520</span>
<span id="L6521" rel="#L6521">6521</span>
<span id="L6522" rel="#L6522">6522</span>
<span id="L6523" rel="#L6523">6523</span>
<span id="L6524" rel="#L6524">6524</span>
<span id="L6525" rel="#L6525">6525</span>
<span id="L6526" rel="#L6526">6526</span>
<span id="L6527" rel="#L6527">6527</span>
<span id="L6528" rel="#L6528">6528</span>
<span id="L6529" rel="#L6529">6529</span>
<span id="L6530" rel="#L6530">6530</span>
<span id="L6531" rel="#L6531">6531</span>
<span id="L6532" rel="#L6532">6532</span>
<span id="L6533" rel="#L6533">6533</span>
<span id="L6534" rel="#L6534">6534</span>
<span id="L6535" rel="#L6535">6535</span>
<span id="L6536" rel="#L6536">6536</span>
<span id="L6537" rel="#L6537">6537</span>
<span id="L6538" rel="#L6538">6538</span>
<span id="L6539" rel="#L6539">6539</span>
<span id="L6540" rel="#L6540">6540</span>
<span id="L6541" rel="#L6541">6541</span>
<span id="L6542" rel="#L6542">6542</span>
<span id="L6543" rel="#L6543">6543</span>
<span id="L6544" rel="#L6544">6544</span>
<span id="L6545" rel="#L6545">6545</span>
<span id="L6546" rel="#L6546">6546</span>
<span id="L6547" rel="#L6547">6547</span>
<span id="L6548" rel="#L6548">6548</span>
<span id="L6549" rel="#L6549">6549</span>
<span id="L6550" rel="#L6550">6550</span>
<span id="L6551" rel="#L6551">6551</span>
<span id="L6552" rel="#L6552">6552</span>
<span id="L6553" rel="#L6553">6553</span>
<span id="L6554" rel="#L6554">6554</span>
<span id="L6555" rel="#L6555">6555</span>
<span id="L6556" rel="#L6556">6556</span>
<span id="L6557" rel="#L6557">6557</span>
<span id="L6558" rel="#L6558">6558</span>
<span id="L6559" rel="#L6559">6559</span>
<span id="L6560" rel="#L6560">6560</span>
<span id="L6561" rel="#L6561">6561</span>
<span id="L6562" rel="#L6562">6562</span>
<span id="L6563" rel="#L6563">6563</span>
<span id="L6564" rel="#L6564">6564</span>
<span id="L6565" rel="#L6565">6565</span>
<span id="L6566" rel="#L6566">6566</span>
<span id="L6567" rel="#L6567">6567</span>
<span id="L6568" rel="#L6568">6568</span>
<span id="L6569" rel="#L6569">6569</span>
<span id="L6570" rel="#L6570">6570</span>
<span id="L6571" rel="#L6571">6571</span>
<span id="L6572" rel="#L6572">6572</span>
<span id="L6573" rel="#L6573">6573</span>
<span id="L6574" rel="#L6574">6574</span>
<span id="L6575" rel="#L6575">6575</span>
<span id="L6576" rel="#L6576">6576</span>
<span id="L6577" rel="#L6577">6577</span>
<span id="L6578" rel="#L6578">6578</span>
<span id="L6579" rel="#L6579">6579</span>
<span id="L6580" rel="#L6580">6580</span>
<span id="L6581" rel="#L6581">6581</span>
<span id="L6582" rel="#L6582">6582</span>
<span id="L6583" rel="#L6583">6583</span>
<span id="L6584" rel="#L6584">6584</span>
<span id="L6585" rel="#L6585">6585</span>
<span id="L6586" rel="#L6586">6586</span>
<span id="L6587" rel="#L6587">6587</span>
<span id="L6588" rel="#L6588">6588</span>
<span id="L6589" rel="#L6589">6589</span>
<span id="L6590" rel="#L6590">6590</span>
<span id="L6591" rel="#L6591">6591</span>
<span id="L6592" rel="#L6592">6592</span>
<span id="L6593" rel="#L6593">6593</span>
<span id="L6594" rel="#L6594">6594</span>
<span id="L6595" rel="#L6595">6595</span>
<span id="L6596" rel="#L6596">6596</span>
<span id="L6597" rel="#L6597">6597</span>
<span id="L6598" rel="#L6598">6598</span>
<span id="L6599" rel="#L6599">6599</span>
<span id="L6600" rel="#L6600">6600</span>
<span id="L6601" rel="#L6601">6601</span>
<span id="L6602" rel="#L6602">6602</span>
<span id="L6603" rel="#L6603">6603</span>
<span id="L6604" rel="#L6604">6604</span>
<span id="L6605" rel="#L6605">6605</span>
<span id="L6606" rel="#L6606">6606</span>
<span id="L6607" rel="#L6607">6607</span>
<span id="L6608" rel="#L6608">6608</span>
<span id="L6609" rel="#L6609">6609</span>
<span id="L6610" rel="#L6610">6610</span>
<span id="L6611" rel="#L6611">6611</span>
<span id="L6612" rel="#L6612">6612</span>
<span id="L6613" rel="#L6613">6613</span>
<span id="L6614" rel="#L6614">6614</span>
<span id="L6615" rel="#L6615">6615</span>
<span id="L6616" rel="#L6616">6616</span>
<span id="L6617" rel="#L6617">6617</span>
<span id="L6618" rel="#L6618">6618</span>
<span id="L6619" rel="#L6619">6619</span>
<span id="L6620" rel="#L6620">6620</span>
<span id="L6621" rel="#L6621">6621</span>
<span id="L6622" rel="#L6622">6622</span>
<span id="L6623" rel="#L6623">6623</span>
<span id="L6624" rel="#L6624">6624</span>
<span id="L6625" rel="#L6625">6625</span>
<span id="L6626" rel="#L6626">6626</span>
<span id="L6627" rel="#L6627">6627</span>
<span id="L6628" rel="#L6628">6628</span>
<span id="L6629" rel="#L6629">6629</span>
<span id="L6630" rel="#L6630">6630</span>
<span id="L6631" rel="#L6631">6631</span>
<span id="L6632" rel="#L6632">6632</span>
<span id="L6633" rel="#L6633">6633</span>
<span id="L6634" rel="#L6634">6634</span>
<span id="L6635" rel="#L6635">6635</span>
<span id="L6636" rel="#L6636">6636</span>
<span id="L6637" rel="#L6637">6637</span>
<span id="L6638" rel="#L6638">6638</span>
<span id="L6639" rel="#L6639">6639</span>
<span id="L6640" rel="#L6640">6640</span>
<span id="L6641" rel="#L6641">6641</span>
<span id="L6642" rel="#L6642">6642</span>
<span id="L6643" rel="#L6643">6643</span>
<span id="L6644" rel="#L6644">6644</span>
<span id="L6645" rel="#L6645">6645</span>
<span id="L6646" rel="#L6646">6646</span>
<span id="L6647" rel="#L6647">6647</span>
<span id="L6648" rel="#L6648">6648</span>
<span id="L6649" rel="#L6649">6649</span>
<span id="L6650" rel="#L6650">6650</span>
<span id="L6651" rel="#L6651">6651</span>
<span id="L6652" rel="#L6652">6652</span>
<span id="L6653" rel="#L6653">6653</span>
<span id="L6654" rel="#L6654">6654</span>
<span id="L6655" rel="#L6655">6655</span>
<span id="L6656" rel="#L6656">6656</span>
<span id="L6657" rel="#L6657">6657</span>
<span id="L6658" rel="#L6658">6658</span>
<span id="L6659" rel="#L6659">6659</span>
<span id="L6660" rel="#L6660">6660</span>
<span id="L6661" rel="#L6661">6661</span>
<span id="L6662" rel="#L6662">6662</span>
<span id="L6663" rel="#L6663">6663</span>
<span id="L6664" rel="#L6664">6664</span>
<span id="L6665" rel="#L6665">6665</span>
<span id="L6666" rel="#L6666">6666</span>
<span id="L6667" rel="#L6667">6667</span>
<span id="L6668" rel="#L6668">6668</span>
<span id="L6669" rel="#L6669">6669</span>
<span id="L6670" rel="#L6670">6670</span>
<span id="L6671" rel="#L6671">6671</span>
<span id="L6672" rel="#L6672">6672</span>
<span id="L6673" rel="#L6673">6673</span>
<span id="L6674" rel="#L6674">6674</span>
<span id="L6675" rel="#L6675">6675</span>
<span id="L6676" rel="#L6676">6676</span>
<span id="L6677" rel="#L6677">6677</span>
<span id="L6678" rel="#L6678">6678</span>
<span id="L6679" rel="#L6679">6679</span>
<span id="L6680" rel="#L6680">6680</span>
<span id="L6681" rel="#L6681">6681</span>
<span id="L6682" rel="#L6682">6682</span>
<span id="L6683" rel="#L6683">6683</span>
<span id="L6684" rel="#L6684">6684</span>
<span id="L6685" rel="#L6685">6685</span>
<span id="L6686" rel="#L6686">6686</span>
<span id="L6687" rel="#L6687">6687</span>
<span id="L6688" rel="#L6688">6688</span>
<span id="L6689" rel="#L6689">6689</span>
<span id="L6690" rel="#L6690">6690</span>
<span id="L6691" rel="#L6691">6691</span>
<span id="L6692" rel="#L6692">6692</span>
<span id="L6693" rel="#L6693">6693</span>
<span id="L6694" rel="#L6694">6694</span>
<span id="L6695" rel="#L6695">6695</span>
<span id="L6696" rel="#L6696">6696</span>
<span id="L6697" rel="#L6697">6697</span>
<span id="L6698" rel="#L6698">6698</span>
<span id="L6699" rel="#L6699">6699</span>
<span id="L6700" rel="#L6700">6700</span>
<span id="L6701" rel="#L6701">6701</span>
<span id="L6702" rel="#L6702">6702</span>
<span id="L6703" rel="#L6703">6703</span>
<span id="L6704" rel="#L6704">6704</span>
<span id="L6705" rel="#L6705">6705</span>
<span id="L6706" rel="#L6706">6706</span>
<span id="L6707" rel="#L6707">6707</span>
<span id="L6708" rel="#L6708">6708</span>
<span id="L6709" rel="#L6709">6709</span>
<span id="L6710" rel="#L6710">6710</span>
<span id="L6711" rel="#L6711">6711</span>
<span id="L6712" rel="#L6712">6712</span>
<span id="L6713" rel="#L6713">6713</span>
<span id="L6714" rel="#L6714">6714</span>
<span id="L6715" rel="#L6715">6715</span>
<span id="L6716" rel="#L6716">6716</span>
<span id="L6717" rel="#L6717">6717</span>
<span id="L6718" rel="#L6718">6718</span>
<span id="L6719" rel="#L6719">6719</span>
<span id="L6720" rel="#L6720">6720</span>
<span id="L6721" rel="#L6721">6721</span>
<span id="L6722" rel="#L6722">6722</span>
<span id="L6723" rel="#L6723">6723</span>
<span id="L6724" rel="#L6724">6724</span>
<span id="L6725" rel="#L6725">6725</span>
<span id="L6726" rel="#L6726">6726</span>
<span id="L6727" rel="#L6727">6727</span>
<span id="L6728" rel="#L6728">6728</span>
<span id="L6729" rel="#L6729">6729</span>
<span id="L6730" rel="#L6730">6730</span>
<span id="L6731" rel="#L6731">6731</span>
<span id="L6732" rel="#L6732">6732</span>
<span id="L6733" rel="#L6733">6733</span>
<span id="L6734" rel="#L6734">6734</span>
<span id="L6735" rel="#L6735">6735</span>
<span id="L6736" rel="#L6736">6736</span>
<span id="L6737" rel="#L6737">6737</span>
<span id="L6738" rel="#L6738">6738</span>
<span id="L6739" rel="#L6739">6739</span>
<span id="L6740" rel="#L6740">6740</span>
<span id="L6741" rel="#L6741">6741</span>
<span id="L6742" rel="#L6742">6742</span>
<span id="L6743" rel="#L6743">6743</span>
<span id="L6744" rel="#L6744">6744</span>
<span id="L6745" rel="#L6745">6745</span>
<span id="L6746" rel="#L6746">6746</span>
<span id="L6747" rel="#L6747">6747</span>
<span id="L6748" rel="#L6748">6748</span>
<span id="L6749" rel="#L6749">6749</span>
<span id="L6750" rel="#L6750">6750</span>
<span id="L6751" rel="#L6751">6751</span>
<span id="L6752" rel="#L6752">6752</span>
<span id="L6753" rel="#L6753">6753</span>
<span id="L6754" rel="#L6754">6754</span>
<span id="L6755" rel="#L6755">6755</span>
<span id="L6756" rel="#L6756">6756</span>
<span id="L6757" rel="#L6757">6757</span>
<span id="L6758" rel="#L6758">6758</span>
<span id="L6759" rel="#L6759">6759</span>
<span id="L6760" rel="#L6760">6760</span>
<span id="L6761" rel="#L6761">6761</span>
<span id="L6762" rel="#L6762">6762</span>
<span id="L6763" rel="#L6763">6763</span>
<span id="L6764" rel="#L6764">6764</span>
<span id="L6765" rel="#L6765">6765</span>
<span id="L6766" rel="#L6766">6766</span>
<span id="L6767" rel="#L6767">6767</span>
<span id="L6768" rel="#L6768">6768</span>
<span id="L6769" rel="#L6769">6769</span>
<span id="L6770" rel="#L6770">6770</span>
<span id="L6771" rel="#L6771">6771</span>
<span id="L6772" rel="#L6772">6772</span>
<span id="L6773" rel="#L6773">6773</span>
<span id="L6774" rel="#L6774">6774</span>
<span id="L6775" rel="#L6775">6775</span>
<span id="L6776" rel="#L6776">6776</span>
<span id="L6777" rel="#L6777">6777</span>
<span id="L6778" rel="#L6778">6778</span>
<span id="L6779" rel="#L6779">6779</span>
<span id="L6780" rel="#L6780">6780</span>
<span id="L6781" rel="#L6781">6781</span>
<span id="L6782" rel="#L6782">6782</span>
<span id="L6783" rel="#L6783">6783</span>
<span id="L6784" rel="#L6784">6784</span>
<span id="L6785" rel="#L6785">6785</span>
<span id="L6786" rel="#L6786">6786</span>
<span id="L6787" rel="#L6787">6787</span>
<span id="L6788" rel="#L6788">6788</span>
<span id="L6789" rel="#L6789">6789</span>
<span id="L6790" rel="#L6790">6790</span>
<span id="L6791" rel="#L6791">6791</span>
<span id="L6792" rel="#L6792">6792</span>
<span id="L6793" rel="#L6793">6793</span>
<span id="L6794" rel="#L6794">6794</span>
<span id="L6795" rel="#L6795">6795</span>
<span id="L6796" rel="#L6796">6796</span>
<span id="L6797" rel="#L6797">6797</span>
<span id="L6798" rel="#L6798">6798</span>
<span id="L6799" rel="#L6799">6799</span>
<span id="L6800" rel="#L6800">6800</span>
<span id="L6801" rel="#L6801">6801</span>
<span id="L6802" rel="#L6802">6802</span>
<span id="L6803" rel="#L6803">6803</span>
<span id="L6804" rel="#L6804">6804</span>
<span id="L6805" rel="#L6805">6805</span>
<span id="L6806" rel="#L6806">6806</span>
<span id="L6807" rel="#L6807">6807</span>
<span id="L6808" rel="#L6808">6808</span>
<span id="L6809" rel="#L6809">6809</span>
<span id="L6810" rel="#L6810">6810</span>
<span id="L6811" rel="#L6811">6811</span>
<span id="L6812" rel="#L6812">6812</span>
<span id="L6813" rel="#L6813">6813</span>
<span id="L6814" rel="#L6814">6814</span>
<span id="L6815" rel="#L6815">6815</span>
<span id="L6816" rel="#L6816">6816</span>
<span id="L6817" rel="#L6817">6817</span>
<span id="L6818" rel="#L6818">6818</span>
<span id="L6819" rel="#L6819">6819</span>
<span id="L6820" rel="#L6820">6820</span>
<span id="L6821" rel="#L6821">6821</span>
<span id="L6822" rel="#L6822">6822</span>
<span id="L6823" rel="#L6823">6823</span>
<span id="L6824" rel="#L6824">6824</span>
<span id="L6825" rel="#L6825">6825</span>
<span id="L6826" rel="#L6826">6826</span>
<span id="L6827" rel="#L6827">6827</span>
<span id="L6828" rel="#L6828">6828</span>
<span id="L6829" rel="#L6829">6829</span>
<span id="L6830" rel="#L6830">6830</span>
<span id="L6831" rel="#L6831">6831</span>
<span id="L6832" rel="#L6832">6832</span>
<span id="L6833" rel="#L6833">6833</span>
<span id="L6834" rel="#L6834">6834</span>
<span id="L6835" rel="#L6835">6835</span>
<span id="L6836" rel="#L6836">6836</span>
<span id="L6837" rel="#L6837">6837</span>
<span id="L6838" rel="#L6838">6838</span>
<span id="L6839" rel="#L6839">6839</span>
<span id="L6840" rel="#L6840">6840</span>
<span id="L6841" rel="#L6841">6841</span>
<span id="L6842" rel="#L6842">6842</span>
<span id="L6843" rel="#L6843">6843</span>
<span id="L6844" rel="#L6844">6844</span>
<span id="L6845" rel="#L6845">6845</span>
<span id="L6846" rel="#L6846">6846</span>
<span id="L6847" rel="#L6847">6847</span>
<span id="L6848" rel="#L6848">6848</span>
<span id="L6849" rel="#L6849">6849</span>
<span id="L6850" rel="#L6850">6850</span>
<span id="L6851" rel="#L6851">6851</span>
<span id="L6852" rel="#L6852">6852</span>
<span id="L6853" rel="#L6853">6853</span>
<span id="L6854" rel="#L6854">6854</span>
<span id="L6855" rel="#L6855">6855</span>
<span id="L6856" rel="#L6856">6856</span>
<span id="L6857" rel="#L6857">6857</span>
<span id="L6858" rel="#L6858">6858</span>
<span id="L6859" rel="#L6859">6859</span>
<span id="L6860" rel="#L6860">6860</span>
<span id="L6861" rel="#L6861">6861</span>
<span id="L6862" rel="#L6862">6862</span>
<span id="L6863" rel="#L6863">6863</span>
<span id="L6864" rel="#L6864">6864</span>
<span id="L6865" rel="#L6865">6865</span>
<span id="L6866" rel="#L6866">6866</span>
<span id="L6867" rel="#L6867">6867</span>
<span id="L6868" rel="#L6868">6868</span>
<span id="L6869" rel="#L6869">6869</span>
<span id="L6870" rel="#L6870">6870</span>
<span id="L6871" rel="#L6871">6871</span>
<span id="L6872" rel="#L6872">6872</span>
<span id="L6873" rel="#L6873">6873</span>
<span id="L6874" rel="#L6874">6874</span>
<span id="L6875" rel="#L6875">6875</span>
<span id="L6876" rel="#L6876">6876</span>
<span id="L6877" rel="#L6877">6877</span>
<span id="L6878" rel="#L6878">6878</span>
<span id="L6879" rel="#L6879">6879</span>
<span id="L6880" rel="#L6880">6880</span>
<span id="L6881" rel="#L6881">6881</span>
<span id="L6882" rel="#L6882">6882</span>
<span id="L6883" rel="#L6883">6883</span>
<span id="L6884" rel="#L6884">6884</span>
<span id="L6885" rel="#L6885">6885</span>
<span id="L6886" rel="#L6886">6886</span>
<span id="L6887" rel="#L6887">6887</span>
<span id="L6888" rel="#L6888">6888</span>
<span id="L6889" rel="#L6889">6889</span>
<span id="L6890" rel="#L6890">6890</span>
<span id="L6891" rel="#L6891">6891</span>
<span id="L6892" rel="#L6892">6892</span>
<span id="L6893" rel="#L6893">6893</span>
<span id="L6894" rel="#L6894">6894</span>
<span id="L6895" rel="#L6895">6895</span>
<span id="L6896" rel="#L6896">6896</span>
<span id="L6897" rel="#L6897">6897</span>
<span id="L6898" rel="#L6898">6898</span>
<span id="L6899" rel="#L6899">6899</span>
<span id="L6900" rel="#L6900">6900</span>
<span id="L6901" rel="#L6901">6901</span>
<span id="L6902" rel="#L6902">6902</span>
<span id="L6903" rel="#L6903">6903</span>
<span id="L6904" rel="#L6904">6904</span>
<span id="L6905" rel="#L6905">6905</span>
<span id="L6906" rel="#L6906">6906</span>
<span id="L6907" rel="#L6907">6907</span>
<span id="L6908" rel="#L6908">6908</span>
<span id="L6909" rel="#L6909">6909</span>
<span id="L6910" rel="#L6910">6910</span>
<span id="L6911" rel="#L6911">6911</span>
<span id="L6912" rel="#L6912">6912</span>
<span id="L6913" rel="#L6913">6913</span>
<span id="L6914" rel="#L6914">6914</span>
<span id="L6915" rel="#L6915">6915</span>
<span id="L6916" rel="#L6916">6916</span>
<span id="L6917" rel="#L6917">6917</span>
<span id="L6918" rel="#L6918">6918</span>
<span id="L6919" rel="#L6919">6919</span>
<span id="L6920" rel="#L6920">6920</span>
<span id="L6921" rel="#L6921">6921</span>
<span id="L6922" rel="#L6922">6922</span>
<span id="L6923" rel="#L6923">6923</span>
<span id="L6924" rel="#L6924">6924</span>
<span id="L6925" rel="#L6925">6925</span>
<span id="L6926" rel="#L6926">6926</span>
<span id="L6927" rel="#L6927">6927</span>
<span id="L6928" rel="#L6928">6928</span>
<span id="L6929" rel="#L6929">6929</span>
<span id="L6930" rel="#L6930">6930</span>
<span id="L6931" rel="#L6931">6931</span>
<span id="L6932" rel="#L6932">6932</span>
<span id="L6933" rel="#L6933">6933</span>
<span id="L6934" rel="#L6934">6934</span>
<span id="L6935" rel="#L6935">6935</span>
<span id="L6936" rel="#L6936">6936</span>
<span id="L6937" rel="#L6937">6937</span>
<span id="L6938" rel="#L6938">6938</span>
<span id="L6939" rel="#L6939">6939</span>
<span id="L6940" rel="#L6940">6940</span>
<span id="L6941" rel="#L6941">6941</span>
<span id="L6942" rel="#L6942">6942</span>
<span id="L6943" rel="#L6943">6943</span>
<span id="L6944" rel="#L6944">6944</span>
<span id="L6945" rel="#L6945">6945</span>
<span id="L6946" rel="#L6946">6946</span>
<span id="L6947" rel="#L6947">6947</span>
<span id="L6948" rel="#L6948">6948</span>
<span id="L6949" rel="#L6949">6949</span>
<span id="L6950" rel="#L6950">6950</span>
<span id="L6951" rel="#L6951">6951</span>
<span id="L6952" rel="#L6952">6952</span>
<span id="L6953" rel="#L6953">6953</span>
<span id="L6954" rel="#L6954">6954</span>
<span id="L6955" rel="#L6955">6955</span>
<span id="L6956" rel="#L6956">6956</span>
<span id="L6957" rel="#L6957">6957</span>
<span id="L6958" rel="#L6958">6958</span>
<span id="L6959" rel="#L6959">6959</span>
<span id="L6960" rel="#L6960">6960</span>
<span id="L6961" rel="#L6961">6961</span>
<span id="L6962" rel="#L6962">6962</span>
<span id="L6963" rel="#L6963">6963</span>
<span id="L6964" rel="#L6964">6964</span>
<span id="L6965" rel="#L6965">6965</span>
<span id="L6966" rel="#L6966">6966</span>
<span id="L6967" rel="#L6967">6967</span>
<span id="L6968" rel="#L6968">6968</span>
<span id="L6969" rel="#L6969">6969</span>
<span id="L6970" rel="#L6970">6970</span>
<span id="L6971" rel="#L6971">6971</span>
<span id="L6972" rel="#L6972">6972</span>
<span id="L6973" rel="#L6973">6973</span>
<span id="L6974" rel="#L6974">6974</span>
<span id="L6975" rel="#L6975">6975</span>
<span id="L6976" rel="#L6976">6976</span>
<span id="L6977" rel="#L6977">6977</span>
<span id="L6978" rel="#L6978">6978</span>
<span id="L6979" rel="#L6979">6979</span>
<span id="L6980" rel="#L6980">6980</span>
<span id="L6981" rel="#L6981">6981</span>
<span id="L6982" rel="#L6982">6982</span>
<span id="L6983" rel="#L6983">6983</span>
<span id="L6984" rel="#L6984">6984</span>
<span id="L6985" rel="#L6985">6985</span>
<span id="L6986" rel="#L6986">6986</span>
<span id="L6987" rel="#L6987">6987</span>
<span id="L6988" rel="#L6988">6988</span>
<span id="L6989" rel="#L6989">6989</span>
<span id="L6990" rel="#L6990">6990</span>
<span id="L6991" rel="#L6991">6991</span>
<span id="L6992" rel="#L6992">6992</span>
<span id="L6993" rel="#L6993">6993</span>
<span id="L6994" rel="#L6994">6994</span>
<span id="L6995" rel="#L6995">6995</span>
<span id="L6996" rel="#L6996">6996</span>
<span id="L6997" rel="#L6997">6997</span>
<span id="L6998" rel="#L6998">6998</span>
<span id="L6999" rel="#L6999">6999</span>
<span id="L7000" rel="#L7000">7000</span>
<span id="L7001" rel="#L7001">7001</span>
<span id="L7002" rel="#L7002">7002</span>
<span id="L7003" rel="#L7003">7003</span>
<span id="L7004" rel="#L7004">7004</span>
<span id="L7005" rel="#L7005">7005</span>
<span id="L7006" rel="#L7006">7006</span>
<span id="L7007" rel="#L7007">7007</span>
<span id="L7008" rel="#L7008">7008</span>
<span id="L7009" rel="#L7009">7009</span>
<span id="L7010" rel="#L7010">7010</span>
<span id="L7011" rel="#L7011">7011</span>
<span id="L7012" rel="#L7012">7012</span>
<span id="L7013" rel="#L7013">7013</span>
<span id="L7014" rel="#L7014">7014</span>
<span id="L7015" rel="#L7015">7015</span>
<span id="L7016" rel="#L7016">7016</span>
<span id="L7017" rel="#L7017">7017</span>
<span id="L7018" rel="#L7018">7018</span>
<span id="L7019" rel="#L7019">7019</span>
<span id="L7020" rel="#L7020">7020</span>
<span id="L7021" rel="#L7021">7021</span>
<span id="L7022" rel="#L7022">7022</span>
<span id="L7023" rel="#L7023">7023</span>
<span id="L7024" rel="#L7024">7024</span>
<span id="L7025" rel="#L7025">7025</span>
<span id="L7026" rel="#L7026">7026</span>
<span id="L7027" rel="#L7027">7027</span>
<span id="L7028" rel="#L7028">7028</span>
<span id="L7029" rel="#L7029">7029</span>
<span id="L7030" rel="#L7030">7030</span>
<span id="L7031" rel="#L7031">7031</span>
<span id="L7032" rel="#L7032">7032</span>
<span id="L7033" rel="#L7033">7033</span>
<span id="L7034" rel="#L7034">7034</span>
<span id="L7035" rel="#L7035">7035</span>
<span id="L7036" rel="#L7036">7036</span>
<span id="L7037" rel="#L7037">7037</span>
<span id="L7038" rel="#L7038">7038</span>
<span id="L7039" rel="#L7039">7039</span>
<span id="L7040" rel="#L7040">7040</span>
<span id="L7041" rel="#L7041">7041</span>
<span id="L7042" rel="#L7042">7042</span>
<span id="L7043" rel="#L7043">7043</span>
<span id="L7044" rel="#L7044">7044</span>
<span id="L7045" rel="#L7045">7045</span>
<span id="L7046" rel="#L7046">7046</span>
<span id="L7047" rel="#L7047">7047</span>
<span id="L7048" rel="#L7048">7048</span>
<span id="L7049" rel="#L7049">7049</span>
<span id="L7050" rel="#L7050">7050</span>
<span id="L7051" rel="#L7051">7051</span>
<span id="L7052" rel="#L7052">7052</span>
<span id="L7053" rel="#L7053">7053</span>
<span id="L7054" rel="#L7054">7054</span>
<span id="L7055" rel="#L7055">7055</span>
<span id="L7056" rel="#L7056">7056</span>
<span id="L7057" rel="#L7057">7057</span>
<span id="L7058" rel="#L7058">7058</span>
<span id="L7059" rel="#L7059">7059</span>
<span id="L7060" rel="#L7060">7060</span>
<span id="L7061" rel="#L7061">7061</span>
<span id="L7062" rel="#L7062">7062</span>
<span id="L7063" rel="#L7063">7063</span>
<span id="L7064" rel="#L7064">7064</span>
<span id="L7065" rel="#L7065">7065</span>
<span id="L7066" rel="#L7066">7066</span>
<span id="L7067" rel="#L7067">7067</span>
<span id="L7068" rel="#L7068">7068</span>
<span id="L7069" rel="#L7069">7069</span>
<span id="L7070" rel="#L7070">7070</span>
<span id="L7071" rel="#L7071">7071</span>
<span id="L7072" rel="#L7072">7072</span>
<span id="L7073" rel="#L7073">7073</span>
<span id="L7074" rel="#L7074">7074</span>
<span id="L7075" rel="#L7075">7075</span>
<span id="L7076" rel="#L7076">7076</span>
<span id="L7077" rel="#L7077">7077</span>
<span id="L7078" rel="#L7078">7078</span>
<span id="L7079" rel="#L7079">7079</span>
<span id="L7080" rel="#L7080">7080</span>
<span id="L7081" rel="#L7081">7081</span>
<span id="L7082" rel="#L7082">7082</span>
<span id="L7083" rel="#L7083">7083</span>
<span id="L7084" rel="#L7084">7084</span>
<span id="L7085" rel="#L7085">7085</span>
<span id="L7086" rel="#L7086">7086</span>
<span id="L7087" rel="#L7087">7087</span>
<span id="L7088" rel="#L7088">7088</span>
<span id="L7089" rel="#L7089">7089</span>
<span id="L7090" rel="#L7090">7090</span>
<span id="L7091" rel="#L7091">7091</span>
<span id="L7092" rel="#L7092">7092</span>
<span id="L7093" rel="#L7093">7093</span>
<span id="L7094" rel="#L7094">7094</span>
<span id="L7095" rel="#L7095">7095</span>
<span id="L7096" rel="#L7096">7096</span>
<span id="L7097" rel="#L7097">7097</span>
<span id="L7098" rel="#L7098">7098</span>
<span id="L7099" rel="#L7099">7099</span>
<span id="L7100" rel="#L7100">7100</span>
<span id="L7101" rel="#L7101">7101</span>
<span id="L7102" rel="#L7102">7102</span>
<span id="L7103" rel="#L7103">7103</span>
<span id="L7104" rel="#L7104">7104</span>
<span id="L7105" rel="#L7105">7105</span>
<span id="L7106" rel="#L7106">7106</span>
<span id="L7107" rel="#L7107">7107</span>
<span id="L7108" rel="#L7108">7108</span>
<span id="L7109" rel="#L7109">7109</span>
<span id="L7110" rel="#L7110">7110</span>
<span id="L7111" rel="#L7111">7111</span>
<span id="L7112" rel="#L7112">7112</span>
<span id="L7113" rel="#L7113">7113</span>
<span id="L7114" rel="#L7114">7114</span>
<span id="L7115" rel="#L7115">7115</span>
<span id="L7116" rel="#L7116">7116</span>
<span id="L7117" rel="#L7117">7117</span>
<span id="L7118" rel="#L7118">7118</span>
<span id="L7119" rel="#L7119">7119</span>
<span id="L7120" rel="#L7120">7120</span>
<span id="L7121" rel="#L7121">7121</span>
<span id="L7122" rel="#L7122">7122</span>
<span id="L7123" rel="#L7123">7123</span>
<span id="L7124" rel="#L7124">7124</span>
<span id="L7125" rel="#L7125">7125</span>
<span id="L7126" rel="#L7126">7126</span>
<span id="L7127" rel="#L7127">7127</span>
<span id="L7128" rel="#L7128">7128</span>
<span id="L7129" rel="#L7129">7129</span>
<span id="L7130" rel="#L7130">7130</span>
<span id="L7131" rel="#L7131">7131</span>
<span id="L7132" rel="#L7132">7132</span>
<span id="L7133" rel="#L7133">7133</span>
<span id="L7134" rel="#L7134">7134</span>
<span id="L7135" rel="#L7135">7135</span>
<span id="L7136" rel="#L7136">7136</span>
<span id="L7137" rel="#L7137">7137</span>
<span id="L7138" rel="#L7138">7138</span>
<span id="L7139" rel="#L7139">7139</span>
<span id="L7140" rel="#L7140">7140</span>
<span id="L7141" rel="#L7141">7141</span>
<span id="L7142" rel="#L7142">7142</span>
<span id="L7143" rel="#L7143">7143</span>
<span id="L7144" rel="#L7144">7144</span>
<span id="L7145" rel="#L7145">7145</span>
<span id="L7146" rel="#L7146">7146</span>
<span id="L7147" rel="#L7147">7147</span>
<span id="L7148" rel="#L7148">7148</span>
<span id="L7149" rel="#L7149">7149</span>
<span id="L7150" rel="#L7150">7150</span>
<span id="L7151" rel="#L7151">7151</span>
<span id="L7152" rel="#L7152">7152</span>
<span id="L7153" rel="#L7153">7153</span>
<span id="L7154" rel="#L7154">7154</span>
<span id="L7155" rel="#L7155">7155</span>
<span id="L7156" rel="#L7156">7156</span>
<span id="L7157" rel="#L7157">7157</span>
<span id="L7158" rel="#L7158">7158</span>
<span id="L7159" rel="#L7159">7159</span>
<span id="L7160" rel="#L7160">7160</span>
<span id="L7161" rel="#L7161">7161</span>
<span id="L7162" rel="#L7162">7162</span>
<span id="L7163" rel="#L7163">7163</span>
<span id="L7164" rel="#L7164">7164</span>
<span id="L7165" rel="#L7165">7165</span>
<span id="L7166" rel="#L7166">7166</span>
<span id="L7167" rel="#L7167">7167</span>
<span id="L7168" rel="#L7168">7168</span>
<span id="L7169" rel="#L7169">7169</span>
<span id="L7170" rel="#L7170">7170</span>
<span id="L7171" rel="#L7171">7171</span>
<span id="L7172" rel="#L7172">7172</span>
<span id="L7173" rel="#L7173">7173</span>
<span id="L7174" rel="#L7174">7174</span>
<span id="L7175" rel="#L7175">7175</span>
<span id="L7176" rel="#L7176">7176</span>
<span id="L7177" rel="#L7177">7177</span>
<span id="L7178" rel="#L7178">7178</span>
<span id="L7179" rel="#L7179">7179</span>
<span id="L7180" rel="#L7180">7180</span>
<span id="L7181" rel="#L7181">7181</span>
<span id="L7182" rel="#L7182">7182</span>
<span id="L7183" rel="#L7183">7183</span>
<span id="L7184" rel="#L7184">7184</span>
<span id="L7185" rel="#L7185">7185</span>
<span id="L7186" rel="#L7186">7186</span>
<span id="L7187" rel="#L7187">7187</span>
<span id="L7188" rel="#L7188">7188</span>
<span id="L7189" rel="#L7189">7189</span>
<span id="L7190" rel="#L7190">7190</span>
<span id="L7191" rel="#L7191">7191</span>
<span id="L7192" rel="#L7192">7192</span>
<span id="L7193" rel="#L7193">7193</span>
<span id="L7194" rel="#L7194">7194</span>
<span id="L7195" rel="#L7195">7195</span>
<span id="L7196" rel="#L7196">7196</span>
<span id="L7197" rel="#L7197">7197</span>
<span id="L7198" rel="#L7198">7198</span>
<span id="L7199" rel="#L7199">7199</span>
<span id="L7200" rel="#L7200">7200</span>
<span id="L7201" rel="#L7201">7201</span>
<span id="L7202" rel="#L7202">7202</span>
<span id="L7203" rel="#L7203">7203</span>
<span id="L7204" rel="#L7204">7204</span>
<span id="L7205" rel="#L7205">7205</span>
<span id="L7206" rel="#L7206">7206</span>
<span id="L7207" rel="#L7207">7207</span>
<span id="L7208" rel="#L7208">7208</span>
<span id="L7209" rel="#L7209">7209</span>
<span id="L7210" rel="#L7210">7210</span>
<span id="L7211" rel="#L7211">7211</span>
<span id="L7212" rel="#L7212">7212</span>
<span id="L7213" rel="#L7213">7213</span>
<span id="L7214" rel="#L7214">7214</span>
<span id="L7215" rel="#L7215">7215</span>
<span id="L7216" rel="#L7216">7216</span>
<span id="L7217" rel="#L7217">7217</span>
<span id="L7218" rel="#L7218">7218</span>
<span id="L7219" rel="#L7219">7219</span>
<span id="L7220" rel="#L7220">7220</span>
<span id="L7221" rel="#L7221">7221</span>
<span id="L7222" rel="#L7222">7222</span>
<span id="L7223" rel="#L7223">7223</span>
<span id="L7224" rel="#L7224">7224</span>
<span id="L7225" rel="#L7225">7225</span>
<span id="L7226" rel="#L7226">7226</span>
<span id="L7227" rel="#L7227">7227</span>
<span id="L7228" rel="#L7228">7228</span>
<span id="L7229" rel="#L7229">7229</span>
<span id="L7230" rel="#L7230">7230</span>
<span id="L7231" rel="#L7231">7231</span>
<span id="L7232" rel="#L7232">7232</span>
<span id="L7233" rel="#L7233">7233</span>
<span id="L7234" rel="#L7234">7234</span>
<span id="L7235" rel="#L7235">7235</span>
<span id="L7236" rel="#L7236">7236</span>
<span id="L7237" rel="#L7237">7237</span>
<span id="L7238" rel="#L7238">7238</span>
<span id="L7239" rel="#L7239">7239</span>
<span id="L7240" rel="#L7240">7240</span>
<span id="L7241" rel="#L7241">7241</span>
<span id="L7242" rel="#L7242">7242</span>
<span id="L7243" rel="#L7243">7243</span>
<span id="L7244" rel="#L7244">7244</span>
<span id="L7245" rel="#L7245">7245</span>
<span id="L7246" rel="#L7246">7246</span>
<span id="L7247" rel="#L7247">7247</span>
<span id="L7248" rel="#L7248">7248</span>
<span id="L7249" rel="#L7249">7249</span>
<span id="L7250" rel="#L7250">7250</span>
<span id="L7251" rel="#L7251">7251</span>
<span id="L7252" rel="#L7252">7252</span>
<span id="L7253" rel="#L7253">7253</span>
<span id="L7254" rel="#L7254">7254</span>
<span id="L7255" rel="#L7255">7255</span>
<span id="L7256" rel="#L7256">7256</span>
<span id="L7257" rel="#L7257">7257</span>
<span id="L7258" rel="#L7258">7258</span>
<span id="L7259" rel="#L7259">7259</span>
<span id="L7260" rel="#L7260">7260</span>
<span id="L7261" rel="#L7261">7261</span>
<span id="L7262" rel="#L7262">7262</span>
<span id="L7263" rel="#L7263">7263</span>
<span id="L7264" rel="#L7264">7264</span>
<span id="L7265" rel="#L7265">7265</span>
<span id="L7266" rel="#L7266">7266</span>
<span id="L7267" rel="#L7267">7267</span>
<span id="L7268" rel="#L7268">7268</span>
<span id="L7269" rel="#L7269">7269</span>
<span id="L7270" rel="#L7270">7270</span>
<span id="L7271" rel="#L7271">7271</span>
<span id="L7272" rel="#L7272">7272</span>
<span id="L7273" rel="#L7273">7273</span>
<span id="L7274" rel="#L7274">7274</span>
<span id="L7275" rel="#L7275">7275</span>
<span id="L7276" rel="#L7276">7276</span>
<span id="L7277" rel="#L7277">7277</span>
<span id="L7278" rel="#L7278">7278</span>
<span id="L7279" rel="#L7279">7279</span>
<span id="L7280" rel="#L7280">7280</span>
<span id="L7281" rel="#L7281">7281</span>
<span id="L7282" rel="#L7282">7282</span>
<span id="L7283" rel="#L7283">7283</span>
<span id="L7284" rel="#L7284">7284</span>
<span id="L7285" rel="#L7285">7285</span>
<span id="L7286" rel="#L7286">7286</span>
<span id="L7287" rel="#L7287">7287</span>
<span id="L7288" rel="#L7288">7288</span>
<span id="L7289" rel="#L7289">7289</span>
<span id="L7290" rel="#L7290">7290</span>
<span id="L7291" rel="#L7291">7291</span>
<span id="L7292" rel="#L7292">7292</span>
<span id="L7293" rel="#L7293">7293</span>
<span id="L7294" rel="#L7294">7294</span>
<span id="L7295" rel="#L7295">7295</span>
<span id="L7296" rel="#L7296">7296</span>
<span id="L7297" rel="#L7297">7297</span>
<span id="L7298" rel="#L7298">7298</span>
<span id="L7299" rel="#L7299">7299</span>
<span id="L7300" rel="#L7300">7300</span>
<span id="L7301" rel="#L7301">7301</span>
<span id="L7302" rel="#L7302">7302</span>
<span id="L7303" rel="#L7303">7303</span>
<span id="L7304" rel="#L7304">7304</span>
<span id="L7305" rel="#L7305">7305</span>
<span id="L7306" rel="#L7306">7306</span>
<span id="L7307" rel="#L7307">7307</span>
<span id="L7308" rel="#L7308">7308</span>
<span id="L7309" rel="#L7309">7309</span>
<span id="L7310" rel="#L7310">7310</span>
<span id="L7311" rel="#L7311">7311</span>
<span id="L7312" rel="#L7312">7312</span>
<span id="L7313" rel="#L7313">7313</span>
<span id="L7314" rel="#L7314">7314</span>
<span id="L7315" rel="#L7315">7315</span>
<span id="L7316" rel="#L7316">7316</span>
<span id="L7317" rel="#L7317">7317</span>
<span id="L7318" rel="#L7318">7318</span>
<span id="L7319" rel="#L7319">7319</span>
<span id="L7320" rel="#L7320">7320</span>
<span id="L7321" rel="#L7321">7321</span>
<span id="L7322" rel="#L7322">7322</span>
<span id="L7323" rel="#L7323">7323</span>
<span id="L7324" rel="#L7324">7324</span>
<span id="L7325" rel="#L7325">7325</span>
<span id="L7326" rel="#L7326">7326</span>
<span id="L7327" rel="#L7327">7327</span>
<span id="L7328" rel="#L7328">7328</span>
<span id="L7329" rel="#L7329">7329</span>
<span id="L7330" rel="#L7330">7330</span>
<span id="L7331" rel="#L7331">7331</span>
<span id="L7332" rel="#L7332">7332</span>
<span id="L7333" rel="#L7333">7333</span>
<span id="L7334" rel="#L7334">7334</span>
<span id="L7335" rel="#L7335">7335</span>
<span id="L7336" rel="#L7336">7336</span>
<span id="L7337" rel="#L7337">7337</span>
<span id="L7338" rel="#L7338">7338</span>
<span id="L7339" rel="#L7339">7339</span>
<span id="L7340" rel="#L7340">7340</span>
<span id="L7341" rel="#L7341">7341</span>
<span id="L7342" rel="#L7342">7342</span>
<span id="L7343" rel="#L7343">7343</span>
<span id="L7344" rel="#L7344">7344</span>
<span id="L7345" rel="#L7345">7345</span>
<span id="L7346" rel="#L7346">7346</span>
<span id="L7347" rel="#L7347">7347</span>
<span id="L7348" rel="#L7348">7348</span>
<span id="L7349" rel="#L7349">7349</span>
<span id="L7350" rel="#L7350">7350</span>
<span id="L7351" rel="#L7351">7351</span>
<span id="L7352" rel="#L7352">7352</span>
<span id="L7353" rel="#L7353">7353</span>
<span id="L7354" rel="#L7354">7354</span>
<span id="L7355" rel="#L7355">7355</span>
<span id="L7356" rel="#L7356">7356</span>
<span id="L7357" rel="#L7357">7357</span>
<span id="L7358" rel="#L7358">7358</span>
<span id="L7359" rel="#L7359">7359</span>
<span id="L7360" rel="#L7360">7360</span>
<span id="L7361" rel="#L7361">7361</span>
<span id="L7362" rel="#L7362">7362</span>
<span id="L7363" rel="#L7363">7363</span>
<span id="L7364" rel="#L7364">7364</span>
<span id="L7365" rel="#L7365">7365</span>
<span id="L7366" rel="#L7366">7366</span>
<span id="L7367" rel="#L7367">7367</span>
<span id="L7368" rel="#L7368">7368</span>
<span id="L7369" rel="#L7369">7369</span>
<span id="L7370" rel="#L7370">7370</span>
<span id="L7371" rel="#L7371">7371</span>
<span id="L7372" rel="#L7372">7372</span>
<span id="L7373" rel="#L7373">7373</span>
<span id="L7374" rel="#L7374">7374</span>
<span id="L7375" rel="#L7375">7375</span>
<span id="L7376" rel="#L7376">7376</span>
<span id="L7377" rel="#L7377">7377</span>
<span id="L7378" rel="#L7378">7378</span>
<span id="L7379" rel="#L7379">7379</span>
<span id="L7380" rel="#L7380">7380</span>
<span id="L7381" rel="#L7381">7381</span>
<span id="L7382" rel="#L7382">7382</span>
<span id="L7383" rel="#L7383">7383</span>
<span id="L7384" rel="#L7384">7384</span>
<span id="L7385" rel="#L7385">7385</span>
<span id="L7386" rel="#L7386">7386</span>
<span id="L7387" rel="#L7387">7387</span>
<span id="L7388" rel="#L7388">7388</span>
<span id="L7389" rel="#L7389">7389</span>
<span id="L7390" rel="#L7390">7390</span>
<span id="L7391" rel="#L7391">7391</span>
<span id="L7392" rel="#L7392">7392</span>
<span id="L7393" rel="#L7393">7393</span>
<span id="L7394" rel="#L7394">7394</span>
<span id="L7395" rel="#L7395">7395</span>
<span id="L7396" rel="#L7396">7396</span>
<span id="L7397" rel="#L7397">7397</span>
<span id="L7398" rel="#L7398">7398</span>
<span id="L7399" rel="#L7399">7399</span>
<span id="L7400" rel="#L7400">7400</span>
<span id="L7401" rel="#L7401">7401</span>
<span id="L7402" rel="#L7402">7402</span>
<span id="L7403" rel="#L7403">7403</span>
<span id="L7404" rel="#L7404">7404</span>
<span id="L7405" rel="#L7405">7405</span>
<span id="L7406" rel="#L7406">7406</span>
<span id="L7407" rel="#L7407">7407</span>
<span id="L7408" rel="#L7408">7408</span>
<span id="L7409" rel="#L7409">7409</span>
<span id="L7410" rel="#L7410">7410</span>
<span id="L7411" rel="#L7411">7411</span>
<span id="L7412" rel="#L7412">7412</span>
<span id="L7413" rel="#L7413">7413</span>
<span id="L7414" rel="#L7414">7414</span>
<span id="L7415" rel="#L7415">7415</span>
<span id="L7416" rel="#L7416">7416</span>
<span id="L7417" rel="#L7417">7417</span>
<span id="L7418" rel="#L7418">7418</span>
<span id="L7419" rel="#L7419">7419</span>
<span id="L7420" rel="#L7420">7420</span>
<span id="L7421" rel="#L7421">7421</span>
<span id="L7422" rel="#L7422">7422</span>
<span id="L7423" rel="#L7423">7423</span>
<span id="L7424" rel="#L7424">7424</span>
<span id="L7425" rel="#L7425">7425</span>
<span id="L7426" rel="#L7426">7426</span>
<span id="L7427" rel="#L7427">7427</span>
<span id="L7428" rel="#L7428">7428</span>
<span id="L7429" rel="#L7429">7429</span>
<span id="L7430" rel="#L7430">7430</span>
<span id="L7431" rel="#L7431">7431</span>
<span id="L7432" rel="#L7432">7432</span>
<span id="L7433" rel="#L7433">7433</span>
<span id="L7434" rel="#L7434">7434</span>
<span id="L7435" rel="#L7435">7435</span>
<span id="L7436" rel="#L7436">7436</span>
<span id="L7437" rel="#L7437">7437</span>
<span id="L7438" rel="#L7438">7438</span>
<span id="L7439" rel="#L7439">7439</span>
<span id="L7440" rel="#L7440">7440</span>
<span id="L7441" rel="#L7441">7441</span>
<span id="L7442" rel="#L7442">7442</span>
<span id="L7443" rel="#L7443">7443</span>
<span id="L7444" rel="#L7444">7444</span>
<span id="L7445" rel="#L7445">7445</span>
<span id="L7446" rel="#L7446">7446</span>
<span id="L7447" rel="#L7447">7447</span>
<span id="L7448" rel="#L7448">7448</span>
<span id="L7449" rel="#L7449">7449</span>
<span id="L7450" rel="#L7450">7450</span>
<span id="L7451" rel="#L7451">7451</span>
<span id="L7452" rel="#L7452">7452</span>
<span id="L7453" rel="#L7453">7453</span>
<span id="L7454" rel="#L7454">7454</span>
<span id="L7455" rel="#L7455">7455</span>
<span id="L7456" rel="#L7456">7456</span>
<span id="L7457" rel="#L7457">7457</span>
<span id="L7458" rel="#L7458">7458</span>
<span id="L7459" rel="#L7459">7459</span>
<span id="L7460" rel="#L7460">7460</span>
<span id="L7461" rel="#L7461">7461</span>
<span id="L7462" rel="#L7462">7462</span>
<span id="L7463" rel="#L7463">7463</span>
<span id="L7464" rel="#L7464">7464</span>
<span id="L7465" rel="#L7465">7465</span>
<span id="L7466" rel="#L7466">7466</span>
<span id="L7467" rel="#L7467">7467</span>
<span id="L7468" rel="#L7468">7468</span>
<span id="L7469" rel="#L7469">7469</span>
<span id="L7470" rel="#L7470">7470</span>
<span id="L7471" rel="#L7471">7471</span>
<span id="L7472" rel="#L7472">7472</span>
<span id="L7473" rel="#L7473">7473</span>
<span id="L7474" rel="#L7474">7474</span>
<span id="L7475" rel="#L7475">7475</span>
<span id="L7476" rel="#L7476">7476</span>
<span id="L7477" rel="#L7477">7477</span>
<span id="L7478" rel="#L7478">7478</span>
<span id="L7479" rel="#L7479">7479</span>
<span id="L7480" rel="#L7480">7480</span>
<span id="L7481" rel="#L7481">7481</span>
<span id="L7482" rel="#L7482">7482</span>
<span id="L7483" rel="#L7483">7483</span>
<span id="L7484" rel="#L7484">7484</span>
<span id="L7485" rel="#L7485">7485</span>
<span id="L7486" rel="#L7486">7486</span>
<span id="L7487" rel="#L7487">7487</span>
<span id="L7488" rel="#L7488">7488</span>
<span id="L7489" rel="#L7489">7489</span>
<span id="L7490" rel="#L7490">7490</span>
<span id="L7491" rel="#L7491">7491</span>
<span id="L7492" rel="#L7492">7492</span>
<span id="L7493" rel="#L7493">7493</span>
<span id="L7494" rel="#L7494">7494</span>
<span id="L7495" rel="#L7495">7495</span>
<span id="L7496" rel="#L7496">7496</span>
<span id="L7497" rel="#L7497">7497</span>
<span id="L7498" rel="#L7498">7498</span>
<span id="L7499" rel="#L7499">7499</span>
<span id="L7500" rel="#L7500">7500</span>
<span id="L7501" rel="#L7501">7501</span>
<span id="L7502" rel="#L7502">7502</span>
<span id="L7503" rel="#L7503">7503</span>
<span id="L7504" rel="#L7504">7504</span>
<span id="L7505" rel="#L7505">7505</span>
<span id="L7506" rel="#L7506">7506</span>
<span id="L7507" rel="#L7507">7507</span>
<span id="L7508" rel="#L7508">7508</span>
<span id="L7509" rel="#L7509">7509</span>
<span id="L7510" rel="#L7510">7510</span>
<span id="L7511" rel="#L7511">7511</span>
<span id="L7512" rel="#L7512">7512</span>
<span id="L7513" rel="#L7513">7513</span>
<span id="L7514" rel="#L7514">7514</span>
<span id="L7515" rel="#L7515">7515</span>
<span id="L7516" rel="#L7516">7516</span>
<span id="L7517" rel="#L7517">7517</span>
<span id="L7518" rel="#L7518">7518</span>
<span id="L7519" rel="#L7519">7519</span>
<span id="L7520" rel="#L7520">7520</span>
<span id="L7521" rel="#L7521">7521</span>
<span id="L7522" rel="#L7522">7522</span>
<span id="L7523" rel="#L7523">7523</span>
<span id="L7524" rel="#L7524">7524</span>
<span id="L7525" rel="#L7525">7525</span>
<span id="L7526" rel="#L7526">7526</span>
<span id="L7527" rel="#L7527">7527</span>
<span id="L7528" rel="#L7528">7528</span>
<span id="L7529" rel="#L7529">7529</span>
<span id="L7530" rel="#L7530">7530</span>
<span id="L7531" rel="#L7531">7531</span>
<span id="L7532" rel="#L7532">7532</span>
<span id="L7533" rel="#L7533">7533</span>
<span id="L7534" rel="#L7534">7534</span>
<span id="L7535" rel="#L7535">7535</span>
<span id="L7536" rel="#L7536">7536</span>
<span id="L7537" rel="#L7537">7537</span>
<span id="L7538" rel="#L7538">7538</span>
<span id="L7539" rel="#L7539">7539</span>
<span id="L7540" rel="#L7540">7540</span>
<span id="L7541" rel="#L7541">7541</span>
<span id="L7542" rel="#L7542">7542</span>
<span id="L7543" rel="#L7543">7543</span>
<span id="L7544" rel="#L7544">7544</span>
<span id="L7545" rel="#L7545">7545</span>
<span id="L7546" rel="#L7546">7546</span>
<span id="L7547" rel="#L7547">7547</span>
<span id="L7548" rel="#L7548">7548</span>
<span id="L7549" rel="#L7549">7549</span>
<span id="L7550" rel="#L7550">7550</span>
<span id="L7551" rel="#L7551">7551</span>
<span id="L7552" rel="#L7552">7552</span>
<span id="L7553" rel="#L7553">7553</span>
<span id="L7554" rel="#L7554">7554</span>
<span id="L7555" rel="#L7555">7555</span>
<span id="L7556" rel="#L7556">7556</span>
<span id="L7557" rel="#L7557">7557</span>
<span id="L7558" rel="#L7558">7558</span>
<span id="L7559" rel="#L7559">7559</span>
<span id="L7560" rel="#L7560">7560</span>
<span id="L7561" rel="#L7561">7561</span>
<span id="L7562" rel="#L7562">7562</span>
<span id="L7563" rel="#L7563">7563</span>
<span id="L7564" rel="#L7564">7564</span>
<span id="L7565" rel="#L7565">7565</span>
<span id="L7566" rel="#L7566">7566</span>
<span id="L7567" rel="#L7567">7567</span>
<span id="L7568" rel="#L7568">7568</span>
<span id="L7569" rel="#L7569">7569</span>
<span id="L7570" rel="#L7570">7570</span>
<span id="L7571" rel="#L7571">7571</span>
<span id="L7572" rel="#L7572">7572</span>
<span id="L7573" rel="#L7573">7573</span>
<span id="L7574" rel="#L7574">7574</span>
<span id="L7575" rel="#L7575">7575</span>
<span id="L7576" rel="#L7576">7576</span>
<span id="L7577" rel="#L7577">7577</span>
<span id="L7578" rel="#L7578">7578</span>
<span id="L7579" rel="#L7579">7579</span>
<span id="L7580" rel="#L7580">7580</span>
<span id="L7581" rel="#L7581">7581</span>
<span id="L7582" rel="#L7582">7582</span>
<span id="L7583" rel="#L7583">7583</span>
<span id="L7584" rel="#L7584">7584</span>
<span id="L7585" rel="#L7585">7585</span>
<span id="L7586" rel="#L7586">7586</span>
<span id="L7587" rel="#L7587">7587</span>
<span id="L7588" rel="#L7588">7588</span>
<span id="L7589" rel="#L7589">7589</span>
<span id="L7590" rel="#L7590">7590</span>
<span id="L7591" rel="#L7591">7591</span>
<span id="L7592" rel="#L7592">7592</span>
<span id="L7593" rel="#L7593">7593</span>
<span id="L7594" rel="#L7594">7594</span>
<span id="L7595" rel="#L7595">7595</span>
<span id="L7596" rel="#L7596">7596</span>
<span id="L7597" rel="#L7597">7597</span>
<span id="L7598" rel="#L7598">7598</span>
<span id="L7599" rel="#L7599">7599</span>
<span id="L7600" rel="#L7600">7600</span>
<span id="L7601" rel="#L7601">7601</span>
<span id="L7602" rel="#L7602">7602</span>
<span id="L7603" rel="#L7603">7603</span>
<span id="L7604" rel="#L7604">7604</span>
<span id="L7605" rel="#L7605">7605</span>
<span id="L7606" rel="#L7606">7606</span>
<span id="L7607" rel="#L7607">7607</span>
<span id="L7608" rel="#L7608">7608</span>
<span id="L7609" rel="#L7609">7609</span>
<span id="L7610" rel="#L7610">7610</span>
<span id="L7611" rel="#L7611">7611</span>
<span id="L7612" rel="#L7612">7612</span>
<span id="L7613" rel="#L7613">7613</span>
<span id="L7614" rel="#L7614">7614</span>
<span id="L7615" rel="#L7615">7615</span>
<span id="L7616" rel="#L7616">7616</span>
<span id="L7617" rel="#L7617">7617</span>
<span id="L7618" rel="#L7618">7618</span>
<span id="L7619" rel="#L7619">7619</span>
<span id="L7620" rel="#L7620">7620</span>
<span id="L7621" rel="#L7621">7621</span>
<span id="L7622" rel="#L7622">7622</span>
<span id="L7623" rel="#L7623">7623</span>
<span id="L7624" rel="#L7624">7624</span>
<span id="L7625" rel="#L7625">7625</span>
<span id="L7626" rel="#L7626">7626</span>
<span id="L7627" rel="#L7627">7627</span>
<span id="L7628" rel="#L7628">7628</span>
<span id="L7629" rel="#L7629">7629</span>
<span id="L7630" rel="#L7630">7630</span>
<span id="L7631" rel="#L7631">7631</span>
<span id="L7632" rel="#L7632">7632</span>
<span id="L7633" rel="#L7633">7633</span>
<span id="L7634" rel="#L7634">7634</span>
<span id="L7635" rel="#L7635">7635</span>
<span id="L7636" rel="#L7636">7636</span>
<span id="L7637" rel="#L7637">7637</span>
<span id="L7638" rel="#L7638">7638</span>
<span id="L7639" rel="#L7639">7639</span>
<span id="L7640" rel="#L7640">7640</span>
<span id="L7641" rel="#L7641">7641</span>
<span id="L7642" rel="#L7642">7642</span>
<span id="L7643" rel="#L7643">7643</span>
<span id="L7644" rel="#L7644">7644</span>
<span id="L7645" rel="#L7645">7645</span>
<span id="L7646" rel="#L7646">7646</span>
<span id="L7647" rel="#L7647">7647</span>
<span id="L7648" rel="#L7648">7648</span>
<span id="L7649" rel="#L7649">7649</span>
<span id="L7650" rel="#L7650">7650</span>
<span id="L7651" rel="#L7651">7651</span>
<span id="L7652" rel="#L7652">7652</span>
<span id="L7653" rel="#L7653">7653</span>
<span id="L7654" rel="#L7654">7654</span>
<span id="L7655" rel="#L7655">7655</span>
<span id="L7656" rel="#L7656">7656</span>
<span id="L7657" rel="#L7657">7657</span>
<span id="L7658" rel="#L7658">7658</span>
<span id="L7659" rel="#L7659">7659</span>
<span id="L7660" rel="#L7660">7660</span>
<span id="L7661" rel="#L7661">7661</span>
<span id="L7662" rel="#L7662">7662</span>
<span id="L7663" rel="#L7663">7663</span>
<span id="L7664" rel="#L7664">7664</span>
<span id="L7665" rel="#L7665">7665</span>
<span id="L7666" rel="#L7666">7666</span>
<span id="L7667" rel="#L7667">7667</span>
<span id="L7668" rel="#L7668">7668</span>
<span id="L7669" rel="#L7669">7669</span>
<span id="L7670" rel="#L7670">7670</span>
<span id="L7671" rel="#L7671">7671</span>
<span id="L7672" rel="#L7672">7672</span>
<span id="L7673" rel="#L7673">7673</span>
<span id="L7674" rel="#L7674">7674</span>
<span id="L7675" rel="#L7675">7675</span>
<span id="L7676" rel="#L7676">7676</span>
<span id="L7677" rel="#L7677">7677</span>
<span id="L7678" rel="#L7678">7678</span>
<span id="L7679" rel="#L7679">7679</span>
<span id="L7680" rel="#L7680">7680</span>
<span id="L7681" rel="#L7681">7681</span>
<span id="L7682" rel="#L7682">7682</span>
<span id="L7683" rel="#L7683">7683</span>
<span id="L7684" rel="#L7684">7684</span>
<span id="L7685" rel="#L7685">7685</span>
<span id="L7686" rel="#L7686">7686</span>
<span id="L7687" rel="#L7687">7687</span>
<span id="L7688" rel="#L7688">7688</span>
<span id="L7689" rel="#L7689">7689</span>
<span id="L7690" rel="#L7690">7690</span>
<span id="L7691" rel="#L7691">7691</span>
<span id="L7692" rel="#L7692">7692</span>
<span id="L7693" rel="#L7693">7693</span>
<span id="L7694" rel="#L7694">7694</span>
<span id="L7695" rel="#L7695">7695</span>
<span id="L7696" rel="#L7696">7696</span>
<span id="L7697" rel="#L7697">7697</span>
<span id="L7698" rel="#L7698">7698</span>
<span id="L7699" rel="#L7699">7699</span>
<span id="L7700" rel="#L7700">7700</span>
<span id="L7701" rel="#L7701">7701</span>
<span id="L7702" rel="#L7702">7702</span>
<span id="L7703" rel="#L7703">7703</span>
<span id="L7704" rel="#L7704">7704</span>
<span id="L7705" rel="#L7705">7705</span>
<span id="L7706" rel="#L7706">7706</span>
<span id="L7707" rel="#L7707">7707</span>
<span id="L7708" rel="#L7708">7708</span>
<span id="L7709" rel="#L7709">7709</span>
<span id="L7710" rel="#L7710">7710</span>
<span id="L7711" rel="#L7711">7711</span>
<span id="L7712" rel="#L7712">7712</span>
<span id="L7713" rel="#L7713">7713</span>
<span id="L7714" rel="#L7714">7714</span>
<span id="L7715" rel="#L7715">7715</span>
<span id="L7716" rel="#L7716">7716</span>
<span id="L7717" rel="#L7717">7717</span>
<span id="L7718" rel="#L7718">7718</span>
<span id="L7719" rel="#L7719">7719</span>
<span id="L7720" rel="#L7720">7720</span>
<span id="L7721" rel="#L7721">7721</span>
<span id="L7722" rel="#L7722">7722</span>
<span id="L7723" rel="#L7723">7723</span>
<span id="L7724" rel="#L7724">7724</span>
<span id="L7725" rel="#L7725">7725</span>
<span id="L7726" rel="#L7726">7726</span>
<span id="L7727" rel="#L7727">7727</span>
<span id="L7728" rel="#L7728">7728</span>
<span id="L7729" rel="#L7729">7729</span>
<span id="L7730" rel="#L7730">7730</span>
<span id="L7731" rel="#L7731">7731</span>
<span id="L7732" rel="#L7732">7732</span>
<span id="L7733" rel="#L7733">7733</span>
<span id="L7734" rel="#L7734">7734</span>
<span id="L7735" rel="#L7735">7735</span>
<span id="L7736" rel="#L7736">7736</span>
<span id="L7737" rel="#L7737">7737</span>
<span id="L7738" rel="#L7738">7738</span>
<span id="L7739" rel="#L7739">7739</span>
<span id="L7740" rel="#L7740">7740</span>
<span id="L7741" rel="#L7741">7741</span>
<span id="L7742" rel="#L7742">7742</span>
<span id="L7743" rel="#L7743">7743</span>
<span id="L7744" rel="#L7744">7744</span>
<span id="L7745" rel="#L7745">7745</span>
<span id="L7746" rel="#L7746">7746</span>
<span id="L7747" rel="#L7747">7747</span>
<span id="L7748" rel="#L7748">7748</span>
<span id="L7749" rel="#L7749">7749</span>
<span id="L7750" rel="#L7750">7750</span>
<span id="L7751" rel="#L7751">7751</span>
<span id="L7752" rel="#L7752">7752</span>
<span id="L7753" rel="#L7753">7753</span>
<span id="L7754" rel="#L7754">7754</span>
<span id="L7755" rel="#L7755">7755</span>
<span id="L7756" rel="#L7756">7756</span>
<span id="L7757" rel="#L7757">7757</span>
<span id="L7758" rel="#L7758">7758</span>
<span id="L7759" rel="#L7759">7759</span>
<span id="L7760" rel="#L7760">7760</span>
<span id="L7761" rel="#L7761">7761</span>
<span id="L7762" rel="#L7762">7762</span>
<span id="L7763" rel="#L7763">7763</span>
<span id="L7764" rel="#L7764">7764</span>
<span id="L7765" rel="#L7765">7765</span>
<span id="L7766" rel="#L7766">7766</span>
<span id="L7767" rel="#L7767">7767</span>
<span id="L7768" rel="#L7768">7768</span>
<span id="L7769" rel="#L7769">7769</span>
<span id="L7770" rel="#L7770">7770</span>
<span id="L7771" rel="#L7771">7771</span>
<span id="L7772" rel="#L7772">7772</span>
<span id="L7773" rel="#L7773">7773</span>
<span id="L7774" rel="#L7774">7774</span>
<span id="L7775" rel="#L7775">7775</span>
<span id="L7776" rel="#L7776">7776</span>
<span id="L7777" rel="#L7777">7777</span>
<span id="L7778" rel="#L7778">7778</span>
<span id="L7779" rel="#L7779">7779</span>
<span id="L7780" rel="#L7780">7780</span>
<span id="L7781" rel="#L7781">7781</span>
<span id="L7782" rel="#L7782">7782</span>
<span id="L7783" rel="#L7783">7783</span>
<span id="L7784" rel="#L7784">7784</span>
<span id="L7785" rel="#L7785">7785</span>
<span id="L7786" rel="#L7786">7786</span>
<span id="L7787" rel="#L7787">7787</span>
<span id="L7788" rel="#L7788">7788</span>
<span id="L7789" rel="#L7789">7789</span>
<span id="L7790" rel="#L7790">7790</span>
<span id="L7791" rel="#L7791">7791</span>
<span id="L7792" rel="#L7792">7792</span>
<span id="L7793" rel="#L7793">7793</span>
<span id="L7794" rel="#L7794">7794</span>
<span id="L7795" rel="#L7795">7795</span>
<span id="L7796" rel="#L7796">7796</span>
<span id="L7797" rel="#L7797">7797</span>
<span id="L7798" rel="#L7798">7798</span>
<span id="L7799" rel="#L7799">7799</span>
<span id="L7800" rel="#L7800">7800</span>
<span id="L7801" rel="#L7801">7801</span>
<span id="L7802" rel="#L7802">7802</span>
<span id="L7803" rel="#L7803">7803</span>
<span id="L7804" rel="#L7804">7804</span>
<span id="L7805" rel="#L7805">7805</span>
<span id="L7806" rel="#L7806">7806</span>
<span id="L7807" rel="#L7807">7807</span>
<span id="L7808" rel="#L7808">7808</span>
<span id="L7809" rel="#L7809">7809</span>
<span id="L7810" rel="#L7810">7810</span>
<span id="L7811" rel="#L7811">7811</span>
<span id="L7812" rel="#L7812">7812</span>
<span id="L7813" rel="#L7813">7813</span>
<span id="L7814" rel="#L7814">7814</span>
<span id="L7815" rel="#L7815">7815</span>
<span id="L7816" rel="#L7816">7816</span>
<span id="L7817" rel="#L7817">7817</span>
<span id="L7818" rel="#L7818">7818</span>
<span id="L7819" rel="#L7819">7819</span>
<span id="L7820" rel="#L7820">7820</span>
<span id="L7821" rel="#L7821">7821</span>
<span id="L7822" rel="#L7822">7822</span>
<span id="L7823" rel="#L7823">7823</span>
<span id="L7824" rel="#L7824">7824</span>
<span id="L7825" rel="#L7825">7825</span>
<span id="L7826" rel="#L7826">7826</span>
<span id="L7827" rel="#L7827">7827</span>
<span id="L7828" rel="#L7828">7828</span>
<span id="L7829" rel="#L7829">7829</span>
<span id="L7830" rel="#L7830">7830</span>
<span id="L7831" rel="#L7831">7831</span>
<span id="L7832" rel="#L7832">7832</span>
<span id="L7833" rel="#L7833">7833</span>
<span id="L7834" rel="#L7834">7834</span>
<span id="L7835" rel="#L7835">7835</span>
<span id="L7836" rel="#L7836">7836</span>
<span id="L7837" rel="#L7837">7837</span>
<span id="L7838" rel="#L7838">7838</span>
<span id="L7839" rel="#L7839">7839</span>
<span id="L7840" rel="#L7840">7840</span>
<span id="L7841" rel="#L7841">7841</span>
<span id="L7842" rel="#L7842">7842</span>
<span id="L7843" rel="#L7843">7843</span>
<span id="L7844" rel="#L7844">7844</span>
<span id="L7845" rel="#L7845">7845</span>
<span id="L7846" rel="#L7846">7846</span>
<span id="L7847" rel="#L7847">7847</span>
<span id="L7848" rel="#L7848">7848</span>
<span id="L7849" rel="#L7849">7849</span>
<span id="L7850" rel="#L7850">7850</span>
<span id="L7851" rel="#L7851">7851</span>
<span id="L7852" rel="#L7852">7852</span>
<span id="L7853" rel="#L7853">7853</span>
<span id="L7854" rel="#L7854">7854</span>
<span id="L7855" rel="#L7855">7855</span>
<span id="L7856" rel="#L7856">7856</span>
<span id="L7857" rel="#L7857">7857</span>
<span id="L7858" rel="#L7858">7858</span>
<span id="L7859" rel="#L7859">7859</span>
<span id="L7860" rel="#L7860">7860</span>
<span id="L7861" rel="#L7861">7861</span>
<span id="L7862" rel="#L7862">7862</span>
<span id="L7863" rel="#L7863">7863</span>
<span id="L7864" rel="#L7864">7864</span>
<span id="L7865" rel="#L7865">7865</span>
<span id="L7866" rel="#L7866">7866</span>
<span id="L7867" rel="#L7867">7867</span>
<span id="L7868" rel="#L7868">7868</span>
<span id="L7869" rel="#L7869">7869</span>
<span id="L7870" rel="#L7870">7870</span>
<span id="L7871" rel="#L7871">7871</span>
<span id="L7872" rel="#L7872">7872</span>
<span id="L7873" rel="#L7873">7873</span>
<span id="L7874" rel="#L7874">7874</span>
<span id="L7875" rel="#L7875">7875</span>
<span id="L7876" rel="#L7876">7876</span>
<span id="L7877" rel="#L7877">7877</span>
<span id="L7878" rel="#L7878">7878</span>
<span id="L7879" rel="#L7879">7879</span>
<span id="L7880" rel="#L7880">7880</span>
<span id="L7881" rel="#L7881">7881</span>
<span id="L7882" rel="#L7882">7882</span>
<span id="L7883" rel="#L7883">7883</span>
<span id="L7884" rel="#L7884">7884</span>
<span id="L7885" rel="#L7885">7885</span>
<span id="L7886" rel="#L7886">7886</span>
<span id="L7887" rel="#L7887">7887</span>
<span id="L7888" rel="#L7888">7888</span>
<span id="L7889" rel="#L7889">7889</span>
<span id="L7890" rel="#L7890">7890</span>
<span id="L7891" rel="#L7891">7891</span>
<span id="L7892" rel="#L7892">7892</span>
<span id="L7893" rel="#L7893">7893</span>
<span id="L7894" rel="#L7894">7894</span>
<span id="L7895" rel="#L7895">7895</span>
<span id="L7896" rel="#L7896">7896</span>
<span id="L7897" rel="#L7897">7897</span>
<span id="L7898" rel="#L7898">7898</span>
<span id="L7899" rel="#L7899">7899</span>
<span id="L7900" rel="#L7900">7900</span>
<span id="L7901" rel="#L7901">7901</span>
<span id="L7902" rel="#L7902">7902</span>
<span id="L7903" rel="#L7903">7903</span>
<span id="L7904" rel="#L7904">7904</span>
<span id="L7905" rel="#L7905">7905</span>
<span id="L7906" rel="#L7906">7906</span>
<span id="L7907" rel="#L7907">7907</span>
<span id="L7908" rel="#L7908">7908</span>
<span id="L7909" rel="#L7909">7909</span>
<span id="L7910" rel="#L7910">7910</span>
<span id="L7911" rel="#L7911">7911</span>
<span id="L7912" rel="#L7912">7912</span>
<span id="L7913" rel="#L7913">7913</span>
<span id="L7914" rel="#L7914">7914</span>
<span id="L7915" rel="#L7915">7915</span>
<span id="L7916" rel="#L7916">7916</span>
<span id="L7917" rel="#L7917">7917</span>
<span id="L7918" rel="#L7918">7918</span>
<span id="L7919" rel="#L7919">7919</span>
<span id="L7920" rel="#L7920">7920</span>
<span id="L7921" rel="#L7921">7921</span>
<span id="L7922" rel="#L7922">7922</span>
<span id="L7923" rel="#L7923">7923</span>
<span id="L7924" rel="#L7924">7924</span>
<span id="L7925" rel="#L7925">7925</span>
<span id="L7926" rel="#L7926">7926</span>
<span id="L7927" rel="#L7927">7927</span>
<span id="L7928" rel="#L7928">7928</span>
<span id="L7929" rel="#L7929">7929</span>
<span id="L7930" rel="#L7930">7930</span>
<span id="L7931" rel="#L7931">7931</span>
<span id="L7932" rel="#L7932">7932</span>
<span id="L7933" rel="#L7933">7933</span>
<span id="L7934" rel="#L7934">7934</span>
<span id="L7935" rel="#L7935">7935</span>
<span id="L7936" rel="#L7936">7936</span>
<span id="L7937" rel="#L7937">7937</span>
<span id="L7938" rel="#L7938">7938</span>
<span id="L7939" rel="#L7939">7939</span>
<span id="L7940" rel="#L7940">7940</span>
<span id="L7941" rel="#L7941">7941</span>
<span id="L7942" rel="#L7942">7942</span>
<span id="L7943" rel="#L7943">7943</span>
<span id="L7944" rel="#L7944">7944</span>
<span id="L7945" rel="#L7945">7945</span>
<span id="L7946" rel="#L7946">7946</span>
<span id="L7947" rel="#L7947">7947</span>
<span id="L7948" rel="#L7948">7948</span>
<span id="L7949" rel="#L7949">7949</span>
<span id="L7950" rel="#L7950">7950</span>
<span id="L7951" rel="#L7951">7951</span>
<span id="L7952" rel="#L7952">7952</span>
<span id="L7953" rel="#L7953">7953</span>
<span id="L7954" rel="#L7954">7954</span>
<span id="L7955" rel="#L7955">7955</span>
<span id="L7956" rel="#L7956">7956</span>
<span id="L7957" rel="#L7957">7957</span>
<span id="L7958" rel="#L7958">7958</span>
<span id="L7959" rel="#L7959">7959</span>
<span id="L7960" rel="#L7960">7960</span>
<span id="L7961" rel="#L7961">7961</span>
<span id="L7962" rel="#L7962">7962</span>
<span id="L7963" rel="#L7963">7963</span>
<span id="L7964" rel="#L7964">7964</span>
<span id="L7965" rel="#L7965">7965</span>
<span id="L7966" rel="#L7966">7966</span>
<span id="L7967" rel="#L7967">7967</span>
<span id="L7968" rel="#L7968">7968</span>
<span id="L7969" rel="#L7969">7969</span>
<span id="L7970" rel="#L7970">7970</span>
<span id="L7971" rel="#L7971">7971</span>
<span id="L7972" rel="#L7972">7972</span>
<span id="L7973" rel="#L7973">7973</span>
<span id="L7974" rel="#L7974">7974</span>
<span id="L7975" rel="#L7975">7975</span>
<span id="L7976" rel="#L7976">7976</span>
<span id="L7977" rel="#L7977">7977</span>
<span id="L7978" rel="#L7978">7978</span>
<span id="L7979" rel="#L7979">7979</span>
<span id="L7980" rel="#L7980">7980</span>
<span id="L7981" rel="#L7981">7981</span>
<span id="L7982" rel="#L7982">7982</span>
<span id="L7983" rel="#L7983">7983</span>
<span id="L7984" rel="#L7984">7984</span>
<span id="L7985" rel="#L7985">7985</span>
<span id="L7986" rel="#L7986">7986</span>
<span id="L7987" rel="#L7987">7987</span>
<span id="L7988" rel="#L7988">7988</span>
<span id="L7989" rel="#L7989">7989</span>
<span id="L7990" rel="#L7990">7990</span>
<span id="L7991" rel="#L7991">7991</span>
<span id="L7992" rel="#L7992">7992</span>
<span id="L7993" rel="#L7993">7993</span>
<span id="L7994" rel="#L7994">7994</span>
<span id="L7995" rel="#L7995">7995</span>
<span id="L7996" rel="#L7996">7996</span>
<span id="L7997" rel="#L7997">7997</span>
<span id="L7998" rel="#L7998">7998</span>
<span id="L7999" rel="#L7999">7999</span>
<span id="L8000" rel="#L8000">8000</span>
<span id="L8001" rel="#L8001">8001</span>
<span id="L8002" rel="#L8002">8002</span>
<span id="L8003" rel="#L8003">8003</span>
<span id="L8004" rel="#L8004">8004</span>
<span id="L8005" rel="#L8005">8005</span>
<span id="L8006" rel="#L8006">8006</span>
<span id="L8007" rel="#L8007">8007</span>
<span id="L8008" rel="#L8008">8008</span>
<span id="L8009" rel="#L8009">8009</span>
<span id="L8010" rel="#L8010">8010</span>
<span id="L8011" rel="#L8011">8011</span>
<span id="L8012" rel="#L8012">8012</span>
<span id="L8013" rel="#L8013">8013</span>
<span id="L8014" rel="#L8014">8014</span>
<span id="L8015" rel="#L8015">8015</span>
<span id="L8016" rel="#L8016">8016</span>
<span id="L8017" rel="#L8017">8017</span>
<span id="L8018" rel="#L8018">8018</span>
<span id="L8019" rel="#L8019">8019</span>
<span id="L8020" rel="#L8020">8020</span>
<span id="L8021" rel="#L8021">8021</span>
<span id="L8022" rel="#L8022">8022</span>
<span id="L8023" rel="#L8023">8023</span>
<span id="L8024" rel="#L8024">8024</span>
<span id="L8025" rel="#L8025">8025</span>
<span id="L8026" rel="#L8026">8026</span>
<span id="L8027" rel="#L8027">8027</span>
<span id="L8028" rel="#L8028">8028</span>
<span id="L8029" rel="#L8029">8029</span>
<span id="L8030" rel="#L8030">8030</span>
<span id="L8031" rel="#L8031">8031</span>
<span id="L8032" rel="#L8032">8032</span>
<span id="L8033" rel="#L8033">8033</span>
<span id="L8034" rel="#L8034">8034</span>
<span id="L8035" rel="#L8035">8035</span>
<span id="L8036" rel="#L8036">8036</span>
<span id="L8037" rel="#L8037">8037</span>
<span id="L8038" rel="#L8038">8038</span>
<span id="L8039" rel="#L8039">8039</span>
<span id="L8040" rel="#L8040">8040</span>
<span id="L8041" rel="#L8041">8041</span>
<span id="L8042" rel="#L8042">8042</span>
<span id="L8043" rel="#L8043">8043</span>
<span id="L8044" rel="#L8044">8044</span>
<span id="L8045" rel="#L8045">8045</span>
<span id="L8046" rel="#L8046">8046</span>
<span id="L8047" rel="#L8047">8047</span>
<span id="L8048" rel="#L8048">8048</span>
<span id="L8049" rel="#L8049">8049</span>
<span id="L8050" rel="#L8050">8050</span>
<span id="L8051" rel="#L8051">8051</span>
<span id="L8052" rel="#L8052">8052</span>
<span id="L8053" rel="#L8053">8053</span>
<span id="L8054" rel="#L8054">8054</span>
<span id="L8055" rel="#L8055">8055</span>
<span id="L8056" rel="#L8056">8056</span>
<span id="L8057" rel="#L8057">8057</span>
<span id="L8058" rel="#L8058">8058</span>
<span id="L8059" rel="#L8059">8059</span>
<span id="L8060" rel="#L8060">8060</span>
<span id="L8061" rel="#L8061">8061</span>
<span id="L8062" rel="#L8062">8062</span>
<span id="L8063" rel="#L8063">8063</span>
<span id="L8064" rel="#L8064">8064</span>
<span id="L8065" rel="#L8065">8065</span>
<span id="L8066" rel="#L8066">8066</span>
<span id="L8067" rel="#L8067">8067</span>
<span id="L8068" rel="#L8068">8068</span>
<span id="L8069" rel="#L8069">8069</span>
<span id="L8070" rel="#L8070">8070</span>
<span id="L8071" rel="#L8071">8071</span>
<span id="L8072" rel="#L8072">8072</span>
<span id="L8073" rel="#L8073">8073</span>
<span id="L8074" rel="#L8074">8074</span>
<span id="L8075" rel="#L8075">8075</span>
<span id="L8076" rel="#L8076">8076</span>
<span id="L8077" rel="#L8077">8077</span>
<span id="L8078" rel="#L8078">8078</span>
<span id="L8079" rel="#L8079">8079</span>
<span id="L8080" rel="#L8080">8080</span>
<span id="L8081" rel="#L8081">8081</span>
<span id="L8082" rel="#L8082">8082</span>
<span id="L8083" rel="#L8083">8083</span>
<span id="L8084" rel="#L8084">8084</span>
<span id="L8085" rel="#L8085">8085</span>
<span id="L8086" rel="#L8086">8086</span>
<span id="L8087" rel="#L8087">8087</span>
<span id="L8088" rel="#L8088">8088</span>
<span id="L8089" rel="#L8089">8089</span>
<span id="L8090" rel="#L8090">8090</span>
<span id="L8091" rel="#L8091">8091</span>
<span id="L8092" rel="#L8092">8092</span>
<span id="L8093" rel="#L8093">8093</span>
<span id="L8094" rel="#L8094">8094</span>
<span id="L8095" rel="#L8095">8095</span>
<span id="L8096" rel="#L8096">8096</span>
<span id="L8097" rel="#L8097">8097</span>
<span id="L8098" rel="#L8098">8098</span>
<span id="L8099" rel="#L8099">8099</span>
<span id="L8100" rel="#L8100">8100</span>
<span id="L8101" rel="#L8101">8101</span>
<span id="L8102" rel="#L8102">8102</span>
<span id="L8103" rel="#L8103">8103</span>
<span id="L8104" rel="#L8104">8104</span>
<span id="L8105" rel="#L8105">8105</span>
<span id="L8106" rel="#L8106">8106</span>
<span id="L8107" rel="#L8107">8107</span>
<span id="L8108" rel="#L8108">8108</span>
<span id="L8109" rel="#L8109">8109</span>
<span id="L8110" rel="#L8110">8110</span>
<span id="L8111" rel="#L8111">8111</span>
<span id="L8112" rel="#L8112">8112</span>
<span id="L8113" rel="#L8113">8113</span>
<span id="L8114" rel="#L8114">8114</span>
<span id="L8115" rel="#L8115">8115</span>
<span id="L8116" rel="#L8116">8116</span>
<span id="L8117" rel="#L8117">8117</span>
<span id="L8118" rel="#L8118">8118</span>
<span id="L8119" rel="#L8119">8119</span>
<span id="L8120" rel="#L8120">8120</span>
<span id="L8121" rel="#L8121">8121</span>
<span id="L8122" rel="#L8122">8122</span>
<span id="L8123" rel="#L8123">8123</span>
<span id="L8124" rel="#L8124">8124</span>
<span id="L8125" rel="#L8125">8125</span>
<span id="L8126" rel="#L8126">8126</span>
<span id="L8127" rel="#L8127">8127</span>
<span id="L8128" rel="#L8128">8128</span>
<span id="L8129" rel="#L8129">8129</span>
<span id="L8130" rel="#L8130">8130</span>
<span id="L8131" rel="#L8131">8131</span>
<span id="L8132" rel="#L8132">8132</span>
<span id="L8133" rel="#L8133">8133</span>
<span id="L8134" rel="#L8134">8134</span>
<span id="L8135" rel="#L8135">8135</span>
<span id="L8136" rel="#L8136">8136</span>
<span id="L8137" rel="#L8137">8137</span>
<span id="L8138" rel="#L8138">8138</span>
<span id="L8139" rel="#L8139">8139</span>
<span id="L8140" rel="#L8140">8140</span>
<span id="L8141" rel="#L8141">8141</span>
<span id="L8142" rel="#L8142">8142</span>
<span id="L8143" rel="#L8143">8143</span>
<span id="L8144" rel="#L8144">8144</span>
<span id="L8145" rel="#L8145">8145</span>
<span id="L8146" rel="#L8146">8146</span>
<span id="L8147" rel="#L8147">8147</span>
<span id="L8148" rel="#L8148">8148</span>
<span id="L8149" rel="#L8149">8149</span>
<span id="L8150" rel="#L8150">8150</span>
<span id="L8151" rel="#L8151">8151</span>
<span id="L8152" rel="#L8152">8152</span>
<span id="L8153" rel="#L8153">8153</span>
<span id="L8154" rel="#L8154">8154</span>
<span id="L8155" rel="#L8155">8155</span>
<span id="L8156" rel="#L8156">8156</span>
<span id="L8157" rel="#L8157">8157</span>
<span id="L8158" rel="#L8158">8158</span>
<span id="L8159" rel="#L8159">8159</span>
<span id="L8160" rel="#L8160">8160</span>
<span id="L8161" rel="#L8161">8161</span>
<span id="L8162" rel="#L8162">8162</span>
<span id="L8163" rel="#L8163">8163</span>
<span id="L8164" rel="#L8164">8164</span>
<span id="L8165" rel="#L8165">8165</span>
<span id="L8166" rel="#L8166">8166</span>
<span id="L8167" rel="#L8167">8167</span>
<span id="L8168" rel="#L8168">8168</span>
<span id="L8169" rel="#L8169">8169</span>
<span id="L8170" rel="#L8170">8170</span>
<span id="L8171" rel="#L8171">8171</span>
<span id="L8172" rel="#L8172">8172</span>
<span id="L8173" rel="#L8173">8173</span>
<span id="L8174" rel="#L8174">8174</span>
<span id="L8175" rel="#L8175">8175</span>
<span id="L8176" rel="#L8176">8176</span>
<span id="L8177" rel="#L8177">8177</span>
<span id="L8178" rel="#L8178">8178</span>
<span id="L8179" rel="#L8179">8179</span>
<span id="L8180" rel="#L8180">8180</span>
<span id="L8181" rel="#L8181">8181</span>
<span id="L8182" rel="#L8182">8182</span>
<span id="L8183" rel="#L8183">8183</span>
<span id="L8184" rel="#L8184">8184</span>
<span id="L8185" rel="#L8185">8185</span>
<span id="L8186" rel="#L8186">8186</span>
<span id="L8187" rel="#L8187">8187</span>
<span id="L8188" rel="#L8188">8188</span>
<span id="L8189" rel="#L8189">8189</span>
<span id="L8190" rel="#L8190">8190</span>
<span id="L8191" rel="#L8191">8191</span>
<span id="L8192" rel="#L8192">8192</span>
<span id="L8193" rel="#L8193">8193</span>
<span id="L8194" rel="#L8194">8194</span>
<span id="L8195" rel="#L8195">8195</span>
<span id="L8196" rel="#L8196">8196</span>
<span id="L8197" rel="#L8197">8197</span>
<span id="L8198" rel="#L8198">8198</span>
<span id="L8199" rel="#L8199">8199</span>
<span id="L8200" rel="#L8200">8200</span>
<span id="L8201" rel="#L8201">8201</span>
<span id="L8202" rel="#L8202">8202</span>
<span id="L8203" rel="#L8203">8203</span>
<span id="L8204" rel="#L8204">8204</span>
<span id="L8205" rel="#L8205">8205</span>
<span id="L8206" rel="#L8206">8206</span>
<span id="L8207" rel="#L8207">8207</span>
<span id="L8208" rel="#L8208">8208</span>
<span id="L8209" rel="#L8209">8209</span>
<span id="L8210" rel="#L8210">8210</span>
<span id="L8211" rel="#L8211">8211</span>
<span id="L8212" rel="#L8212">8212</span>
<span id="L8213" rel="#L8213">8213</span>
<span id="L8214" rel="#L8214">8214</span>
<span id="L8215" rel="#L8215">8215</span>
<span id="L8216" rel="#L8216">8216</span>
<span id="L8217" rel="#L8217">8217</span>
<span id="L8218" rel="#L8218">8218</span>
<span id="L8219" rel="#L8219">8219</span>
<span id="L8220" rel="#L8220">8220</span>
<span id="L8221" rel="#L8221">8221</span>
<span id="L8222" rel="#L8222">8222</span>
<span id="L8223" rel="#L8223">8223</span>
<span id="L8224" rel="#L8224">8224</span>
<span id="L8225" rel="#L8225">8225</span>
<span id="L8226" rel="#L8226">8226</span>
<span id="L8227" rel="#L8227">8227</span>
<span id="L8228" rel="#L8228">8228</span>
<span id="L8229" rel="#L8229">8229</span>
<span id="L8230" rel="#L8230">8230</span>
<span id="L8231" rel="#L8231">8231</span>
<span id="L8232" rel="#L8232">8232</span>
<span id="L8233" rel="#L8233">8233</span>
<span id="L8234" rel="#L8234">8234</span>
<span id="L8235" rel="#L8235">8235</span>
<span id="L8236" rel="#L8236">8236</span>
<span id="L8237" rel="#L8237">8237</span>
<span id="L8238" rel="#L8238">8238</span>
<span id="L8239" rel="#L8239">8239</span>
<span id="L8240" rel="#L8240">8240</span>
<span id="L8241" rel="#L8241">8241</span>
<span id="L8242" rel="#L8242">8242</span>
<span id="L8243" rel="#L8243">8243</span>
<span id="L8244" rel="#L8244">8244</span>
<span id="L8245" rel="#L8245">8245</span>
<span id="L8246" rel="#L8246">8246</span>
<span id="L8247" rel="#L8247">8247</span>
<span id="L8248" rel="#L8248">8248</span>
<span id="L8249" rel="#L8249">8249</span>
<span id="L8250" rel="#L8250">8250</span>
<span id="L8251" rel="#L8251">8251</span>
<span id="L8252" rel="#L8252">8252</span>
<span id="L8253" rel="#L8253">8253</span>
<span id="L8254" rel="#L8254">8254</span>
<span id="L8255" rel="#L8255">8255</span>
<span id="L8256" rel="#L8256">8256</span>
<span id="L8257" rel="#L8257">8257</span>
<span id="L8258" rel="#L8258">8258</span>
<span id="L8259" rel="#L8259">8259</span>
<span id="L8260" rel="#L8260">8260</span>
<span id="L8261" rel="#L8261">8261</span>
<span id="L8262" rel="#L8262">8262</span>
<span id="L8263" rel="#L8263">8263</span>
<span id="L8264" rel="#L8264">8264</span>
<span id="L8265" rel="#L8265">8265</span>
<span id="L8266" rel="#L8266">8266</span>
<span id="L8267" rel="#L8267">8267</span>
<span id="L8268" rel="#L8268">8268</span>
<span id="L8269" rel="#L8269">8269</span>
<span id="L8270" rel="#L8270">8270</span>
<span id="L8271" rel="#L8271">8271</span>
<span id="L8272" rel="#L8272">8272</span>
<span id="L8273" rel="#L8273">8273</span>
<span id="L8274" rel="#L8274">8274</span>
<span id="L8275" rel="#L8275">8275</span>
<span id="L8276" rel="#L8276">8276</span>
<span id="L8277" rel="#L8277">8277</span>
<span id="L8278" rel="#L8278">8278</span>
<span id="L8279" rel="#L8279">8279</span>
<span id="L8280" rel="#L8280">8280</span>
<span id="L8281" rel="#L8281">8281</span>
<span id="L8282" rel="#L8282">8282</span>
<span id="L8283" rel="#L8283">8283</span>
<span id="L8284" rel="#L8284">8284</span>
<span id="L8285" rel="#L8285">8285</span>
<span id="L8286" rel="#L8286">8286</span>
<span id="L8287" rel="#L8287">8287</span>
<span id="L8288" rel="#L8288">8288</span>
<span id="L8289" rel="#L8289">8289</span>
<span id="L8290" rel="#L8290">8290</span>
<span id="L8291" rel="#L8291">8291</span>
<span id="L8292" rel="#L8292">8292</span>
<span id="L8293" rel="#L8293">8293</span>
<span id="L8294" rel="#L8294">8294</span>
<span id="L8295" rel="#L8295">8295</span>
<span id="L8296" rel="#L8296">8296</span>
<span id="L8297" rel="#L8297">8297</span>
<span id="L8298" rel="#L8298">8298</span>
<span id="L8299" rel="#L8299">8299</span>
<span id="L8300" rel="#L8300">8300</span>
<span id="L8301" rel="#L8301">8301</span>
<span id="L8302" rel="#L8302">8302</span>
<span id="L8303" rel="#L8303">8303</span>
<span id="L8304" rel="#L8304">8304</span>
<span id="L8305" rel="#L8305">8305</span>
<span id="L8306" rel="#L8306">8306</span>
<span id="L8307" rel="#L8307">8307</span>
<span id="L8308" rel="#L8308">8308</span>
<span id="L8309" rel="#L8309">8309</span>
<span id="L8310" rel="#L8310">8310</span>
<span id="L8311" rel="#L8311">8311</span>
<span id="L8312" rel="#L8312">8312</span>
<span id="L8313" rel="#L8313">8313</span>
<span id="L8314" rel="#L8314">8314</span>
<span id="L8315" rel="#L8315">8315</span>
<span id="L8316" rel="#L8316">8316</span>
<span id="L8317" rel="#L8317">8317</span>
<span id="L8318" rel="#L8318">8318</span>
<span id="L8319" rel="#L8319">8319</span>
<span id="L8320" rel="#L8320">8320</span>
<span id="L8321" rel="#L8321">8321</span>
<span id="L8322" rel="#L8322">8322</span>
<span id="L8323" rel="#L8323">8323</span>
<span id="L8324" rel="#L8324">8324</span>
<span id="L8325" rel="#L8325">8325</span>
<span id="L8326" rel="#L8326">8326</span>
<span id="L8327" rel="#L8327">8327</span>
<span id="L8328" rel="#L8328">8328</span>
<span id="L8329" rel="#L8329">8329</span>
<span id="L8330" rel="#L8330">8330</span>
<span id="L8331" rel="#L8331">8331</span>
<span id="L8332" rel="#L8332">8332</span>
<span id="L8333" rel="#L8333">8333</span>
<span id="L8334" rel="#L8334">8334</span>
<span id="L8335" rel="#L8335">8335</span>
<span id="L8336" rel="#L8336">8336</span>
<span id="L8337" rel="#L8337">8337</span>
<span id="L8338" rel="#L8338">8338</span>
<span id="L8339" rel="#L8339">8339</span>
<span id="L8340" rel="#L8340">8340</span>
<span id="L8341" rel="#L8341">8341</span>
<span id="L8342" rel="#L8342">8342</span>
<span id="L8343" rel="#L8343">8343</span>
<span id="L8344" rel="#L8344">8344</span>
<span id="L8345" rel="#L8345">8345</span>
<span id="L8346" rel="#L8346">8346</span>
<span id="L8347" rel="#L8347">8347</span>
<span id="L8348" rel="#L8348">8348</span>
<span id="L8349" rel="#L8349">8349</span>
<span id="L8350" rel="#L8350">8350</span>
<span id="L8351" rel="#L8351">8351</span>
<span id="L8352" rel="#L8352">8352</span>
<span id="L8353" rel="#L8353">8353</span>
<span id="L8354" rel="#L8354">8354</span>
<span id="L8355" rel="#L8355">8355</span>
<span id="L8356" rel="#L8356">8356</span>
<span id="L8357" rel="#L8357">8357</span>
<span id="L8358" rel="#L8358">8358</span>
<span id="L8359" rel="#L8359">8359</span>
<span id="L8360" rel="#L8360">8360</span>
<span id="L8361" rel="#L8361">8361</span>
<span id="L8362" rel="#L8362">8362</span>
<span id="L8363" rel="#L8363">8363</span>
<span id="L8364" rel="#L8364">8364</span>
<span id="L8365" rel="#L8365">8365</span>
<span id="L8366" rel="#L8366">8366</span>
<span id="L8367" rel="#L8367">8367</span>
<span id="L8368" rel="#L8368">8368</span>
<span id="L8369" rel="#L8369">8369</span>
<span id="L8370" rel="#L8370">8370</span>
<span id="L8371" rel="#L8371">8371</span>
<span id="L8372" rel="#L8372">8372</span>
<span id="L8373" rel="#L8373">8373</span>
<span id="L8374" rel="#L8374">8374</span>
<span id="L8375" rel="#L8375">8375</span>
<span id="L8376" rel="#L8376">8376</span>
<span id="L8377" rel="#L8377">8377</span>
<span id="L8378" rel="#L8378">8378</span>
<span id="L8379" rel="#L8379">8379</span>
<span id="L8380" rel="#L8380">8380</span>
<span id="L8381" rel="#L8381">8381</span>
<span id="L8382" rel="#L8382">8382</span>
<span id="L8383" rel="#L8383">8383</span>
<span id="L8384" rel="#L8384">8384</span>
<span id="L8385" rel="#L8385">8385</span>
<span id="L8386" rel="#L8386">8386</span>
<span id="L8387" rel="#L8387">8387</span>
<span id="L8388" rel="#L8388">8388</span>
<span id="L8389" rel="#L8389">8389</span>
<span id="L8390" rel="#L8390">8390</span>
<span id="L8391" rel="#L8391">8391</span>
<span id="L8392" rel="#L8392">8392</span>
<span id="L8393" rel="#L8393">8393</span>
<span id="L8394" rel="#L8394">8394</span>
<span id="L8395" rel="#L8395">8395</span>
<span id="L8396" rel="#L8396">8396</span>
<span id="L8397" rel="#L8397">8397</span>
<span id="L8398" rel="#L8398">8398</span>
<span id="L8399" rel="#L8399">8399</span>
<span id="L8400" rel="#L8400">8400</span>
<span id="L8401" rel="#L8401">8401</span>
<span id="L8402" rel="#L8402">8402</span>
<span id="L8403" rel="#L8403">8403</span>
<span id="L8404" rel="#L8404">8404</span>
<span id="L8405" rel="#L8405">8405</span>
<span id="L8406" rel="#L8406">8406</span>
<span id="L8407" rel="#L8407">8407</span>
<span id="L8408" rel="#L8408">8408</span>
<span id="L8409" rel="#L8409">8409</span>
<span id="L8410" rel="#L8410">8410</span>
<span id="L8411" rel="#L8411">8411</span>
<span id="L8412" rel="#L8412">8412</span>
<span id="L8413" rel="#L8413">8413</span>
<span id="L8414" rel="#L8414">8414</span>
<span id="L8415" rel="#L8415">8415</span>
<span id="L8416" rel="#L8416">8416</span>
<span id="L8417" rel="#L8417">8417</span>
<span id="L8418" rel="#L8418">8418</span>
<span id="L8419" rel="#L8419">8419</span>
<span id="L8420" rel="#L8420">8420</span>
<span id="L8421" rel="#L8421">8421</span>
<span id="L8422" rel="#L8422">8422</span>
<span id="L8423" rel="#L8423">8423</span>
<span id="L8424" rel="#L8424">8424</span>
<span id="L8425" rel="#L8425">8425</span>
<span id="L8426" rel="#L8426">8426</span>
<span id="L8427" rel="#L8427">8427</span>
<span id="L8428" rel="#L8428">8428</span>
<span id="L8429" rel="#L8429">8429</span>
<span id="L8430" rel="#L8430">8430</span>
<span id="L8431" rel="#L8431">8431</span>
<span id="L8432" rel="#L8432">8432</span>
<span id="L8433" rel="#L8433">8433</span>
<span id="L8434" rel="#L8434">8434</span>
<span id="L8435" rel="#L8435">8435</span>
<span id="L8436" rel="#L8436">8436</span>
<span id="L8437" rel="#L8437">8437</span>
<span id="L8438" rel="#L8438">8438</span>
<span id="L8439" rel="#L8439">8439</span>
<span id="L8440" rel="#L8440">8440</span>
<span id="L8441" rel="#L8441">8441</span>
<span id="L8442" rel="#L8442">8442</span>
<span id="L8443" rel="#L8443">8443</span>
<span id="L8444" rel="#L8444">8444</span>
<span id="L8445" rel="#L8445">8445</span>
<span id="L8446" rel="#L8446">8446</span>
<span id="L8447" rel="#L8447">8447</span>
<span id="L8448" rel="#L8448">8448</span>
<span id="L8449" rel="#L8449">8449</span>
<span id="L8450" rel="#L8450">8450</span>
<span id="L8451" rel="#L8451">8451</span>
<span id="L8452" rel="#L8452">8452</span>
<span id="L8453" rel="#L8453">8453</span>
<span id="L8454" rel="#L8454">8454</span>
<span id="L8455" rel="#L8455">8455</span>
<span id="L8456" rel="#L8456">8456</span>
<span id="L8457" rel="#L8457">8457</span>
<span id="L8458" rel="#L8458">8458</span>
<span id="L8459" rel="#L8459">8459</span>
<span id="L8460" rel="#L8460">8460</span>
<span id="L8461" rel="#L8461">8461</span>
<span id="L8462" rel="#L8462">8462</span>
<span id="L8463" rel="#L8463">8463</span>
<span id="L8464" rel="#L8464">8464</span>
<span id="L8465" rel="#L8465">8465</span>
<span id="L8466" rel="#L8466">8466</span>
<span id="L8467" rel="#L8467">8467</span>
<span id="L8468" rel="#L8468">8468</span>
<span id="L8469" rel="#L8469">8469</span>
<span id="L8470" rel="#L8470">8470</span>
<span id="L8471" rel="#L8471">8471</span>
<span id="L8472" rel="#L8472">8472</span>
<span id="L8473" rel="#L8473">8473</span>
<span id="L8474" rel="#L8474">8474</span>
<span id="L8475" rel="#L8475">8475</span>
<span id="L8476" rel="#L8476">8476</span>
<span id="L8477" rel="#L8477">8477</span>
<span id="L8478" rel="#L8478">8478</span>
<span id="L8479" rel="#L8479">8479</span>
<span id="L8480" rel="#L8480">8480</span>
<span id="L8481" rel="#L8481">8481</span>
<span id="L8482" rel="#L8482">8482</span>
<span id="L8483" rel="#L8483">8483</span>
<span id="L8484" rel="#L8484">8484</span>
<span id="L8485" rel="#L8485">8485</span>
<span id="L8486" rel="#L8486">8486</span>
<span id="L8487" rel="#L8487">8487</span>
<span id="L8488" rel="#L8488">8488</span>
<span id="L8489" rel="#L8489">8489</span>
<span id="L8490" rel="#L8490">8490</span>
<span id="L8491" rel="#L8491">8491</span>
<span id="L8492" rel="#L8492">8492</span>
<span id="L8493" rel="#L8493">8493</span>
<span id="L8494" rel="#L8494">8494</span>
<span id="L8495" rel="#L8495">8495</span>
<span id="L8496" rel="#L8496">8496</span>
<span id="L8497" rel="#L8497">8497</span>
<span id="L8498" rel="#L8498">8498</span>
<span id="L8499" rel="#L8499">8499</span>
<span id="L8500" rel="#L8500">8500</span>
<span id="L8501" rel="#L8501">8501</span>
<span id="L8502" rel="#L8502">8502</span>
<span id="L8503" rel="#L8503">8503</span>
<span id="L8504" rel="#L8504">8504</span>
<span id="L8505" rel="#L8505">8505</span>
<span id="L8506" rel="#L8506">8506</span>
<span id="L8507" rel="#L8507">8507</span>
<span id="L8508" rel="#L8508">8508</span>
<span id="L8509" rel="#L8509">8509</span>
<span id="L8510" rel="#L8510">8510</span>
<span id="L8511" rel="#L8511">8511</span>
<span id="L8512" rel="#L8512">8512</span>
<span id="L8513" rel="#L8513">8513</span>
<span id="L8514" rel="#L8514">8514</span>
<span id="L8515" rel="#L8515">8515</span>
<span id="L8516" rel="#L8516">8516</span>
<span id="L8517" rel="#L8517">8517</span>
<span id="L8518" rel="#L8518">8518</span>
<span id="L8519" rel="#L8519">8519</span>
<span id="L8520" rel="#L8520">8520</span>
<span id="L8521" rel="#L8521">8521</span>
<span id="L8522" rel="#L8522">8522</span>
<span id="L8523" rel="#L8523">8523</span>
<span id="L8524" rel="#L8524">8524</span>
<span id="L8525" rel="#L8525">8525</span>
<span id="L8526" rel="#L8526">8526</span>
<span id="L8527" rel="#L8527">8527</span>
<span id="L8528" rel="#L8528">8528</span>
<span id="L8529" rel="#L8529">8529</span>
<span id="L8530" rel="#L8530">8530</span>
<span id="L8531" rel="#L8531">8531</span>
<span id="L8532" rel="#L8532">8532</span>
<span id="L8533" rel="#L8533">8533</span>
<span id="L8534" rel="#L8534">8534</span>
<span id="L8535" rel="#L8535">8535</span>
<span id="L8536" rel="#L8536">8536</span>
<span id="L8537" rel="#L8537">8537</span>
<span id="L8538" rel="#L8538">8538</span>
<span id="L8539" rel="#L8539">8539</span>
<span id="L8540" rel="#L8540">8540</span>
<span id="L8541" rel="#L8541">8541</span>
<span id="L8542" rel="#L8542">8542</span>
<span id="L8543" rel="#L8543">8543</span>
<span id="L8544" rel="#L8544">8544</span>
<span id="L8545" rel="#L8545">8545</span>
<span id="L8546" rel="#L8546">8546</span>
<span id="L8547" rel="#L8547">8547</span>
<span id="L8548" rel="#L8548">8548</span>
<span id="L8549" rel="#L8549">8549</span>
<span id="L8550" rel="#L8550">8550</span>
<span id="L8551" rel="#L8551">8551</span>
<span id="L8552" rel="#L8552">8552</span>
<span id="L8553" rel="#L8553">8553</span>
<span id="L8554" rel="#L8554">8554</span>
<span id="L8555" rel="#L8555">8555</span>
<span id="L8556" rel="#L8556">8556</span>
<span id="L8557" rel="#L8557">8557</span>
<span id="L8558" rel="#L8558">8558</span>
<span id="L8559" rel="#L8559">8559</span>
<span id="L8560" rel="#L8560">8560</span>
<span id="L8561" rel="#L8561">8561</span>
<span id="L8562" rel="#L8562">8562</span>
<span id="L8563" rel="#L8563">8563</span>
<span id="L8564" rel="#L8564">8564</span>
<span id="L8565" rel="#L8565">8565</span>
<span id="L8566" rel="#L8566">8566</span>
<span id="L8567" rel="#L8567">8567</span>
<span id="L8568" rel="#L8568">8568</span>
<span id="L8569" rel="#L8569">8569</span>
<span id="L8570" rel="#L8570">8570</span>
<span id="L8571" rel="#L8571">8571</span>
<span id="L8572" rel="#L8572">8572</span>
<span id="L8573" rel="#L8573">8573</span>
<span id="L8574" rel="#L8574">8574</span>
<span id="L8575" rel="#L8575">8575</span>
<span id="L8576" rel="#L8576">8576</span>
<span id="L8577" rel="#L8577">8577</span>
<span id="L8578" rel="#L8578">8578</span>
<span id="L8579" rel="#L8579">8579</span>
<span id="L8580" rel="#L8580">8580</span>
<span id="L8581" rel="#L8581">8581</span>
<span id="L8582" rel="#L8582">8582</span>
<span id="L8583" rel="#L8583">8583</span>
<span id="L8584" rel="#L8584">8584</span>
<span id="L8585" rel="#L8585">8585</span>
<span id="L8586" rel="#L8586">8586</span>
<span id="L8587" rel="#L8587">8587</span>
<span id="L8588" rel="#L8588">8588</span>
<span id="L8589" rel="#L8589">8589</span>
<span id="L8590" rel="#L8590">8590</span>
<span id="L8591" rel="#L8591">8591</span>
<span id="L8592" rel="#L8592">8592</span>
<span id="L8593" rel="#L8593">8593</span>
<span id="L8594" rel="#L8594">8594</span>
<span id="L8595" rel="#L8595">8595</span>
<span id="L8596" rel="#L8596">8596</span>
<span id="L8597" rel="#L8597">8597</span>
<span id="L8598" rel="#L8598">8598</span>
<span id="L8599" rel="#L8599">8599</span>
<span id="L8600" rel="#L8600">8600</span>
<span id="L8601" rel="#L8601">8601</span>
<span id="L8602" rel="#L8602">8602</span>
<span id="L8603" rel="#L8603">8603</span>
<span id="L8604" rel="#L8604">8604</span>
<span id="L8605" rel="#L8605">8605</span>
<span id="L8606" rel="#L8606">8606</span>
<span id="L8607" rel="#L8607">8607</span>
<span id="L8608" rel="#L8608">8608</span>
<span id="L8609" rel="#L8609">8609</span>
<span id="L8610" rel="#L8610">8610</span>
<span id="L8611" rel="#L8611">8611</span>
<span id="L8612" rel="#L8612">8612</span>
<span id="L8613" rel="#L8613">8613</span>
<span id="L8614" rel="#L8614">8614</span>
<span id="L8615" rel="#L8615">8615</span>
<span id="L8616" rel="#L8616">8616</span>
<span id="L8617" rel="#L8617">8617</span>
<span id="L8618" rel="#L8618">8618</span>
<span id="L8619" rel="#L8619">8619</span>
<span id="L8620" rel="#L8620">8620</span>
<span id="L8621" rel="#L8621">8621</span>
<span id="L8622" rel="#L8622">8622</span>
<span id="L8623" rel="#L8623">8623</span>
<span id="L8624" rel="#L8624">8624</span>
<span id="L8625" rel="#L8625">8625</span>
<span id="L8626" rel="#L8626">8626</span>
<span id="L8627" rel="#L8627">8627</span>
<span id="L8628" rel="#L8628">8628</span>
<span id="L8629" rel="#L8629">8629</span>
<span id="L8630" rel="#L8630">8630</span>
<span id="L8631" rel="#L8631">8631</span>
<span id="L8632" rel="#L8632">8632</span>
<span id="L8633" rel="#L8633">8633</span>
<span id="L8634" rel="#L8634">8634</span>
<span id="L8635" rel="#L8635">8635</span>
<span id="L8636" rel="#L8636">8636</span>
<span id="L8637" rel="#L8637">8637</span>
<span id="L8638" rel="#L8638">8638</span>
<span id="L8639" rel="#L8639">8639</span>
<span id="L8640" rel="#L8640">8640</span>
<span id="L8641" rel="#L8641">8641</span>
<span id="L8642" rel="#L8642">8642</span>
<span id="L8643" rel="#L8643">8643</span>
<span id="L8644" rel="#L8644">8644</span>
<span id="L8645" rel="#L8645">8645</span>
<span id="L8646" rel="#L8646">8646</span>
<span id="L8647" rel="#L8647">8647</span>
<span id="L8648" rel="#L8648">8648</span>
<span id="L8649" rel="#L8649">8649</span>
<span id="L8650" rel="#L8650">8650</span>
<span id="L8651" rel="#L8651">8651</span>
<span id="L8652" rel="#L8652">8652</span>
<span id="L8653" rel="#L8653">8653</span>
<span id="L8654" rel="#L8654">8654</span>
<span id="L8655" rel="#L8655">8655</span>
<span id="L8656" rel="#L8656">8656</span>
<span id="L8657" rel="#L8657">8657</span>
<span id="L8658" rel="#L8658">8658</span>
<span id="L8659" rel="#L8659">8659</span>
<span id="L8660" rel="#L8660">8660</span>
<span id="L8661" rel="#L8661">8661</span>
<span id="L8662" rel="#L8662">8662</span>
<span id="L8663" rel="#L8663">8663</span>
<span id="L8664" rel="#L8664">8664</span>
<span id="L8665" rel="#L8665">8665</span>
<span id="L8666" rel="#L8666">8666</span>
<span id="L8667" rel="#L8667">8667</span>
<span id="L8668" rel="#L8668">8668</span>
<span id="L8669" rel="#L8669">8669</span>
<span id="L8670" rel="#L8670">8670</span>
<span id="L8671" rel="#L8671">8671</span>
<span id="L8672" rel="#L8672">8672</span>
<span id="L8673" rel="#L8673">8673</span>
<span id="L8674" rel="#L8674">8674</span>
<span id="L8675" rel="#L8675">8675</span>
<span id="L8676" rel="#L8676">8676</span>
<span id="L8677" rel="#L8677">8677</span>
<span id="L8678" rel="#L8678">8678</span>
<span id="L8679" rel="#L8679">8679</span>
<span id="L8680" rel="#L8680">8680</span>
<span id="L8681" rel="#L8681">8681</span>
<span id="L8682" rel="#L8682">8682</span>
<span id="L8683" rel="#L8683">8683</span>
<span id="L8684" rel="#L8684">8684</span>
<span id="L8685" rel="#L8685">8685</span>
<span id="L8686" rel="#L8686">8686</span>
<span id="L8687" rel="#L8687">8687</span>
<span id="L8688" rel="#L8688">8688</span>
<span id="L8689" rel="#L8689">8689</span>
<span id="L8690" rel="#L8690">8690</span>
<span id="L8691" rel="#L8691">8691</span>
<span id="L8692" rel="#L8692">8692</span>
<span id="L8693" rel="#L8693">8693</span>
<span id="L8694" rel="#L8694">8694</span>
<span id="L8695" rel="#L8695">8695</span>
<span id="L8696" rel="#L8696">8696</span>
<span id="L8697" rel="#L8697">8697</span>
<span id="L8698" rel="#L8698">8698</span>
<span id="L8699" rel="#L8699">8699</span>
<span id="L8700" rel="#L8700">8700</span>
<span id="L8701" rel="#L8701">8701</span>
<span id="L8702" rel="#L8702">8702</span>
<span id="L8703" rel="#L8703">8703</span>
<span id="L8704" rel="#L8704">8704</span>
<span id="L8705" rel="#L8705">8705</span>
<span id="L8706" rel="#L8706">8706</span>
<span id="L8707" rel="#L8707">8707</span>
<span id="L8708" rel="#L8708">8708</span>
<span id="L8709" rel="#L8709">8709</span>
<span id="L8710" rel="#L8710">8710</span>
<span id="L8711" rel="#L8711">8711</span>
<span id="L8712" rel="#L8712">8712</span>
<span id="L8713" rel="#L8713">8713</span>
<span id="L8714" rel="#L8714">8714</span>
<span id="L8715" rel="#L8715">8715</span>
<span id="L8716" rel="#L8716">8716</span>
<span id="L8717" rel="#L8717">8717</span>
<span id="L8718" rel="#L8718">8718</span>
<span id="L8719" rel="#L8719">8719</span>
<span id="L8720" rel="#L8720">8720</span>
<span id="L8721" rel="#L8721">8721</span>
<span id="L8722" rel="#L8722">8722</span>
<span id="L8723" rel="#L8723">8723</span>
<span id="L8724" rel="#L8724">8724</span>
<span id="L8725" rel="#L8725">8725</span>
<span id="L8726" rel="#L8726">8726</span>
<span id="L8727" rel="#L8727">8727</span>
<span id="L8728" rel="#L8728">8728</span>
<span id="L8729" rel="#L8729">8729</span>
<span id="L8730" rel="#L8730">8730</span>
<span id="L8731" rel="#L8731">8731</span>
<span id="L8732" rel="#L8732">8732</span>
<span id="L8733" rel="#L8733">8733</span>
<span id="L8734" rel="#L8734">8734</span>
<span id="L8735" rel="#L8735">8735</span>
<span id="L8736" rel="#L8736">8736</span>
<span id="L8737" rel="#L8737">8737</span>
<span id="L8738" rel="#L8738">8738</span>
<span id="L8739" rel="#L8739">8739</span>
<span id="L8740" rel="#L8740">8740</span>
<span id="L8741" rel="#L8741">8741</span>
<span id="L8742" rel="#L8742">8742</span>
<span id="L8743" rel="#L8743">8743</span>
<span id="L8744" rel="#L8744">8744</span>
<span id="L8745" rel="#L8745">8745</span>
<span id="L8746" rel="#L8746">8746</span>
<span id="L8747" rel="#L8747">8747</span>
<span id="L8748" rel="#L8748">8748</span>
<span id="L8749" rel="#L8749">8749</span>
<span id="L8750" rel="#L8750">8750</span>
<span id="L8751" rel="#L8751">8751</span>
<span id="L8752" rel="#L8752">8752</span>
<span id="L8753" rel="#L8753">8753</span>
<span id="L8754" rel="#L8754">8754</span>
<span id="L8755" rel="#L8755">8755</span>
<span id="L8756" rel="#L8756">8756</span>
<span id="L8757" rel="#L8757">8757</span>
<span id="L8758" rel="#L8758">8758</span>
<span id="L8759" rel="#L8759">8759</span>
<span id="L8760" rel="#L8760">8760</span>
<span id="L8761" rel="#L8761">8761</span>
<span id="L8762" rel="#L8762">8762</span>
<span id="L8763" rel="#L8763">8763</span>
<span id="L8764" rel="#L8764">8764</span>
<span id="L8765" rel="#L8765">8765</span>
<span id="L8766" rel="#L8766">8766</span>
<span id="L8767" rel="#L8767">8767</span>
<span id="L8768" rel="#L8768">8768</span>
<span id="L8769" rel="#L8769">8769</span>
<span id="L8770" rel="#L8770">8770</span>
<span id="L8771" rel="#L8771">8771</span>
<span id="L8772" rel="#L8772">8772</span>
<span id="L8773" rel="#L8773">8773</span>
<span id="L8774" rel="#L8774">8774</span>
<span id="L8775" rel="#L8775">8775</span>
<span id="L8776" rel="#L8776">8776</span>
<span id="L8777" rel="#L8777">8777</span>
<span id="L8778" rel="#L8778">8778</span>
<span id="L8779" rel="#L8779">8779</span>
<span id="L8780" rel="#L8780">8780</span>
<span id="L8781" rel="#L8781">8781</span>
<span id="L8782" rel="#L8782">8782</span>
<span id="L8783" rel="#L8783">8783</span>
<span id="L8784" rel="#L8784">8784</span>
<span id="L8785" rel="#L8785">8785</span>
<span id="L8786" rel="#L8786">8786</span>
<span id="L8787" rel="#L8787">8787</span>
<span id="L8788" rel="#L8788">8788</span>
<span id="L8789" rel="#L8789">8789</span>
<span id="L8790" rel="#L8790">8790</span>
<span id="L8791" rel="#L8791">8791</span>
<span id="L8792" rel="#L8792">8792</span>
<span id="L8793" rel="#L8793">8793</span>
<span id="L8794" rel="#L8794">8794</span>
<span id="L8795" rel="#L8795">8795</span>
<span id="L8796" rel="#L8796">8796</span>
<span id="L8797" rel="#L8797">8797</span>
<span id="L8798" rel="#L8798">8798</span>
<span id="L8799" rel="#L8799">8799</span>
<span id="L8800" rel="#L8800">8800</span>
<span id="L8801" rel="#L8801">8801</span>
<span id="L8802" rel="#L8802">8802</span>
<span id="L8803" rel="#L8803">8803</span>
<span id="L8804" rel="#L8804">8804</span>
<span id="L8805" rel="#L8805">8805</span>
<span id="L8806" rel="#L8806">8806</span>
<span id="L8807" rel="#L8807">8807</span>
<span id="L8808" rel="#L8808">8808</span>
<span id="L8809" rel="#L8809">8809</span>
<span id="L8810" rel="#L8810">8810</span>
<span id="L8811" rel="#L8811">8811</span>
<span id="L8812" rel="#L8812">8812</span>
<span id="L8813" rel="#L8813">8813</span>
<span id="L8814" rel="#L8814">8814</span>
<span id="L8815" rel="#L8815">8815</span>
<span id="L8816" rel="#L8816">8816</span>
<span id="L8817" rel="#L8817">8817</span>
<span id="L8818" rel="#L8818">8818</span>
<span id="L8819" rel="#L8819">8819</span>
<span id="L8820" rel="#L8820">8820</span>
<span id="L8821" rel="#L8821">8821</span>
<span id="L8822" rel="#L8822">8822</span>
<span id="L8823" rel="#L8823">8823</span>
<span id="L8824" rel="#L8824">8824</span>
<span id="L8825" rel="#L8825">8825</span>
<span id="L8826" rel="#L8826">8826</span>
<span id="L8827" rel="#L8827">8827</span>
<span id="L8828" rel="#L8828">8828</span>
<span id="L8829" rel="#L8829">8829</span>
<span id="L8830" rel="#L8830">8830</span>
<span id="L8831" rel="#L8831">8831</span>
<span id="L8832" rel="#L8832">8832</span>
<span id="L8833" rel="#L8833">8833</span>
<span id="L8834" rel="#L8834">8834</span>
<span id="L8835" rel="#L8835">8835</span>
<span id="L8836" rel="#L8836">8836</span>
<span id="L8837" rel="#L8837">8837</span>
<span id="L8838" rel="#L8838">8838</span>
<span id="L8839" rel="#L8839">8839</span>
<span id="L8840" rel="#L8840">8840</span>
<span id="L8841" rel="#L8841">8841</span>
<span id="L8842" rel="#L8842">8842</span>
<span id="L8843" rel="#L8843">8843</span>
<span id="L8844" rel="#L8844">8844</span>
<span id="L8845" rel="#L8845">8845</span>
<span id="L8846" rel="#L8846">8846</span>
<span id="L8847" rel="#L8847">8847</span>
<span id="L8848" rel="#L8848">8848</span>
<span id="L8849" rel="#L8849">8849</span>
<span id="L8850" rel="#L8850">8850</span>
<span id="L8851" rel="#L8851">8851</span>
<span id="L8852" rel="#L8852">8852</span>
<span id="L8853" rel="#L8853">8853</span>
<span id="L8854" rel="#L8854">8854</span>
<span id="L8855" rel="#L8855">8855</span>
<span id="L8856" rel="#L8856">8856</span>
<span id="L8857" rel="#L8857">8857</span>
<span id="L8858" rel="#L8858">8858</span>
<span id="L8859" rel="#L8859">8859</span>
<span id="L8860" rel="#L8860">8860</span>
<span id="L8861" rel="#L8861">8861</span>
<span id="L8862" rel="#L8862">8862</span>
<span id="L8863" rel="#L8863">8863</span>
<span id="L8864" rel="#L8864">8864</span>
<span id="L8865" rel="#L8865">8865</span>
<span id="L8866" rel="#L8866">8866</span>
<span id="L8867" rel="#L8867">8867</span>
<span id="L8868" rel="#L8868">8868</span>
<span id="L8869" rel="#L8869">8869</span>
<span id="L8870" rel="#L8870">8870</span>
<span id="L8871" rel="#L8871">8871</span>
<span id="L8872" rel="#L8872">8872</span>
<span id="L8873" rel="#L8873">8873</span>
<span id="L8874" rel="#L8874">8874</span>
<span id="L8875" rel="#L8875">8875</span>
<span id="L8876" rel="#L8876">8876</span>
<span id="L8877" rel="#L8877">8877</span>
<span id="L8878" rel="#L8878">8878</span>
<span id="L8879" rel="#L8879">8879</span>
<span id="L8880" rel="#L8880">8880</span>
<span id="L8881" rel="#L8881">8881</span>
<span id="L8882" rel="#L8882">8882</span>
<span id="L8883" rel="#L8883">8883</span>
<span id="L8884" rel="#L8884">8884</span>
<span id="L8885" rel="#L8885">8885</span>
<span id="L8886" rel="#L8886">8886</span>
<span id="L8887" rel="#L8887">8887</span>
<span id="L8888" rel="#L8888">8888</span>
<span id="L8889" rel="#L8889">8889</span>
<span id="L8890" rel="#L8890">8890</span>
<span id="L8891" rel="#L8891">8891</span>
<span id="L8892" rel="#L8892">8892</span>
<span id="L8893" rel="#L8893">8893</span>
<span id="L8894" rel="#L8894">8894</span>
<span id="L8895" rel="#L8895">8895</span>
<span id="L8896" rel="#L8896">8896</span>
<span id="L8897" rel="#L8897">8897</span>
<span id="L8898" rel="#L8898">8898</span>
<span id="L8899" rel="#L8899">8899</span>
<span id="L8900" rel="#L8900">8900</span>
<span id="L8901" rel="#L8901">8901</span>
<span id="L8902" rel="#L8902">8902</span>
<span id="L8903" rel="#L8903">8903</span>
<span id="L8904" rel="#L8904">8904</span>
<span id="L8905" rel="#L8905">8905</span>
<span id="L8906" rel="#L8906">8906</span>
<span id="L8907" rel="#L8907">8907</span>
<span id="L8908" rel="#L8908">8908</span>
<span id="L8909" rel="#L8909">8909</span>
<span id="L8910" rel="#L8910">8910</span>
<span id="L8911" rel="#L8911">8911</span>
<span id="L8912" rel="#L8912">8912</span>
<span id="L8913" rel="#L8913">8913</span>
<span id="L8914" rel="#L8914">8914</span>
<span id="L8915" rel="#L8915">8915</span>
<span id="L8916" rel="#L8916">8916</span>
<span id="L8917" rel="#L8917">8917</span>
<span id="L8918" rel="#L8918">8918</span>
<span id="L8919" rel="#L8919">8919</span>
<span id="L8920" rel="#L8920">8920</span>
<span id="L8921" rel="#L8921">8921</span>
<span id="L8922" rel="#L8922">8922</span>
<span id="L8923" rel="#L8923">8923</span>
<span id="L8924" rel="#L8924">8924</span>
<span id="L8925" rel="#L8925">8925</span>
<span id="L8926" rel="#L8926">8926</span>
<span id="L8927" rel="#L8927">8927</span>
<span id="L8928" rel="#L8928">8928</span>
<span id="L8929" rel="#L8929">8929</span>
<span id="L8930" rel="#L8930">8930</span>
<span id="L8931" rel="#L8931">8931</span>
<span id="L8932" rel="#L8932">8932</span>
<span id="L8933" rel="#L8933">8933</span>
<span id="L8934" rel="#L8934">8934</span>
<span id="L8935" rel="#L8935">8935</span>
<span id="L8936" rel="#L8936">8936</span>
<span id="L8937" rel="#L8937">8937</span>
<span id="L8938" rel="#L8938">8938</span>
<span id="L8939" rel="#L8939">8939</span>
<span id="L8940" rel="#L8940">8940</span>
<span id="L8941" rel="#L8941">8941</span>
<span id="L8942" rel="#L8942">8942</span>
<span id="L8943" rel="#L8943">8943</span>
<span id="L8944" rel="#L8944">8944</span>
<span id="L8945" rel="#L8945">8945</span>
<span id="L8946" rel="#L8946">8946</span>
<span id="L8947" rel="#L8947">8947</span>
<span id="L8948" rel="#L8948">8948</span>
<span id="L8949" rel="#L8949">8949</span>
<span id="L8950" rel="#L8950">8950</span>
<span id="L8951" rel="#L8951">8951</span>
<span id="L8952" rel="#L8952">8952</span>
<span id="L8953" rel="#L8953">8953</span>
<span id="L8954" rel="#L8954">8954</span>
<span id="L8955" rel="#L8955">8955</span>
<span id="L8956" rel="#L8956">8956</span>
<span id="L8957" rel="#L8957">8957</span>
<span id="L8958" rel="#L8958">8958</span>
<span id="L8959" rel="#L8959">8959</span>
<span id="L8960" rel="#L8960">8960</span>
<span id="L8961" rel="#L8961">8961</span>
<span id="L8962" rel="#L8962">8962</span>
<span id="L8963" rel="#L8963">8963</span>
<span id="L8964" rel="#L8964">8964</span>
<span id="L8965" rel="#L8965">8965</span>
<span id="L8966" rel="#L8966">8966</span>
<span id="L8967" rel="#L8967">8967</span>
<span id="L8968" rel="#L8968">8968</span>
<span id="L8969" rel="#L8969">8969</span>
<span id="L8970" rel="#L8970">8970</span>
<span id="L8971" rel="#L8971">8971</span>
<span id="L8972" rel="#L8972">8972</span>
<span id="L8973" rel="#L8973">8973</span>
<span id="L8974" rel="#L8974">8974</span>
<span id="L8975" rel="#L8975">8975</span>
<span id="L8976" rel="#L8976">8976</span>
<span id="L8977" rel="#L8977">8977</span>
<span id="L8978" rel="#L8978">8978</span>
<span id="L8979" rel="#L8979">8979</span>
<span id="L8980" rel="#L8980">8980</span>
<span id="L8981" rel="#L8981">8981</span>
<span id="L8982" rel="#L8982">8982</span>
<span id="L8983" rel="#L8983">8983</span>
<span id="L8984" rel="#L8984">8984</span>
<span id="L8985" rel="#L8985">8985</span>
<span id="L8986" rel="#L8986">8986</span>
<span id="L8987" rel="#L8987">8987</span>
<span id="L8988" rel="#L8988">8988</span>
<span id="L8989" rel="#L8989">8989</span>
<span id="L8990" rel="#L8990">8990</span>
<span id="L8991" rel="#L8991">8991</span>
<span id="L8992" rel="#L8992">8992</span>
<span id="L8993" rel="#L8993">8993</span>
<span id="L8994" rel="#L8994">8994</span>
<span id="L8995" rel="#L8995">8995</span>
<span id="L8996" rel="#L8996">8996</span>
<span id="L8997" rel="#L8997">8997</span>
<span id="L8998" rel="#L8998">8998</span>
<span id="L8999" rel="#L8999">8999</span>
<span id="L9000" rel="#L9000">9000</span>
<span id="L9001" rel="#L9001">9001</span>
<span id="L9002" rel="#L9002">9002</span>
<span id="L9003" rel="#L9003">9003</span>
<span id="L9004" rel="#L9004">9004</span>
<span id="L9005" rel="#L9005">9005</span>
<span id="L9006" rel="#L9006">9006</span>
<span id="L9007" rel="#L9007">9007</span>
<span id="L9008" rel="#L9008">9008</span>
<span id="L9009" rel="#L9009">9009</span>
<span id="L9010" rel="#L9010">9010</span>
<span id="L9011" rel="#L9011">9011</span>
<span id="L9012" rel="#L9012">9012</span>
<span id="L9013" rel="#L9013">9013</span>
<span id="L9014" rel="#L9014">9014</span>
<span id="L9015" rel="#L9015">9015</span>
<span id="L9016" rel="#L9016">9016</span>
<span id="L9017" rel="#L9017">9017</span>
<span id="L9018" rel="#L9018">9018</span>
<span id="L9019" rel="#L9019">9019</span>
<span id="L9020" rel="#L9020">9020</span>
<span id="L9021" rel="#L9021">9021</span>
<span id="L9022" rel="#L9022">9022</span>
<span id="L9023" rel="#L9023">9023</span>
<span id="L9024" rel="#L9024">9024</span>
<span id="L9025" rel="#L9025">9025</span>
<span id="L9026" rel="#L9026">9026</span>
<span id="L9027" rel="#L9027">9027</span>
<span id="L9028" rel="#L9028">9028</span>
<span id="L9029" rel="#L9029">9029</span>
<span id="L9030" rel="#L9030">9030</span>
<span id="L9031" rel="#L9031">9031</span>
<span id="L9032" rel="#L9032">9032</span>
<span id="L9033" rel="#L9033">9033</span>
<span id="L9034" rel="#L9034">9034</span>
<span id="L9035" rel="#L9035">9035</span>
<span id="L9036" rel="#L9036">9036</span>
<span id="L9037" rel="#L9037">9037</span>
<span id="L9038" rel="#L9038">9038</span>
<span id="L9039" rel="#L9039">9039</span>
<span id="L9040" rel="#L9040">9040</span>
<span id="L9041" rel="#L9041">9041</span>
<span id="L9042" rel="#L9042">9042</span>
<span id="L9043" rel="#L9043">9043</span>
<span id="L9044" rel="#L9044">9044</span>
<span id="L9045" rel="#L9045">9045</span>
<span id="L9046" rel="#L9046">9046</span>
<span id="L9047" rel="#L9047">9047</span>
<span id="L9048" rel="#L9048">9048</span>
<span id="L9049" rel="#L9049">9049</span>
<span id="L9050" rel="#L9050">9050</span>
<span id="L9051" rel="#L9051">9051</span>
<span id="L9052" rel="#L9052">9052</span>
<span id="L9053" rel="#L9053">9053</span>
<span id="L9054" rel="#L9054">9054</span>
<span id="L9055" rel="#L9055">9055</span>
<span id="L9056" rel="#L9056">9056</span>
<span id="L9057" rel="#L9057">9057</span>
<span id="L9058" rel="#L9058">9058</span>
<span id="L9059" rel="#L9059">9059</span>
<span id="L9060" rel="#L9060">9060</span>
<span id="L9061" rel="#L9061">9061</span>
<span id="L9062" rel="#L9062">9062</span>
<span id="L9063" rel="#L9063">9063</span>
<span id="L9064" rel="#L9064">9064</span>
<span id="L9065" rel="#L9065">9065</span>
<span id="L9066" rel="#L9066">9066</span>
<span id="L9067" rel="#L9067">9067</span>
<span id="L9068" rel="#L9068">9068</span>
<span id="L9069" rel="#L9069">9069</span>
<span id="L9070" rel="#L9070">9070</span>
<span id="L9071" rel="#L9071">9071</span>
<span id="L9072" rel="#L9072">9072</span>
<span id="L9073" rel="#L9073">9073</span>
<span id="L9074" rel="#L9074">9074</span>
<span id="L9075" rel="#L9075">9075</span>
<span id="L9076" rel="#L9076">9076</span>
<span id="L9077" rel="#L9077">9077</span>
<span id="L9078" rel="#L9078">9078</span>
<span id="L9079" rel="#L9079">9079</span>
<span id="L9080" rel="#L9080">9080</span>
<span id="L9081" rel="#L9081">9081</span>
<span id="L9082" rel="#L9082">9082</span>
<span id="L9083" rel="#L9083">9083</span>
<span id="L9084" rel="#L9084">9084</span>
<span id="L9085" rel="#L9085">9085</span>
<span id="L9086" rel="#L9086">9086</span>
<span id="L9087" rel="#L9087">9087</span>
<span id="L9088" rel="#L9088">9088</span>
<span id="L9089" rel="#L9089">9089</span>
<span id="L9090" rel="#L9090">9090</span>
<span id="L9091" rel="#L9091">9091</span>
<span id="L9092" rel="#L9092">9092</span>
<span id="L9093" rel="#L9093">9093</span>
<span id="L9094" rel="#L9094">9094</span>
<span id="L9095" rel="#L9095">9095</span>
<span id="L9096" rel="#L9096">9096</span>
<span id="L9097" rel="#L9097">9097</span>
<span id="L9098" rel="#L9098">9098</span>
<span id="L9099" rel="#L9099">9099</span>
<span id="L9100" rel="#L9100">9100</span>
<span id="L9101" rel="#L9101">9101</span>
<span id="L9102" rel="#L9102">9102</span>
<span id="L9103" rel="#L9103">9103</span>
<span id="L9104" rel="#L9104">9104</span>
<span id="L9105" rel="#L9105">9105</span>
<span id="L9106" rel="#L9106">9106</span>
<span id="L9107" rel="#L9107">9107</span>
<span id="L9108" rel="#L9108">9108</span>
<span id="L9109" rel="#L9109">9109</span>
<span id="L9110" rel="#L9110">9110</span>
<span id="L9111" rel="#L9111">9111</span>
<span id="L9112" rel="#L9112">9112</span>
<span id="L9113" rel="#L9113">9113</span>
<span id="L9114" rel="#L9114">9114</span>
<span id="L9115" rel="#L9115">9115</span>
<span id="L9116" rel="#L9116">9116</span>
<span id="L9117" rel="#L9117">9117</span>
<span id="L9118" rel="#L9118">9118</span>
<span id="L9119" rel="#L9119">9119</span>
<span id="L9120" rel="#L9120">9120</span>
<span id="L9121" rel="#L9121">9121</span>
<span id="L9122" rel="#L9122">9122</span>
<span id="L9123" rel="#L9123">9123</span>
<span id="L9124" rel="#L9124">9124</span>
<span id="L9125" rel="#L9125">9125</span>
<span id="L9126" rel="#L9126">9126</span>
<span id="L9127" rel="#L9127">9127</span>
<span id="L9128" rel="#L9128">9128</span>
<span id="L9129" rel="#L9129">9129</span>
<span id="L9130" rel="#L9130">9130</span>
<span id="L9131" rel="#L9131">9131</span>
<span id="L9132" rel="#L9132">9132</span>
<span id="L9133" rel="#L9133">9133</span>
<span id="L9134" rel="#L9134">9134</span>
<span id="L9135" rel="#L9135">9135</span>
<span id="L9136" rel="#L9136">9136</span>
<span id="L9137" rel="#L9137">9137</span>
<span id="L9138" rel="#L9138">9138</span>
<span id="L9139" rel="#L9139">9139</span>
<span id="L9140" rel="#L9140">9140</span>
<span id="L9141" rel="#L9141">9141</span>
<span id="L9142" rel="#L9142">9142</span>
<span id="L9143" rel="#L9143">9143</span>
<span id="L9144" rel="#L9144">9144</span>
<span id="L9145" rel="#L9145">9145</span>
<span id="L9146" rel="#L9146">9146</span>
<span id="L9147" rel="#L9147">9147</span>
<span id="L9148" rel="#L9148">9148</span>
<span id="L9149" rel="#L9149">9149</span>
<span id="L9150" rel="#L9150">9150</span>
<span id="L9151" rel="#L9151">9151</span>
<span id="L9152" rel="#L9152">9152</span>
<span id="L9153" rel="#L9153">9153</span>
<span id="L9154" rel="#L9154">9154</span>
<span id="L9155" rel="#L9155">9155</span>
<span id="L9156" rel="#L9156">9156</span>
<span id="L9157" rel="#L9157">9157</span>
<span id="L9158" rel="#L9158">9158</span>
<span id="L9159" rel="#L9159">9159</span>
<span id="L9160" rel="#L9160">9160</span>
<span id="L9161" rel="#L9161">9161</span>
<span id="L9162" rel="#L9162">9162</span>
<span id="L9163" rel="#L9163">9163</span>
<span id="L9164" rel="#L9164">9164</span>
<span id="L9165" rel="#L9165">9165</span>
<span id="L9166" rel="#L9166">9166</span>
<span id="L9167" rel="#L9167">9167</span>
<span id="L9168" rel="#L9168">9168</span>
<span id="L9169" rel="#L9169">9169</span>
<span id="L9170" rel="#L9170">9170</span>
<span id="L9171" rel="#L9171">9171</span>
<span id="L9172" rel="#L9172">9172</span>
<span id="L9173" rel="#L9173">9173</span>
<span id="L9174" rel="#L9174">9174</span>
<span id="L9175" rel="#L9175">9175</span>
<span id="L9176" rel="#L9176">9176</span>
<span id="L9177" rel="#L9177">9177</span>
<span id="L9178" rel="#L9178">9178</span>
<span id="L9179" rel="#L9179">9179</span>
<span id="L9180" rel="#L9180">9180</span>
<span id="L9181" rel="#L9181">9181</span>
<span id="L9182" rel="#L9182">9182</span>
<span id="L9183" rel="#L9183">9183</span>
<span id="L9184" rel="#L9184">9184</span>
<span id="L9185" rel="#L9185">9185</span>
<span id="L9186" rel="#L9186">9186</span>
<span id="L9187" rel="#L9187">9187</span>
<span id="L9188" rel="#L9188">9188</span>
<span id="L9189" rel="#L9189">9189</span>
<span id="L9190" rel="#L9190">9190</span>
<span id="L9191" rel="#L9191">9191</span>
<span id="L9192" rel="#L9192">9192</span>
<span id="L9193" rel="#L9193">9193</span>
<span id="L9194" rel="#L9194">9194</span>
<span id="L9195" rel="#L9195">9195</span>
<span id="L9196" rel="#L9196">9196</span>
<span id="L9197" rel="#L9197">9197</span>
<span id="L9198" rel="#L9198">9198</span>
<span id="L9199" rel="#L9199">9199</span>
<span id="L9200" rel="#L9200">9200</span>
<span id="L9201" rel="#L9201">9201</span>
<span id="L9202" rel="#L9202">9202</span>
<span id="L9203" rel="#L9203">9203</span>
<span id="L9204" rel="#L9204">9204</span>
<span id="L9205" rel="#L9205">9205</span>
<span id="L9206" rel="#L9206">9206</span>
<span id="L9207" rel="#L9207">9207</span>
<span id="L9208" rel="#L9208">9208</span>
<span id="L9209" rel="#L9209">9209</span>
<span id="L9210" rel="#L9210">9210</span>
<span id="L9211" rel="#L9211">9211</span>
<span id="L9212" rel="#L9212">9212</span>
<span id="L9213" rel="#L9213">9213</span>
<span id="L9214" rel="#L9214">9214</span>
<span id="L9215" rel="#L9215">9215</span>
<span id="L9216" rel="#L9216">9216</span>
<span id="L9217" rel="#L9217">9217</span>
<span id="L9218" rel="#L9218">9218</span>
<span id="L9219" rel="#L9219">9219</span>
<span id="L9220" rel="#L9220">9220</span>
<span id="L9221" rel="#L9221">9221</span>
<span id="L9222" rel="#L9222">9222</span>
<span id="L9223" rel="#L9223">9223</span>
<span id="L9224" rel="#L9224">9224</span>
<span id="L9225" rel="#L9225">9225</span>
<span id="L9226" rel="#L9226">9226</span>
<span id="L9227" rel="#L9227">9227</span>
<span id="L9228" rel="#L9228">9228</span>
<span id="L9229" rel="#L9229">9229</span>
<span id="L9230" rel="#L9230">9230</span>
<span id="L9231" rel="#L9231">9231</span>
<span id="L9232" rel="#L9232">9232</span>
<span id="L9233" rel="#L9233">9233</span>
<span id="L9234" rel="#L9234">9234</span>
<span id="L9235" rel="#L9235">9235</span>
<span id="L9236" rel="#L9236">9236</span>
<span id="L9237" rel="#L9237">9237</span>
<span id="L9238" rel="#L9238">9238</span>
<span id="L9239" rel="#L9239">9239</span>
<span id="L9240" rel="#L9240">9240</span>
<span id="L9241" rel="#L9241">9241</span>
<span id="L9242" rel="#L9242">9242</span>
<span id="L9243" rel="#L9243">9243</span>
<span id="L9244" rel="#L9244">9244</span>
<span id="L9245" rel="#L9245">9245</span>
<span id="L9246" rel="#L9246">9246</span>
<span id="L9247" rel="#L9247">9247</span>
<span id="L9248" rel="#L9248">9248</span>
<span id="L9249" rel="#L9249">9249</span>
<span id="L9250" rel="#L9250">9250</span>
<span id="L9251" rel="#L9251">9251</span>
<span id="L9252" rel="#L9252">9252</span>
<span id="L9253" rel="#L9253">9253</span>
<span id="L9254" rel="#L9254">9254</span>
<span id="L9255" rel="#L9255">9255</span>
<span id="L9256" rel="#L9256">9256</span>
<span id="L9257" rel="#L9257">9257</span>
<span id="L9258" rel="#L9258">9258</span>
<span id="L9259" rel="#L9259">9259</span>
<span id="L9260" rel="#L9260">9260</span>
<span id="L9261" rel="#L9261">9261</span>
<span id="L9262" rel="#L9262">9262</span>
<span id="L9263" rel="#L9263">9263</span>
<span id="L9264" rel="#L9264">9264</span>
<span id="L9265" rel="#L9265">9265</span>
<span id="L9266" rel="#L9266">9266</span>
<span id="L9267" rel="#L9267">9267</span>
<span id="L9268" rel="#L9268">9268</span>
<span id="L9269" rel="#L9269">9269</span>
<span id="L9270" rel="#L9270">9270</span>
<span id="L9271" rel="#L9271">9271</span>
<span id="L9272" rel="#L9272">9272</span>
<span id="L9273" rel="#L9273">9273</span>
<span id="L9274" rel="#L9274">9274</span>
<span id="L9275" rel="#L9275">9275</span>
<span id="L9276" rel="#L9276">9276</span>
<span id="L9277" rel="#L9277">9277</span>
<span id="L9278" rel="#L9278">9278</span>
<span id="L9279" rel="#L9279">9279</span>
<span id="L9280" rel="#L9280">9280</span>
<span id="L9281" rel="#L9281">9281</span>
<span id="L9282" rel="#L9282">9282</span>
<span id="L9283" rel="#L9283">9283</span>
<span id="L9284" rel="#L9284">9284</span>
<span id="L9285" rel="#L9285">9285</span>
<span id="L9286" rel="#L9286">9286</span>
<span id="L9287" rel="#L9287">9287</span>
<span id="L9288" rel="#L9288">9288</span>
<span id="L9289" rel="#L9289">9289</span>
<span id="L9290" rel="#L9290">9290</span>
<span id="L9291" rel="#L9291">9291</span>
<span id="L9292" rel="#L9292">9292</span>
<span id="L9293" rel="#L9293">9293</span>
<span id="L9294" rel="#L9294">9294</span>
<span id="L9295" rel="#L9295">9295</span>
<span id="L9296" rel="#L9296">9296</span>
<span id="L9297" rel="#L9297">9297</span>
<span id="L9298" rel="#L9298">9298</span>
<span id="L9299" rel="#L9299">9299</span>
<span id="L9300" rel="#L9300">9300</span>
<span id="L9301" rel="#L9301">9301</span>
<span id="L9302" rel="#L9302">9302</span>
<span id="L9303" rel="#L9303">9303</span>
<span id="L9304" rel="#L9304">9304</span>
<span id="L9305" rel="#L9305">9305</span>
<span id="L9306" rel="#L9306">9306</span>
<span id="L9307" rel="#L9307">9307</span>
<span id="L9308" rel="#L9308">9308</span>
<span id="L9309" rel="#L9309">9309</span>
<span id="L9310" rel="#L9310">9310</span>
<span id="L9311" rel="#L9311">9311</span>
<span id="L9312" rel="#L9312">9312</span>
<span id="L9313" rel="#L9313">9313</span>
<span id="L9314" rel="#L9314">9314</span>
<span id="L9315" rel="#L9315">9315</span>
<span id="L9316" rel="#L9316">9316</span>
<span id="L9317" rel="#L9317">9317</span>
<span id="L9318" rel="#L9318">9318</span>
<span id="L9319" rel="#L9319">9319</span>
<span id="L9320" rel="#L9320">9320</span>
<span id="L9321" rel="#L9321">9321</span>
<span id="L9322" rel="#L9322">9322</span>
<span id="L9323" rel="#L9323">9323</span>
<span id="L9324" rel="#L9324">9324</span>
<span id="L9325" rel="#L9325">9325</span>
<span id="L9326" rel="#L9326">9326</span>
<span id="L9327" rel="#L9327">9327</span>
<span id="L9328" rel="#L9328">9328</span>
<span id="L9329" rel="#L9329">9329</span>
<span id="L9330" rel="#L9330">9330</span>
<span id="L9331" rel="#L9331">9331</span>
<span id="L9332" rel="#L9332">9332</span>
<span id="L9333" rel="#L9333">9333</span>
<span id="L9334" rel="#L9334">9334</span>
<span id="L9335" rel="#L9335">9335</span>
<span id="L9336" rel="#L9336">9336</span>
<span id="L9337" rel="#L9337">9337</span>
<span id="L9338" rel="#L9338">9338</span>
<span id="L9339" rel="#L9339">9339</span>
<span id="L9340" rel="#L9340">9340</span>
<span id="L9341" rel="#L9341">9341</span>
<span id="L9342" rel="#L9342">9342</span>
<span id="L9343" rel="#L9343">9343</span>
<span id="L9344" rel="#L9344">9344</span>
<span id="L9345" rel="#L9345">9345</span>
<span id="L9346" rel="#L9346">9346</span>
<span id="L9347" rel="#L9347">9347</span>
<span id="L9348" rel="#L9348">9348</span>
<span id="L9349" rel="#L9349">9349</span>
<span id="L9350" rel="#L9350">9350</span>
<span id="L9351" rel="#L9351">9351</span>
<span id="L9352" rel="#L9352">9352</span>
<span id="L9353" rel="#L9353">9353</span>
<span id="L9354" rel="#L9354">9354</span>
<span id="L9355" rel="#L9355">9355</span>
<span id="L9356" rel="#L9356">9356</span>
<span id="L9357" rel="#L9357">9357</span>
<span id="L9358" rel="#L9358">9358</span>
<span id="L9359" rel="#L9359">9359</span>
<span id="L9360" rel="#L9360">9360</span>
<span id="L9361" rel="#L9361">9361</span>
<span id="L9362" rel="#L9362">9362</span>
<span id="L9363" rel="#L9363">9363</span>
<span id="L9364" rel="#L9364">9364</span>
<span id="L9365" rel="#L9365">9365</span>
<span id="L9366" rel="#L9366">9366</span>
<span id="L9367" rel="#L9367">9367</span>
<span id="L9368" rel="#L9368">9368</span>
<span id="L9369" rel="#L9369">9369</span>
<span id="L9370" rel="#L9370">9370</span>
<span id="L9371" rel="#L9371">9371</span>
<span id="L9372" rel="#L9372">9372</span>
<span id="L9373" rel="#L9373">9373</span>
<span id="L9374" rel="#L9374">9374</span>
<span id="L9375" rel="#L9375">9375</span>
<span id="L9376" rel="#L9376">9376</span>
<span id="L9377" rel="#L9377">9377</span>
<span id="L9378" rel="#L9378">9378</span>
<span id="L9379" rel="#L9379">9379</span>
<span id="L9380" rel="#L9380">9380</span>
<span id="L9381" rel="#L9381">9381</span>
<span id="L9382" rel="#L9382">9382</span>
<span id="L9383" rel="#L9383">9383</span>
<span id="L9384" rel="#L9384">9384</span>
<span id="L9385" rel="#L9385">9385</span>
<span id="L9386" rel="#L9386">9386</span>
<span id="L9387" rel="#L9387">9387</span>
<span id="L9388" rel="#L9388">9388</span>
<span id="L9389" rel="#L9389">9389</span>
<span id="L9390" rel="#L9390">9390</span>
<span id="L9391" rel="#L9391">9391</span>
<span id="L9392" rel="#L9392">9392</span>
<span id="L9393" rel="#L9393">9393</span>
<span id="L9394" rel="#L9394">9394</span>
<span id="L9395" rel="#L9395">9395</span>
<span id="L9396" rel="#L9396">9396</span>
<span id="L9397" rel="#L9397">9397</span>
<span id="L9398" rel="#L9398">9398</span>
<span id="L9399" rel="#L9399">9399</span>
<span id="L9400" rel="#L9400">9400</span>
<span id="L9401" rel="#L9401">9401</span>
<span id="L9402" rel="#L9402">9402</span>
<span id="L9403" rel="#L9403">9403</span>
<span id="L9404" rel="#L9404">9404</span>
<span id="L9405" rel="#L9405">9405</span>
<span id="L9406" rel="#L9406">9406</span>
<span id="L9407" rel="#L9407">9407</span>
<span id="L9408" rel="#L9408">9408</span>
<span id="L9409" rel="#L9409">9409</span>
<span id="L9410" rel="#L9410">9410</span>
<span id="L9411" rel="#L9411">9411</span>
<span id="L9412" rel="#L9412">9412</span>
<span id="L9413" rel="#L9413">9413</span>
<span id="L9414" rel="#L9414">9414</span>
<span id="L9415" rel="#L9415">9415</span>
<span id="L9416" rel="#L9416">9416</span>
<span id="L9417" rel="#L9417">9417</span>
<span id="L9418" rel="#L9418">9418</span>
<span id="L9419" rel="#L9419">9419</span>
<span id="L9420" rel="#L9420">9420</span>
<span id="L9421" rel="#L9421">9421</span>
<span id="L9422" rel="#L9422">9422</span>
<span id="L9423" rel="#L9423">9423</span>
<span id="L9424" rel="#L9424">9424</span>
<span id="L9425" rel="#L9425">9425</span>
<span id="L9426" rel="#L9426">9426</span>
<span id="L9427" rel="#L9427">9427</span>
<span id="L9428" rel="#L9428">9428</span>
<span id="L9429" rel="#L9429">9429</span>
<span id="L9430" rel="#L9430">9430</span>
<span id="L9431" rel="#L9431">9431</span>
<span id="L9432" rel="#L9432">9432</span>
<span id="L9433" rel="#L9433">9433</span>
<span id="L9434" rel="#L9434">9434</span>
<span id="L9435" rel="#L9435">9435</span>
<span id="L9436" rel="#L9436">9436</span>
<span id="L9437" rel="#L9437">9437</span>
<span id="L9438" rel="#L9438">9438</span>
<span id="L9439" rel="#L9439">9439</span>
<span id="L9440" rel="#L9440">9440</span>
<span id="L9441" rel="#L9441">9441</span>
<span id="L9442" rel="#L9442">9442</span>
<span id="L9443" rel="#L9443">9443</span>
<span id="L9444" rel="#L9444">9444</span>
<span id="L9445" rel="#L9445">9445</span>
<span id="L9446" rel="#L9446">9446</span>
<span id="L9447" rel="#L9447">9447</span>
<span id="L9448" rel="#L9448">9448</span>
<span id="L9449" rel="#L9449">9449</span>
<span id="L9450" rel="#L9450">9450</span>
<span id="L9451" rel="#L9451">9451</span>
<span id="L9452" rel="#L9452">9452</span>
<span id="L9453" rel="#L9453">9453</span>
<span id="L9454" rel="#L9454">9454</span>
<span id="L9455" rel="#L9455">9455</span>
<span id="L9456" rel="#L9456">9456</span>
<span id="L9457" rel="#L9457">9457</span>
<span id="L9458" rel="#L9458">9458</span>
<span id="L9459" rel="#L9459">9459</span>
<span id="L9460" rel="#L9460">9460</span>
<span id="L9461" rel="#L9461">9461</span>
<span id="L9462" rel="#L9462">9462</span>
<span id="L9463" rel="#L9463">9463</span>
<span id="L9464" rel="#L9464">9464</span>
<span id="L9465" rel="#L9465">9465</span>
<span id="L9466" rel="#L9466">9466</span>
<span id="L9467" rel="#L9467">9467</span>
<span id="L9468" rel="#L9468">9468</span>
<span id="L9469" rel="#L9469">9469</span>
<span id="L9470" rel="#L9470">9470</span>
<span id="L9471" rel="#L9471">9471</span>
<span id="L9472" rel="#L9472">9472</span>
<span id="L9473" rel="#L9473">9473</span>
<span id="L9474" rel="#L9474">9474</span>
<span id="L9475" rel="#L9475">9475</span>
<span id="L9476" rel="#L9476">9476</span>
<span id="L9477" rel="#L9477">9477</span>
<span id="L9478" rel="#L9478">9478</span>
<span id="L9479" rel="#L9479">9479</span>
<span id="L9480" rel="#L9480">9480</span>
<span id="L9481" rel="#L9481">9481</span>
<span id="L9482" rel="#L9482">9482</span>
<span id="L9483" rel="#L9483">9483</span>
<span id="L9484" rel="#L9484">9484</span>
<span id="L9485" rel="#L9485">9485</span>
<span id="L9486" rel="#L9486">9486</span>
<span id="L9487" rel="#L9487">9487</span>
<span id="L9488" rel="#L9488">9488</span>
<span id="L9489" rel="#L9489">9489</span>
<span id="L9490" rel="#L9490">9490</span>
<span id="L9491" rel="#L9491">9491</span>
<span id="L9492" rel="#L9492">9492</span>
<span id="L9493" rel="#L9493">9493</span>
<span id="L9494" rel="#L9494">9494</span>
<span id="L9495" rel="#L9495">9495</span>
<span id="L9496" rel="#L9496">9496</span>
<span id="L9497" rel="#L9497">9497</span>
<span id="L9498" rel="#L9498">9498</span>
<span id="L9499" rel="#L9499">9499</span>
<span id="L9500" rel="#L9500">9500</span>
<span id="L9501" rel="#L9501">9501</span>
<span id="L9502" rel="#L9502">9502</span>
<span id="L9503" rel="#L9503">9503</span>
<span id="L9504" rel="#L9504">9504</span>
<span id="L9505" rel="#L9505">9505</span>
<span id="L9506" rel="#L9506">9506</span>
<span id="L9507" rel="#L9507">9507</span>
<span id="L9508" rel="#L9508">9508</span>
<span id="L9509" rel="#L9509">9509</span>
<span id="L9510" rel="#L9510">9510</span>
<span id="L9511" rel="#L9511">9511</span>
<span id="L9512" rel="#L9512">9512</span>
<span id="L9513" rel="#L9513">9513</span>
<span id="L9514" rel="#L9514">9514</span>
<span id="L9515" rel="#L9515">9515</span>
<span id="L9516" rel="#L9516">9516</span>
<span id="L9517" rel="#L9517">9517</span>
<span id="L9518" rel="#L9518">9518</span>
<span id="L9519" rel="#L9519">9519</span>
<span id="L9520" rel="#L9520">9520</span>
<span id="L9521" rel="#L9521">9521</span>
<span id="L9522" rel="#L9522">9522</span>
<span id="L9523" rel="#L9523">9523</span>
<span id="L9524" rel="#L9524">9524</span>
<span id="L9525" rel="#L9525">9525</span>
<span id="L9526" rel="#L9526">9526</span>
<span id="L9527" rel="#L9527">9527</span>
<span id="L9528" rel="#L9528">9528</span>
<span id="L9529" rel="#L9529">9529</span>
<span id="L9530" rel="#L9530">9530</span>
<span id="L9531" rel="#L9531">9531</span>
<span id="L9532" rel="#L9532">9532</span>
<span id="L9533" rel="#L9533">9533</span>
<span id="L9534" rel="#L9534">9534</span>
<span id="L9535" rel="#L9535">9535</span>
<span id="L9536" rel="#L9536">9536</span>
<span id="L9537" rel="#L9537">9537</span>
<span id="L9538" rel="#L9538">9538</span>
<span id="L9539" rel="#L9539">9539</span>
<span id="L9540" rel="#L9540">9540</span>
<span id="L9541" rel="#L9541">9541</span>
<span id="L9542" rel="#L9542">9542</span>
<span id="L9543" rel="#L9543">9543</span>
<span id="L9544" rel="#L9544">9544</span>
<span id="L9545" rel="#L9545">9545</span>
<span id="L9546" rel="#L9546">9546</span>
<span id="L9547" rel="#L9547">9547</span>
<span id="L9548" rel="#L9548">9548</span>
<span id="L9549" rel="#L9549">9549</span>
<span id="L9550" rel="#L9550">9550</span>
<span id="L9551" rel="#L9551">9551</span>
<span id="L9552" rel="#L9552">9552</span>
<span id="L9553" rel="#L9553">9553</span>
<span id="L9554" rel="#L9554">9554</span>
<span id="L9555" rel="#L9555">9555</span>
<span id="L9556" rel="#L9556">9556</span>
<span id="L9557" rel="#L9557">9557</span>
<span id="L9558" rel="#L9558">9558</span>
<span id="L9559" rel="#L9559">9559</span>
<span id="L9560" rel="#L9560">9560</span>
<span id="L9561" rel="#L9561">9561</span>
<span id="L9562" rel="#L9562">9562</span>
<span id="L9563" rel="#L9563">9563</span>
<span id="L9564" rel="#L9564">9564</span>
<span id="L9565" rel="#L9565">9565</span>
<span id="L9566" rel="#L9566">9566</span>
<span id="L9567" rel="#L9567">9567</span>
<span id="L9568" rel="#L9568">9568</span>
<span id="L9569" rel="#L9569">9569</span>
<span id="L9570" rel="#L9570">9570</span>
<span id="L9571" rel="#L9571">9571</span>
<span id="L9572" rel="#L9572">9572</span>
<span id="L9573" rel="#L9573">9573</span>
<span id="L9574" rel="#L9574">9574</span>
<span id="L9575" rel="#L9575">9575</span>
<span id="L9576" rel="#L9576">9576</span>
<span id="L9577" rel="#L9577">9577</span>
<span id="L9578" rel="#L9578">9578</span>
<span id="L9579" rel="#L9579">9579</span>
<span id="L9580" rel="#L9580">9580</span>
<span id="L9581" rel="#L9581">9581</span>
<span id="L9582" rel="#L9582">9582</span>
<span id="L9583" rel="#L9583">9583</span>
<span id="L9584" rel="#L9584">9584</span>
<span id="L9585" rel="#L9585">9585</span>
<span id="L9586" rel="#L9586">9586</span>
<span id="L9587" rel="#L9587">9587</span>
<span id="L9588" rel="#L9588">9588</span>
<span id="L9589" rel="#L9589">9589</span>
<span id="L9590" rel="#L9590">9590</span>
<span id="L9591" rel="#L9591">9591</span>
<span id="L9592" rel="#L9592">9592</span>
<span id="L9593" rel="#L9593">9593</span>
<span id="L9594" rel="#L9594">9594</span>
<span id="L9595" rel="#L9595">9595</span>
<span id="L9596" rel="#L9596">9596</span>
<span id="L9597" rel="#L9597">9597</span>
<span id="L9598" rel="#L9598">9598</span>
<span id="L9599" rel="#L9599">9599</span>
<span id="L9600" rel="#L9600">9600</span>
<span id="L9601" rel="#L9601">9601</span>
<span id="L9602" rel="#L9602">9602</span>
<span id="L9603" rel="#L9603">9603</span>
<span id="L9604" rel="#L9604">9604</span>
<span id="L9605" rel="#L9605">9605</span>
<span id="L9606" rel="#L9606">9606</span>
<span id="L9607" rel="#L9607">9607</span>
<span id="L9608" rel="#L9608">9608</span>
<span id="L9609" rel="#L9609">9609</span>
<span id="L9610" rel="#L9610">9610</span>
<span id="L9611" rel="#L9611">9611</span>
<span id="L9612" rel="#L9612">9612</span>
<span id="L9613" rel="#L9613">9613</span>
<span id="L9614" rel="#L9614">9614</span>
<span id="L9615" rel="#L9615">9615</span>
<span id="L9616" rel="#L9616">9616</span>
<span id="L9617" rel="#L9617">9617</span>
<span id="L9618" rel="#L9618">9618</span>
<span id="L9619" rel="#L9619">9619</span>
<span id="L9620" rel="#L9620">9620</span>
<span id="L9621" rel="#L9621">9621</span>
<span id="L9622" rel="#L9622">9622</span>
<span id="L9623" rel="#L9623">9623</span>
<span id="L9624" rel="#L9624">9624</span>
<span id="L9625" rel="#L9625">9625</span>
<span id="L9626" rel="#L9626">9626</span>
<span id="L9627" rel="#L9627">9627</span>
<span id="L9628" rel="#L9628">9628</span>
<span id="L9629" rel="#L9629">9629</span>
<span id="L9630" rel="#L9630">9630</span>
<span id="L9631" rel="#L9631">9631</span>
<span id="L9632" rel="#L9632">9632</span>
<span id="L9633" rel="#L9633">9633</span>
<span id="L9634" rel="#L9634">9634</span>
<span id="L9635" rel="#L9635">9635</span>
<span id="L9636" rel="#L9636">9636</span>
<span id="L9637" rel="#L9637">9637</span>
<span id="L9638" rel="#L9638">9638</span>
<span id="L9639" rel="#L9639">9639</span>
<span id="L9640" rel="#L9640">9640</span>
<span id="L9641" rel="#L9641">9641</span>
<span id="L9642" rel="#L9642">9642</span>
<span id="L9643" rel="#L9643">9643</span>
<span id="L9644" rel="#L9644">9644</span>
<span id="L9645" rel="#L9645">9645</span>
<span id="L9646" rel="#L9646">9646</span>
<span id="L9647" rel="#L9647">9647</span>
<span id="L9648" rel="#L9648">9648</span>
<span id="L9649" rel="#L9649">9649</span>
<span id="L9650" rel="#L9650">9650</span>
<span id="L9651" rel="#L9651">9651</span>
<span id="L9652" rel="#L9652">9652</span>
<span id="L9653" rel="#L9653">9653</span>
<span id="L9654" rel="#L9654">9654</span>
<span id="L9655" rel="#L9655">9655</span>
<span id="L9656" rel="#L9656">9656</span>
<span id="L9657" rel="#L9657">9657</span>
<span id="L9658" rel="#L9658">9658</span>
<span id="L9659" rel="#L9659">9659</span>
<span id="L9660" rel="#L9660">9660</span>
<span id="L9661" rel="#L9661">9661</span>
<span id="L9662" rel="#L9662">9662</span>
<span id="L9663" rel="#L9663">9663</span>
<span id="L9664" rel="#L9664">9664</span>
<span id="L9665" rel="#L9665">9665</span>
<span id="L9666" rel="#L9666">9666</span>
<span id="L9667" rel="#L9667">9667</span>
<span id="L9668" rel="#L9668">9668</span>
<span id="L9669" rel="#L9669">9669</span>
<span id="L9670" rel="#L9670">9670</span>
<span id="L9671" rel="#L9671">9671</span>
<span id="L9672" rel="#L9672">9672</span>
<span id="L9673" rel="#L9673">9673</span>
<span id="L9674" rel="#L9674">9674</span>
<span id="L9675" rel="#L9675">9675</span>
<span id="L9676" rel="#L9676">9676</span>
<span id="L9677" rel="#L9677">9677</span>
<span id="L9678" rel="#L9678">9678</span>
<span id="L9679" rel="#L9679">9679</span>
<span id="L9680" rel="#L9680">9680</span>
<span id="L9681" rel="#L9681">9681</span>
<span id="L9682" rel="#L9682">9682</span>
<span id="L9683" rel="#L9683">9683</span>
<span id="L9684" rel="#L9684">9684</span>
<span id="L9685" rel="#L9685">9685</span>
<span id="L9686" rel="#L9686">9686</span>
<span id="L9687" rel="#L9687">9687</span>
<span id="L9688" rel="#L9688">9688</span>
<span id="L9689" rel="#L9689">9689</span>
<span id="L9690" rel="#L9690">9690</span>
<span id="L9691" rel="#L9691">9691</span>
<span id="L9692" rel="#L9692">9692</span>
<span id="L9693" rel="#L9693">9693</span>
<span id="L9694" rel="#L9694">9694</span>
<span id="L9695" rel="#L9695">9695</span>
<span id="L9696" rel="#L9696">9696</span>
<span id="L9697" rel="#L9697">9697</span>
<span id="L9698" rel="#L9698">9698</span>
<span id="L9699" rel="#L9699">9699</span>
<span id="L9700" rel="#L9700">9700</span>
<span id="L9701" rel="#L9701">9701</span>
<span id="L9702" rel="#L9702">9702</span>
<span id="L9703" rel="#L9703">9703</span>
<span id="L9704" rel="#L9704">9704</span>
<span id="L9705" rel="#L9705">9705</span>
<span id="L9706" rel="#L9706">9706</span>
<span id="L9707" rel="#L9707">9707</span>
<span id="L9708" rel="#L9708">9708</span>
<span id="L9709" rel="#L9709">9709</span>
<span id="L9710" rel="#L9710">9710</span>
<span id="L9711" rel="#L9711">9711</span>
<span id="L9712" rel="#L9712">9712</span>
<span id="L9713" rel="#L9713">9713</span>
<span id="L9714" rel="#L9714">9714</span>
<span id="L9715" rel="#L9715">9715</span>
<span id="L9716" rel="#L9716">9716</span>
<span id="L9717" rel="#L9717">9717</span>
<span id="L9718" rel="#L9718">9718</span>
<span id="L9719" rel="#L9719">9719</span>
<span id="L9720" rel="#L9720">9720</span>
<span id="L9721" rel="#L9721">9721</span>
<span id="L9722" rel="#L9722">9722</span>
<span id="L9723" rel="#L9723">9723</span>
<span id="L9724" rel="#L9724">9724</span>
<span id="L9725" rel="#L9725">9725</span>
<span id="L9726" rel="#L9726">9726</span>
<span id="L9727" rel="#L9727">9727</span>
<span id="L9728" rel="#L9728">9728</span>
<span id="L9729" rel="#L9729">9729</span>
<span id="L9730" rel="#L9730">9730</span>
<span id="L9731" rel="#L9731">9731</span>
<span id="L9732" rel="#L9732">9732</span>
<span id="L9733" rel="#L9733">9733</span>
<span id="L9734" rel="#L9734">9734</span>
<span id="L9735" rel="#L9735">9735</span>
<span id="L9736" rel="#L9736">9736</span>
<span id="L9737" rel="#L9737">9737</span>
<span id="L9738" rel="#L9738">9738</span>
<span id="L9739" rel="#L9739">9739</span>
<span id="L9740" rel="#L9740">9740</span>
<span id="L9741" rel="#L9741">9741</span>
<span id="L9742" rel="#L9742">9742</span>
<span id="L9743" rel="#L9743">9743</span>
<span id="L9744" rel="#L9744">9744</span>
<span id="L9745" rel="#L9745">9745</span>
<span id="L9746" rel="#L9746">9746</span>
<span id="L9747" rel="#L9747">9747</span>
<span id="L9748" rel="#L9748">9748</span>
<span id="L9749" rel="#L9749">9749</span>
<span id="L9750" rel="#L9750">9750</span>
<span id="L9751" rel="#L9751">9751</span>
<span id="L9752" rel="#L9752">9752</span>
<span id="L9753" rel="#L9753">9753</span>
<span id="L9754" rel="#L9754">9754</span>
<span id="L9755" rel="#L9755">9755</span>
<span id="L9756" rel="#L9756">9756</span>
<span id="L9757" rel="#L9757">9757</span>
<span id="L9758" rel="#L9758">9758</span>
<span id="L9759" rel="#L9759">9759</span>
<span id="L9760" rel="#L9760">9760</span>
<span id="L9761" rel="#L9761">9761</span>
<span id="L9762" rel="#L9762">9762</span>
<span id="L9763" rel="#L9763">9763</span>
<span id="L9764" rel="#L9764">9764</span>
<span id="L9765" rel="#L9765">9765</span>
<span id="L9766" rel="#L9766">9766</span>
<span id="L9767" rel="#L9767">9767</span>
<span id="L9768" rel="#L9768">9768</span>
<span id="L9769" rel="#L9769">9769</span>
<span id="L9770" rel="#L9770">9770</span>
<span id="L9771" rel="#L9771">9771</span>
<span id="L9772" rel="#L9772">9772</span>
<span id="L9773" rel="#L9773">9773</span>
<span id="L9774" rel="#L9774">9774</span>
<span id="L9775" rel="#L9775">9775</span>
<span id="L9776" rel="#L9776">9776</span>
<span id="L9777" rel="#L9777">9777</span>
<span id="L9778" rel="#L9778">9778</span>
<span id="L9779" rel="#L9779">9779</span>
<span id="L9780" rel="#L9780">9780</span>
<span id="L9781" rel="#L9781">9781</span>
<span id="L9782" rel="#L9782">9782</span>
<span id="L9783" rel="#L9783">9783</span>
<span id="L9784" rel="#L9784">9784</span>
<span id="L9785" rel="#L9785">9785</span>
<span id="L9786" rel="#L9786">9786</span>
<span id="L9787" rel="#L9787">9787</span>
<span id="L9788" rel="#L9788">9788</span>
<span id="L9789" rel="#L9789">9789</span>
<span id="L9790" rel="#L9790">9790</span>
<span id="L9791" rel="#L9791">9791</span>
<span id="L9792" rel="#L9792">9792</span>
<span id="L9793" rel="#L9793">9793</span>
<span id="L9794" rel="#L9794">9794</span>
<span id="L9795" rel="#L9795">9795</span>
<span id="L9796" rel="#L9796">9796</span>
<span id="L9797" rel="#L9797">9797</span>
<span id="L9798" rel="#L9798">9798</span>
<span id="L9799" rel="#L9799">9799</span>
<span id="L9800" rel="#L9800">9800</span>
<span id="L9801" rel="#L9801">9801</span>
<span id="L9802" rel="#L9802">9802</span>
<span id="L9803" rel="#L9803">9803</span>
<span id="L9804" rel="#L9804">9804</span>
<span id="L9805" rel="#L9805">9805</span>
<span id="L9806" rel="#L9806">9806</span>
<span id="L9807" rel="#L9807">9807</span>
<span id="L9808" rel="#L9808">9808</span>
<span id="L9809" rel="#L9809">9809</span>
<span id="L9810" rel="#L9810">9810</span>
<span id="L9811" rel="#L9811">9811</span>
<span id="L9812" rel="#L9812">9812</span>
<span id="L9813" rel="#L9813">9813</span>
<span id="L9814" rel="#L9814">9814</span>
<span id="L9815" rel="#L9815">9815</span>
<span id="L9816" rel="#L9816">9816</span>
<span id="L9817" rel="#L9817">9817</span>
<span id="L9818" rel="#L9818">9818</span>
<span id="L9819" rel="#L9819">9819</span>
<span id="L9820" rel="#L9820">9820</span>
<span id="L9821" rel="#L9821">9821</span>
<span id="L9822" rel="#L9822">9822</span>
<span id="L9823" rel="#L9823">9823</span>
<span id="L9824" rel="#L9824">9824</span>
<span id="L9825" rel="#L9825">9825</span>
<span id="L9826" rel="#L9826">9826</span>
<span id="L9827" rel="#L9827">9827</span>
<span id="L9828" rel="#L9828">9828</span>
<span id="L9829" rel="#L9829">9829</span>
<span id="L9830" rel="#L9830">9830</span>
<span id="L9831" rel="#L9831">9831</span>
<span id="L9832" rel="#L9832">9832</span>
<span id="L9833" rel="#L9833">9833</span>
<span id="L9834" rel="#L9834">9834</span>
<span id="L9835" rel="#L9835">9835</span>
<span id="L9836" rel="#L9836">9836</span>
<span id="L9837" rel="#L9837">9837</span>
<span id="L9838" rel="#L9838">9838</span>
<span id="L9839" rel="#L9839">9839</span>
<span id="L9840" rel="#L9840">9840</span>
<span id="L9841" rel="#L9841">9841</span>
<span id="L9842" rel="#L9842">9842</span>
<span id="L9843" rel="#L9843">9843</span>
<span id="L9844" rel="#L9844">9844</span>
<span id="L9845" rel="#L9845">9845</span>
<span id="L9846" rel="#L9846">9846</span>
<span id="L9847" rel="#L9847">9847</span>
<span id="L9848" rel="#L9848">9848</span>
<span id="L9849" rel="#L9849">9849</span>
<span id="L9850" rel="#L9850">9850</span>
<span id="L9851" rel="#L9851">9851</span>
<span id="L9852" rel="#L9852">9852</span>
<span id="L9853" rel="#L9853">9853</span>
<span id="L9854" rel="#L9854">9854</span>
<span id="L9855" rel="#L9855">9855</span>
<span id="L9856" rel="#L9856">9856</span>
<span id="L9857" rel="#L9857">9857</span>
<span id="L9858" rel="#L9858">9858</span>
<span id="L9859" rel="#L9859">9859</span>
<span id="L9860" rel="#L9860">9860</span>
<span id="L9861" rel="#L9861">9861</span>
<span id="L9862" rel="#L9862">9862</span>
<span id="L9863" rel="#L9863">9863</span>
<span id="L9864" rel="#L9864">9864</span>
<span id="L9865" rel="#L9865">9865</span>
<span id="L9866" rel="#L9866">9866</span>
<span id="L9867" rel="#L9867">9867</span>
<span id="L9868" rel="#L9868">9868</span>
<span id="L9869" rel="#L9869">9869</span>
<span id="L9870" rel="#L9870">9870</span>
<span id="L9871" rel="#L9871">9871</span>
<span id="L9872" rel="#L9872">9872</span>
<span id="L9873" rel="#L9873">9873</span>
<span id="L9874" rel="#L9874">9874</span>
<span id="L9875" rel="#L9875">9875</span>
<span id="L9876" rel="#L9876">9876</span>
<span id="L9877" rel="#L9877">9877</span>
<span id="L9878" rel="#L9878">9878</span>
<span id="L9879" rel="#L9879">9879</span>
<span id="L9880" rel="#L9880">9880</span>
<span id="L9881" rel="#L9881">9881</span>
<span id="L9882" rel="#L9882">9882</span>
<span id="L9883" rel="#L9883">9883</span>
<span id="L9884" rel="#L9884">9884</span>
<span id="L9885" rel="#L9885">9885</span>
<span id="L9886" rel="#L9886">9886</span>
<span id="L9887" rel="#L9887">9887</span>
<span id="L9888" rel="#L9888">9888</span>
<span id="L9889" rel="#L9889">9889</span>
<span id="L9890" rel="#L9890">9890</span>
<span id="L9891" rel="#L9891">9891</span>
<span id="L9892" rel="#L9892">9892</span>
<span id="L9893" rel="#L9893">9893</span>
<span id="L9894" rel="#L9894">9894</span>
<span id="L9895" rel="#L9895">9895</span>
<span id="L9896" rel="#L9896">9896</span>
<span id="L9897" rel="#L9897">9897</span>
<span id="L9898" rel="#L9898">9898</span>
<span id="L9899" rel="#L9899">9899</span>
<span id="L9900" rel="#L9900">9900</span>
<span id="L9901" rel="#L9901">9901</span>
<span id="L9902" rel="#L9902">9902</span>
<span id="L9903" rel="#L9903">9903</span>
<span id="L9904" rel="#L9904">9904</span>
<span id="L9905" rel="#L9905">9905</span>
<span id="L9906" rel="#L9906">9906</span>
<span id="L9907" rel="#L9907">9907</span>
<span id="L9908" rel="#L9908">9908</span>
<span id="L9909" rel="#L9909">9909</span>
<span id="L9910" rel="#L9910">9910</span>
<span id="L9911" rel="#L9911">9911</span>
<span id="L9912" rel="#L9912">9912</span>
<span id="L9913" rel="#L9913">9913</span>
<span id="L9914" rel="#L9914">9914</span>
<span id="L9915" rel="#L9915">9915</span>
<span id="L9916" rel="#L9916">9916</span>
<span id="L9917" rel="#L9917">9917</span>
<span id="L9918" rel="#L9918">9918</span>
<span id="L9919" rel="#L9919">9919</span>
<span id="L9920" rel="#L9920">9920</span>
<span id="L9921" rel="#L9921">9921</span>
<span id="L9922" rel="#L9922">9922</span>
<span id="L9923" rel="#L9923">9923</span>
<span id="L9924" rel="#L9924">9924</span>
<span id="L9925" rel="#L9925">9925</span>
<span id="L9926" rel="#L9926">9926</span>
<span id="L9927" rel="#L9927">9927</span>
<span id="L9928" rel="#L9928">9928</span>
<span id="L9929" rel="#L9929">9929</span>
<span id="L9930" rel="#L9930">9930</span>
<span id="L9931" rel="#L9931">9931</span>
<span id="L9932" rel="#L9932">9932</span>
<span id="L9933" rel="#L9933">9933</span>
<span id="L9934" rel="#L9934">9934</span>
<span id="L9935" rel="#L9935">9935</span>
<span id="L9936" rel="#L9936">9936</span>
<span id="L9937" rel="#L9937">9937</span>
<span id="L9938" rel="#L9938">9938</span>
<span id="L9939" rel="#L9939">9939</span>
<span id="L9940" rel="#L9940">9940</span>
<span id="L9941" rel="#L9941">9941</span>
<span id="L9942" rel="#L9942">9942</span>
<span id="L9943" rel="#L9943">9943</span>
<span id="L9944" rel="#L9944">9944</span>
<span id="L9945" rel="#L9945">9945</span>
<span id="L9946" rel="#L9946">9946</span>
<span id="L9947" rel="#L9947">9947</span>
<span id="L9948" rel="#L9948">9948</span>
<span id="L9949" rel="#L9949">9949</span>
<span id="L9950" rel="#L9950">9950</span>
<span id="L9951" rel="#L9951">9951</span>
<span id="L9952" rel="#L9952">9952</span>
<span id="L9953" rel="#L9953">9953</span>
<span id="L9954" rel="#L9954">9954</span>
<span id="L9955" rel="#L9955">9955</span>
<span id="L9956" rel="#L9956">9956</span>
<span id="L9957" rel="#L9957">9957</span>
<span id="L9958" rel="#L9958">9958</span>
<span id="L9959" rel="#L9959">9959</span>
<span id="L9960" rel="#L9960">9960</span>
<span id="L9961" rel="#L9961">9961</span>
<span id="L9962" rel="#L9962">9962</span>
<span id="L9963" rel="#L9963">9963</span>
<span id="L9964" rel="#L9964">9964</span>
<span id="L9965" rel="#L9965">9965</span>
<span id="L9966" rel="#L9966">9966</span>
<span id="L9967" rel="#L9967">9967</span>
<span id="L9968" rel="#L9968">9968</span>
<span id="L9969" rel="#L9969">9969</span>
<span id="L9970" rel="#L9970">9970</span>
<span id="L9971" rel="#L9971">9971</span>
<span id="L9972" rel="#L9972">9972</span>
<span id="L9973" rel="#L9973">9973</span>
<span id="L9974" rel="#L9974">9974</span>
<span id="L9975" rel="#L9975">9975</span>
<span id="L9976" rel="#L9976">9976</span>
<span id="L9977" rel="#L9977">9977</span>
<span id="L9978" rel="#L9978">9978</span>
<span id="L9979" rel="#L9979">9979</span>
<span id="L9980" rel="#L9980">9980</span>
<span id="L9981" rel="#L9981">9981</span>
<span id="L9982" rel="#L9982">9982</span>
<span id="L9983" rel="#L9983">9983</span>
<span id="L9984" rel="#L9984">9984</span>
<span id="L9985" rel="#L9985">9985</span>
<span id="L9986" rel="#L9986">9986</span>
<span id="L9987" rel="#L9987">9987</span>
<span id="L9988" rel="#L9988">9988</span>
<span id="L9989" rel="#L9989">9989</span>
<span id="L9990" rel="#L9990">9990</span>
<span id="L9991" rel="#L9991">9991</span>
<span id="L9992" rel="#L9992">9992</span>
<span id="L9993" rel="#L9993">9993</span>
<span id="L9994" rel="#L9994">9994</span>
<span id="L9995" rel="#L9995">9995</span>
<span id="L9996" rel="#L9996">9996</span>
<span id="L9997" rel="#L9997">9997</span>
<span id="L9998" rel="#L9998">9998</span>
<span id="L9999" rel="#L9999">9999</span>
<span id="L10000" rel="#L10000">10000</span>
<span id="L10001" rel="#L10001">10001</span>
<span id="L10002" rel="#L10002">10002</span>
<span id="L10003" rel="#L10003">10003</span>
<span id="L10004" rel="#L10004">10004</span>
<span id="L10005" rel="#L10005">10005</span>
<span id="L10006" rel="#L10006">10006</span>
<span id="L10007" rel="#L10007">10007</span>
<span id="L10008" rel="#L10008">10008</span>
<span id="L10009" rel="#L10009">10009</span>
<span id="L10010" rel="#L10010">10010</span>
<span id="L10011" rel="#L10011">10011</span>
<span id="L10012" rel="#L10012">10012</span>
<span id="L10013" rel="#L10013">10013</span>
<span id="L10014" rel="#L10014">10014</span>
<span id="L10015" rel="#L10015">10015</span>
<span id="L10016" rel="#L10016">10016</span>
<span id="L10017" rel="#L10017">10017</span>
<span id="L10018" rel="#L10018">10018</span>
<span id="L10019" rel="#L10019">10019</span>
<span id="L10020" rel="#L10020">10020</span>
<span id="L10021" rel="#L10021">10021</span>
<span id="L10022" rel="#L10022">10022</span>
<span id="L10023" rel="#L10023">10023</span>
<span id="L10024" rel="#L10024">10024</span>
<span id="L10025" rel="#L10025">10025</span>
<span id="L10026" rel="#L10026">10026</span>
<span id="L10027" rel="#L10027">10027</span>
<span id="L10028" rel="#L10028">10028</span>
<span id="L10029" rel="#L10029">10029</span>
<span id="L10030" rel="#L10030">10030</span>
<span id="L10031" rel="#L10031">10031</span>
<span id="L10032" rel="#L10032">10032</span>
<span id="L10033" rel="#L10033">10033</span>
<span id="L10034" rel="#L10034">10034</span>
<span id="L10035" rel="#L10035">10035</span>
<span id="L10036" rel="#L10036">10036</span>
<span id="L10037" rel="#L10037">10037</span>
<span id="L10038" rel="#L10038">10038</span>
<span id="L10039" rel="#L10039">10039</span>
<span id="L10040" rel="#L10040">10040</span>
<span id="L10041" rel="#L10041">10041</span>
<span id="L10042" rel="#L10042">10042</span>
<span id="L10043" rel="#L10043">10043</span>
<span id="L10044" rel="#L10044">10044</span>
<span id="L10045" rel="#L10045">10045</span>
<span id="L10046" rel="#L10046">10046</span>
<span id="L10047" rel="#L10047">10047</span>
<span id="L10048" rel="#L10048">10048</span>
<span id="L10049" rel="#L10049">10049</span>
<span id="L10050" rel="#L10050">10050</span>
<span id="L10051" rel="#L10051">10051</span>
<span id="L10052" rel="#L10052">10052</span>
<span id="L10053" rel="#L10053">10053</span>
<span id="L10054" rel="#L10054">10054</span>
<span id="L10055" rel="#L10055">10055</span>
<span id="L10056" rel="#L10056">10056</span>
<span id="L10057" rel="#L10057">10057</span>
<span id="L10058" rel="#L10058">10058</span>
<span id="L10059" rel="#L10059">10059</span>
<span id="L10060" rel="#L10060">10060</span>
<span id="L10061" rel="#L10061">10061</span>
<span id="L10062" rel="#L10062">10062</span>
<span id="L10063" rel="#L10063">10063</span>
<span id="L10064" rel="#L10064">10064</span>
<span id="L10065" rel="#L10065">10065</span>
<span id="L10066" rel="#L10066">10066</span>
<span id="L10067" rel="#L10067">10067</span>
<span id="L10068" rel="#L10068">10068</span>
<span id="L10069" rel="#L10069">10069</span>
<span id="L10070" rel="#L10070">10070</span>
<span id="L10071" rel="#L10071">10071</span>
<span id="L10072" rel="#L10072">10072</span>
<span id="L10073" rel="#L10073">10073</span>
<span id="L10074" rel="#L10074">10074</span>
<span id="L10075" rel="#L10075">10075</span>
<span id="L10076" rel="#L10076">10076</span>
<span id="L10077" rel="#L10077">10077</span>
<span id="L10078" rel="#L10078">10078</span>
<span id="L10079" rel="#L10079">10079</span>
<span id="L10080" rel="#L10080">10080</span>
<span id="L10081" rel="#L10081">10081</span>
<span id="L10082" rel="#L10082">10082</span>
<span id="L10083" rel="#L10083">10083</span>
<span id="L10084" rel="#L10084">10084</span>
<span id="L10085" rel="#L10085">10085</span>
<span id="L10086" rel="#L10086">10086</span>
<span id="L10087" rel="#L10087">10087</span>
<span id="L10088" rel="#L10088">10088</span>
<span id="L10089" rel="#L10089">10089</span>
<span id="L10090" rel="#L10090">10090</span>
<span id="L10091" rel="#L10091">10091</span>
<span id="L10092" rel="#L10092">10092</span>
<span id="L10093" rel="#L10093">10093</span>
<span id="L10094" rel="#L10094">10094</span>
<span id="L10095" rel="#L10095">10095</span>
<span id="L10096" rel="#L10096">10096</span>
<span id="L10097" rel="#L10097">10097</span>
<span id="L10098" rel="#L10098">10098</span>
<span id="L10099" rel="#L10099">10099</span>
<span id="L10100" rel="#L10100">10100</span>
<span id="L10101" rel="#L10101">10101</span>
<span id="L10102" rel="#L10102">10102</span>
<span id="L10103" rel="#L10103">10103</span>
<span id="L10104" rel="#L10104">10104</span>
<span id="L10105" rel="#L10105">10105</span>
<span id="L10106" rel="#L10106">10106</span>
<span id="L10107" rel="#L10107">10107</span>
<span id="L10108" rel="#L10108">10108</span>
<span id="L10109" rel="#L10109">10109</span>
<span id="L10110" rel="#L10110">10110</span>
<span id="L10111" rel="#L10111">10111</span>
<span id="L10112" rel="#L10112">10112</span>
<span id="L10113" rel="#L10113">10113</span>
<span id="L10114" rel="#L10114">10114</span>
<span id="L10115" rel="#L10115">10115</span>
<span id="L10116" rel="#L10116">10116</span>
<span id="L10117" rel="#L10117">10117</span>
<span id="L10118" rel="#L10118">10118</span>
<span id="L10119" rel="#L10119">10119</span>
<span id="L10120" rel="#L10120">10120</span>
<span id="L10121" rel="#L10121">10121</span>
<span id="L10122" rel="#L10122">10122</span>
<span id="L10123" rel="#L10123">10123</span>
<span id="L10124" rel="#L10124">10124</span>
<span id="L10125" rel="#L10125">10125</span>
<span id="L10126" rel="#L10126">10126</span>
<span id="L10127" rel="#L10127">10127</span>
<span id="L10128" rel="#L10128">10128</span>
<span id="L10129" rel="#L10129">10129</span>
<span id="L10130" rel="#L10130">10130</span>
<span id="L10131" rel="#L10131">10131</span>
<span id="L10132" rel="#L10132">10132</span>
<span id="L10133" rel="#L10133">10133</span>
<span id="L10134" rel="#L10134">10134</span>
<span id="L10135" rel="#L10135">10135</span>
<span id="L10136" rel="#L10136">10136</span>
<span id="L10137" rel="#L10137">10137</span>
<span id="L10138" rel="#L10138">10138</span>
<span id="L10139" rel="#L10139">10139</span>
<span id="L10140" rel="#L10140">10140</span>
<span id="L10141" rel="#L10141">10141</span>
<span id="L10142" rel="#L10142">10142</span>
<span id="L10143" rel="#L10143">10143</span>
<span id="L10144" rel="#L10144">10144</span>
<span id="L10145" rel="#L10145">10145</span>
<span id="L10146" rel="#L10146">10146</span>
<span id="L10147" rel="#L10147">10147</span>
<span id="L10148" rel="#L10148">10148</span>
<span id="L10149" rel="#L10149">10149</span>
<span id="L10150" rel="#L10150">10150</span>
<span id="L10151" rel="#L10151">10151</span>
<span id="L10152" rel="#L10152">10152</span>
<span id="L10153" rel="#L10153">10153</span>
<span id="L10154" rel="#L10154">10154</span>
<span id="L10155" rel="#L10155">10155</span>
<span id="L10156" rel="#L10156">10156</span>
<span id="L10157" rel="#L10157">10157</span>
<span id="L10158" rel="#L10158">10158</span>
<span id="L10159" rel="#L10159">10159</span>
<span id="L10160" rel="#L10160">10160</span>
<span id="L10161" rel="#L10161">10161</span>
<span id="L10162" rel="#L10162">10162</span>
<span id="L10163" rel="#L10163">10163</span>
<span id="L10164" rel="#L10164">10164</span>
<span id="L10165" rel="#L10165">10165</span>
<span id="L10166" rel="#L10166">10166</span>
<span id="L10167" rel="#L10167">10167</span>
<span id="L10168" rel="#L10168">10168</span>
<span id="L10169" rel="#L10169">10169</span>
<span id="L10170" rel="#L10170">10170</span>
<span id="L10171" rel="#L10171">10171</span>
<span id="L10172" rel="#L10172">10172</span>
<span id="L10173" rel="#L10173">10173</span>
<span id="L10174" rel="#L10174">10174</span>
<span id="L10175" rel="#L10175">10175</span>
<span id="L10176" rel="#L10176">10176</span>
<span id="L10177" rel="#L10177">10177</span>
<span id="L10178" rel="#L10178">10178</span>
<span id="L10179" rel="#L10179">10179</span>
<span id="L10180" rel="#L10180">10180</span>
<span id="L10181" rel="#L10181">10181</span>
<span id="L10182" rel="#L10182">10182</span>
<span id="L10183" rel="#L10183">10183</span>
<span id="L10184" rel="#L10184">10184</span>
<span id="L10185" rel="#L10185">10185</span>
<span id="L10186" rel="#L10186">10186</span>
<span id="L10187" rel="#L10187">10187</span>
<span id="L10188" rel="#L10188">10188</span>
<span id="L10189" rel="#L10189">10189</span>
<span id="L10190" rel="#L10190">10190</span>
<span id="L10191" rel="#L10191">10191</span>
<span id="L10192" rel="#L10192">10192</span>
<span id="L10193" rel="#L10193">10193</span>
<span id="L10194" rel="#L10194">10194</span>
<span id="L10195" rel="#L10195">10195</span>
<span id="L10196" rel="#L10196">10196</span>
<span id="L10197" rel="#L10197">10197</span>
<span id="L10198" rel="#L10198">10198</span>
<span id="L10199" rel="#L10199">10199</span>
<span id="L10200" rel="#L10200">10200</span>
<span id="L10201" rel="#L10201">10201</span>
<span id="L10202" rel="#L10202">10202</span>
<span id="L10203" rel="#L10203">10203</span>
<span id="L10204" rel="#L10204">10204</span>
<span id="L10205" rel="#L10205">10205</span>
<span id="L10206" rel="#L10206">10206</span>
<span id="L10207" rel="#L10207">10207</span>
<span id="L10208" rel="#L10208">10208</span>
<span id="L10209" rel="#L10209">10209</span>
<span id="L10210" rel="#L10210">10210</span>
<span id="L10211" rel="#L10211">10211</span>
<span id="L10212" rel="#L10212">10212</span>
<span id="L10213" rel="#L10213">10213</span>
<span id="L10214" rel="#L10214">10214</span>
<span id="L10215" rel="#L10215">10215</span>
<span id="L10216" rel="#L10216">10216</span>
<span id="L10217" rel="#L10217">10217</span>
<span id="L10218" rel="#L10218">10218</span>
<span id="L10219" rel="#L10219">10219</span>
<span id="L10220" rel="#L10220">10220</span>
<span id="L10221" rel="#L10221">10221</span>
<span id="L10222" rel="#L10222">10222</span>
<span id="L10223" rel="#L10223">10223</span>
<span id="L10224" rel="#L10224">10224</span>
<span id="L10225" rel="#L10225">10225</span>
<span id="L10226" rel="#L10226">10226</span>
<span id="L10227" rel="#L10227">10227</span>
<span id="L10228" rel="#L10228">10228</span>
<span id="L10229" rel="#L10229">10229</span>
<span id="L10230" rel="#L10230">10230</span>
<span id="L10231" rel="#L10231">10231</span>
<span id="L10232" rel="#L10232">10232</span>
<span id="L10233" rel="#L10233">10233</span>
<span id="L10234" rel="#L10234">10234</span>
<span id="L10235" rel="#L10235">10235</span>
<span id="L10236" rel="#L10236">10236</span>
<span id="L10237" rel="#L10237">10237</span>
<span id="L10238" rel="#L10238">10238</span>
<span id="L10239" rel="#L10239">10239</span>
<span id="L10240" rel="#L10240">10240</span>
<span id="L10241" rel="#L10241">10241</span>
<span id="L10242" rel="#L10242">10242</span>
<span id="L10243" rel="#L10243">10243</span>
<span id="L10244" rel="#L10244">10244</span>
<span id="L10245" rel="#L10245">10245</span>
<span id="L10246" rel="#L10246">10246</span>
<span id="L10247" rel="#L10247">10247</span>
<span id="L10248" rel="#L10248">10248</span>
<span id="L10249" rel="#L10249">10249</span>
<span id="L10250" rel="#L10250">10250</span>
<span id="L10251" rel="#L10251">10251</span>
<span id="L10252" rel="#L10252">10252</span>
<span id="L10253" rel="#L10253">10253</span>
<span id="L10254" rel="#L10254">10254</span>
<span id="L10255" rel="#L10255">10255</span>
<span id="L10256" rel="#L10256">10256</span>
<span id="L10257" rel="#L10257">10257</span>
<span id="L10258" rel="#L10258">10258</span>
<span id="L10259" rel="#L10259">10259</span>
<span id="L10260" rel="#L10260">10260</span>
<span id="L10261" rel="#L10261">10261</span>
<span id="L10262" rel="#L10262">10262</span>
<span id="L10263" rel="#L10263">10263</span>
<span id="L10264" rel="#L10264">10264</span>
<span id="L10265" rel="#L10265">10265</span>
<span id="L10266" rel="#L10266">10266</span>
<span id="L10267" rel="#L10267">10267</span>
<span id="L10268" rel="#L10268">10268</span>
<span id="L10269" rel="#L10269">10269</span>
<span id="L10270" rel="#L10270">10270</span>
<span id="L10271" rel="#L10271">10271</span>
<span id="L10272" rel="#L10272">10272</span>
<span id="L10273" rel="#L10273">10273</span>
<span id="L10274" rel="#L10274">10274</span>
<span id="L10275" rel="#L10275">10275</span>
<span id="L10276" rel="#L10276">10276</span>
<span id="L10277" rel="#L10277">10277</span>
<span id="L10278" rel="#L10278">10278</span>
<span id="L10279" rel="#L10279">10279</span>
<span id="L10280" rel="#L10280">10280</span>
<span id="L10281" rel="#L10281">10281</span>
<span id="L10282" rel="#L10282">10282</span>
<span id="L10283" rel="#L10283">10283</span>
<span id="L10284" rel="#L10284">10284</span>
<span id="L10285" rel="#L10285">10285</span>
<span id="L10286" rel="#L10286">10286</span>
<span id="L10287" rel="#L10287">10287</span>
<span id="L10288" rel="#L10288">10288</span>
<span id="L10289" rel="#L10289">10289</span>
<span id="L10290" rel="#L10290">10290</span>
<span id="L10291" rel="#L10291">10291</span>
<span id="L10292" rel="#L10292">10292</span>
<span id="L10293" rel="#L10293">10293</span>
<span id="L10294" rel="#L10294">10294</span>
<span id="L10295" rel="#L10295">10295</span>
<span id="L10296" rel="#L10296">10296</span>
<span id="L10297" rel="#L10297">10297</span>
<span id="L10298" rel="#L10298">10298</span>
<span id="L10299" rel="#L10299">10299</span>
<span id="L10300" rel="#L10300">10300</span>
<span id="L10301" rel="#L10301">10301</span>
<span id="L10302" rel="#L10302">10302</span>
<span id="L10303" rel="#L10303">10303</span>
<span id="L10304" rel="#L10304">10304</span>
<span id="L10305" rel="#L10305">10305</span>
<span id="L10306" rel="#L10306">10306</span>
<span id="L10307" rel="#L10307">10307</span>
<span id="L10308" rel="#L10308">10308</span>
<span id="L10309" rel="#L10309">10309</span>
<span id="L10310" rel="#L10310">10310</span>
<span id="L10311" rel="#L10311">10311</span>
<span id="L10312" rel="#L10312">10312</span>
<span id="L10313" rel="#L10313">10313</span>
<span id="L10314" rel="#L10314">10314</span>
<span id="L10315" rel="#L10315">10315</span>
<span id="L10316" rel="#L10316">10316</span>
<span id="L10317" rel="#L10317">10317</span>
<span id="L10318" rel="#L10318">10318</span>
<span id="L10319" rel="#L10319">10319</span>
<span id="L10320" rel="#L10320">10320</span>
<span id="L10321" rel="#L10321">10321</span>
<span id="L10322" rel="#L10322">10322</span>
<span id="L10323" rel="#L10323">10323</span>
<span id="L10324" rel="#L10324">10324</span>
<span id="L10325" rel="#L10325">10325</span>
<span id="L10326" rel="#L10326">10326</span>
<span id="L10327" rel="#L10327">10327</span>
<span id="L10328" rel="#L10328">10328</span>
<span id="L10329" rel="#L10329">10329</span>
<span id="L10330" rel="#L10330">10330</span>
<span id="L10331" rel="#L10331">10331</span>
<span id="L10332" rel="#L10332">10332</span>
<span id="L10333" rel="#L10333">10333</span>
<span id="L10334" rel="#L10334">10334</span>
<span id="L10335" rel="#L10335">10335</span>
<span id="L10336" rel="#L10336">10336</span>
<span id="L10337" rel="#L10337">10337</span>
<span id="L10338" rel="#L10338">10338</span>
<span id="L10339" rel="#L10339">10339</span>
<span id="L10340" rel="#L10340">10340</span>
<span id="L10341" rel="#L10341">10341</span>
<span id="L10342" rel="#L10342">10342</span>
<span id="L10343" rel="#L10343">10343</span>
<span id="L10344" rel="#L10344">10344</span>
<span id="L10345" rel="#L10345">10345</span>
<span id="L10346" rel="#L10346">10346</span>
<span id="L10347" rel="#L10347">10347</span>
<span id="L10348" rel="#L10348">10348</span>
<span id="L10349" rel="#L10349">10349</span>
<span id="L10350" rel="#L10350">10350</span>
<span id="L10351" rel="#L10351">10351</span>
<span id="L10352" rel="#L10352">10352</span>
<span id="L10353" rel="#L10353">10353</span>
<span id="L10354" rel="#L10354">10354</span>
<span id="L10355" rel="#L10355">10355</span>
<span id="L10356" rel="#L10356">10356</span>
<span id="L10357" rel="#L10357">10357</span>
<span id="L10358" rel="#L10358">10358</span>
<span id="L10359" rel="#L10359">10359</span>
<span id="L10360" rel="#L10360">10360</span>
<span id="L10361" rel="#L10361">10361</span>
<span id="L10362" rel="#L10362">10362</span>
<span id="L10363" rel="#L10363">10363</span>
<span id="L10364" rel="#L10364">10364</span>
<span id="L10365" rel="#L10365">10365</span>
<span id="L10366" rel="#L10366">10366</span>
<span id="L10367" rel="#L10367">10367</span>
<span id="L10368" rel="#L10368">10368</span>
<span id="L10369" rel="#L10369">10369</span>
<span id="L10370" rel="#L10370">10370</span>
<span id="L10371" rel="#L10371">10371</span>
<span id="L10372" rel="#L10372">10372</span>
<span id="L10373" rel="#L10373">10373</span>
<span id="L10374" rel="#L10374">10374</span>
<span id="L10375" rel="#L10375">10375</span>
<span id="L10376" rel="#L10376">10376</span>
<span id="L10377" rel="#L10377">10377</span>
<span id="L10378" rel="#L10378">10378</span>
<span id="L10379" rel="#L10379">10379</span>
<span id="L10380" rel="#L10380">10380</span>
<span id="L10381" rel="#L10381">10381</span>
<span id="L10382" rel="#L10382">10382</span>
<span id="L10383" rel="#L10383">10383</span>
<span id="L10384" rel="#L10384">10384</span>
<span id="L10385" rel="#L10385">10385</span>
<span id="L10386" rel="#L10386">10386</span>
<span id="L10387" rel="#L10387">10387</span>
<span id="L10388" rel="#L10388">10388</span>
<span id="L10389" rel="#L10389">10389</span>
<span id="L10390" rel="#L10390">10390</span>
<span id="L10391" rel="#L10391">10391</span>
<span id="L10392" rel="#L10392">10392</span>
<span id="L10393" rel="#L10393">10393</span>
<span id="L10394" rel="#L10394">10394</span>
<span id="L10395" rel="#L10395">10395</span>
<span id="L10396" rel="#L10396">10396</span>
<span id="L10397" rel="#L10397">10397</span>
<span id="L10398" rel="#L10398">10398</span>
<span id="L10399" rel="#L10399">10399</span>
<span id="L10400" rel="#L10400">10400</span>
<span id="L10401" rel="#L10401">10401</span>
<span id="L10402" rel="#L10402">10402</span>
<span id="L10403" rel="#L10403">10403</span>
<span id="L10404" rel="#L10404">10404</span>
<span id="L10405" rel="#L10405">10405</span>
<span id="L10406" rel="#L10406">10406</span>
<span id="L10407" rel="#L10407">10407</span>
<span id="L10408" rel="#L10408">10408</span>
<span id="L10409" rel="#L10409">10409</span>
<span id="L10410" rel="#L10410">10410</span>
<span id="L10411" rel="#L10411">10411</span>
<span id="L10412" rel="#L10412">10412</span>
<span id="L10413" rel="#L10413">10413</span>
<span id="L10414" rel="#L10414">10414</span>
<span id="L10415" rel="#L10415">10415</span>
<span id="L10416" rel="#L10416">10416</span>
<span id="L10417" rel="#L10417">10417</span>
<span id="L10418" rel="#L10418">10418</span>
<span id="L10419" rel="#L10419">10419</span>
<span id="L10420" rel="#L10420">10420</span>
<span id="L10421" rel="#L10421">10421</span>
<span id="L10422" rel="#L10422">10422</span>
<span id="L10423" rel="#L10423">10423</span>
<span id="L10424" rel="#L10424">10424</span>
<span id="L10425" rel="#L10425">10425</span>
<span id="L10426" rel="#L10426">10426</span>
<span id="L10427" rel="#L10427">10427</span>
<span id="L10428" rel="#L10428">10428</span>
<span id="L10429" rel="#L10429">10429</span>
<span id="L10430" rel="#L10430">10430</span>
<span id="L10431" rel="#L10431">10431</span>
<span id="L10432" rel="#L10432">10432</span>
<span id="L10433" rel="#L10433">10433</span>
<span id="L10434" rel="#L10434">10434</span>
<span id="L10435" rel="#L10435">10435</span>
<span id="L10436" rel="#L10436">10436</span>
<span id="L10437" rel="#L10437">10437</span>
<span id="L10438" rel="#L10438">10438</span>
<span id="L10439" rel="#L10439">10439</span>
<span id="L10440" rel="#L10440">10440</span>
<span id="L10441" rel="#L10441">10441</span>
<span id="L10442" rel="#L10442">10442</span>
<span id="L10443" rel="#L10443">10443</span>
<span id="L10444" rel="#L10444">10444</span>
<span id="L10445" rel="#L10445">10445</span>
<span id="L10446" rel="#L10446">10446</span>
<span id="L10447" rel="#L10447">10447</span>
<span id="L10448" rel="#L10448">10448</span>
<span id="L10449" rel="#L10449">10449</span>
<span id="L10450" rel="#L10450">10450</span>
<span id="L10451" rel="#L10451">10451</span>
<span id="L10452" rel="#L10452">10452</span>
<span id="L10453" rel="#L10453">10453</span>
<span id="L10454" rel="#L10454">10454</span>
<span id="L10455" rel="#L10455">10455</span>
<span id="L10456" rel="#L10456">10456</span>
<span id="L10457" rel="#L10457">10457</span>
<span id="L10458" rel="#L10458">10458</span>
<span id="L10459" rel="#L10459">10459</span>
<span id="L10460" rel="#L10460">10460</span>
<span id="L10461" rel="#L10461">10461</span>
<span id="L10462" rel="#L10462">10462</span>
<span id="L10463" rel="#L10463">10463</span>
<span id="L10464" rel="#L10464">10464</span>
<span id="L10465" rel="#L10465">10465</span>
<span id="L10466" rel="#L10466">10466</span>
<span id="L10467" rel="#L10467">10467</span>
<span id="L10468" rel="#L10468">10468</span>
<span id="L10469" rel="#L10469">10469</span>
<span id="L10470" rel="#L10470">10470</span>
<span id="L10471" rel="#L10471">10471</span>
<span id="L10472" rel="#L10472">10472</span>
<span id="L10473" rel="#L10473">10473</span>
<span id="L10474" rel="#L10474">10474</span>
<span id="L10475" rel="#L10475">10475</span>
<span id="L10476" rel="#L10476">10476</span>
<span id="L10477" rel="#L10477">10477</span>
<span id="L10478" rel="#L10478">10478</span>
<span id="L10479" rel="#L10479">10479</span>
<span id="L10480" rel="#L10480">10480</span>
<span id="L10481" rel="#L10481">10481</span>
<span id="L10482" rel="#L10482">10482</span>
<span id="L10483" rel="#L10483">10483</span>
<span id="L10484" rel="#L10484">10484</span>
<span id="L10485" rel="#L10485">10485</span>
<span id="L10486" rel="#L10486">10486</span>
<span id="L10487" rel="#L10487">10487</span>
<span id="L10488" rel="#L10488">10488</span>
<span id="L10489" rel="#L10489">10489</span>
<span id="L10490" rel="#L10490">10490</span>
<span id="L10491" rel="#L10491">10491</span>
<span id="L10492" rel="#L10492">10492</span>
<span id="L10493" rel="#L10493">10493</span>
<span id="L10494" rel="#L10494">10494</span>
<span id="L10495" rel="#L10495">10495</span>
<span id="L10496" rel="#L10496">10496</span>
<span id="L10497" rel="#L10497">10497</span>
<span id="L10498" rel="#L10498">10498</span>
<span id="L10499" rel="#L10499">10499</span>
<span id="L10500" rel="#L10500">10500</span>
<span id="L10501" rel="#L10501">10501</span>
<span id="L10502" rel="#L10502">10502</span>
<span id="L10503" rel="#L10503">10503</span>
<span id="L10504" rel="#L10504">10504</span>
<span id="L10505" rel="#L10505">10505</span>
<span id="L10506" rel="#L10506">10506</span>
<span id="L10507" rel="#L10507">10507</span>
<span id="L10508" rel="#L10508">10508</span>
<span id="L10509" rel="#L10509">10509</span>
<span id="L10510" rel="#L10510">10510</span>
<span id="L10511" rel="#L10511">10511</span>
<span id="L10512" rel="#L10512">10512</span>
<span id="L10513" rel="#L10513">10513</span>
<span id="L10514" rel="#L10514">10514</span>
<span id="L10515" rel="#L10515">10515</span>
<span id="L10516" rel="#L10516">10516</span>
<span id="L10517" rel="#L10517">10517</span>
<span id="L10518" rel="#L10518">10518</span>
<span id="L10519" rel="#L10519">10519</span>
<span id="L10520" rel="#L10520">10520</span>
<span id="L10521" rel="#L10521">10521</span>
<span id="L10522" rel="#L10522">10522</span>
<span id="L10523" rel="#L10523">10523</span>
<span id="L10524" rel="#L10524">10524</span>
<span id="L10525" rel="#L10525">10525</span>
<span id="L10526" rel="#L10526">10526</span>
<span id="L10527" rel="#L10527">10527</span>
<span id="L10528" rel="#L10528">10528</span>
<span id="L10529" rel="#L10529">10529</span>
<span id="L10530" rel="#L10530">10530</span>
<span id="L10531" rel="#L10531">10531</span>
<span id="L10532" rel="#L10532">10532</span>
<span id="L10533" rel="#L10533">10533</span>
<span id="L10534" rel="#L10534">10534</span>
<span id="L10535" rel="#L10535">10535</span>
<span id="L10536" rel="#L10536">10536</span>
<span id="L10537" rel="#L10537">10537</span>
<span id="L10538" rel="#L10538">10538</span>
<span id="L10539" rel="#L10539">10539</span>
<span id="L10540" rel="#L10540">10540</span>
<span id="L10541" rel="#L10541">10541</span>
<span id="L10542" rel="#L10542">10542</span>
<span id="L10543" rel="#L10543">10543</span>
<span id="L10544" rel="#L10544">10544</span>
<span id="L10545" rel="#L10545">10545</span>
<span id="L10546" rel="#L10546">10546</span>
<span id="L10547" rel="#L10547">10547</span>
<span id="L10548" rel="#L10548">10548</span>
<span id="L10549" rel="#L10549">10549</span>
<span id="L10550" rel="#L10550">10550</span>
<span id="L10551" rel="#L10551">10551</span>
<span id="L10552" rel="#L10552">10552</span>
<span id="L10553" rel="#L10553">10553</span>
<span id="L10554" rel="#L10554">10554</span>
<span id="L10555" rel="#L10555">10555</span>
<span id="L10556" rel="#L10556">10556</span>
<span id="L10557" rel="#L10557">10557</span>
<span id="L10558" rel="#L10558">10558</span>
<span id="L10559" rel="#L10559">10559</span>
<span id="L10560" rel="#L10560">10560</span>
<span id="L10561" rel="#L10561">10561</span>
<span id="L10562" rel="#L10562">10562</span>
<span id="L10563" rel="#L10563">10563</span>
<span id="L10564" rel="#L10564">10564</span>
<span id="L10565" rel="#L10565">10565</span>
<span id="L10566" rel="#L10566">10566</span>
<span id="L10567" rel="#L10567">10567</span>
<span id="L10568" rel="#L10568">10568</span>
<span id="L10569" rel="#L10569">10569</span>
<span id="L10570" rel="#L10570">10570</span>
<span id="L10571" rel="#L10571">10571</span>
<span id="L10572" rel="#L10572">10572</span>
<span id="L10573" rel="#L10573">10573</span>
<span id="L10574" rel="#L10574">10574</span>
<span id="L10575" rel="#L10575">10575</span>
<span id="L10576" rel="#L10576">10576</span>
<span id="L10577" rel="#L10577">10577</span>
<span id="L10578" rel="#L10578">10578</span>
<span id="L10579" rel="#L10579">10579</span>
<span id="L10580" rel="#L10580">10580</span>
<span id="L10581" rel="#L10581">10581</span>
<span id="L10582" rel="#L10582">10582</span>
<span id="L10583" rel="#L10583">10583</span>
<span id="L10584" rel="#L10584">10584</span>
<span id="L10585" rel="#L10585">10585</span>
<span id="L10586" rel="#L10586">10586</span>
<span id="L10587" rel="#L10587">10587</span>
<span id="L10588" rel="#L10588">10588</span>
<span id="L10589" rel="#L10589">10589</span>
<span id="L10590" rel="#L10590">10590</span>
<span id="L10591" rel="#L10591">10591</span>
<span id="L10592" rel="#L10592">10592</span>
<span id="L10593" rel="#L10593">10593</span>
<span id="L10594" rel="#L10594">10594</span>
<span id="L10595" rel="#L10595">10595</span>
<span id="L10596" rel="#L10596">10596</span>
<span id="L10597" rel="#L10597">10597</span>
<span id="L10598" rel="#L10598">10598</span>
<span id="L10599" rel="#L10599">10599</span>
<span id="L10600" rel="#L10600">10600</span>
<span id="L10601" rel="#L10601">10601</span>
<span id="L10602" rel="#L10602">10602</span>
<span id="L10603" rel="#L10603">10603</span>
<span id="L10604" rel="#L10604">10604</span>
<span id="L10605" rel="#L10605">10605</span>
<span id="L10606" rel="#L10606">10606</span>
<span id="L10607" rel="#L10607">10607</span>
<span id="L10608" rel="#L10608">10608</span>
<span id="L10609" rel="#L10609">10609</span>
<span id="L10610" rel="#L10610">10610</span>
<span id="L10611" rel="#L10611">10611</span>
<span id="L10612" rel="#L10612">10612</span>
<span id="L10613" rel="#L10613">10613</span>
<span id="L10614" rel="#L10614">10614</span>
<span id="L10615" rel="#L10615">10615</span>
<span id="L10616" rel="#L10616">10616</span>
<span id="L10617" rel="#L10617">10617</span>
<span id="L10618" rel="#L10618">10618</span>
<span id="L10619" rel="#L10619">10619</span>
<span id="L10620" rel="#L10620">10620</span>
<span id="L10621" rel="#L10621">10621</span>
<span id="L10622" rel="#L10622">10622</span>
<span id="L10623" rel="#L10623">10623</span>
<span id="L10624" rel="#L10624">10624</span>
<span id="L10625" rel="#L10625">10625</span>
<span id="L10626" rel="#L10626">10626</span>
<span id="L10627" rel="#L10627">10627</span>
<span id="L10628" rel="#L10628">10628</span>
<span id="L10629" rel="#L10629">10629</span>
<span id="L10630" rel="#L10630">10630</span>
<span id="L10631" rel="#L10631">10631</span>
<span id="L10632" rel="#L10632">10632</span>
<span id="L10633" rel="#L10633">10633</span>
<span id="L10634" rel="#L10634">10634</span>
<span id="L10635" rel="#L10635">10635</span>
<span id="L10636" rel="#L10636">10636</span>
<span id="L10637" rel="#L10637">10637</span>
<span id="L10638" rel="#L10638">10638</span>
<span id="L10639" rel="#L10639">10639</span>
<span id="L10640" rel="#L10640">10640</span>
<span id="L10641" rel="#L10641">10641</span>
<span id="L10642" rel="#L10642">10642</span>
<span id="L10643" rel="#L10643">10643</span>
<span id="L10644" rel="#L10644">10644</span>
<span id="L10645" rel="#L10645">10645</span>
<span id="L10646" rel="#L10646">10646</span>
<span id="L10647" rel="#L10647">10647</span>
<span id="L10648" rel="#L10648">10648</span>
<span id="L10649" rel="#L10649">10649</span>
<span id="L10650" rel="#L10650">10650</span>
<span id="L10651" rel="#L10651">10651</span>
<span id="L10652" rel="#L10652">10652</span>
<span id="L10653" rel="#L10653">10653</span>
<span id="L10654" rel="#L10654">10654</span>
<span id="L10655" rel="#L10655">10655</span>
<span id="L10656" rel="#L10656">10656</span>
<span id="L10657" rel="#L10657">10657</span>
<span id="L10658" rel="#L10658">10658</span>
<span id="L10659" rel="#L10659">10659</span>
<span id="L10660" rel="#L10660">10660</span>
<span id="L10661" rel="#L10661">10661</span>
<span id="L10662" rel="#L10662">10662</span>
<span id="L10663" rel="#L10663">10663</span>
<span id="L10664" rel="#L10664">10664</span>
<span id="L10665" rel="#L10665">10665</span>
<span id="L10666" rel="#L10666">10666</span>
<span id="L10667" rel="#L10667">10667</span>
<span id="L10668" rel="#L10668">10668</span>
<span id="L10669" rel="#L10669">10669</span>
<span id="L10670" rel="#L10670">10670</span>
<span id="L10671" rel="#L10671">10671</span>
<span id="L10672" rel="#L10672">10672</span>
<span id="L10673" rel="#L10673">10673</span>
<span id="L10674" rel="#L10674">10674</span>
<span id="L10675" rel="#L10675">10675</span>
<span id="L10676" rel="#L10676">10676</span>
<span id="L10677" rel="#L10677">10677</span>
<span id="L10678" rel="#L10678">10678</span>
<span id="L10679" rel="#L10679">10679</span>
<span id="L10680" rel="#L10680">10680</span>
<span id="L10681" rel="#L10681">10681</span>
<span id="L10682" rel="#L10682">10682</span>
<span id="L10683" rel="#L10683">10683</span>
<span id="L10684" rel="#L10684">10684</span>
<span id="L10685" rel="#L10685">10685</span>
<span id="L10686" rel="#L10686">10686</span>
<span id="L10687" rel="#L10687">10687</span>
<span id="L10688" rel="#L10688">10688</span>
<span id="L10689" rel="#L10689">10689</span>
<span id="L10690" rel="#L10690">10690</span>
<span id="L10691" rel="#L10691">10691</span>
<span id="L10692" rel="#L10692">10692</span>
<span id="L10693" rel="#L10693">10693</span>
<span id="L10694" rel="#L10694">10694</span>
<span id="L10695" rel="#L10695">10695</span>
<span id="L10696" rel="#L10696">10696</span>
<span id="L10697" rel="#L10697">10697</span>
<span id="L10698" rel="#L10698">10698</span>
<span id="L10699" rel="#L10699">10699</span>
<span id="L10700" rel="#L10700">10700</span>
<span id="L10701" rel="#L10701">10701</span>
<span id="L10702" rel="#L10702">10702</span>
<span id="L10703" rel="#L10703">10703</span>
<span id="L10704" rel="#L10704">10704</span>
<span id="L10705" rel="#L10705">10705</span>
<span id="L10706" rel="#L10706">10706</span>
<span id="L10707" rel="#L10707">10707</span>
<span id="L10708" rel="#L10708">10708</span>
<span id="L10709" rel="#L10709">10709</span>
<span id="L10710" rel="#L10710">10710</span>
<span id="L10711" rel="#L10711">10711</span>
<span id="L10712" rel="#L10712">10712</span>
<span id="L10713" rel="#L10713">10713</span>
<span id="L10714" rel="#L10714">10714</span>
<span id="L10715" rel="#L10715">10715</span>
<span id="L10716" rel="#L10716">10716</span>
<span id="L10717" rel="#L10717">10717</span>
<span id="L10718" rel="#L10718">10718</span>
<span id="L10719" rel="#L10719">10719</span>
<span id="L10720" rel="#L10720">10720</span>
<span id="L10721" rel="#L10721">10721</span>
<span id="L10722" rel="#L10722">10722</span>
<span id="L10723" rel="#L10723">10723</span>
<span id="L10724" rel="#L10724">10724</span>
<span id="L10725" rel="#L10725">10725</span>
<span id="L10726" rel="#L10726">10726</span>
<span id="L10727" rel="#L10727">10727</span>
<span id="L10728" rel="#L10728">10728</span>
<span id="L10729" rel="#L10729">10729</span>
<span id="L10730" rel="#L10730">10730</span>
<span id="L10731" rel="#L10731">10731</span>
<span id="L10732" rel="#L10732">10732</span>
<span id="L10733" rel="#L10733">10733</span>
<span id="L10734" rel="#L10734">10734</span>
<span id="L10735" rel="#L10735">10735</span>
<span id="L10736" rel="#L10736">10736</span>
<span id="L10737" rel="#L10737">10737</span>
<span id="L10738" rel="#L10738">10738</span>
<span id="L10739" rel="#L10739">10739</span>
<span id="L10740" rel="#L10740">10740</span>
<span id="L10741" rel="#L10741">10741</span>
<span id="L10742" rel="#L10742">10742</span>
<span id="L10743" rel="#L10743">10743</span>
<span id="L10744" rel="#L10744">10744</span>
<span id="L10745" rel="#L10745">10745</span>
<span id="L10746" rel="#L10746">10746</span>
<span id="L10747" rel="#L10747">10747</span>
<span id="L10748" rel="#L10748">10748</span>
<span id="L10749" rel="#L10749">10749</span>
<span id="L10750" rel="#L10750">10750</span>
<span id="L10751" rel="#L10751">10751</span>
<span id="L10752" rel="#L10752">10752</span>
<span id="L10753" rel="#L10753">10753</span>
<span id="L10754" rel="#L10754">10754</span>
<span id="L10755" rel="#L10755">10755</span>
<span id="L10756" rel="#L10756">10756</span>
<span id="L10757" rel="#L10757">10757</span>
<span id="L10758" rel="#L10758">10758</span>
<span id="L10759" rel="#L10759">10759</span>
<span id="L10760" rel="#L10760">10760</span>
<span id="L10761" rel="#L10761">10761</span>
<span id="L10762" rel="#L10762">10762</span>
<span id="L10763" rel="#L10763">10763</span>
<span id="L10764" rel="#L10764">10764</span>
<span id="L10765" rel="#L10765">10765</span>
<span id="L10766" rel="#L10766">10766</span>
<span id="L10767" rel="#L10767">10767</span>
<span id="L10768" rel="#L10768">10768</span>
<span id="L10769" rel="#L10769">10769</span>
<span id="L10770" rel="#L10770">10770</span>
<span id="L10771" rel="#L10771">10771</span>
<span id="L10772" rel="#L10772">10772</span>
<span id="L10773" rel="#L10773">10773</span>
<span id="L10774" rel="#L10774">10774</span>
<span id="L10775" rel="#L10775">10775</span>
<span id="L10776" rel="#L10776">10776</span>
<span id="L10777" rel="#L10777">10777</span>
<span id="L10778" rel="#L10778">10778</span>
<span id="L10779" rel="#L10779">10779</span>
<span id="L10780" rel="#L10780">10780</span>
<span id="L10781" rel="#L10781">10781</span>
<span id="L10782" rel="#L10782">10782</span>
<span id="L10783" rel="#L10783">10783</span>
<span id="L10784" rel="#L10784">10784</span>
<span id="L10785" rel="#L10785">10785</span>
<span id="L10786" rel="#L10786">10786</span>
<span id="L10787" rel="#L10787">10787</span>
<span id="L10788" rel="#L10788">10788</span>
<span id="L10789" rel="#L10789">10789</span>
<span id="L10790" rel="#L10790">10790</span>
<span id="L10791" rel="#L10791">10791</span>
<span id="L10792" rel="#L10792">10792</span>
<span id="L10793" rel="#L10793">10793</span>
<span id="L10794" rel="#L10794">10794</span>
<span id="L10795" rel="#L10795">10795</span>
<span id="L10796" rel="#L10796">10796</span>
<span id="L10797" rel="#L10797">10797</span>
<span id="L10798" rel="#L10798">10798</span>
<span id="L10799" rel="#L10799">10799</span>
<span id="L10800" rel="#L10800">10800</span>
<span id="L10801" rel="#L10801">10801</span>
<span id="L10802" rel="#L10802">10802</span>
<span id="L10803" rel="#L10803">10803</span>
<span id="L10804" rel="#L10804">10804</span>
<span id="L10805" rel="#L10805">10805</span>
<span id="L10806" rel="#L10806">10806</span>
<span id="L10807" rel="#L10807">10807</span>
<span id="L10808" rel="#L10808">10808</span>
<span id="L10809" rel="#L10809">10809</span>
<span id="L10810" rel="#L10810">10810</span>
<span id="L10811" rel="#L10811">10811</span>
<span id="L10812" rel="#L10812">10812</span>
<span id="L10813" rel="#L10813">10813</span>
<span id="L10814" rel="#L10814">10814</span>
<span id="L10815" rel="#L10815">10815</span>
<span id="L10816" rel="#L10816">10816</span>
<span id="L10817" rel="#L10817">10817</span>
<span id="L10818" rel="#L10818">10818</span>
<span id="L10819" rel="#L10819">10819</span>
<span id="L10820" rel="#L10820">10820</span>
<span id="L10821" rel="#L10821">10821</span>
<span id="L10822" rel="#L10822">10822</span>
<span id="L10823" rel="#L10823">10823</span>
<span id="L10824" rel="#L10824">10824</span>
<span id="L10825" rel="#L10825">10825</span>
<span id="L10826" rel="#L10826">10826</span>
<span id="L10827" rel="#L10827">10827</span>
<span id="L10828" rel="#L10828">10828</span>
<span id="L10829" rel="#L10829">10829</span>
<span id="L10830" rel="#L10830">10830</span>
<span id="L10831" rel="#L10831">10831</span>
<span id="L10832" rel="#L10832">10832</span>
<span id="L10833" rel="#L10833">10833</span>
<span id="L10834" rel="#L10834">10834</span>
<span id="L10835" rel="#L10835">10835</span>
<span id="L10836" rel="#L10836">10836</span>
<span id="L10837" rel="#L10837">10837</span>
<span id="L10838" rel="#L10838">10838</span>
<span id="L10839" rel="#L10839">10839</span>
<span id="L10840" rel="#L10840">10840</span>
<span id="L10841" rel="#L10841">10841</span>
<span id="L10842" rel="#L10842">10842</span>
<span id="L10843" rel="#L10843">10843</span>
<span id="L10844" rel="#L10844">10844</span>
<span id="L10845" rel="#L10845">10845</span>
<span id="L10846" rel="#L10846">10846</span>
<span id="L10847" rel="#L10847">10847</span>
<span id="L10848" rel="#L10848">10848</span>
<span id="L10849" rel="#L10849">10849</span>
<span id="L10850" rel="#L10850">10850</span>
<span id="L10851" rel="#L10851">10851</span>
<span id="L10852" rel="#L10852">10852</span>
<span id="L10853" rel="#L10853">10853</span>
<span id="L10854" rel="#L10854">10854</span>
<span id="L10855" rel="#L10855">10855</span>
<span id="L10856" rel="#L10856">10856</span>
<span id="L10857" rel="#L10857">10857</span>
<span id="L10858" rel="#L10858">10858</span>
<span id="L10859" rel="#L10859">10859</span>
<span id="L10860" rel="#L10860">10860</span>
<span id="L10861" rel="#L10861">10861</span>
<span id="L10862" rel="#L10862">10862</span>
<span id="L10863" rel="#L10863">10863</span>
<span id="L10864" rel="#L10864">10864</span>
<span id="L10865" rel="#L10865">10865</span>
<span id="L10866" rel="#L10866">10866</span>
<span id="L10867" rel="#L10867">10867</span>
<span id="L10868" rel="#L10868">10868</span>
<span id="L10869" rel="#L10869">10869</span>
<span id="L10870" rel="#L10870">10870</span>
<span id="L10871" rel="#L10871">10871</span>
<span id="L10872" rel="#L10872">10872</span>
<span id="L10873" rel="#L10873">10873</span>
<span id="L10874" rel="#L10874">10874</span>
<span id="L10875" rel="#L10875">10875</span>
<span id="L10876" rel="#L10876">10876</span>
<span id="L10877" rel="#L10877">10877</span>
<span id="L10878" rel="#L10878">10878</span>
<span id="L10879" rel="#L10879">10879</span>
<span id="L10880" rel="#L10880">10880</span>
<span id="L10881" rel="#L10881">10881</span>
<span id="L10882" rel="#L10882">10882</span>
<span id="L10883" rel="#L10883">10883</span>
<span id="L10884" rel="#L10884">10884</span>
<span id="L10885" rel="#L10885">10885</span>
<span id="L10886" rel="#L10886">10886</span>
<span id="L10887" rel="#L10887">10887</span>
<span id="L10888" rel="#L10888">10888</span>
<span id="L10889" rel="#L10889">10889</span>
<span id="L10890" rel="#L10890">10890</span>
<span id="L10891" rel="#L10891">10891</span>
<span id="L10892" rel="#L10892">10892</span>
<span id="L10893" rel="#L10893">10893</span>
<span id="L10894" rel="#L10894">10894</span>
<span id="L10895" rel="#L10895">10895</span>
<span id="L10896" rel="#L10896">10896</span>
<span id="L10897" rel="#L10897">10897</span>
<span id="L10898" rel="#L10898">10898</span>
<span id="L10899" rel="#L10899">10899</span>
<span id="L10900" rel="#L10900">10900</span>
<span id="L10901" rel="#L10901">10901</span>
<span id="L10902" rel="#L10902">10902</span>
<span id="L10903" rel="#L10903">10903</span>
<span id="L10904" rel="#L10904">10904</span>
<span id="L10905" rel="#L10905">10905</span>
<span id="L10906" rel="#L10906">10906</span>
<span id="L10907" rel="#L10907">10907</span>
<span id="L10908" rel="#L10908">10908</span>
<span id="L10909" rel="#L10909">10909</span>
<span id="L10910" rel="#L10910">10910</span>
<span id="L10911" rel="#L10911">10911</span>
<span id="L10912" rel="#L10912">10912</span>
<span id="L10913" rel="#L10913">10913</span>
<span id="L10914" rel="#L10914">10914</span>
<span id="L10915" rel="#L10915">10915</span>
<span id="L10916" rel="#L10916">10916</span>
<span id="L10917" rel="#L10917">10917</span>
<span id="L10918" rel="#L10918">10918</span>
<span id="L10919" rel="#L10919">10919</span>
<span id="L10920" rel="#L10920">10920</span>
<span id="L10921" rel="#L10921">10921</span>
<span id="L10922" rel="#L10922">10922</span>
<span id="L10923" rel="#L10923">10923</span>
<span id="L10924" rel="#L10924">10924</span>
<span id="L10925" rel="#L10925">10925</span>
<span id="L10926" rel="#L10926">10926</span>
<span id="L10927" rel="#L10927">10927</span>
<span id="L10928" rel="#L10928">10928</span>
<span id="L10929" rel="#L10929">10929</span>
<span id="L10930" rel="#L10930">10930</span>
<span id="L10931" rel="#L10931">10931</span>
<span id="L10932" rel="#L10932">10932</span>
<span id="L10933" rel="#L10933">10933</span>
<span id="L10934" rel="#L10934">10934</span>
<span id="L10935" rel="#L10935">10935</span>
<span id="L10936" rel="#L10936">10936</span>
<span id="L10937" rel="#L10937">10937</span>
<span id="L10938" rel="#L10938">10938</span>
<span id="L10939" rel="#L10939">10939</span>
<span id="L10940" rel="#L10940">10940</span>
<span id="L10941" rel="#L10941">10941</span>
<span id="L10942" rel="#L10942">10942</span>
<span id="L10943" rel="#L10943">10943</span>
<span id="L10944" rel="#L10944">10944</span>
<span id="L10945" rel="#L10945">10945</span>
<span id="L10946" rel="#L10946">10946</span>
<span id="L10947" rel="#L10947">10947</span>
<span id="L10948" rel="#L10948">10948</span>
<span id="L10949" rel="#L10949">10949</span>
<span id="L10950" rel="#L10950">10950</span>
<span id="L10951" rel="#L10951">10951</span>
<span id="L10952" rel="#L10952">10952</span>
<span id="L10953" rel="#L10953">10953</span>
<span id="L10954" rel="#L10954">10954</span>
<span id="L10955" rel="#L10955">10955</span>
<span id="L10956" rel="#L10956">10956</span>
<span id="L10957" rel="#L10957">10957</span>
<span id="L10958" rel="#L10958">10958</span>
<span id="L10959" rel="#L10959">10959</span>
<span id="L10960" rel="#L10960">10960</span>
<span id="L10961" rel="#L10961">10961</span>
<span id="L10962" rel="#L10962">10962</span>
<span id="L10963" rel="#L10963">10963</span>
<span id="L10964" rel="#L10964">10964</span>
<span id="L10965" rel="#L10965">10965</span>
<span id="L10966" rel="#L10966">10966</span>
<span id="L10967" rel="#L10967">10967</span>
<span id="L10968" rel="#L10968">10968</span>
<span id="L10969" rel="#L10969">10969</span>
<span id="L10970" rel="#L10970">10970</span>
<span id="L10971" rel="#L10971">10971</span>
<span id="L10972" rel="#L10972">10972</span>
<span id="L10973" rel="#L10973">10973</span>
<span id="L10974" rel="#L10974">10974</span>
<span id="L10975" rel="#L10975">10975</span>
<span id="L10976" rel="#L10976">10976</span>
<span id="L10977" rel="#L10977">10977</span>
<span id="L10978" rel="#L10978">10978</span>
<span id="L10979" rel="#L10979">10979</span>
<span id="L10980" rel="#L10980">10980</span>
<span id="L10981" rel="#L10981">10981</span>
<span id="L10982" rel="#L10982">10982</span>
<span id="L10983" rel="#L10983">10983</span>
<span id="L10984" rel="#L10984">10984</span>
<span id="L10985" rel="#L10985">10985</span>
<span id="L10986" rel="#L10986">10986</span>
<span id="L10987" rel="#L10987">10987</span>
<span id="L10988" rel="#L10988">10988</span>
<span id="L10989" rel="#L10989">10989</span>
<span id="L10990" rel="#L10990">10990</span>
<span id="L10991" rel="#L10991">10991</span>
<span id="L10992" rel="#L10992">10992</span>
<span id="L10993" rel="#L10993">10993</span>
<span id="L10994" rel="#L10994">10994</span>
<span id="L10995" rel="#L10995">10995</span>
<span id="L10996" rel="#L10996">10996</span>
<span id="L10997" rel="#L10997">10997</span>
<span id="L10998" rel="#L10998">10998</span>
<span id="L10999" rel="#L10999">10999</span>
<span id="L11000" rel="#L11000">11000</span>
<span id="L11001" rel="#L11001">11001</span>
<span id="L11002" rel="#L11002">11002</span>
<span id="L11003" rel="#L11003">11003</span>
<span id="L11004" rel="#L11004">11004</span>
<span id="L11005" rel="#L11005">11005</span>
<span id="L11006" rel="#L11006">11006</span>
<span id="L11007" rel="#L11007">11007</span>
<span id="L11008" rel="#L11008">11008</span>
<span id="L11009" rel="#L11009">11009</span>
<span id="L11010" rel="#L11010">11010</span>
<span id="L11011" rel="#L11011">11011</span>
<span id="L11012" rel="#L11012">11012</span>
<span id="L11013" rel="#L11013">11013</span>
<span id="L11014" rel="#L11014">11014</span>
<span id="L11015" rel="#L11015">11015</span>
<span id="L11016" rel="#L11016">11016</span>
<span id="L11017" rel="#L11017">11017</span>
<span id="L11018" rel="#L11018">11018</span>
<span id="L11019" rel="#L11019">11019</span>
<span id="L11020" rel="#L11020">11020</span>
<span id="L11021" rel="#L11021">11021</span>
<span id="L11022" rel="#L11022">11022</span>
<span id="L11023" rel="#L11023">11023</span>
<span id="L11024" rel="#L11024">11024</span>
<span id="L11025" rel="#L11025">11025</span>
<span id="L11026" rel="#L11026">11026</span>
<span id="L11027" rel="#L11027">11027</span>
<span id="L11028" rel="#L11028">11028</span>
<span id="L11029" rel="#L11029">11029</span>
<span id="L11030" rel="#L11030">11030</span>
<span id="L11031" rel="#L11031">11031</span>
<span id="L11032" rel="#L11032">11032</span>
<span id="L11033" rel="#L11033">11033</span>
<span id="L11034" rel="#L11034">11034</span>
<span id="L11035" rel="#L11035">11035</span>
<span id="L11036" rel="#L11036">11036</span>
<span id="L11037" rel="#L11037">11037</span>
<span id="L11038" rel="#L11038">11038</span>
<span id="L11039" rel="#L11039">11039</span>
<span id="L11040" rel="#L11040">11040</span>
<span id="L11041" rel="#L11041">11041</span>
<span id="L11042" rel="#L11042">11042</span>
<span id="L11043" rel="#L11043">11043</span>
<span id="L11044" rel="#L11044">11044</span>
<span id="L11045" rel="#L11045">11045</span>
<span id="L11046" rel="#L11046">11046</span>
<span id="L11047" rel="#L11047">11047</span>
<span id="L11048" rel="#L11048">11048</span>
<span id="L11049" rel="#L11049">11049</span>
<span id="L11050" rel="#L11050">11050</span>
<span id="L11051" rel="#L11051">11051</span>
<span id="L11052" rel="#L11052">11052</span>
<span id="L11053" rel="#L11053">11053</span>
<span id="L11054" rel="#L11054">11054</span>
<span id="L11055" rel="#L11055">11055</span>
<span id="L11056" rel="#L11056">11056</span>
<span id="L11057" rel="#L11057">11057</span>
<span id="L11058" rel="#L11058">11058</span>
<span id="L11059" rel="#L11059">11059</span>
<span id="L11060" rel="#L11060">11060</span>
<span id="L11061" rel="#L11061">11061</span>
<span id="L11062" rel="#L11062">11062</span>
<span id="L11063" rel="#L11063">11063</span>
<span id="L11064" rel="#L11064">11064</span>
<span id="L11065" rel="#L11065">11065</span>
<span id="L11066" rel="#L11066">11066</span>
<span id="L11067" rel="#L11067">11067</span>
<span id="L11068" rel="#L11068">11068</span>
<span id="L11069" rel="#L11069">11069</span>
<span id="L11070" rel="#L11070">11070</span>
<span id="L11071" rel="#L11071">11071</span>
<span id="L11072" rel="#L11072">11072</span>
<span id="L11073" rel="#L11073">11073</span>
<span id="L11074" rel="#L11074">11074</span>
<span id="L11075" rel="#L11075">11075</span>
<span id="L11076" rel="#L11076">11076</span>
<span id="L11077" rel="#L11077">11077</span>
<span id="L11078" rel="#L11078">11078</span>
<span id="L11079" rel="#L11079">11079</span>
<span id="L11080" rel="#L11080">11080</span>
<span id="L11081" rel="#L11081">11081</span>
<span id="L11082" rel="#L11082">11082</span>
<span id="L11083" rel="#L11083">11083</span>
<span id="L11084" rel="#L11084">11084</span>
<span id="L11085" rel="#L11085">11085</span>
<span id="L11086" rel="#L11086">11086</span>
<span id="L11087" rel="#L11087">11087</span>
<span id="L11088" rel="#L11088">11088</span>
<span id="L11089" rel="#L11089">11089</span>
<span id="L11090" rel="#L11090">11090</span>
<span id="L11091" rel="#L11091">11091</span>
<span id="L11092" rel="#L11092">11092</span>
<span id="L11093" rel="#L11093">11093</span>
<span id="L11094" rel="#L11094">11094</span>
<span id="L11095" rel="#L11095">11095</span>
<span id="L11096" rel="#L11096">11096</span>
<span id="L11097" rel="#L11097">11097</span>
<span id="L11098" rel="#L11098">11098</span>
<span id="L11099" rel="#L11099">11099</span>
<span id="L11100" rel="#L11100">11100</span>
<span id="L11101" rel="#L11101">11101</span>
<span id="L11102" rel="#L11102">11102</span>
<span id="L11103" rel="#L11103">11103</span>
<span id="L11104" rel="#L11104">11104</span>
<span id="L11105" rel="#L11105">11105</span>
<span id="L11106" rel="#L11106">11106</span>
<span id="L11107" rel="#L11107">11107</span>
<span id="L11108" rel="#L11108">11108</span>
<span id="L11109" rel="#L11109">11109</span>
<span id="L11110" rel="#L11110">11110</span>
<span id="L11111" rel="#L11111">11111</span>
<span id="L11112" rel="#L11112">11112</span>
<span id="L11113" rel="#L11113">11113</span>
<span id="L11114" rel="#L11114">11114</span>
<span id="L11115" rel="#L11115">11115</span>
<span id="L11116" rel="#L11116">11116</span>
<span id="L11117" rel="#L11117">11117</span>
<span id="L11118" rel="#L11118">11118</span>
<span id="L11119" rel="#L11119">11119</span>
<span id="L11120" rel="#L11120">11120</span>
<span id="L11121" rel="#L11121">11121</span>
<span id="L11122" rel="#L11122">11122</span>
<span id="L11123" rel="#L11123">11123</span>
<span id="L11124" rel="#L11124">11124</span>
<span id="L11125" rel="#L11125">11125</span>
<span id="L11126" rel="#L11126">11126</span>
<span id="L11127" rel="#L11127">11127</span>
<span id="L11128" rel="#L11128">11128</span>
<span id="L11129" rel="#L11129">11129</span>
<span id="L11130" rel="#L11130">11130</span>
<span id="L11131" rel="#L11131">11131</span>
<span id="L11132" rel="#L11132">11132</span>
<span id="L11133" rel="#L11133">11133</span>
<span id="L11134" rel="#L11134">11134</span>
<span id="L11135" rel="#L11135">11135</span>
<span id="L11136" rel="#L11136">11136</span>
<span id="L11137" rel="#L11137">11137</span>
<span id="L11138" rel="#L11138">11138</span>
<span id="L11139" rel="#L11139">11139</span>
<span id="L11140" rel="#L11140">11140</span>
<span id="L11141" rel="#L11141">11141</span>
<span id="L11142" rel="#L11142">11142</span>
<span id="L11143" rel="#L11143">11143</span>
<span id="L11144" rel="#L11144">11144</span>
<span id="L11145" rel="#L11145">11145</span>
<span id="L11146" rel="#L11146">11146</span>
<span id="L11147" rel="#L11147">11147</span>
<span id="L11148" rel="#L11148">11148</span>
<span id="L11149" rel="#L11149">11149</span>
<span id="L11150" rel="#L11150">11150</span>
<span id="L11151" rel="#L11151">11151</span>
<span id="L11152" rel="#L11152">11152</span>
<span id="L11153" rel="#L11153">11153</span>
<span id="L11154" rel="#L11154">11154</span>
<span id="L11155" rel="#L11155">11155</span>
<span id="L11156" rel="#L11156">11156</span>
<span id="L11157" rel="#L11157">11157</span>
<span id="L11158" rel="#L11158">11158</span>
<span id="L11159" rel="#L11159">11159</span>
<span id="L11160" rel="#L11160">11160</span>
<span id="L11161" rel="#L11161">11161</span>
<span id="L11162" rel="#L11162">11162</span>
<span id="L11163" rel="#L11163">11163</span>
<span id="L11164" rel="#L11164">11164</span>
<span id="L11165" rel="#L11165">11165</span>
<span id="L11166" rel="#L11166">11166</span>
<span id="L11167" rel="#L11167">11167</span>
<span id="L11168" rel="#L11168">11168</span>
<span id="L11169" rel="#L11169">11169</span>
<span id="L11170" rel="#L11170">11170</span>
<span id="L11171" rel="#L11171">11171</span>
<span id="L11172" rel="#L11172">11172</span>
<span id="L11173" rel="#L11173">11173</span>
<span id="L11174" rel="#L11174">11174</span>
<span id="L11175" rel="#L11175">11175</span>
<span id="L11176" rel="#L11176">11176</span>
<span id="L11177" rel="#L11177">11177</span>
<span id="L11178" rel="#L11178">11178</span>
<span id="L11179" rel="#L11179">11179</span>
<span id="L11180" rel="#L11180">11180</span>
<span id="L11181" rel="#L11181">11181</span>
<span id="L11182" rel="#L11182">11182</span>
<span id="L11183" rel="#L11183">11183</span>
<span id="L11184" rel="#L11184">11184</span>
<span id="L11185" rel="#L11185">11185</span>
<span id="L11186" rel="#L11186">11186</span>
<span id="L11187" rel="#L11187">11187</span>
<span id="L11188" rel="#L11188">11188</span>
<span id="L11189" rel="#L11189">11189</span>
<span id="L11190" rel="#L11190">11190</span>
<span id="L11191" rel="#L11191">11191</span>
<span id="L11192" rel="#L11192">11192</span>
<span id="L11193" rel="#L11193">11193</span>
<span id="L11194" rel="#L11194">11194</span>
<span id="L11195" rel="#L11195">11195</span>
<span id="L11196" rel="#L11196">11196</span>
<span id="L11197" rel="#L11197">11197</span>
<span id="L11198" rel="#L11198">11198</span>
<span id="L11199" rel="#L11199">11199</span>
<span id="L11200" rel="#L11200">11200</span>
<span id="L11201" rel="#L11201">11201</span>
<span id="L11202" rel="#L11202">11202</span>
<span id="L11203" rel="#L11203">11203</span>
<span id="L11204" rel="#L11204">11204</span>
<span id="L11205" rel="#L11205">11205</span>
<span id="L11206" rel="#L11206">11206</span>
<span id="L11207" rel="#L11207">11207</span>
<span id="L11208" rel="#L11208">11208</span>
<span id="L11209" rel="#L11209">11209</span>
<span id="L11210" rel="#L11210">11210</span>
<span id="L11211" rel="#L11211">11211</span>
<span id="L11212" rel="#L11212">11212</span>
<span id="L11213" rel="#L11213">11213</span>
<span id="L11214" rel="#L11214">11214</span>
<span id="L11215" rel="#L11215">11215</span>
<span id="L11216" rel="#L11216">11216</span>
<span id="L11217" rel="#L11217">11217</span>
<span id="L11218" rel="#L11218">11218</span>
<span id="L11219" rel="#L11219">11219</span>
<span id="L11220" rel="#L11220">11220</span>
<span id="L11221" rel="#L11221">11221</span>
<span id="L11222" rel="#L11222">11222</span>
<span id="L11223" rel="#L11223">11223</span>
<span id="L11224" rel="#L11224">11224</span>
<span id="L11225" rel="#L11225">11225</span>
<span id="L11226" rel="#L11226">11226</span>
<span id="L11227" rel="#L11227">11227</span>
<span id="L11228" rel="#L11228">11228</span>
<span id="L11229" rel="#L11229">11229</span>
<span id="L11230" rel="#L11230">11230</span>
<span id="L11231" rel="#L11231">11231</span>
<span id="L11232" rel="#L11232">11232</span>
<span id="L11233" rel="#L11233">11233</span>
<span id="L11234" rel="#L11234">11234</span>
<span id="L11235" rel="#L11235">11235</span>
<span id="L11236" rel="#L11236">11236</span>
<span id="L11237" rel="#L11237">11237</span>
<span id="L11238" rel="#L11238">11238</span>
<span id="L11239" rel="#L11239">11239</span>
<span id="L11240" rel="#L11240">11240</span>
<span id="L11241" rel="#L11241">11241</span>
<span id="L11242" rel="#L11242">11242</span>
<span id="L11243" rel="#L11243">11243</span>
<span id="L11244" rel="#L11244">11244</span>
<span id="L11245" rel="#L11245">11245</span>
<span id="L11246" rel="#L11246">11246</span>
<span id="L11247" rel="#L11247">11247</span>
<span id="L11248" rel="#L11248">11248</span>
<span id="L11249" rel="#L11249">11249</span>
<span id="L11250" rel="#L11250">11250</span>
<span id="L11251" rel="#L11251">11251</span>
<span id="L11252" rel="#L11252">11252</span>
<span id="L11253" rel="#L11253">11253</span>
<span id="L11254" rel="#L11254">11254</span>
<span id="L11255" rel="#L11255">11255</span>
<span id="L11256" rel="#L11256">11256</span>
<span id="L11257" rel="#L11257">11257</span>
<span id="L11258" rel="#L11258">11258</span>
<span id="L11259" rel="#L11259">11259</span>
<span id="L11260" rel="#L11260">11260</span>
<span id="L11261" rel="#L11261">11261</span>
<span id="L11262" rel="#L11262">11262</span>
<span id="L11263" rel="#L11263">11263</span>
<span id="L11264" rel="#L11264">11264</span>
<span id="L11265" rel="#L11265">11265</span>
<span id="L11266" rel="#L11266">11266</span>
<span id="L11267" rel="#L11267">11267</span>
<span id="L11268" rel="#L11268">11268</span>
<span id="L11269" rel="#L11269">11269</span>
<span id="L11270" rel="#L11270">11270</span>
<span id="L11271" rel="#L11271">11271</span>
<span id="L11272" rel="#L11272">11272</span>
<span id="L11273" rel="#L11273">11273</span>
<span id="L11274" rel="#L11274">11274</span>
<span id="L11275" rel="#L11275">11275</span>
<span id="L11276" rel="#L11276">11276</span>
<span id="L11277" rel="#L11277">11277</span>
<span id="L11278" rel="#L11278">11278</span>
<span id="L11279" rel="#L11279">11279</span>
<span id="L11280" rel="#L11280">11280</span>
<span id="L11281" rel="#L11281">11281</span>
<span id="L11282" rel="#L11282">11282</span>
<span id="L11283" rel="#L11283">11283</span>
<span id="L11284" rel="#L11284">11284</span>
<span id="L11285" rel="#L11285">11285</span>
<span id="L11286" rel="#L11286">11286</span>
<span id="L11287" rel="#L11287">11287</span>
<span id="L11288" rel="#L11288">11288</span>
<span id="L11289" rel="#L11289">11289</span>
<span id="L11290" rel="#L11290">11290</span>
<span id="L11291" rel="#L11291">11291</span>
<span id="L11292" rel="#L11292">11292</span>
<span id="L11293" rel="#L11293">11293</span>
<span id="L11294" rel="#L11294">11294</span>
<span id="L11295" rel="#L11295">11295</span>
<span id="L11296" rel="#L11296">11296</span>
<span id="L11297" rel="#L11297">11297</span>
<span id="L11298" rel="#L11298">11298</span>
<span id="L11299" rel="#L11299">11299</span>
<span id="L11300" rel="#L11300">11300</span>
<span id="L11301" rel="#L11301">11301</span>
<span id="L11302" rel="#L11302">11302</span>
<span id="L11303" rel="#L11303">11303</span>
<span id="L11304" rel="#L11304">11304</span>
<span id="L11305" rel="#L11305">11305</span>
<span id="L11306" rel="#L11306">11306</span>
<span id="L11307" rel="#L11307">11307</span>
<span id="L11308" rel="#L11308">11308</span>
<span id="L11309" rel="#L11309">11309</span>
<span id="L11310" rel="#L11310">11310</span>
<span id="L11311" rel="#L11311">11311</span>
<span id="L11312" rel="#L11312">11312</span>
<span id="L11313" rel="#L11313">11313</span>
<span id="L11314" rel="#L11314">11314</span>
<span id="L11315" rel="#L11315">11315</span>
<span id="L11316" rel="#L11316">11316</span>
<span id="L11317" rel="#L11317">11317</span>
<span id="L11318" rel="#L11318">11318</span>
<span id="L11319" rel="#L11319">11319</span>
<span id="L11320" rel="#L11320">11320</span>
<span id="L11321" rel="#L11321">11321</span>
<span id="L11322" rel="#L11322">11322</span>
<span id="L11323" rel="#L11323">11323</span>
<span id="L11324" rel="#L11324">11324</span>
<span id="L11325" rel="#L11325">11325</span>
<span id="L11326" rel="#L11326">11326</span>
<span id="L11327" rel="#L11327">11327</span>
<span id="L11328" rel="#L11328">11328</span>
<span id="L11329" rel="#L11329">11329</span>
<span id="L11330" rel="#L11330">11330</span>
<span id="L11331" rel="#L11331">11331</span>
<span id="L11332" rel="#L11332">11332</span>
<span id="L11333" rel="#L11333">11333</span>
<span id="L11334" rel="#L11334">11334</span>
<span id="L11335" rel="#L11335">11335</span>
<span id="L11336" rel="#L11336">11336</span>
<span id="L11337" rel="#L11337">11337</span>
<span id="L11338" rel="#L11338">11338</span>
<span id="L11339" rel="#L11339">11339</span>
<span id="L11340" rel="#L11340">11340</span>
<span id="L11341" rel="#L11341">11341</span>
<span id="L11342" rel="#L11342">11342</span>
<span id="L11343" rel="#L11343">11343</span>
<span id="L11344" rel="#L11344">11344</span>
<span id="L11345" rel="#L11345">11345</span>
<span id="L11346" rel="#L11346">11346</span>
<span id="L11347" rel="#L11347">11347</span>
<span id="L11348" rel="#L11348">11348</span>
<span id="L11349" rel="#L11349">11349</span>
<span id="L11350" rel="#L11350">11350</span>
<span id="L11351" rel="#L11351">11351</span>
<span id="L11352" rel="#L11352">11352</span>
<span id="L11353" rel="#L11353">11353</span>
<span id="L11354" rel="#L11354">11354</span>
<span id="L11355" rel="#L11355">11355</span>
<span id="L11356" rel="#L11356">11356</span>
<span id="L11357" rel="#L11357">11357</span>
<span id="L11358" rel="#L11358">11358</span>
<span id="L11359" rel="#L11359">11359</span>
<span id="L11360" rel="#L11360">11360</span>
<span id="L11361" rel="#L11361">11361</span>
<span id="L11362" rel="#L11362">11362</span>
<span id="L11363" rel="#L11363">11363</span>
<span id="L11364" rel="#L11364">11364</span>
<span id="L11365" rel="#L11365">11365</span>
<span id="L11366" rel="#L11366">11366</span>
<span id="L11367" rel="#L11367">11367</span>
<span id="L11368" rel="#L11368">11368</span>
<span id="L11369" rel="#L11369">11369</span>
<span id="L11370" rel="#L11370">11370</span>
<span id="L11371" rel="#L11371">11371</span>
<span id="L11372" rel="#L11372">11372</span>
<span id="L11373" rel="#L11373">11373</span>
<span id="L11374" rel="#L11374">11374</span>
<span id="L11375" rel="#L11375">11375</span>
<span id="L11376" rel="#L11376">11376</span>
<span id="L11377" rel="#L11377">11377</span>
<span id="L11378" rel="#L11378">11378</span>
<span id="L11379" rel="#L11379">11379</span>
<span id="L11380" rel="#L11380">11380</span>
<span id="L11381" rel="#L11381">11381</span>
<span id="L11382" rel="#L11382">11382</span>
<span id="L11383" rel="#L11383">11383</span>
<span id="L11384" rel="#L11384">11384</span>
<span id="L11385" rel="#L11385">11385</span>
<span id="L11386" rel="#L11386">11386</span>
<span id="L11387" rel="#L11387">11387</span>
<span id="L11388" rel="#L11388">11388</span>
<span id="L11389" rel="#L11389">11389</span>
<span id="L11390" rel="#L11390">11390</span>
<span id="L11391" rel="#L11391">11391</span>
<span id="L11392" rel="#L11392">11392</span>
<span id="L11393" rel="#L11393">11393</span>
<span id="L11394" rel="#L11394">11394</span>
<span id="L11395" rel="#L11395">11395</span>
<span id="L11396" rel="#L11396">11396</span>
<span id="L11397" rel="#L11397">11397</span>
<span id="L11398" rel="#L11398">11398</span>
<span id="L11399" rel="#L11399">11399</span>
<span id="L11400" rel="#L11400">11400</span>
<span id="L11401" rel="#L11401">11401</span>
<span id="L11402" rel="#L11402">11402</span>
<span id="L11403" rel="#L11403">11403</span>
<span id="L11404" rel="#L11404">11404</span>
<span id="L11405" rel="#L11405">11405</span>
<span id="L11406" rel="#L11406">11406</span>
<span id="L11407" rel="#L11407">11407</span>
<span id="L11408" rel="#L11408">11408</span>
<span id="L11409" rel="#L11409">11409</span>
<span id="L11410" rel="#L11410">11410</span>
<span id="L11411" rel="#L11411">11411</span>
<span id="L11412" rel="#L11412">11412</span>
<span id="L11413" rel="#L11413">11413</span>
<span id="L11414" rel="#L11414">11414</span>
<span id="L11415" rel="#L11415">11415</span>
<span id="L11416" rel="#L11416">11416</span>
<span id="L11417" rel="#L11417">11417</span>
<span id="L11418" rel="#L11418">11418</span>
<span id="L11419" rel="#L11419">11419</span>
<span id="L11420" rel="#L11420">11420</span>
<span id="L11421" rel="#L11421">11421</span>
<span id="L11422" rel="#L11422">11422</span>
<span id="L11423" rel="#L11423">11423</span>
<span id="L11424" rel="#L11424">11424</span>
<span id="L11425" rel="#L11425">11425</span>
<span id="L11426" rel="#L11426">11426</span>
<span id="L11427" rel="#L11427">11427</span>
<span id="L11428" rel="#L11428">11428</span>
<span id="L11429" rel="#L11429">11429</span>
<span id="L11430" rel="#L11430">11430</span>
<span id="L11431" rel="#L11431">11431</span>
<span id="L11432" rel="#L11432">11432</span>
<span id="L11433" rel="#L11433">11433</span>
<span id="L11434" rel="#L11434">11434</span>
<span id="L11435" rel="#L11435">11435</span>
<span id="L11436" rel="#L11436">11436</span>
<span id="L11437" rel="#L11437">11437</span>
<span id="L11438" rel="#L11438">11438</span>
<span id="L11439" rel="#L11439">11439</span>
<span id="L11440" rel="#L11440">11440</span>
<span id="L11441" rel="#L11441">11441</span>
<span id="L11442" rel="#L11442">11442</span>
<span id="L11443" rel="#L11443">11443</span>
<span id="L11444" rel="#L11444">11444</span>
<span id="L11445" rel="#L11445">11445</span>
<span id="L11446" rel="#L11446">11446</span>
<span id="L11447" rel="#L11447">11447</span>
<span id="L11448" rel="#L11448">11448</span>
<span id="L11449" rel="#L11449">11449</span>
<span id="L11450" rel="#L11450">11450</span>
<span id="L11451" rel="#L11451">11451</span>
<span id="L11452" rel="#L11452">11452</span>
<span id="L11453" rel="#L11453">11453</span>
<span id="L11454" rel="#L11454">11454</span>
<span id="L11455" rel="#L11455">11455</span>
<span id="L11456" rel="#L11456">11456</span>
<span id="L11457" rel="#L11457">11457</span>
<span id="L11458" rel="#L11458">11458</span>
<span id="L11459" rel="#L11459">11459</span>
<span id="L11460" rel="#L11460">11460</span>
<span id="L11461" rel="#L11461">11461</span>
<span id="L11462" rel="#L11462">11462</span>
<span id="L11463" rel="#L11463">11463</span>
<span id="L11464" rel="#L11464">11464</span>
<span id="L11465" rel="#L11465">11465</span>
<span id="L11466" rel="#L11466">11466</span>
<span id="L11467" rel="#L11467">11467</span>
<span id="L11468" rel="#L11468">11468</span>
<span id="L11469" rel="#L11469">11469</span>
<span id="L11470" rel="#L11470">11470</span>
<span id="L11471" rel="#L11471">11471</span>
<span id="L11472" rel="#L11472">11472</span>
<span id="L11473" rel="#L11473">11473</span>
<span id="L11474" rel="#L11474">11474</span>
<span id="L11475" rel="#L11475">11475</span>
<span id="L11476" rel="#L11476">11476</span>
<span id="L11477" rel="#L11477">11477</span>
<span id="L11478" rel="#L11478">11478</span>
<span id="L11479" rel="#L11479">11479</span>
<span id="L11480" rel="#L11480">11480</span>
<span id="L11481" rel="#L11481">11481</span>
<span id="L11482" rel="#L11482">11482</span>
<span id="L11483" rel="#L11483">11483</span>
<span id="L11484" rel="#L11484">11484</span>
<span id="L11485" rel="#L11485">11485</span>
<span id="L11486" rel="#L11486">11486</span>
<span id="L11487" rel="#L11487">11487</span>
<span id="L11488" rel="#L11488">11488</span>
<span id="L11489" rel="#L11489">11489</span>
<span id="L11490" rel="#L11490">11490</span>
<span id="L11491" rel="#L11491">11491</span>
<span id="L11492" rel="#L11492">11492</span>
<span id="L11493" rel="#L11493">11493</span>
<span id="L11494" rel="#L11494">11494</span>
<span id="L11495" rel="#L11495">11495</span>
<span id="L11496" rel="#L11496">11496</span>
<span id="L11497" rel="#L11497">11497</span>
<span id="L11498" rel="#L11498">11498</span>
<span id="L11499" rel="#L11499">11499</span>
<span id="L11500" rel="#L11500">11500</span>
<span id="L11501" rel="#L11501">11501</span>
<span id="L11502" rel="#L11502">11502</span>
<span id="L11503" rel="#L11503">11503</span>
<span id="L11504" rel="#L11504">11504</span>
<span id="L11505" rel="#L11505">11505</span>
<span id="L11506" rel="#L11506">11506</span>
<span id="L11507" rel="#L11507">11507</span>
<span id="L11508" rel="#L11508">11508</span>
<span id="L11509" rel="#L11509">11509</span>
<span id="L11510" rel="#L11510">11510</span>
<span id="L11511" rel="#L11511">11511</span>
<span id="L11512" rel="#L11512">11512</span>
<span id="L11513" rel="#L11513">11513</span>
<span id="L11514" rel="#L11514">11514</span>
<span id="L11515" rel="#L11515">11515</span>
<span id="L11516" rel="#L11516">11516</span>
<span id="L11517" rel="#L11517">11517</span>
<span id="L11518" rel="#L11518">11518</span>
<span id="L11519" rel="#L11519">11519</span>
<span id="L11520" rel="#L11520">11520</span>
<span id="L11521" rel="#L11521">11521</span>
<span id="L11522" rel="#L11522">11522</span>
<span id="L11523" rel="#L11523">11523</span>
<span id="L11524" rel="#L11524">11524</span>
<span id="L11525" rel="#L11525">11525</span>
<span id="L11526" rel="#L11526">11526</span>
<span id="L11527" rel="#L11527">11527</span>
<span id="L11528" rel="#L11528">11528</span>
<span id="L11529" rel="#L11529">11529</span>
<span id="L11530" rel="#L11530">11530</span>
<span id="L11531" rel="#L11531">11531</span>
<span id="L11532" rel="#L11532">11532</span>
<span id="L11533" rel="#L11533">11533</span>
<span id="L11534" rel="#L11534">11534</span>
<span id="L11535" rel="#L11535">11535</span>
<span id="L11536" rel="#L11536">11536</span>
<span id="L11537" rel="#L11537">11537</span>
<span id="L11538" rel="#L11538">11538</span>
<span id="L11539" rel="#L11539">11539</span>
<span id="L11540" rel="#L11540">11540</span>
<span id="L11541" rel="#L11541">11541</span>
<span id="L11542" rel="#L11542">11542</span>
<span id="L11543" rel="#L11543">11543</span>
<span id="L11544" rel="#L11544">11544</span>
<span id="L11545" rel="#L11545">11545</span>
<span id="L11546" rel="#L11546">11546</span>
<span id="L11547" rel="#L11547">11547</span>
<span id="L11548" rel="#L11548">11548</span>
<span id="L11549" rel="#L11549">11549</span>
<span id="L11550" rel="#L11550">11550</span>
<span id="L11551" rel="#L11551">11551</span>
<span id="L11552" rel="#L11552">11552</span>
<span id="L11553" rel="#L11553">11553</span>
<span id="L11554" rel="#L11554">11554</span>
<span id="L11555" rel="#L11555">11555</span>
<span id="L11556" rel="#L11556">11556</span>
<span id="L11557" rel="#L11557">11557</span>
<span id="L11558" rel="#L11558">11558</span>
<span id="L11559" rel="#L11559">11559</span>
<span id="L11560" rel="#L11560">11560</span>
<span id="L11561" rel="#L11561">11561</span>
<span id="L11562" rel="#L11562">11562</span>
<span id="L11563" rel="#L11563">11563</span>
<span id="L11564" rel="#L11564">11564</span>
<span id="L11565" rel="#L11565">11565</span>
<span id="L11566" rel="#L11566">11566</span>
<span id="L11567" rel="#L11567">11567</span>
<span id="L11568" rel="#L11568">11568</span>
<span id="L11569" rel="#L11569">11569</span>
<span id="L11570" rel="#L11570">11570</span>
<span id="L11571" rel="#L11571">11571</span>
<span id="L11572" rel="#L11572">11572</span>
<span id="L11573" rel="#L11573">11573</span>
<span id="L11574" rel="#L11574">11574</span>
<span id="L11575" rel="#L11575">11575</span>
<span id="L11576" rel="#L11576">11576</span>
<span id="L11577" rel="#L11577">11577</span>
<span id="L11578" rel="#L11578">11578</span>
<span id="L11579" rel="#L11579">11579</span>
<span id="L11580" rel="#L11580">11580</span>
<span id="L11581" rel="#L11581">11581</span>
<span id="L11582" rel="#L11582">11582</span>
<span id="L11583" rel="#L11583">11583</span>
<span id="L11584" rel="#L11584">11584</span>
<span id="L11585" rel="#L11585">11585</span>
<span id="L11586" rel="#L11586">11586</span>
<span id="L11587" rel="#L11587">11587</span>
<span id="L11588" rel="#L11588">11588</span>
<span id="L11589" rel="#L11589">11589</span>
<span id="L11590" rel="#L11590">11590</span>
<span id="L11591" rel="#L11591">11591</span>
<span id="L11592" rel="#L11592">11592</span>
<span id="L11593" rel="#L11593">11593</span>
<span id="L11594" rel="#L11594">11594</span>
<span id="L11595" rel="#L11595">11595</span>
<span id="L11596" rel="#L11596">11596</span>
<span id="L11597" rel="#L11597">11597</span>
<span id="L11598" rel="#L11598">11598</span>
<span id="L11599" rel="#L11599">11599</span>
<span id="L11600" rel="#L11600">11600</span>
<span id="L11601" rel="#L11601">11601</span>
<span id="L11602" rel="#L11602">11602</span>
<span id="L11603" rel="#L11603">11603</span>
<span id="L11604" rel="#L11604">11604</span>
<span id="L11605" rel="#L11605">11605</span>
<span id="L11606" rel="#L11606">11606</span>
<span id="L11607" rel="#L11607">11607</span>
<span id="L11608" rel="#L11608">11608</span>
<span id="L11609" rel="#L11609">11609</span>
<span id="L11610" rel="#L11610">11610</span>
<span id="L11611" rel="#L11611">11611</span>
<span id="L11612" rel="#L11612">11612</span>
<span id="L11613" rel="#L11613">11613</span>
<span id="L11614" rel="#L11614">11614</span>
<span id="L11615" rel="#L11615">11615</span>
<span id="L11616" rel="#L11616">11616</span>
<span id="L11617" rel="#L11617">11617</span>
<span id="L11618" rel="#L11618">11618</span>
<span id="L11619" rel="#L11619">11619</span>
<span id="L11620" rel="#L11620">11620</span>
<span id="L11621" rel="#L11621">11621</span>
<span id="L11622" rel="#L11622">11622</span>
<span id="L11623" rel="#L11623">11623</span>
<span id="L11624" rel="#L11624">11624</span>
<span id="L11625" rel="#L11625">11625</span>
<span id="L11626" rel="#L11626">11626</span>
<span id="L11627" rel="#L11627">11627</span>
<span id="L11628" rel="#L11628">11628</span>
<span id="L11629" rel="#L11629">11629</span>
<span id="L11630" rel="#L11630">11630</span>
<span id="L11631" rel="#L11631">11631</span>
<span id="L11632" rel="#L11632">11632</span>
<span id="L11633" rel="#L11633">11633</span>
<span id="L11634" rel="#L11634">11634</span>
<span id="L11635" rel="#L11635">11635</span>
<span id="L11636" rel="#L11636">11636</span>
<span id="L11637" rel="#L11637">11637</span>
<span id="L11638" rel="#L11638">11638</span>
<span id="L11639" rel="#L11639">11639</span>
<span id="L11640" rel="#L11640">11640</span>
<span id="L11641" rel="#L11641">11641</span>
<span id="L11642" rel="#L11642">11642</span>
<span id="L11643" rel="#L11643">11643</span>
<span id="L11644" rel="#L11644">11644</span>
<span id="L11645" rel="#L11645">11645</span>
<span id="L11646" rel="#L11646">11646</span>
<span id="L11647" rel="#L11647">11647</span>
<span id="L11648" rel="#L11648">11648</span>
<span id="L11649" rel="#L11649">11649</span>
<span id="L11650" rel="#L11650">11650</span>
<span id="L11651" rel="#L11651">11651</span>
<span id="L11652" rel="#L11652">11652</span>
<span id="L11653" rel="#L11653">11653</span>
<span id="L11654" rel="#L11654">11654</span>
<span id="L11655" rel="#L11655">11655</span>
<span id="L11656" rel="#L11656">11656</span>
<span id="L11657" rel="#L11657">11657</span>
<span id="L11658" rel="#L11658">11658</span>
<span id="L11659" rel="#L11659">11659</span>
<span id="L11660" rel="#L11660">11660</span>
<span id="L11661" rel="#L11661">11661</span>
<span id="L11662" rel="#L11662">11662</span>
<span id="L11663" rel="#L11663">11663</span>
<span id="L11664" rel="#L11664">11664</span>
<span id="L11665" rel="#L11665">11665</span>
<span id="L11666" rel="#L11666">11666</span>
<span id="L11667" rel="#L11667">11667</span>
<span id="L11668" rel="#L11668">11668</span>
<span id="L11669" rel="#L11669">11669</span>
<span id="L11670" rel="#L11670">11670</span>
<span id="L11671" rel="#L11671">11671</span>
<span id="L11672" rel="#L11672">11672</span>
<span id="L11673" rel="#L11673">11673</span>
<span id="L11674" rel="#L11674">11674</span>
<span id="L11675" rel="#L11675">11675</span>
<span id="L11676" rel="#L11676">11676</span>
<span id="L11677" rel="#L11677">11677</span>
<span id="L11678" rel="#L11678">11678</span>
<span id="L11679" rel="#L11679">11679</span>
<span id="L11680" rel="#L11680">11680</span>
<span id="L11681" rel="#L11681">11681</span>
<span id="L11682" rel="#L11682">11682</span>
<span id="L11683" rel="#L11683">11683</span>
<span id="L11684" rel="#L11684">11684</span>
<span id="L11685" rel="#L11685">11685</span>
<span id="L11686" rel="#L11686">11686</span>
<span id="L11687" rel="#L11687">11687</span>
<span id="L11688" rel="#L11688">11688</span>
<span id="L11689" rel="#L11689">11689</span>
<span id="L11690" rel="#L11690">11690</span>
<span id="L11691" rel="#L11691">11691</span>
<span id="L11692" rel="#L11692">11692</span>
<span id="L11693" rel="#L11693">11693</span>
<span id="L11694" rel="#L11694">11694</span>
<span id="L11695" rel="#L11695">11695</span>
<span id="L11696" rel="#L11696">11696</span>
<span id="L11697" rel="#L11697">11697</span>
<span id="L11698" rel="#L11698">11698</span>
<span id="L11699" rel="#L11699">11699</span>
<span id="L11700" rel="#L11700">11700</span>
<span id="L11701" rel="#L11701">11701</span>
<span id="L11702" rel="#L11702">11702</span>
<span id="L11703" rel="#L11703">11703</span>
<span id="L11704" rel="#L11704">11704</span>
<span id="L11705" rel="#L11705">11705</span>
<span id="L11706" rel="#L11706">11706</span>
<span id="L11707" rel="#L11707">11707</span>
<span id="L11708" rel="#L11708">11708</span>
<span id="L11709" rel="#L11709">11709</span>
<span id="L11710" rel="#L11710">11710</span>
<span id="L11711" rel="#L11711">11711</span>
<span id="L11712" rel="#L11712">11712</span>
<span id="L11713" rel="#L11713">11713</span>
<span id="L11714" rel="#L11714">11714</span>
<span id="L11715" rel="#L11715">11715</span>
<span id="L11716" rel="#L11716">11716</span>
<span id="L11717" rel="#L11717">11717</span>
<span id="L11718" rel="#L11718">11718</span>
<span id="L11719" rel="#L11719">11719</span>
<span id="L11720" rel="#L11720">11720</span>
<span id="L11721" rel="#L11721">11721</span>
<span id="L11722" rel="#L11722">11722</span>
<span id="L11723" rel="#L11723">11723</span>
<span id="L11724" rel="#L11724">11724</span>
<span id="L11725" rel="#L11725">11725</span>
<span id="L11726" rel="#L11726">11726</span>
<span id="L11727" rel="#L11727">11727</span>
<span id="L11728" rel="#L11728">11728</span>
<span id="L11729" rel="#L11729">11729</span>
<span id="L11730" rel="#L11730">11730</span>
<span id="L11731" rel="#L11731">11731</span>
<span id="L11732" rel="#L11732">11732</span>
<span id="L11733" rel="#L11733">11733</span>
<span id="L11734" rel="#L11734">11734</span>
<span id="L11735" rel="#L11735">11735</span>
<span id="L11736" rel="#L11736">11736</span>
<span id="L11737" rel="#L11737">11737</span>
<span id="L11738" rel="#L11738">11738</span>
<span id="L11739" rel="#L11739">11739</span>
<span id="L11740" rel="#L11740">11740</span>
<span id="L11741" rel="#L11741">11741</span>
<span id="L11742" rel="#L11742">11742</span>
<span id="L11743" rel="#L11743">11743</span>
<span id="L11744" rel="#L11744">11744</span>
<span id="L11745" rel="#L11745">11745</span>
<span id="L11746" rel="#L11746">11746</span>
<span id="L11747" rel="#L11747">11747</span>
<span id="L11748" rel="#L11748">11748</span>
<span id="L11749" rel="#L11749">11749</span>
<span id="L11750" rel="#L11750">11750</span>
<span id="L11751" rel="#L11751">11751</span>
<span id="L11752" rel="#L11752">11752</span>
<span id="L11753" rel="#L11753">11753</span>
<span id="L11754" rel="#L11754">11754</span>
<span id="L11755" rel="#L11755">11755</span>
<span id="L11756" rel="#L11756">11756</span>
<span id="L11757" rel="#L11757">11757</span>
<span id="L11758" rel="#L11758">11758</span>
<span id="L11759" rel="#L11759">11759</span>
<span id="L11760" rel="#L11760">11760</span>
<span id="L11761" rel="#L11761">11761</span>
<span id="L11762" rel="#L11762">11762</span>
<span id="L11763" rel="#L11763">11763</span>
<span id="L11764" rel="#L11764">11764</span>
<span id="L11765" rel="#L11765">11765</span>
<span id="L11766" rel="#L11766">11766</span>
<span id="L11767" rel="#L11767">11767</span>
<span id="L11768" rel="#L11768">11768</span>
<span id="L11769" rel="#L11769">11769</span>
<span id="L11770" rel="#L11770">11770</span>
<span id="L11771" rel="#L11771">11771</span>
<span id="L11772" rel="#L11772">11772</span>
<span id="L11773" rel="#L11773">11773</span>
<span id="L11774" rel="#L11774">11774</span>
<span id="L11775" rel="#L11775">11775</span>
<span id="L11776" rel="#L11776">11776</span>
<span id="L11777" rel="#L11777">11777</span>
<span id="L11778" rel="#L11778">11778</span>
<span id="L11779" rel="#L11779">11779</span>
<span id="L11780" rel="#L11780">11780</span>
<span id="L11781" rel="#L11781">11781</span>
<span id="L11782" rel="#L11782">11782</span>
<span id="L11783" rel="#L11783">11783</span>
<span id="L11784" rel="#L11784">11784</span>
<span id="L11785" rel="#L11785">11785</span>
<span id="L11786" rel="#L11786">11786</span>
<span id="L11787" rel="#L11787">11787</span>
<span id="L11788" rel="#L11788">11788</span>
<span id="L11789" rel="#L11789">11789</span>
<span id="L11790" rel="#L11790">11790</span>
<span id="L11791" rel="#L11791">11791</span>
<span id="L11792" rel="#L11792">11792</span>
<span id="L11793" rel="#L11793">11793</span>
<span id="L11794" rel="#L11794">11794</span>
<span id="L11795" rel="#L11795">11795</span>
<span id="L11796" rel="#L11796">11796</span>
<span id="L11797" rel="#L11797">11797</span>
<span id="L11798" rel="#L11798">11798</span>
<span id="L11799" rel="#L11799">11799</span>
<span id="L11800" rel="#L11800">11800</span>
<span id="L11801" rel="#L11801">11801</span>
<span id="L11802" rel="#L11802">11802</span>
<span id="L11803" rel="#L11803">11803</span>
<span id="L11804" rel="#L11804">11804</span>
<span id="L11805" rel="#L11805">11805</span>
<span id="L11806" rel="#L11806">11806</span>
<span id="L11807" rel="#L11807">11807</span>
<span id="L11808" rel="#L11808">11808</span>
<span id="L11809" rel="#L11809">11809</span>
<span id="L11810" rel="#L11810">11810</span>
<span id="L11811" rel="#L11811">11811</span>
<span id="L11812" rel="#L11812">11812</span>
<span id="L11813" rel="#L11813">11813</span>
<span id="L11814" rel="#L11814">11814</span>
<span id="L11815" rel="#L11815">11815</span>
<span id="L11816" rel="#L11816">11816</span>
<span id="L11817" rel="#L11817">11817</span>
<span id="L11818" rel="#L11818">11818</span>
<span id="L11819" rel="#L11819">11819</span>
<span id="L11820" rel="#L11820">11820</span>
<span id="L11821" rel="#L11821">11821</span>
<span id="L11822" rel="#L11822">11822</span>
<span id="L11823" rel="#L11823">11823</span>
<span id="L11824" rel="#L11824">11824</span>
<span id="L11825" rel="#L11825">11825</span>
<span id="L11826" rel="#L11826">11826</span>
<span id="L11827" rel="#L11827">11827</span>
<span id="L11828" rel="#L11828">11828</span>
<span id="L11829" rel="#L11829">11829</span>
<span id="L11830" rel="#L11830">11830</span>
<span id="L11831" rel="#L11831">11831</span>
<span id="L11832" rel="#L11832">11832</span>
<span id="L11833" rel="#L11833">11833</span>
<span id="L11834" rel="#L11834">11834</span>
<span id="L11835" rel="#L11835">11835</span>
<span id="L11836" rel="#L11836">11836</span>
<span id="L11837" rel="#L11837">11837</span>
<span id="L11838" rel="#L11838">11838</span>
<span id="L11839" rel="#L11839">11839</span>
<span id="L11840" rel="#L11840">11840</span>
<span id="L11841" rel="#L11841">11841</span>
<span id="L11842" rel="#L11842">11842</span>
<span id="L11843" rel="#L11843">11843</span>
<span id="L11844" rel="#L11844">11844</span>
<span id="L11845" rel="#L11845">11845</span>
<span id="L11846" rel="#L11846">11846</span>
<span id="L11847" rel="#L11847">11847</span>
<span id="L11848" rel="#L11848">11848</span>
<span id="L11849" rel="#L11849">11849</span>
<span id="L11850" rel="#L11850">11850</span>
<span id="L11851" rel="#L11851">11851</span>
<span id="L11852" rel="#L11852">11852</span>
<span id="L11853" rel="#L11853">11853</span>
<span id="L11854" rel="#L11854">11854</span>
<span id="L11855" rel="#L11855">11855</span>
<span id="L11856" rel="#L11856">11856</span>
<span id="L11857" rel="#L11857">11857</span>
<span id="L11858" rel="#L11858">11858</span>
<span id="L11859" rel="#L11859">11859</span>
<span id="L11860" rel="#L11860">11860</span>
<span id="L11861" rel="#L11861">11861</span>
<span id="L11862" rel="#L11862">11862</span>
<span id="L11863" rel="#L11863">11863</span>
<span id="L11864" rel="#L11864">11864</span>
<span id="L11865" rel="#L11865">11865</span>
<span id="L11866" rel="#L11866">11866</span>
<span id="L11867" rel="#L11867">11867</span>
<span id="L11868" rel="#L11868">11868</span>
<span id="L11869" rel="#L11869">11869</span>
<span id="L11870" rel="#L11870">11870</span>
<span id="L11871" rel="#L11871">11871</span>
<span id="L11872" rel="#L11872">11872</span>
<span id="L11873" rel="#L11873">11873</span>
<span id="L11874" rel="#L11874">11874</span>
<span id="L11875" rel="#L11875">11875</span>
<span id="L11876" rel="#L11876">11876</span>
<span id="L11877" rel="#L11877">11877</span>
<span id="L11878" rel="#L11878">11878</span>
<span id="L11879" rel="#L11879">11879</span>
<span id="L11880" rel="#L11880">11880</span>
<span id="L11881" rel="#L11881">11881</span>
<span id="L11882" rel="#L11882">11882</span>
<span id="L11883" rel="#L11883">11883</span>
<span id="L11884" rel="#L11884">11884</span>
<span id="L11885" rel="#L11885">11885</span>
<span id="L11886" rel="#L11886">11886</span>
<span id="L11887" rel="#L11887">11887</span>
<span id="L11888" rel="#L11888">11888</span>
<span id="L11889" rel="#L11889">11889</span>
<span id="L11890" rel="#L11890">11890</span>
<span id="L11891" rel="#L11891">11891</span>
<span id="L11892" rel="#L11892">11892</span>
<span id="L11893" rel="#L11893">11893</span>
<span id="L11894" rel="#L11894">11894</span>
<span id="L11895" rel="#L11895">11895</span>
<span id="L11896" rel="#L11896">11896</span>
<span id="L11897" rel="#L11897">11897</span>
<span id="L11898" rel="#L11898">11898</span>
<span id="L11899" rel="#L11899">11899</span>
<span id="L11900" rel="#L11900">11900</span>
<span id="L11901" rel="#L11901">11901</span>
<span id="L11902" rel="#L11902">11902</span>
<span id="L11903" rel="#L11903">11903</span>
<span id="L11904" rel="#L11904">11904</span>
<span id="L11905" rel="#L11905">11905</span>
<span id="L11906" rel="#L11906">11906</span>
<span id="L11907" rel="#L11907">11907</span>
<span id="L11908" rel="#L11908">11908</span>
<span id="L11909" rel="#L11909">11909</span>
<span id="L11910" rel="#L11910">11910</span>
<span id="L11911" rel="#L11911">11911</span>
<span id="L11912" rel="#L11912">11912</span>
<span id="L11913" rel="#L11913">11913</span>
<span id="L11914" rel="#L11914">11914</span>
<span id="L11915" rel="#L11915">11915</span>
<span id="L11916" rel="#L11916">11916</span>
<span id="L11917" rel="#L11917">11917</span>
<span id="L11918" rel="#L11918">11918</span>
<span id="L11919" rel="#L11919">11919</span>
<span id="L11920" rel="#L11920">11920</span>
<span id="L11921" rel="#L11921">11921</span>
<span id="L11922" rel="#L11922">11922</span>
<span id="L11923" rel="#L11923">11923</span>
<span id="L11924" rel="#L11924">11924</span>
<span id="L11925" rel="#L11925">11925</span>
<span id="L11926" rel="#L11926">11926</span>
<span id="L11927" rel="#L11927">11927</span>
<span id="L11928" rel="#L11928">11928</span>
<span id="L11929" rel="#L11929">11929</span>
<span id="L11930" rel="#L11930">11930</span>
<span id="L11931" rel="#L11931">11931</span>
<span id="L11932" rel="#L11932">11932</span>
<span id="L11933" rel="#L11933">11933</span>
<span id="L11934" rel="#L11934">11934</span>
<span id="L11935" rel="#L11935">11935</span>
<span id="L11936" rel="#L11936">11936</span>
<span id="L11937" rel="#L11937">11937</span>
<span id="L11938" rel="#L11938">11938</span>
<span id="L11939" rel="#L11939">11939</span>
<span id="L11940" rel="#L11940">11940</span>
<span id="L11941" rel="#L11941">11941</span>
<span id="L11942" rel="#L11942">11942</span>
<span id="L11943" rel="#L11943">11943</span>
<span id="L11944" rel="#L11944">11944</span>
<span id="L11945" rel="#L11945">11945</span>
<span id="L11946" rel="#L11946">11946</span>
<span id="L11947" rel="#L11947">11947</span>
<span id="L11948" rel="#L11948">11948</span>
<span id="L11949" rel="#L11949">11949</span>
<span id="L11950" rel="#L11950">11950</span>
<span id="L11951" rel="#L11951">11951</span>
<span id="L11952" rel="#L11952">11952</span>
<span id="L11953" rel="#L11953">11953</span>
<span id="L11954" rel="#L11954">11954</span>
<span id="L11955" rel="#L11955">11955</span>
<span id="L11956" rel="#L11956">11956</span>
<span id="L11957" rel="#L11957">11957</span>
<span id="L11958" rel="#L11958">11958</span>
<span id="L11959" rel="#L11959">11959</span>
<span id="L11960" rel="#L11960">11960</span>
<span id="L11961" rel="#L11961">11961</span>
<span id="L11962" rel="#L11962">11962</span>
<span id="L11963" rel="#L11963">11963</span>
<span id="L11964" rel="#L11964">11964</span>
<span id="L11965" rel="#L11965">11965</span>
<span id="L11966" rel="#L11966">11966</span>
<span id="L11967" rel="#L11967">11967</span>
<span id="L11968" rel="#L11968">11968</span>
<span id="L11969" rel="#L11969">11969</span>
<span id="L11970" rel="#L11970">11970</span>
<span id="L11971" rel="#L11971">11971</span>
<span id="L11972" rel="#L11972">11972</span>
<span id="L11973" rel="#L11973">11973</span>
<span id="L11974" rel="#L11974">11974</span>
<span id="L11975" rel="#L11975">11975</span>
<span id="L11976" rel="#L11976">11976</span>
<span id="L11977" rel="#L11977">11977</span>
<span id="L11978" rel="#L11978">11978</span>
<span id="L11979" rel="#L11979">11979</span>
<span id="L11980" rel="#L11980">11980</span>
<span id="L11981" rel="#L11981">11981</span>
<span id="L11982" rel="#L11982">11982</span>
<span id="L11983" rel="#L11983">11983</span>
<span id="L11984" rel="#L11984">11984</span>
<span id="L11985" rel="#L11985">11985</span>
<span id="L11986" rel="#L11986">11986</span>
<span id="L11987" rel="#L11987">11987</span>
<span id="L11988" rel="#L11988">11988</span>
<span id="L11989" rel="#L11989">11989</span>
<span id="L11990" rel="#L11990">11990</span>
<span id="L11991" rel="#L11991">11991</span>
<span id="L11992" rel="#L11992">11992</span>
<span id="L11993" rel="#L11993">11993</span>
<span id="L11994" rel="#L11994">11994</span>
<span id="L11995" rel="#L11995">11995</span>
<span id="L11996" rel="#L11996">11996</span>
<span id="L11997" rel="#L11997">11997</span>
<span id="L11998" rel="#L11998">11998</span>
<span id="L11999" rel="#L11999">11999</span>
<span id="L12000" rel="#L12000">12000</span>
<span id="L12001" rel="#L12001">12001</span>
<span id="L12002" rel="#L12002">12002</span>
<span id="L12003" rel="#L12003">12003</span>
<span id="L12004" rel="#L12004">12004</span>
<span id="L12005" rel="#L12005">12005</span>
<span id="L12006" rel="#L12006">12006</span>
<span id="L12007" rel="#L12007">12007</span>
<span id="L12008" rel="#L12008">12008</span>
<span id="L12009" rel="#L12009">12009</span>
<span id="L12010" rel="#L12010">12010</span>
<span id="L12011" rel="#L12011">12011</span>
<span id="L12012" rel="#L12012">12012</span>
<span id="L12013" rel="#L12013">12013</span>
<span id="L12014" rel="#L12014">12014</span>
<span id="L12015" rel="#L12015">12015</span>
<span id="L12016" rel="#L12016">12016</span>
<span id="L12017" rel="#L12017">12017</span>
<span id="L12018" rel="#L12018">12018</span>
<span id="L12019" rel="#L12019">12019</span>
<span id="L12020" rel="#L12020">12020</span>
<span id="L12021" rel="#L12021">12021</span>
<span id="L12022" rel="#L12022">12022</span>
<span id="L12023" rel="#L12023">12023</span>
<span id="L12024" rel="#L12024">12024</span>
<span id="L12025" rel="#L12025">12025</span>
<span id="L12026" rel="#L12026">12026</span>
<span id="L12027" rel="#L12027">12027</span>
<span id="L12028" rel="#L12028">12028</span>
<span id="L12029" rel="#L12029">12029</span>
<span id="L12030" rel="#L12030">12030</span>
<span id="L12031" rel="#L12031">12031</span>
<span id="L12032" rel="#L12032">12032</span>
<span id="L12033" rel="#L12033">12033</span>
<span id="L12034" rel="#L12034">12034</span>
<span id="L12035" rel="#L12035">12035</span>
<span id="L12036" rel="#L12036">12036</span>
<span id="L12037" rel="#L12037">12037</span>
<span id="L12038" rel="#L12038">12038</span>
<span id="L12039" rel="#L12039">12039</span>
<span id="L12040" rel="#L12040">12040</span>
<span id="L12041" rel="#L12041">12041</span>
<span id="L12042" rel="#L12042">12042</span>
<span id="L12043" rel="#L12043">12043</span>
<span id="L12044" rel="#L12044">12044</span>
<span id="L12045" rel="#L12045">12045</span>
<span id="L12046" rel="#L12046">12046</span>
<span id="L12047" rel="#L12047">12047</span>
<span id="L12048" rel="#L12048">12048</span>
<span id="L12049" rel="#L12049">12049</span>
<span id="L12050" rel="#L12050">12050</span>
<span id="L12051" rel="#L12051">12051</span>
<span id="L12052" rel="#L12052">12052</span>
<span id="L12053" rel="#L12053">12053</span>
<span id="L12054" rel="#L12054">12054</span>
<span id="L12055" rel="#L12055">12055</span>
<span id="L12056" rel="#L12056">12056</span>
<span id="L12057" rel="#L12057">12057</span>
<span id="L12058" rel="#L12058">12058</span>
<span id="L12059" rel="#L12059">12059</span>
<span id="L12060" rel="#L12060">12060</span>
<span id="L12061" rel="#L12061">12061</span>
<span id="L12062" rel="#L12062">12062</span>
<span id="L12063" rel="#L12063">12063</span>
<span id="L12064" rel="#L12064">12064</span>
<span id="L12065" rel="#L12065">12065</span>
<span id="L12066" rel="#L12066">12066</span>
<span id="L12067" rel="#L12067">12067</span>
<span id="L12068" rel="#L12068">12068</span>
<span id="L12069" rel="#L12069">12069</span>
<span id="L12070" rel="#L12070">12070</span>
<span id="L12071" rel="#L12071">12071</span>
<span id="L12072" rel="#L12072">12072</span>
<span id="L12073" rel="#L12073">12073</span>
<span id="L12074" rel="#L12074">12074</span>
<span id="L12075" rel="#L12075">12075</span>
<span id="L12076" rel="#L12076">12076</span>
<span id="L12077" rel="#L12077">12077</span>
<span id="L12078" rel="#L12078">12078</span>
<span id="L12079" rel="#L12079">12079</span>
<span id="L12080" rel="#L12080">12080</span>
<span id="L12081" rel="#L12081">12081</span>
<span id="L12082" rel="#L12082">12082</span>
<span id="L12083" rel="#L12083">12083</span>
<span id="L12084" rel="#L12084">12084</span>
<span id="L12085" rel="#L12085">12085</span>
<span id="L12086" rel="#L12086">12086</span>
<span id="L12087" rel="#L12087">12087</span>
<span id="L12088" rel="#L12088">12088</span>
<span id="L12089" rel="#L12089">12089</span>
<span id="L12090" rel="#L12090">12090</span>
<span id="L12091" rel="#L12091">12091</span>
<span id="L12092" rel="#L12092">12092</span>
<span id="L12093" rel="#L12093">12093</span>
<span id="L12094" rel="#L12094">12094</span>
<span id="L12095" rel="#L12095">12095</span>
<span id="L12096" rel="#L12096">12096</span>
<span id="L12097" rel="#L12097">12097</span>
<span id="L12098" rel="#L12098">12098</span>
<span id="L12099" rel="#L12099">12099</span>
<span id="L12100" rel="#L12100">12100</span>
<span id="L12101" rel="#L12101">12101</span>
<span id="L12102" rel="#L12102">12102</span>
<span id="L12103" rel="#L12103">12103</span>
<span id="L12104" rel="#L12104">12104</span>
<span id="L12105" rel="#L12105">12105</span>
<span id="L12106" rel="#L12106">12106</span>
<span id="L12107" rel="#L12107">12107</span>
<span id="L12108" rel="#L12108">12108</span>
<span id="L12109" rel="#L12109">12109</span>
<span id="L12110" rel="#L12110">12110</span>
<span id="L12111" rel="#L12111">12111</span>
<span id="L12112" rel="#L12112">12112</span>
<span id="L12113" rel="#L12113">12113</span>
<span id="L12114" rel="#L12114">12114</span>
<span id="L12115" rel="#L12115">12115</span>
<span id="L12116" rel="#L12116">12116</span>
<span id="L12117" rel="#L12117">12117</span>
<span id="L12118" rel="#L12118">12118</span>
<span id="L12119" rel="#L12119">12119</span>
<span id="L12120" rel="#L12120">12120</span>
<span id="L12121" rel="#L12121">12121</span>
<span id="L12122" rel="#L12122">12122</span>
<span id="L12123" rel="#L12123">12123</span>
<span id="L12124" rel="#L12124">12124</span>
<span id="L12125" rel="#L12125">12125</span>
<span id="L12126" rel="#L12126">12126</span>
<span id="L12127" rel="#L12127">12127</span>
<span id="L12128" rel="#L12128">12128</span>
<span id="L12129" rel="#L12129">12129</span>
<span id="L12130" rel="#L12130">12130</span>
<span id="L12131" rel="#L12131">12131</span>
<span id="L12132" rel="#L12132">12132</span>
<span id="L12133" rel="#L12133">12133</span>
<span id="L12134" rel="#L12134">12134</span>
<span id="L12135" rel="#L12135">12135</span>
<span id="L12136" rel="#L12136">12136</span>
<span id="L12137" rel="#L12137">12137</span>
<span id="L12138" rel="#L12138">12138</span>
<span id="L12139" rel="#L12139">12139</span>
<span id="L12140" rel="#L12140">12140</span>
<span id="L12141" rel="#L12141">12141</span>
<span id="L12142" rel="#L12142">12142</span>
<span id="L12143" rel="#L12143">12143</span>
<span id="L12144" rel="#L12144">12144</span>
<span id="L12145" rel="#L12145">12145</span>
<span id="L12146" rel="#L12146">12146</span>
<span id="L12147" rel="#L12147">12147</span>
<span id="L12148" rel="#L12148">12148</span>
<span id="L12149" rel="#L12149">12149</span>
<span id="L12150" rel="#L12150">12150</span>
<span id="L12151" rel="#L12151">12151</span>
<span id="L12152" rel="#L12152">12152</span>
<span id="L12153" rel="#L12153">12153</span>
<span id="L12154" rel="#L12154">12154</span>
<span id="L12155" rel="#L12155">12155</span>
<span id="L12156" rel="#L12156">12156</span>
<span id="L12157" rel="#L12157">12157</span>
<span id="L12158" rel="#L12158">12158</span>
<span id="L12159" rel="#L12159">12159</span>
<span id="L12160" rel="#L12160">12160</span>
<span id="L12161" rel="#L12161">12161</span>
<span id="L12162" rel="#L12162">12162</span>
<span id="L12163" rel="#L12163">12163</span>
<span id="L12164" rel="#L12164">12164</span>
<span id="L12165" rel="#L12165">12165</span>
<span id="L12166" rel="#L12166">12166</span>
<span id="L12167" rel="#L12167">12167</span>
<span id="L12168" rel="#L12168">12168</span>
<span id="L12169" rel="#L12169">12169</span>
<span id="L12170" rel="#L12170">12170</span>
<span id="L12171" rel="#L12171">12171</span>
<span id="L12172" rel="#L12172">12172</span>
<span id="L12173" rel="#L12173">12173</span>
<span id="L12174" rel="#L12174">12174</span>
<span id="L12175" rel="#L12175">12175</span>
<span id="L12176" rel="#L12176">12176</span>
<span id="L12177" rel="#L12177">12177</span>
<span id="L12178" rel="#L12178">12178</span>
<span id="L12179" rel="#L12179">12179</span>
<span id="L12180" rel="#L12180">12180</span>
<span id="L12181" rel="#L12181">12181</span>
<span id="L12182" rel="#L12182">12182</span>
<span id="L12183" rel="#L12183">12183</span>
<span id="L12184" rel="#L12184">12184</span>
<span id="L12185" rel="#L12185">12185</span>
<span id="L12186" rel="#L12186">12186</span>
<span id="L12187" rel="#L12187">12187</span>
<span id="L12188" rel="#L12188">12188</span>
<span id="L12189" rel="#L12189">12189</span>
<span id="L12190" rel="#L12190">12190</span>
<span id="L12191" rel="#L12191">12191</span>
<span id="L12192" rel="#L12192">12192</span>
<span id="L12193" rel="#L12193">12193</span>
<span id="L12194" rel="#L12194">12194</span>
<span id="L12195" rel="#L12195">12195</span>
<span id="L12196" rel="#L12196">12196</span>
<span id="L12197" rel="#L12197">12197</span>
<span id="L12198" rel="#L12198">12198</span>
<span id="L12199" rel="#L12199">12199</span>
<span id="L12200" rel="#L12200">12200</span>
<span id="L12201" rel="#L12201">12201</span>
<span id="L12202" rel="#L12202">12202</span>
<span id="L12203" rel="#L12203">12203</span>
<span id="L12204" rel="#L12204">12204</span>
<span id="L12205" rel="#L12205">12205</span>
<span id="L12206" rel="#L12206">12206</span>
<span id="L12207" rel="#L12207">12207</span>
<span id="L12208" rel="#L12208">12208</span>
<span id="L12209" rel="#L12209">12209</span>
<span id="L12210" rel="#L12210">12210</span>
<span id="L12211" rel="#L12211">12211</span>
<span id="L12212" rel="#L12212">12212</span>
<span id="L12213" rel="#L12213">12213</span>
<span id="L12214" rel="#L12214">12214</span>
<span id="L12215" rel="#L12215">12215</span>
<span id="L12216" rel="#L12216">12216</span>
<span id="L12217" rel="#L12217">12217</span>
<span id="L12218" rel="#L12218">12218</span>
<span id="L12219" rel="#L12219">12219</span>
<span id="L12220" rel="#L12220">12220</span>
<span id="L12221" rel="#L12221">12221</span>
<span id="L12222" rel="#L12222">12222</span>
<span id="L12223" rel="#L12223">12223</span>
<span id="L12224" rel="#L12224">12224</span>
<span id="L12225" rel="#L12225">12225</span>
<span id="L12226" rel="#L12226">12226</span>
<span id="L12227" rel="#L12227">12227</span>
<span id="L12228" rel="#L12228">12228</span>
<span id="L12229" rel="#L12229">12229</span>
<span id="L12230" rel="#L12230">12230</span>
<span id="L12231" rel="#L12231">12231</span>
<span id="L12232" rel="#L12232">12232</span>
<span id="L12233" rel="#L12233">12233</span>
<span id="L12234" rel="#L12234">12234</span>
<span id="L12235" rel="#L12235">12235</span>
<span id="L12236" rel="#L12236">12236</span>
<span id="L12237" rel="#L12237">12237</span>
<span id="L12238" rel="#L12238">12238</span>
<span id="L12239" rel="#L12239">12239</span>
<span id="L12240" rel="#L12240">12240</span>
<span id="L12241" rel="#L12241">12241</span>
<span id="L12242" rel="#L12242">12242</span>
<span id="L12243" rel="#L12243">12243</span>
<span id="L12244" rel="#L12244">12244</span>
<span id="L12245" rel="#L12245">12245</span>
<span id="L12246" rel="#L12246">12246</span>
<span id="L12247" rel="#L12247">12247</span>
<span id="L12248" rel="#L12248">12248</span>
<span id="L12249" rel="#L12249">12249</span>
<span id="L12250" rel="#L12250">12250</span>
<span id="L12251" rel="#L12251">12251</span>
<span id="L12252" rel="#L12252">12252</span>
<span id="L12253" rel="#L12253">12253</span>
<span id="L12254" rel="#L12254">12254</span>
<span id="L12255" rel="#L12255">12255</span>
<span id="L12256" rel="#L12256">12256</span>
<span id="L12257" rel="#L12257">12257</span>
<span id="L12258" rel="#L12258">12258</span>
<span id="L12259" rel="#L12259">12259</span>
<span id="L12260" rel="#L12260">12260</span>
<span id="L12261" rel="#L12261">12261</span>
<span id="L12262" rel="#L12262">12262</span>
<span id="L12263" rel="#L12263">12263</span>
<span id="L12264" rel="#L12264">12264</span>
<span id="L12265" rel="#L12265">12265</span>
<span id="L12266" rel="#L12266">12266</span>
<span id="L12267" rel="#L12267">12267</span>
<span id="L12268" rel="#L12268">12268</span>
<span id="L12269" rel="#L12269">12269</span>
<span id="L12270" rel="#L12270">12270</span>
<span id="L12271" rel="#L12271">12271</span>
<span id="L12272" rel="#L12272">12272</span>
<span id="L12273" rel="#L12273">12273</span>
<span id="L12274" rel="#L12274">12274</span>
<span id="L12275" rel="#L12275">12275</span>
<span id="L12276" rel="#L12276">12276</span>
<span id="L12277" rel="#L12277">12277</span>
<span id="L12278" rel="#L12278">12278</span>
<span id="L12279" rel="#L12279">12279</span>
<span id="L12280" rel="#L12280">12280</span>
<span id="L12281" rel="#L12281">12281</span>
<span id="L12282" rel="#L12282">12282</span>
<span id="L12283" rel="#L12283">12283</span>
<span id="L12284" rel="#L12284">12284</span>
<span id="L12285" rel="#L12285">12285</span>
<span id="L12286" rel="#L12286">12286</span>
<span id="L12287" rel="#L12287">12287</span>
<span id="L12288" rel="#L12288">12288</span>
<span id="L12289" rel="#L12289">12289</span>
<span id="L12290" rel="#L12290">12290</span>
<span id="L12291" rel="#L12291">12291</span>
<span id="L12292" rel="#L12292">12292</span>
<span id="L12293" rel="#L12293">12293</span>
<span id="L12294" rel="#L12294">12294</span>
<span id="L12295" rel="#L12295">12295</span>
<span id="L12296" rel="#L12296">12296</span>
<span id="L12297" rel="#L12297">12297</span>
<span id="L12298" rel="#L12298">12298</span>
<span id="L12299" rel="#L12299">12299</span>
<span id="L12300" rel="#L12300">12300</span>
<span id="L12301" rel="#L12301">12301</span>
<span id="L12302" rel="#L12302">12302</span>
<span id="L12303" rel="#L12303">12303</span>
<span id="L12304" rel="#L12304">12304</span>
<span id="L12305" rel="#L12305">12305</span>
<span id="L12306" rel="#L12306">12306</span>
<span id="L12307" rel="#L12307">12307</span>
<span id="L12308" rel="#L12308">12308</span>
<span id="L12309" rel="#L12309">12309</span>
<span id="L12310" rel="#L12310">12310</span>
<span id="L12311" rel="#L12311">12311</span>
<span id="L12312" rel="#L12312">12312</span>
<span id="L12313" rel="#L12313">12313</span>
<span id="L12314" rel="#L12314">12314</span>
<span id="L12315" rel="#L12315">12315</span>
<span id="L12316" rel="#L12316">12316</span>
<span id="L12317" rel="#L12317">12317</span>
<span id="L12318" rel="#L12318">12318</span>
<span id="L12319" rel="#L12319">12319</span>
<span id="L12320" rel="#L12320">12320</span>
<span id="L12321" rel="#L12321">12321</span>
<span id="L12322" rel="#L12322">12322</span>
<span id="L12323" rel="#L12323">12323</span>
<span id="L12324" rel="#L12324">12324</span>
<span id="L12325" rel="#L12325">12325</span>
<span id="L12326" rel="#L12326">12326</span>
<span id="L12327" rel="#L12327">12327</span>
<span id="L12328" rel="#L12328">12328</span>
<span id="L12329" rel="#L12329">12329</span>
<span id="L12330" rel="#L12330">12330</span>
<span id="L12331" rel="#L12331">12331</span>
<span id="L12332" rel="#L12332">12332</span>
<span id="L12333" rel="#L12333">12333</span>
<span id="L12334" rel="#L12334">12334</span>
<span id="L12335" rel="#L12335">12335</span>
<span id="L12336" rel="#L12336">12336</span>
<span id="L12337" rel="#L12337">12337</span>
<span id="L12338" rel="#L12338">12338</span>
<span id="L12339" rel="#L12339">12339</span>
<span id="L12340" rel="#L12340">12340</span>
<span id="L12341" rel="#L12341">12341</span>
<span id="L12342" rel="#L12342">12342</span>
<span id="L12343" rel="#L12343">12343</span>
<span id="L12344" rel="#L12344">12344</span>
<span id="L12345" rel="#L12345">12345</span>
<span id="L12346" rel="#L12346">12346</span>
<span id="L12347" rel="#L12347">12347</span>
<span id="L12348" rel="#L12348">12348</span>
<span id="L12349" rel="#L12349">12349</span>
<span id="L12350" rel="#L12350">12350</span>
<span id="L12351" rel="#L12351">12351</span>
<span id="L12352" rel="#L12352">12352</span>
<span id="L12353" rel="#L12353">12353</span>
<span id="L12354" rel="#L12354">12354</span>
<span id="L12355" rel="#L12355">12355</span>
<span id="L12356" rel="#L12356">12356</span>
<span id="L12357" rel="#L12357">12357</span>
<span id="L12358" rel="#L12358">12358</span>
<span id="L12359" rel="#L12359">12359</span>
<span id="L12360" rel="#L12360">12360</span>
<span id="L12361" rel="#L12361">12361</span>
<span id="L12362" rel="#L12362">12362</span>
<span id="L12363" rel="#L12363">12363</span>
<span id="L12364" rel="#L12364">12364</span>
<span id="L12365" rel="#L12365">12365</span>
<span id="L12366" rel="#L12366">12366</span>
<span id="L12367" rel="#L12367">12367</span>
<span id="L12368" rel="#L12368">12368</span>
<span id="L12369" rel="#L12369">12369</span>
<span id="L12370" rel="#L12370">12370</span>
<span id="L12371" rel="#L12371">12371</span>
<span id="L12372" rel="#L12372">12372</span>
<span id="L12373" rel="#L12373">12373</span>
<span id="L12374" rel="#L12374">12374</span>
<span id="L12375" rel="#L12375">12375</span>
<span id="L12376" rel="#L12376">12376</span>
<span id="L12377" rel="#L12377">12377</span>
<span id="L12378" rel="#L12378">12378</span>
<span id="L12379" rel="#L12379">12379</span>
<span id="L12380" rel="#L12380">12380</span>
<span id="L12381" rel="#L12381">12381</span>
<span id="L12382" rel="#L12382">12382</span>
<span id="L12383" rel="#L12383">12383</span>
<span id="L12384" rel="#L12384">12384</span>
<span id="L12385" rel="#L12385">12385</span>
<span id="L12386" rel="#L12386">12386</span>
<span id="L12387" rel="#L12387">12387</span>
<span id="L12388" rel="#L12388">12388</span>
<span id="L12389" rel="#L12389">12389</span>
<span id="L12390" rel="#L12390">12390</span>
<span id="L12391" rel="#L12391">12391</span>
<span id="L12392" rel="#L12392">12392</span>
<span id="L12393" rel="#L12393">12393</span>
<span id="L12394" rel="#L12394">12394</span>
<span id="L12395" rel="#L12395">12395</span>
<span id="L12396" rel="#L12396">12396</span>
<span id="L12397" rel="#L12397">12397</span>
<span id="L12398" rel="#L12398">12398</span>
<span id="L12399" rel="#L12399">12399</span>
<span id="L12400" rel="#L12400">12400</span>
<span id="L12401" rel="#L12401">12401</span>
<span id="L12402" rel="#L12402">12402</span>
<span id="L12403" rel="#L12403">12403</span>
<span id="L12404" rel="#L12404">12404</span>
<span id="L12405" rel="#L12405">12405</span>
<span id="L12406" rel="#L12406">12406</span>
<span id="L12407" rel="#L12407">12407</span>
<span id="L12408" rel="#L12408">12408</span>
<span id="L12409" rel="#L12409">12409</span>
<span id="L12410" rel="#L12410">12410</span>
<span id="L12411" rel="#L12411">12411</span>
<span id="L12412" rel="#L12412">12412</span>
<span id="L12413" rel="#L12413">12413</span>
<span id="L12414" rel="#L12414">12414</span>
<span id="L12415" rel="#L12415">12415</span>
<span id="L12416" rel="#L12416">12416</span>
<span id="L12417" rel="#L12417">12417</span>
<span id="L12418" rel="#L12418">12418</span>
<span id="L12419" rel="#L12419">12419</span>
<span id="L12420" rel="#L12420">12420</span>
<span id="L12421" rel="#L12421">12421</span>
<span id="L12422" rel="#L12422">12422</span>
<span id="L12423" rel="#L12423">12423</span>
<span id="L12424" rel="#L12424">12424</span>
<span id="L12425" rel="#L12425">12425</span>
<span id="L12426" rel="#L12426">12426</span>
<span id="L12427" rel="#L12427">12427</span>
<span id="L12428" rel="#L12428">12428</span>
<span id="L12429" rel="#L12429">12429</span>
<span id="L12430" rel="#L12430">12430</span>
<span id="L12431" rel="#L12431">12431</span>
<span id="L12432" rel="#L12432">12432</span>
<span id="L12433" rel="#L12433">12433</span>
<span id="L12434" rel="#L12434">12434</span>
<span id="L12435" rel="#L12435">12435</span>
<span id="L12436" rel="#L12436">12436</span>
<span id="L12437" rel="#L12437">12437</span>
<span id="L12438" rel="#L12438">12438</span>
<span id="L12439" rel="#L12439">12439</span>
<span id="L12440" rel="#L12440">12440</span>
<span id="L12441" rel="#L12441">12441</span>
<span id="L12442" rel="#L12442">12442</span>
<span id="L12443" rel="#L12443">12443</span>
<span id="L12444" rel="#L12444">12444</span>
<span id="L12445" rel="#L12445">12445</span>
<span id="L12446" rel="#L12446">12446</span>
<span id="L12447" rel="#L12447">12447</span>
<span id="L12448" rel="#L12448">12448</span>
<span id="L12449" rel="#L12449">12449</span>
<span id="L12450" rel="#L12450">12450</span>
<span id="L12451" rel="#L12451">12451</span>
<span id="L12452" rel="#L12452">12452</span>
<span id="L12453" rel="#L12453">12453</span>
<span id="L12454" rel="#L12454">12454</span>
<span id="L12455" rel="#L12455">12455</span>
<span id="L12456" rel="#L12456">12456</span>
<span id="L12457" rel="#L12457">12457</span>
<span id="L12458" rel="#L12458">12458</span>
<span id="L12459" rel="#L12459">12459</span>
<span id="L12460" rel="#L12460">12460</span>
<span id="L12461" rel="#L12461">12461</span>
<span id="L12462" rel="#L12462">12462</span>
<span id="L12463" rel="#L12463">12463</span>
<span id="L12464" rel="#L12464">12464</span>
<span id="L12465" rel="#L12465">12465</span>
<span id="L12466" rel="#L12466">12466</span>
<span id="L12467" rel="#L12467">12467</span>
<span id="L12468" rel="#L12468">12468</span>
<span id="L12469" rel="#L12469">12469</span>
<span id="L12470" rel="#L12470">12470</span>
<span id="L12471" rel="#L12471">12471</span>
<span id="L12472" rel="#L12472">12472</span>
<span id="L12473" rel="#L12473">12473</span>
<span id="L12474" rel="#L12474">12474</span>
<span id="L12475" rel="#L12475">12475</span>
<span id="L12476" rel="#L12476">12476</span>
<span id="L12477" rel="#L12477">12477</span>
<span id="L12478" rel="#L12478">12478</span>
<span id="L12479" rel="#L12479">12479</span>
<span id="L12480" rel="#L12480">12480</span>
<span id="L12481" rel="#L12481">12481</span>
<span id="L12482" rel="#L12482">12482</span>
<span id="L12483" rel="#L12483">12483</span>
<span id="L12484" rel="#L12484">12484</span>
<span id="L12485" rel="#L12485">12485</span>
<span id="L12486" rel="#L12486">12486</span>
<span id="L12487" rel="#L12487">12487</span>
<span id="L12488" rel="#L12488">12488</span>
<span id="L12489" rel="#L12489">12489</span>
<span id="L12490" rel="#L12490">12490</span>
<span id="L12491" rel="#L12491">12491</span>
<span id="L12492" rel="#L12492">12492</span>
<span id="L12493" rel="#L12493">12493</span>
<span id="L12494" rel="#L12494">12494</span>
<span id="L12495" rel="#L12495">12495</span>
<span id="L12496" rel="#L12496">12496</span>
<span id="L12497" rel="#L12497">12497</span>
<span id="L12498" rel="#L12498">12498</span>
<span id="L12499" rel="#L12499">12499</span>
<span id="L12500" rel="#L12500">12500</span>
<span id="L12501" rel="#L12501">12501</span>
<span id="L12502" rel="#L12502">12502</span>
<span id="L12503" rel="#L12503">12503</span>
<span id="L12504" rel="#L12504">12504</span>
<span id="L12505" rel="#L12505">12505</span>
<span id="L12506" rel="#L12506">12506</span>
<span id="L12507" rel="#L12507">12507</span>
<span id="L12508" rel="#L12508">12508</span>
<span id="L12509" rel="#L12509">12509</span>
<span id="L12510" rel="#L12510">12510</span>
<span id="L12511" rel="#L12511">12511</span>
<span id="L12512" rel="#L12512">12512</span>
<span id="L12513" rel="#L12513">12513</span>
<span id="L12514" rel="#L12514">12514</span>
<span id="L12515" rel="#L12515">12515</span>
<span id="L12516" rel="#L12516">12516</span>
<span id="L12517" rel="#L12517">12517</span>
<span id="L12518" rel="#L12518">12518</span>
<span id="L12519" rel="#L12519">12519</span>
<span id="L12520" rel="#L12520">12520</span>
<span id="L12521" rel="#L12521">12521</span>
<span id="L12522" rel="#L12522">12522</span>
<span id="L12523" rel="#L12523">12523</span>
<span id="L12524" rel="#L12524">12524</span>
<span id="L12525" rel="#L12525">12525</span>
<span id="L12526" rel="#L12526">12526</span>
<span id="L12527" rel="#L12527">12527</span>
<span id="L12528" rel="#L12528">12528</span>
<span id="L12529" rel="#L12529">12529</span>
<span id="L12530" rel="#L12530">12530</span>
<span id="L12531" rel="#L12531">12531</span>
<span id="L12532" rel="#L12532">12532</span>
<span id="L12533" rel="#L12533">12533</span>
<span id="L12534" rel="#L12534">12534</span>
<span id="L12535" rel="#L12535">12535</span>
<span id="L12536" rel="#L12536">12536</span>
<span id="L12537" rel="#L12537">12537</span>
<span id="L12538" rel="#L12538">12538</span>
<span id="L12539" rel="#L12539">12539</span>
<span id="L12540" rel="#L12540">12540</span>
<span id="L12541" rel="#L12541">12541</span>
<span id="L12542" rel="#L12542">12542</span>
<span id="L12543" rel="#L12543">12543</span>
<span id="L12544" rel="#L12544">12544</span>
<span id="L12545" rel="#L12545">12545</span>
<span id="L12546" rel="#L12546">12546</span>
<span id="L12547" rel="#L12547">12547</span>
<span id="L12548" rel="#L12548">12548</span>
<span id="L12549" rel="#L12549">12549</span>
<span id="L12550" rel="#L12550">12550</span>
<span id="L12551" rel="#L12551">12551</span>
<span id="L12552" rel="#L12552">12552</span>
<span id="L12553" rel="#L12553">12553</span>
<span id="L12554" rel="#L12554">12554</span>
<span id="L12555" rel="#L12555">12555</span>
<span id="L12556" rel="#L12556">12556</span>
<span id="L12557" rel="#L12557">12557</span>
<span id="L12558" rel="#L12558">12558</span>
<span id="L12559" rel="#L12559">12559</span>
<span id="L12560" rel="#L12560">12560</span>
<span id="L12561" rel="#L12561">12561</span>
<span id="L12562" rel="#L12562">12562</span>
<span id="L12563" rel="#L12563">12563</span>
<span id="L12564" rel="#L12564">12564</span>
<span id="L12565" rel="#L12565">12565</span>
<span id="L12566" rel="#L12566">12566</span>
<span id="L12567" rel="#L12567">12567</span>
<span id="L12568" rel="#L12568">12568</span>
<span id="L12569" rel="#L12569">12569</span>
<span id="L12570" rel="#L12570">12570</span>
<span id="L12571" rel="#L12571">12571</span>
<span id="L12572" rel="#L12572">12572</span>
<span id="L12573" rel="#L12573">12573</span>
<span id="L12574" rel="#L12574">12574</span>
<span id="L12575" rel="#L12575">12575</span>
<span id="L12576" rel="#L12576">12576</span>
<span id="L12577" rel="#L12577">12577</span>
<span id="L12578" rel="#L12578">12578</span>
<span id="L12579" rel="#L12579">12579</span>
<span id="L12580" rel="#L12580">12580</span>
<span id="L12581" rel="#L12581">12581</span>
<span id="L12582" rel="#L12582">12582</span>
<span id="L12583" rel="#L12583">12583</span>
<span id="L12584" rel="#L12584">12584</span>
<span id="L12585" rel="#L12585">12585</span>
<span id="L12586" rel="#L12586">12586</span>
<span id="L12587" rel="#L12587">12587</span>
<span id="L12588" rel="#L12588">12588</span>
<span id="L12589" rel="#L12589">12589</span>
<span id="L12590" rel="#L12590">12590</span>
<span id="L12591" rel="#L12591">12591</span>
<span id="L12592" rel="#L12592">12592</span>
<span id="L12593" rel="#L12593">12593</span>
<span id="L12594" rel="#L12594">12594</span>
<span id="L12595" rel="#L12595">12595</span>
<span id="L12596" rel="#L12596">12596</span>
<span id="L12597" rel="#L12597">12597</span>
<span id="L12598" rel="#L12598">12598</span>
<span id="L12599" rel="#L12599">12599</span>
<span id="L12600" rel="#L12600">12600</span>
<span id="L12601" rel="#L12601">12601</span>
<span id="L12602" rel="#L12602">12602</span>
<span id="L12603" rel="#L12603">12603</span>
<span id="L12604" rel="#L12604">12604</span>
<span id="L12605" rel="#L12605">12605</span>
<span id="L12606" rel="#L12606">12606</span>
<span id="L12607" rel="#L12607">12607</span>
<span id="L12608" rel="#L12608">12608</span>
<span id="L12609" rel="#L12609">12609</span>
<span id="L12610" rel="#L12610">12610</span>
<span id="L12611" rel="#L12611">12611</span>
<span id="L12612" rel="#L12612">12612</span>
<span id="L12613" rel="#L12613">12613</span>
<span id="L12614" rel="#L12614">12614</span>
<span id="L12615" rel="#L12615">12615</span>
<span id="L12616" rel="#L12616">12616</span>
<span id="L12617" rel="#L12617">12617</span>
<span id="L12618" rel="#L12618">12618</span>
<span id="L12619" rel="#L12619">12619</span>
<span id="L12620" rel="#L12620">12620</span>
<span id="L12621" rel="#L12621">12621</span>
<span id="L12622" rel="#L12622">12622</span>
<span id="L12623" rel="#L12623">12623</span>
<span id="L12624" rel="#L12624">12624</span>
<span id="L12625" rel="#L12625">12625</span>
<span id="L12626" rel="#L12626">12626</span>
<span id="L12627" rel="#L12627">12627</span>
<span id="L12628" rel="#L12628">12628</span>
<span id="L12629" rel="#L12629">12629</span>
<span id="L12630" rel="#L12630">12630</span>
<span id="L12631" rel="#L12631">12631</span>
<span id="L12632" rel="#L12632">12632</span>
<span id="L12633" rel="#L12633">12633</span>
<span id="L12634" rel="#L12634">12634</span>
<span id="L12635" rel="#L12635">12635</span>
<span id="L12636" rel="#L12636">12636</span>
<span id="L12637" rel="#L12637">12637</span>
<span id="L12638" rel="#L12638">12638</span>
<span id="L12639" rel="#L12639">12639</span>
<span id="L12640" rel="#L12640">12640</span>
<span id="L12641" rel="#L12641">12641</span>
<span id="L12642" rel="#L12642">12642</span>
<span id="L12643" rel="#L12643">12643</span>
<span id="L12644" rel="#L12644">12644</span>
<span id="L12645" rel="#L12645">12645</span>
<span id="L12646" rel="#L12646">12646</span>
<span id="L12647" rel="#L12647">12647</span>
<span id="L12648" rel="#L12648">12648</span>
<span id="L12649" rel="#L12649">12649</span>
<span id="L12650" rel="#L12650">12650</span>
<span id="L12651" rel="#L12651">12651</span>
<span id="L12652" rel="#L12652">12652</span>
<span id="L12653" rel="#L12653">12653</span>
<span id="L12654" rel="#L12654">12654</span>
<span id="L12655" rel="#L12655">12655</span>
<span id="L12656" rel="#L12656">12656</span>
<span id="L12657" rel="#L12657">12657</span>
<span id="L12658" rel="#L12658">12658</span>
<span id="L12659" rel="#L12659">12659</span>
<span id="L12660" rel="#L12660">12660</span>
<span id="L12661" rel="#L12661">12661</span>
<span id="L12662" rel="#L12662">12662</span>
<span id="L12663" rel="#L12663">12663</span>
<span id="L12664" rel="#L12664">12664</span>
<span id="L12665" rel="#L12665">12665</span>
<span id="L12666" rel="#L12666">12666</span>
<span id="L12667" rel="#L12667">12667</span>
<span id="L12668" rel="#L12668">12668</span>
<span id="L12669" rel="#L12669">12669</span>
<span id="L12670" rel="#L12670">12670</span>
<span id="L12671" rel="#L12671">12671</span>
<span id="L12672" rel="#L12672">12672</span>
<span id="L12673" rel="#L12673">12673</span>
<span id="L12674" rel="#L12674">12674</span>
<span id="L12675" rel="#L12675">12675</span>
<span id="L12676" rel="#L12676">12676</span>
<span id="L12677" rel="#L12677">12677</span>
<span id="L12678" rel="#L12678">12678</span>
<span id="L12679" rel="#L12679">12679</span>
<span id="L12680" rel="#L12680">12680</span>
<span id="L12681" rel="#L12681">12681</span>
<span id="L12682" rel="#L12682">12682</span>
<span id="L12683" rel="#L12683">12683</span>
<span id="L12684" rel="#L12684">12684</span>
<span id="L12685" rel="#L12685">12685</span>
<span id="L12686" rel="#L12686">12686</span>
<span id="L12687" rel="#L12687">12687</span>
<span id="L12688" rel="#L12688">12688</span>
<span id="L12689" rel="#L12689">12689</span>
<span id="L12690" rel="#L12690">12690</span>
<span id="L12691" rel="#L12691">12691</span>
<span id="L12692" rel="#L12692">12692</span>
<span id="L12693" rel="#L12693">12693</span>
<span id="L12694" rel="#L12694">12694</span>
<span id="L12695" rel="#L12695">12695</span>
<span id="L12696" rel="#L12696">12696</span>
<span id="L12697" rel="#L12697">12697</span>
<span id="L12698" rel="#L12698">12698</span>
<span id="L12699" rel="#L12699">12699</span>
<span id="L12700" rel="#L12700">12700</span>
<span id="L12701" rel="#L12701">12701</span>
<span id="L12702" rel="#L12702">12702</span>
<span id="L12703" rel="#L12703">12703</span>
<span id="L12704" rel="#L12704">12704</span>
<span id="L12705" rel="#L12705">12705</span>
<span id="L12706" rel="#L12706">12706</span>
<span id="L12707" rel="#L12707">12707</span>
<span id="L12708" rel="#L12708">12708</span>
<span id="L12709" rel="#L12709">12709</span>
<span id="L12710" rel="#L12710">12710</span>
<span id="L12711" rel="#L12711">12711</span>
<span id="L12712" rel="#L12712">12712</span>
<span id="L12713" rel="#L12713">12713</span>
<span id="L12714" rel="#L12714">12714</span>
<span id="L12715" rel="#L12715">12715</span>
<span id="L12716" rel="#L12716">12716</span>
<span id="L12717" rel="#L12717">12717</span>
<span id="L12718" rel="#L12718">12718</span>
<span id="L12719" rel="#L12719">12719</span>
<span id="L12720" rel="#L12720">12720</span>
<span id="L12721" rel="#L12721">12721</span>
<span id="L12722" rel="#L12722">12722</span>
<span id="L12723" rel="#L12723">12723</span>
<span id="L12724" rel="#L12724">12724</span>
<span id="L12725" rel="#L12725">12725</span>
<span id="L12726" rel="#L12726">12726</span>
<span id="L12727" rel="#L12727">12727</span>
<span id="L12728" rel="#L12728">12728</span>
<span id="L12729" rel="#L12729">12729</span>
<span id="L12730" rel="#L12730">12730</span>
<span id="L12731" rel="#L12731">12731</span>
<span id="L12732" rel="#L12732">12732</span>
<span id="L12733" rel="#L12733">12733</span>
<span id="L12734" rel="#L12734">12734</span>
<span id="L12735" rel="#L12735">12735</span>
<span id="L12736" rel="#L12736">12736</span>
<span id="L12737" rel="#L12737">12737</span>
<span id="L12738" rel="#L12738">12738</span>
<span id="L12739" rel="#L12739">12739</span>
<span id="L12740" rel="#L12740">12740</span>
<span id="L12741" rel="#L12741">12741</span>
<span id="L12742" rel="#L12742">12742</span>
<span id="L12743" rel="#L12743">12743</span>
<span id="L12744" rel="#L12744">12744</span>
<span id="L12745" rel="#L12745">12745</span>
<span id="L12746" rel="#L12746">12746</span>
<span id="L12747" rel="#L12747">12747</span>
<span id="L12748" rel="#L12748">12748</span>
<span id="L12749" rel="#L12749">12749</span>
<span id="L12750" rel="#L12750">12750</span>
<span id="L12751" rel="#L12751">12751</span>
<span id="L12752" rel="#L12752">12752</span>
<span id="L12753" rel="#L12753">12753</span>
<span id="L12754" rel="#L12754">12754</span>
<span id="L12755" rel="#L12755">12755</span>
<span id="L12756" rel="#L12756">12756</span>
<span id="L12757" rel="#L12757">12757</span>
<span id="L12758" rel="#L12758">12758</span>
<span id="L12759" rel="#L12759">12759</span>
<span id="L12760" rel="#L12760">12760</span>
<span id="L12761" rel="#L12761">12761</span>
<span id="L12762" rel="#L12762">12762</span>
<span id="L12763" rel="#L12763">12763</span>
<span id="L12764" rel="#L12764">12764</span>
<span id="L12765" rel="#L12765">12765</span>
<span id="L12766" rel="#L12766">12766</span>
<span id="L12767" rel="#L12767">12767</span>
<span id="L12768" rel="#L12768">12768</span>
<span id="L12769" rel="#L12769">12769</span>
<span id="L12770" rel="#L12770">12770</span>
<span id="L12771" rel="#L12771">12771</span>
<span id="L12772" rel="#L12772">12772</span>
<span id="L12773" rel="#L12773">12773</span>
<span id="L12774" rel="#L12774">12774</span>
<span id="L12775" rel="#L12775">12775</span>
<span id="L12776" rel="#L12776">12776</span>
<span id="L12777" rel="#L12777">12777</span>
<span id="L12778" rel="#L12778">12778</span>
<span id="L12779" rel="#L12779">12779</span>
<span id="L12780" rel="#L12780">12780</span>
<span id="L12781" rel="#L12781">12781</span>
<span id="L12782" rel="#L12782">12782</span>
<span id="L12783" rel="#L12783">12783</span>
<span id="L12784" rel="#L12784">12784</span>
<span id="L12785" rel="#L12785">12785</span>
<span id="L12786" rel="#L12786">12786</span>
<span id="L12787" rel="#L12787">12787</span>
<span id="L12788" rel="#L12788">12788</span>
<span id="L12789" rel="#L12789">12789</span>
<span id="L12790" rel="#L12790">12790</span>
<span id="L12791" rel="#L12791">12791</span>
<span id="L12792" rel="#L12792">12792</span>
<span id="L12793" rel="#L12793">12793</span>
<span id="L12794" rel="#L12794">12794</span>
<span id="L12795" rel="#L12795">12795</span>
<span id="L12796" rel="#L12796">12796</span>
<span id="L12797" rel="#L12797">12797</span>
<span id="L12798" rel="#L12798">12798</span>
<span id="L12799" rel="#L12799">12799</span>
<span id="L12800" rel="#L12800">12800</span>
<span id="L12801" rel="#L12801">12801</span>
<span id="L12802" rel="#L12802">12802</span>
<span id="L12803" rel="#L12803">12803</span>
<span id="L12804" rel="#L12804">12804</span>
<span id="L12805" rel="#L12805">12805</span>
<span id="L12806" rel="#L12806">12806</span>
<span id="L12807" rel="#L12807">12807</span>
<span id="L12808" rel="#L12808">12808</span>
<span id="L12809" rel="#L12809">12809</span>
<span id="L12810" rel="#L12810">12810</span>
<span id="L12811" rel="#L12811">12811</span>
<span id="L12812" rel="#L12812">12812</span>
<span id="L12813" rel="#L12813">12813</span>
<span id="L12814" rel="#L12814">12814</span>
<span id="L12815" rel="#L12815">12815</span>
<span id="L12816" rel="#L12816">12816</span>
<span id="L12817" rel="#L12817">12817</span>
<span id="L12818" rel="#L12818">12818</span>
<span id="L12819" rel="#L12819">12819</span>
<span id="L12820" rel="#L12820">12820</span>
<span id="L12821" rel="#L12821">12821</span>
<span id="L12822" rel="#L12822">12822</span>
<span id="L12823" rel="#L12823">12823</span>
<span id="L12824" rel="#L12824">12824</span>
<span id="L12825" rel="#L12825">12825</span>
<span id="L12826" rel="#L12826">12826</span>
<span id="L12827" rel="#L12827">12827</span>
<span id="L12828" rel="#L12828">12828</span>
<span id="L12829" rel="#L12829">12829</span>
<span id="L12830" rel="#L12830">12830</span>
<span id="L12831" rel="#L12831">12831</span>
<span id="L12832" rel="#L12832">12832</span>
<span id="L12833" rel="#L12833">12833</span>
<span id="L12834" rel="#L12834">12834</span>
<span id="L12835" rel="#L12835">12835</span>
<span id="L12836" rel="#L12836">12836</span>
<span id="L12837" rel="#L12837">12837</span>
<span id="L12838" rel="#L12838">12838</span>
<span id="L12839" rel="#L12839">12839</span>
<span id="L12840" rel="#L12840">12840</span>
<span id="L12841" rel="#L12841">12841</span>
<span id="L12842" rel="#L12842">12842</span>
<span id="L12843" rel="#L12843">12843</span>
<span id="L12844" rel="#L12844">12844</span>
<span id="L12845" rel="#L12845">12845</span>
<span id="L12846" rel="#L12846">12846</span>
<span id="L12847" rel="#L12847">12847</span>
<span id="L12848" rel="#L12848">12848</span>
<span id="L12849" rel="#L12849">12849</span>
<span id="L12850" rel="#L12850">12850</span>
<span id="L12851" rel="#L12851">12851</span>
<span id="L12852" rel="#L12852">12852</span>
<span id="L12853" rel="#L12853">12853</span>
<span id="L12854" rel="#L12854">12854</span>
<span id="L12855" rel="#L12855">12855</span>
<span id="L12856" rel="#L12856">12856</span>
<span id="L12857" rel="#L12857">12857</span>
<span id="L12858" rel="#L12858">12858</span>
<span id="L12859" rel="#L12859">12859</span>
<span id="L12860" rel="#L12860">12860</span>
<span id="L12861" rel="#L12861">12861</span>
<span id="L12862" rel="#L12862">12862</span>
<span id="L12863" rel="#L12863">12863</span>
<span id="L12864" rel="#L12864">12864</span>
<span id="L12865" rel="#L12865">12865</span>
<span id="L12866" rel="#L12866">12866</span>
<span id="L12867" rel="#L12867">12867</span>
<span id="L12868" rel="#L12868">12868</span>
<span id="L12869" rel="#L12869">12869</span>
<span id="L12870" rel="#L12870">12870</span>
<span id="L12871" rel="#L12871">12871</span>
<span id="L12872" rel="#L12872">12872</span>
<span id="L12873" rel="#L12873">12873</span>
<span id="L12874" rel="#L12874">12874</span>
<span id="L12875" rel="#L12875">12875</span>
<span id="L12876" rel="#L12876">12876</span>
<span id="L12877" rel="#L12877">12877</span>
<span id="L12878" rel="#L12878">12878</span>
<span id="L12879" rel="#L12879">12879</span>
<span id="L12880" rel="#L12880">12880</span>
<span id="L12881" rel="#L12881">12881</span>
<span id="L12882" rel="#L12882">12882</span>
<span id="L12883" rel="#L12883">12883</span>
<span id="L12884" rel="#L12884">12884</span>
<span id="L12885" rel="#L12885">12885</span>
<span id="L12886" rel="#L12886">12886</span>
<span id="L12887" rel="#L12887">12887</span>
<span id="L12888" rel="#L12888">12888</span>
<span id="L12889" rel="#L12889">12889</span>
<span id="L12890" rel="#L12890">12890</span>
<span id="L12891" rel="#L12891">12891</span>
<span id="L12892" rel="#L12892">12892</span>
<span id="L12893" rel="#L12893">12893</span>
<span id="L12894" rel="#L12894">12894</span>
<span id="L12895" rel="#L12895">12895</span>
<span id="L12896" rel="#L12896">12896</span>
<span id="L12897" rel="#L12897">12897</span>
<span id="L12898" rel="#L12898">12898</span>
<span id="L12899" rel="#L12899">12899</span>
<span id="L12900" rel="#L12900">12900</span>
<span id="L12901" rel="#L12901">12901</span>
<span id="L12902" rel="#L12902">12902</span>
<span id="L12903" rel="#L12903">12903</span>
<span id="L12904" rel="#L12904">12904</span>
<span id="L12905" rel="#L12905">12905</span>
<span id="L12906" rel="#L12906">12906</span>
<span id="L12907" rel="#L12907">12907</span>
<span id="L12908" rel="#L12908">12908</span>
<span id="L12909" rel="#L12909">12909</span>
<span id="L12910" rel="#L12910">12910</span>
<span id="L12911" rel="#L12911">12911</span>
<span id="L12912" rel="#L12912">12912</span>
<span id="L12913" rel="#L12913">12913</span>
<span id="L12914" rel="#L12914">12914</span>
<span id="L12915" rel="#L12915">12915</span>
<span id="L12916" rel="#L12916">12916</span>
<span id="L12917" rel="#L12917">12917</span>
<span id="L12918" rel="#L12918">12918</span>
<span id="L12919" rel="#L12919">12919</span>
<span id="L12920" rel="#L12920">12920</span>
<span id="L12921" rel="#L12921">12921</span>
<span id="L12922" rel="#L12922">12922</span>
<span id="L12923" rel="#L12923">12923</span>
<span id="L12924" rel="#L12924">12924</span>
<span id="L12925" rel="#L12925">12925</span>
<span id="L12926" rel="#L12926">12926</span>
<span id="L12927" rel="#L12927">12927</span>
<span id="L12928" rel="#L12928">12928</span>
<span id="L12929" rel="#L12929">12929</span>
<span id="L12930" rel="#L12930">12930</span>
<span id="L12931" rel="#L12931">12931</span>
<span id="L12932" rel="#L12932">12932</span>
<span id="L12933" rel="#L12933">12933</span>
<span id="L12934" rel="#L12934">12934</span>
<span id="L12935" rel="#L12935">12935</span>
<span id="L12936" rel="#L12936">12936</span>
<span id="L12937" rel="#L12937">12937</span>
<span id="L12938" rel="#L12938">12938</span>
<span id="L12939" rel="#L12939">12939</span>
<span id="L12940" rel="#L12940">12940</span>
<span id="L12941" rel="#L12941">12941</span>
<span id="L12942" rel="#L12942">12942</span>
<span id="L12943" rel="#L12943">12943</span>
<span id="L12944" rel="#L12944">12944</span>
<span id="L12945" rel="#L12945">12945</span>
<span id="L12946" rel="#L12946">12946</span>
<span id="L12947" rel="#L12947">12947</span>
<span id="L12948" rel="#L12948">12948</span>
<span id="L12949" rel="#L12949">12949</span>
<span id="L12950" rel="#L12950">12950</span>
<span id="L12951" rel="#L12951">12951</span>
<span id="L12952" rel="#L12952">12952</span>
<span id="L12953" rel="#L12953">12953</span>
<span id="L12954" rel="#L12954">12954</span>
<span id="L12955" rel="#L12955">12955</span>
<span id="L12956" rel="#L12956">12956</span>
<span id="L12957" rel="#L12957">12957</span>
<span id="L12958" rel="#L12958">12958</span>
<span id="L12959" rel="#L12959">12959</span>
<span id="L12960" rel="#L12960">12960</span>
<span id="L12961" rel="#L12961">12961</span>
<span id="L12962" rel="#L12962">12962</span>
<span id="L12963" rel="#L12963">12963</span>
<span id="L12964" rel="#L12964">12964</span>
<span id="L12965" rel="#L12965">12965</span>
<span id="L12966" rel="#L12966">12966</span>
<span id="L12967" rel="#L12967">12967</span>
<span id="L12968" rel="#L12968">12968</span>
<span id="L12969" rel="#L12969">12969</span>
<span id="L12970" rel="#L12970">12970</span>
<span id="L12971" rel="#L12971">12971</span>
<span id="L12972" rel="#L12972">12972</span>
<span id="L12973" rel="#L12973">12973</span>
<span id="L12974" rel="#L12974">12974</span>
<span id="L12975" rel="#L12975">12975</span>
<span id="L12976" rel="#L12976">12976</span>
<span id="L12977" rel="#L12977">12977</span>
<span id="L12978" rel="#L12978">12978</span>
<span id="L12979" rel="#L12979">12979</span>
<span id="L12980" rel="#L12980">12980</span>
<span id="L12981" rel="#L12981">12981</span>
<span id="L12982" rel="#L12982">12982</span>
<span id="L12983" rel="#L12983">12983</span>
<span id="L12984" rel="#L12984">12984</span>
<span id="L12985" rel="#L12985">12985</span>
<span id="L12986" rel="#L12986">12986</span>
<span id="L12987" rel="#L12987">12987</span>
<span id="L12988" rel="#L12988">12988</span>
<span id="L12989" rel="#L12989">12989</span>
<span id="L12990" rel="#L12990">12990</span>
<span id="L12991" rel="#L12991">12991</span>
<span id="L12992" rel="#L12992">12992</span>
<span id="L12993" rel="#L12993">12993</span>
<span id="L12994" rel="#L12994">12994</span>
<span id="L12995" rel="#L12995">12995</span>
<span id="L12996" rel="#L12996">12996</span>
<span id="L12997" rel="#L12997">12997</span>
<span id="L12998" rel="#L12998">12998</span>
<span id="L12999" rel="#L12999">12999</span>
<span id="L13000" rel="#L13000">13000</span>
<span id="L13001" rel="#L13001">13001</span>
<span id="L13002" rel="#L13002">13002</span>
<span id="L13003" rel="#L13003">13003</span>
<span id="L13004" rel="#L13004">13004</span>
<span id="L13005" rel="#L13005">13005</span>
<span id="L13006" rel="#L13006">13006</span>
<span id="L13007" rel="#L13007">13007</span>
<span id="L13008" rel="#L13008">13008</span>
<span id="L13009" rel="#L13009">13009</span>
<span id="L13010" rel="#L13010">13010</span>
<span id="L13011" rel="#L13011">13011</span>
<span id="L13012" rel="#L13012">13012</span>
<span id="L13013" rel="#L13013">13013</span>
<span id="L13014" rel="#L13014">13014</span>
<span id="L13015" rel="#L13015">13015</span>
<span id="L13016" rel="#L13016">13016</span>
<span id="L13017" rel="#L13017">13017</span>
<span id="L13018" rel="#L13018">13018</span>
<span id="L13019" rel="#L13019">13019</span>
<span id="L13020" rel="#L13020">13020</span>
<span id="L13021" rel="#L13021">13021</span>
<span id="L13022" rel="#L13022">13022</span>
<span id="L13023" rel="#L13023">13023</span>
<span id="L13024" rel="#L13024">13024</span>
<span id="L13025" rel="#L13025">13025</span>
<span id="L13026" rel="#L13026">13026</span>
<span id="L13027" rel="#L13027">13027</span>
<span id="L13028" rel="#L13028">13028</span>
<span id="L13029" rel="#L13029">13029</span>
<span id="L13030" rel="#L13030">13030</span>
<span id="L13031" rel="#L13031">13031</span>
<span id="L13032" rel="#L13032">13032</span>
<span id="L13033" rel="#L13033">13033</span>
<span id="L13034" rel="#L13034">13034</span>
<span id="L13035" rel="#L13035">13035</span>
<span id="L13036" rel="#L13036">13036</span>
<span id="L13037" rel="#L13037">13037</span>
<span id="L13038" rel="#L13038">13038</span>
<span id="L13039" rel="#L13039">13039</span>
<span id="L13040" rel="#L13040">13040</span>
<span id="L13041" rel="#L13041">13041</span>
<span id="L13042" rel="#L13042">13042</span>
<span id="L13043" rel="#L13043">13043</span>
<span id="L13044" rel="#L13044">13044</span>
<span id="L13045" rel="#L13045">13045</span>
<span id="L13046" rel="#L13046">13046</span>
<span id="L13047" rel="#L13047">13047</span>
<span id="L13048" rel="#L13048">13048</span>
<span id="L13049" rel="#L13049">13049</span>
<span id="L13050" rel="#L13050">13050</span>
<span id="L13051" rel="#L13051">13051</span>
<span id="L13052" rel="#L13052">13052</span>
<span id="L13053" rel="#L13053">13053</span>
<span id="L13054" rel="#L13054">13054</span>
<span id="L13055" rel="#L13055">13055</span>
<span id="L13056" rel="#L13056">13056</span>
<span id="L13057" rel="#L13057">13057</span>
<span id="L13058" rel="#L13058">13058</span>
<span id="L13059" rel="#L13059">13059</span>
<span id="L13060" rel="#L13060">13060</span>
<span id="L13061" rel="#L13061">13061</span>
<span id="L13062" rel="#L13062">13062</span>
<span id="L13063" rel="#L13063">13063</span>
<span id="L13064" rel="#L13064">13064</span>
<span id="L13065" rel="#L13065">13065</span>
<span id="L13066" rel="#L13066">13066</span>
<span id="L13067" rel="#L13067">13067</span>
<span id="L13068" rel="#L13068">13068</span>
<span id="L13069" rel="#L13069">13069</span>
<span id="L13070" rel="#L13070">13070</span>
<span id="L13071" rel="#L13071">13071</span>
<span id="L13072" rel="#L13072">13072</span>
<span id="L13073" rel="#L13073">13073</span>
<span id="L13074" rel="#L13074">13074</span>
<span id="L13075" rel="#L13075">13075</span>
<span id="L13076" rel="#L13076">13076</span>
<span id="L13077" rel="#L13077">13077</span>
<span id="L13078" rel="#L13078">13078</span>
<span id="L13079" rel="#L13079">13079</span>
<span id="L13080" rel="#L13080">13080</span>
<span id="L13081" rel="#L13081">13081</span>
<span id="L13082" rel="#L13082">13082</span>
<span id="L13083" rel="#L13083">13083</span>
<span id="L13084" rel="#L13084">13084</span>
<span id="L13085" rel="#L13085">13085</span>
<span id="L13086" rel="#L13086">13086</span>
<span id="L13087" rel="#L13087">13087</span>
<span id="L13088" rel="#L13088">13088</span>
<span id="L13089" rel="#L13089">13089</span>
<span id="L13090" rel="#L13090">13090</span>
<span id="L13091" rel="#L13091">13091</span>
<span id="L13092" rel="#L13092">13092</span>
<span id="L13093" rel="#L13093">13093</span>
<span id="L13094" rel="#L13094">13094</span>
<span id="L13095" rel="#L13095">13095</span>
<span id="L13096" rel="#L13096">13096</span>
<span id="L13097" rel="#L13097">13097</span>
<span id="L13098" rel="#L13098">13098</span>
<span id="L13099" rel="#L13099">13099</span>
<span id="L13100" rel="#L13100">13100</span>
<span id="L13101" rel="#L13101">13101</span>
<span id="L13102" rel="#L13102">13102</span>
<span id="L13103" rel="#L13103">13103</span>
<span id="L13104" rel="#L13104">13104</span>
<span id="L13105" rel="#L13105">13105</span>
<span id="L13106" rel="#L13106">13106</span>
<span id="L13107" rel="#L13107">13107</span>
<span id="L13108" rel="#L13108">13108</span>
<span id="L13109" rel="#L13109">13109</span>
<span id="L13110" rel="#L13110">13110</span>
<span id="L13111" rel="#L13111">13111</span>
<span id="L13112" rel="#L13112">13112</span>
<span id="L13113" rel="#L13113">13113</span>
<span id="L13114" rel="#L13114">13114</span>
<span id="L13115" rel="#L13115">13115</span>
<span id="L13116" rel="#L13116">13116</span>
<span id="L13117" rel="#L13117">13117</span>
<span id="L13118" rel="#L13118">13118</span>
<span id="L13119" rel="#L13119">13119</span>
<span id="L13120" rel="#L13120">13120</span>
<span id="L13121" rel="#L13121">13121</span>
<span id="L13122" rel="#L13122">13122</span>
<span id="L13123" rel="#L13123">13123</span>
<span id="L13124" rel="#L13124">13124</span>
<span id="L13125" rel="#L13125">13125</span>
<span id="L13126" rel="#L13126">13126</span>
<span id="L13127" rel="#L13127">13127</span>
<span id="L13128" rel="#L13128">13128</span>
<span id="L13129" rel="#L13129">13129</span>
<span id="L13130" rel="#L13130">13130</span>
<span id="L13131" rel="#L13131">13131</span>
<span id="L13132" rel="#L13132">13132</span>
<span id="L13133" rel="#L13133">13133</span>
<span id="L13134" rel="#L13134">13134</span>
<span id="L13135" rel="#L13135">13135</span>
<span id="L13136" rel="#L13136">13136</span>
<span id="L13137" rel="#L13137">13137</span>
<span id="L13138" rel="#L13138">13138</span>
<span id="L13139" rel="#L13139">13139</span>
<span id="L13140" rel="#L13140">13140</span>
<span id="L13141" rel="#L13141">13141</span>
<span id="L13142" rel="#L13142">13142</span>
<span id="L13143" rel="#L13143">13143</span>
<span id="L13144" rel="#L13144">13144</span>
<span id="L13145" rel="#L13145">13145</span>
<span id="L13146" rel="#L13146">13146</span>
<span id="L13147" rel="#L13147">13147</span>
<span id="L13148" rel="#L13148">13148</span>
<span id="L13149" rel="#L13149">13149</span>
<span id="L13150" rel="#L13150">13150</span>
<span id="L13151" rel="#L13151">13151</span>
<span id="L13152" rel="#L13152">13152</span>
<span id="L13153" rel="#L13153">13153</span>
<span id="L13154" rel="#L13154">13154</span>
<span id="L13155" rel="#L13155">13155</span>
<span id="L13156" rel="#L13156">13156</span>
<span id="L13157" rel="#L13157">13157</span>
<span id="L13158" rel="#L13158">13158</span>
<span id="L13159" rel="#L13159">13159</span>
<span id="L13160" rel="#L13160">13160</span>
<span id="L13161" rel="#L13161">13161</span>
<span id="L13162" rel="#L13162">13162</span>
<span id="L13163" rel="#L13163">13163</span>
<span id="L13164" rel="#L13164">13164</span>
<span id="L13165" rel="#L13165">13165</span>
<span id="L13166" rel="#L13166">13166</span>
<span id="L13167" rel="#L13167">13167</span>
<span id="L13168" rel="#L13168">13168</span>
<span id="L13169" rel="#L13169">13169</span>
<span id="L13170" rel="#L13170">13170</span>
<span id="L13171" rel="#L13171">13171</span>
<span id="L13172" rel="#L13172">13172</span>
<span id="L13173" rel="#L13173">13173</span>
<span id="L13174" rel="#L13174">13174</span>
<span id="L13175" rel="#L13175">13175</span>
<span id="L13176" rel="#L13176">13176</span>
<span id="L13177" rel="#L13177">13177</span>
<span id="L13178" rel="#L13178">13178</span>
<span id="L13179" rel="#L13179">13179</span>
<span id="L13180" rel="#L13180">13180</span>
<span id="L13181" rel="#L13181">13181</span>
<span id="L13182" rel="#L13182">13182</span>
<span id="L13183" rel="#L13183">13183</span>
<span id="L13184" rel="#L13184">13184</span>
<span id="L13185" rel="#L13185">13185</span>
<span id="L13186" rel="#L13186">13186</span>
<span id="L13187" rel="#L13187">13187</span>
<span id="L13188" rel="#L13188">13188</span>
<span id="L13189" rel="#L13189">13189</span>
<span id="L13190" rel="#L13190">13190</span>
<span id="L13191" rel="#L13191">13191</span>
<span id="L13192" rel="#L13192">13192</span>
<span id="L13193" rel="#L13193">13193</span>
<span id="L13194" rel="#L13194">13194</span>
<span id="L13195" rel="#L13195">13195</span>
<span id="L13196" rel="#L13196">13196</span>
<span id="L13197" rel="#L13197">13197</span>
<span id="L13198" rel="#L13198">13198</span>
<span id="L13199" rel="#L13199">13199</span>
<span id="L13200" rel="#L13200">13200</span>
<span id="L13201" rel="#L13201">13201</span>
<span id="L13202" rel="#L13202">13202</span>
<span id="L13203" rel="#L13203">13203</span>
<span id="L13204" rel="#L13204">13204</span>
<span id="L13205" rel="#L13205">13205</span>
<span id="L13206" rel="#L13206">13206</span>
<span id="L13207" rel="#L13207">13207</span>
<span id="L13208" rel="#L13208">13208</span>
<span id="L13209" rel="#L13209">13209</span>
<span id="L13210" rel="#L13210">13210</span>
<span id="L13211" rel="#L13211">13211</span>
<span id="L13212" rel="#L13212">13212</span>
<span id="L13213" rel="#L13213">13213</span>
<span id="L13214" rel="#L13214">13214</span>
<span id="L13215" rel="#L13215">13215</span>
<span id="L13216" rel="#L13216">13216</span>
<span id="L13217" rel="#L13217">13217</span>
<span id="L13218" rel="#L13218">13218</span>
<span id="L13219" rel="#L13219">13219</span>
<span id="L13220" rel="#L13220">13220</span>
<span id="L13221" rel="#L13221">13221</span>
<span id="L13222" rel="#L13222">13222</span>
<span id="L13223" rel="#L13223">13223</span>
<span id="L13224" rel="#L13224">13224</span>
<span id="L13225" rel="#L13225">13225</span>
<span id="L13226" rel="#L13226">13226</span>
<span id="L13227" rel="#L13227">13227</span>
<span id="L13228" rel="#L13228">13228</span>
<span id="L13229" rel="#L13229">13229</span>
<span id="L13230" rel="#L13230">13230</span>
<span id="L13231" rel="#L13231">13231</span>
<span id="L13232" rel="#L13232">13232</span>
<span id="L13233" rel="#L13233">13233</span>
<span id="L13234" rel="#L13234">13234</span>
<span id="L13235" rel="#L13235">13235</span>
<span id="L13236" rel="#L13236">13236</span>
<span id="L13237" rel="#L13237">13237</span>
<span id="L13238" rel="#L13238">13238</span>
<span id="L13239" rel="#L13239">13239</span>
<span id="L13240" rel="#L13240">13240</span>
<span id="L13241" rel="#L13241">13241</span>
<span id="L13242" rel="#L13242">13242</span>
<span id="L13243" rel="#L13243">13243</span>
<span id="L13244" rel="#L13244">13244</span>
<span id="L13245" rel="#L13245">13245</span>
<span id="L13246" rel="#L13246">13246</span>
<span id="L13247" rel="#L13247">13247</span>
<span id="L13248" rel="#L13248">13248</span>
<span id="L13249" rel="#L13249">13249</span>
<span id="L13250" rel="#L13250">13250</span>
<span id="L13251" rel="#L13251">13251</span>
<span id="L13252" rel="#L13252">13252</span>
<span id="L13253" rel="#L13253">13253</span>
<span id="L13254" rel="#L13254">13254</span>
<span id="L13255" rel="#L13255">13255</span>
<span id="L13256" rel="#L13256">13256</span>
<span id="L13257" rel="#L13257">13257</span>
<span id="L13258" rel="#L13258">13258</span>
<span id="L13259" rel="#L13259">13259</span>
<span id="L13260" rel="#L13260">13260</span>
<span id="L13261" rel="#L13261">13261</span>
<span id="L13262" rel="#L13262">13262</span>
<span id="L13263" rel="#L13263">13263</span>
<span id="L13264" rel="#L13264">13264</span>
<span id="L13265" rel="#L13265">13265</span>
<span id="L13266" rel="#L13266">13266</span>
<span id="L13267" rel="#L13267">13267</span>
<span id="L13268" rel="#L13268">13268</span>
<span id="L13269" rel="#L13269">13269</span>
<span id="L13270" rel="#L13270">13270</span>
<span id="L13271" rel="#L13271">13271</span>
<span id="L13272" rel="#L13272">13272</span>
<span id="L13273" rel="#L13273">13273</span>
<span id="L13274" rel="#L13274">13274</span>
<span id="L13275" rel="#L13275">13275</span>
<span id="L13276" rel="#L13276">13276</span>
<span id="L13277" rel="#L13277">13277</span>
<span id="L13278" rel="#L13278">13278</span>
<span id="L13279" rel="#L13279">13279</span>
<span id="L13280" rel="#L13280">13280</span>
<span id="L13281" rel="#L13281">13281</span>
<span id="L13282" rel="#L13282">13282</span>
<span id="L13283" rel="#L13283">13283</span>
<span id="L13284" rel="#L13284">13284</span>
<span id="L13285" rel="#L13285">13285</span>
<span id="L13286" rel="#L13286">13286</span>
<span id="L13287" rel="#L13287">13287</span>
<span id="L13288" rel="#L13288">13288</span>
<span id="L13289" rel="#L13289">13289</span>
<span id="L13290" rel="#L13290">13290</span>
<span id="L13291" rel="#L13291">13291</span>
<span id="L13292" rel="#L13292">13292</span>
<span id="L13293" rel="#L13293">13293</span>
<span id="L13294" rel="#L13294">13294</span>
<span id="L13295" rel="#L13295">13295</span>
<span id="L13296" rel="#L13296">13296</span>
<span id="L13297" rel="#L13297">13297</span>
<span id="L13298" rel="#L13298">13298</span>
<span id="L13299" rel="#L13299">13299</span>
<span id="L13300" rel="#L13300">13300</span>
<span id="L13301" rel="#L13301">13301</span>
<span id="L13302" rel="#L13302">13302</span>
<span id="L13303" rel="#L13303">13303</span>
<span id="L13304" rel="#L13304">13304</span>
<span id="L13305" rel="#L13305">13305</span>
<span id="L13306" rel="#L13306">13306</span>
<span id="L13307" rel="#L13307">13307</span>
<span id="L13308" rel="#L13308">13308</span>
<span id="L13309" rel="#L13309">13309</span>
<span id="L13310" rel="#L13310">13310</span>
<span id="L13311" rel="#L13311">13311</span>
<span id="L13312" rel="#L13312">13312</span>
<span id="L13313" rel="#L13313">13313</span>
<span id="L13314" rel="#L13314">13314</span>
<span id="L13315" rel="#L13315">13315</span>
<span id="L13316" rel="#L13316">13316</span>
<span id="L13317" rel="#L13317">13317</span>
<span id="L13318" rel="#L13318">13318</span>
<span id="L13319" rel="#L13319">13319</span>
<span id="L13320" rel="#L13320">13320</span>
<span id="L13321" rel="#L13321">13321</span>
<span id="L13322" rel="#L13322">13322</span>
<span id="L13323" rel="#L13323">13323</span>
<span id="L13324" rel="#L13324">13324</span>
<span id="L13325" rel="#L13325">13325</span>
<span id="L13326" rel="#L13326">13326</span>
<span id="L13327" rel="#L13327">13327</span>
<span id="L13328" rel="#L13328">13328</span>
<span id="L13329" rel="#L13329">13329</span>
<span id="L13330" rel="#L13330">13330</span>
<span id="L13331" rel="#L13331">13331</span>
<span id="L13332" rel="#L13332">13332</span>
<span id="L13333" rel="#L13333">13333</span>
<span id="L13334" rel="#L13334">13334</span>
<span id="L13335" rel="#L13335">13335</span>
<span id="L13336" rel="#L13336">13336</span>
<span id="L13337" rel="#L13337">13337</span>
<span id="L13338" rel="#L13338">13338</span>
<span id="L13339" rel="#L13339">13339</span>
<span id="L13340" rel="#L13340">13340</span>
<span id="L13341" rel="#L13341">13341</span>
<span id="L13342" rel="#L13342">13342</span>
<span id="L13343" rel="#L13343">13343</span>
<span id="L13344" rel="#L13344">13344</span>
<span id="L13345" rel="#L13345">13345</span>
<span id="L13346" rel="#L13346">13346</span>
<span id="L13347" rel="#L13347">13347</span>
<span id="L13348" rel="#L13348">13348</span>
<span id="L13349" rel="#L13349">13349</span>
<span id="L13350" rel="#L13350">13350</span>
<span id="L13351" rel="#L13351">13351</span>
<span id="L13352" rel="#L13352">13352</span>
<span id="L13353" rel="#L13353">13353</span>
<span id="L13354" rel="#L13354">13354</span>
<span id="L13355" rel="#L13355">13355</span>
<span id="L13356" rel="#L13356">13356</span>
<span id="L13357" rel="#L13357">13357</span>
<span id="L13358" rel="#L13358">13358</span>
<span id="L13359" rel="#L13359">13359</span>
<span id="L13360" rel="#L13360">13360</span>
<span id="L13361" rel="#L13361">13361</span>
<span id="L13362" rel="#L13362">13362</span>
<span id="L13363" rel="#L13363">13363</span>
<span id="L13364" rel="#L13364">13364</span>
<span id="L13365" rel="#L13365">13365</span>
<span id="L13366" rel="#L13366">13366</span>
<span id="L13367" rel="#L13367">13367</span>
<span id="L13368" rel="#L13368">13368</span>
<span id="L13369" rel="#L13369">13369</span>
<span id="L13370" rel="#L13370">13370</span>
<span id="L13371" rel="#L13371">13371</span>
<span id="L13372" rel="#L13372">13372</span>
<span id="L13373" rel="#L13373">13373</span>
<span id="L13374" rel="#L13374">13374</span>
<span id="L13375" rel="#L13375">13375</span>
<span id="L13376" rel="#L13376">13376</span>
<span id="L13377" rel="#L13377">13377</span>
<span id="L13378" rel="#L13378">13378</span>
<span id="L13379" rel="#L13379">13379</span>
<span id="L13380" rel="#L13380">13380</span>
<span id="L13381" rel="#L13381">13381</span>
<span id="L13382" rel="#L13382">13382</span>
<span id="L13383" rel="#L13383">13383</span>
<span id="L13384" rel="#L13384">13384</span>
<span id="L13385" rel="#L13385">13385</span>
<span id="L13386" rel="#L13386">13386</span>
<span id="L13387" rel="#L13387">13387</span>
<span id="L13388" rel="#L13388">13388</span>
<span id="L13389" rel="#L13389">13389</span>
<span id="L13390" rel="#L13390">13390</span>
<span id="L13391" rel="#L13391">13391</span>
<span id="L13392" rel="#L13392">13392</span>
<span id="L13393" rel="#L13393">13393</span>
<span id="L13394" rel="#L13394">13394</span>
<span id="L13395" rel="#L13395">13395</span>
<span id="L13396" rel="#L13396">13396</span>
<span id="L13397" rel="#L13397">13397</span>
<span id="L13398" rel="#L13398">13398</span>
<span id="L13399" rel="#L13399">13399</span>
<span id="L13400" rel="#L13400">13400</span>
<span id="L13401" rel="#L13401">13401</span>
<span id="L13402" rel="#L13402">13402</span>
<span id="L13403" rel="#L13403">13403</span>
<span id="L13404" rel="#L13404">13404</span>
<span id="L13405" rel="#L13405">13405</span>
<span id="L13406" rel="#L13406">13406</span>
<span id="L13407" rel="#L13407">13407</span>
<span id="L13408" rel="#L13408">13408</span>
<span id="L13409" rel="#L13409">13409</span>
<span id="L13410" rel="#L13410">13410</span>
<span id="L13411" rel="#L13411">13411</span>
<span id="L13412" rel="#L13412">13412</span>
<span id="L13413" rel="#L13413">13413</span>
<span id="L13414" rel="#L13414">13414</span>
<span id="L13415" rel="#L13415">13415</span>
<span id="L13416" rel="#L13416">13416</span>
<span id="L13417" rel="#L13417">13417</span>
<span id="L13418" rel="#L13418">13418</span>
<span id="L13419" rel="#L13419">13419</span>
<span id="L13420" rel="#L13420">13420</span>
<span id="L13421" rel="#L13421">13421</span>
<span id="L13422" rel="#L13422">13422</span>
<span id="L13423" rel="#L13423">13423</span>
<span id="L13424" rel="#L13424">13424</span>
<span id="L13425" rel="#L13425">13425</span>
<span id="L13426" rel="#L13426">13426</span>
<span id="L13427" rel="#L13427">13427</span>
<span id="L13428" rel="#L13428">13428</span>
<span id="L13429" rel="#L13429">13429</span>
<span id="L13430" rel="#L13430">13430</span>
<span id="L13431" rel="#L13431">13431</span>
<span id="L13432" rel="#L13432">13432</span>
<span id="L13433" rel="#L13433">13433</span>
<span id="L13434" rel="#L13434">13434</span>
<span id="L13435" rel="#L13435">13435</span>
<span id="L13436" rel="#L13436">13436</span>
<span id="L13437" rel="#L13437">13437</span>
<span id="L13438" rel="#L13438">13438</span>
<span id="L13439" rel="#L13439">13439</span>
<span id="L13440" rel="#L13440">13440</span>
<span id="L13441" rel="#L13441">13441</span>
<span id="L13442" rel="#L13442">13442</span>
<span id="L13443" rel="#L13443">13443</span>
<span id="L13444" rel="#L13444">13444</span>
<span id="L13445" rel="#L13445">13445</span>
<span id="L13446" rel="#L13446">13446</span>
<span id="L13447" rel="#L13447">13447</span>
<span id="L13448" rel="#L13448">13448</span>
<span id="L13449" rel="#L13449">13449</span>
<span id="L13450" rel="#L13450">13450</span>
<span id="L13451" rel="#L13451">13451</span>
<span id="L13452" rel="#L13452">13452</span>
<span id="L13453" rel="#L13453">13453</span>
<span id="L13454" rel="#L13454">13454</span>
<span id="L13455" rel="#L13455">13455</span>
<span id="L13456" rel="#L13456">13456</span>
<span id="L13457" rel="#L13457">13457</span>
<span id="L13458" rel="#L13458">13458</span>
<span id="L13459" rel="#L13459">13459</span>
<span id="L13460" rel="#L13460">13460</span>
<span id="L13461" rel="#L13461">13461</span>
<span id="L13462" rel="#L13462">13462</span>
<span id="L13463" rel="#L13463">13463</span>
<span id="L13464" rel="#L13464">13464</span>
<span id="L13465" rel="#L13465">13465</span>
<span id="L13466" rel="#L13466">13466</span>
<span id="L13467" rel="#L13467">13467</span>
<span id="L13468" rel="#L13468">13468</span>
<span id="L13469" rel="#L13469">13469</span>
<span id="L13470" rel="#L13470">13470</span>
<span id="L13471" rel="#L13471">13471</span>
<span id="L13472" rel="#L13472">13472</span>
<span id="L13473" rel="#L13473">13473</span>
<span id="L13474" rel="#L13474">13474</span>
<span id="L13475" rel="#L13475">13475</span>
<span id="L13476" rel="#L13476">13476</span>
<span id="L13477" rel="#L13477">13477</span>
<span id="L13478" rel="#L13478">13478</span>
<span id="L13479" rel="#L13479">13479</span>
<span id="L13480" rel="#L13480">13480</span>
<span id="L13481" rel="#L13481">13481</span>
<span id="L13482" rel="#L13482">13482</span>
<span id="L13483" rel="#L13483">13483</span>
<span id="L13484" rel="#L13484">13484</span>
<span id="L13485" rel="#L13485">13485</span>
<span id="L13486" rel="#L13486">13486</span>
<span id="L13487" rel="#L13487">13487</span>
<span id="L13488" rel="#L13488">13488</span>
<span id="L13489" rel="#L13489">13489</span>
<span id="L13490" rel="#L13490">13490</span>
<span id="L13491" rel="#L13491">13491</span>
<span id="L13492" rel="#L13492">13492</span>
<span id="L13493" rel="#L13493">13493</span>
<span id="L13494" rel="#L13494">13494</span>
<span id="L13495" rel="#L13495">13495</span>
<span id="L13496" rel="#L13496">13496</span>
<span id="L13497" rel="#L13497">13497</span>
<span id="L13498" rel="#L13498">13498</span>
<span id="L13499" rel="#L13499">13499</span>
<span id="L13500" rel="#L13500">13500</span>
<span id="L13501" rel="#L13501">13501</span>
<span id="L13502" rel="#L13502">13502</span>
<span id="L13503" rel="#L13503">13503</span>
<span id="L13504" rel="#L13504">13504</span>
<span id="L13505" rel="#L13505">13505</span>
<span id="L13506" rel="#L13506">13506</span>
<span id="L13507" rel="#L13507">13507</span>
<span id="L13508" rel="#L13508">13508</span>
<span id="L13509" rel="#L13509">13509</span>
<span id="L13510" rel="#L13510">13510</span>
<span id="L13511" rel="#L13511">13511</span>
<span id="L13512" rel="#L13512">13512</span>
<span id="L13513" rel="#L13513">13513</span>
<span id="L13514" rel="#L13514">13514</span>
<span id="L13515" rel="#L13515">13515</span>
<span id="L13516" rel="#L13516">13516</span>
<span id="L13517" rel="#L13517">13517</span>
<span id="L13518" rel="#L13518">13518</span>
<span id="L13519" rel="#L13519">13519</span>
<span id="L13520" rel="#L13520">13520</span>
<span id="L13521" rel="#L13521">13521</span>
<span id="L13522" rel="#L13522">13522</span>
<span id="L13523" rel="#L13523">13523</span>
<span id="L13524" rel="#L13524">13524</span>
<span id="L13525" rel="#L13525">13525</span>
<span id="L13526" rel="#L13526">13526</span>
<span id="L13527" rel="#L13527">13527</span>
<span id="L13528" rel="#L13528">13528</span>
<span id="L13529" rel="#L13529">13529</span>
<span id="L13530" rel="#L13530">13530</span>
<span id="L13531" rel="#L13531">13531</span>
<span id="L13532" rel="#L13532">13532</span>
<span id="L13533" rel="#L13533">13533</span>
<span id="L13534" rel="#L13534">13534</span>
<span id="L13535" rel="#L13535">13535</span>
<span id="L13536" rel="#L13536">13536</span>
<span id="L13537" rel="#L13537">13537</span>
<span id="L13538" rel="#L13538">13538</span>
<span id="L13539" rel="#L13539">13539</span>
<span id="L13540" rel="#L13540">13540</span>
<span id="L13541" rel="#L13541">13541</span>
<span id="L13542" rel="#L13542">13542</span>
<span id="L13543" rel="#L13543">13543</span>
<span id="L13544" rel="#L13544">13544</span>
<span id="L13545" rel="#L13545">13545</span>
<span id="L13546" rel="#L13546">13546</span>
<span id="L13547" rel="#L13547">13547</span>
<span id="L13548" rel="#L13548">13548</span>
<span id="L13549" rel="#L13549">13549</span>
<span id="L13550" rel="#L13550">13550</span>
<span id="L13551" rel="#L13551">13551</span>
<span id="L13552" rel="#L13552">13552</span>
<span id="L13553" rel="#L13553">13553</span>
<span id="L13554" rel="#L13554">13554</span>
<span id="L13555" rel="#L13555">13555</span>
<span id="L13556" rel="#L13556">13556</span>
<span id="L13557" rel="#L13557">13557</span>
<span id="L13558" rel="#L13558">13558</span>
<span id="L13559" rel="#L13559">13559</span>
<span id="L13560" rel="#L13560">13560</span>
<span id="L13561" rel="#L13561">13561</span>
<span id="L13562" rel="#L13562">13562</span>
<span id="L13563" rel="#L13563">13563</span>
<span id="L13564" rel="#L13564">13564</span>
<span id="L13565" rel="#L13565">13565</span>
<span id="L13566" rel="#L13566">13566</span>
<span id="L13567" rel="#L13567">13567</span>
<span id="L13568" rel="#L13568">13568</span>
<span id="L13569" rel="#L13569">13569</span>
<span id="L13570" rel="#L13570">13570</span>
<span id="L13571" rel="#L13571">13571</span>
<span id="L13572" rel="#L13572">13572</span>
<span id="L13573" rel="#L13573">13573</span>
<span id="L13574" rel="#L13574">13574</span>
<span id="L13575" rel="#L13575">13575</span>
<span id="L13576" rel="#L13576">13576</span>
<span id="L13577" rel="#L13577">13577</span>
<span id="L13578" rel="#L13578">13578</span>
<span id="L13579" rel="#L13579">13579</span>
<span id="L13580" rel="#L13580">13580</span>
<span id="L13581" rel="#L13581">13581</span>
<span id="L13582" rel="#L13582">13582</span>
<span id="L13583" rel="#L13583">13583</span>
<span id="L13584" rel="#L13584">13584</span>
<span id="L13585" rel="#L13585">13585</span>
<span id="L13586" rel="#L13586">13586</span>
<span id="L13587" rel="#L13587">13587</span>
<span id="L13588" rel="#L13588">13588</span>
<span id="L13589" rel="#L13589">13589</span>
<span id="L13590" rel="#L13590">13590</span>
<span id="L13591" rel="#L13591">13591</span>
<span id="L13592" rel="#L13592">13592</span>
<span id="L13593" rel="#L13593">13593</span>
<span id="L13594" rel="#L13594">13594</span>
<span id="L13595" rel="#L13595">13595</span>
<span id="L13596" rel="#L13596">13596</span>
<span id="L13597" rel="#L13597">13597</span>
<span id="L13598" rel="#L13598">13598</span>
<span id="L13599" rel="#L13599">13599</span>
<span id="L13600" rel="#L13600">13600</span>
<span id="L13601" rel="#L13601">13601</span>
<span id="L13602" rel="#L13602">13602</span>
<span id="L13603" rel="#L13603">13603</span>
<span id="L13604" rel="#L13604">13604</span>
<span id="L13605" rel="#L13605">13605</span>
<span id="L13606" rel="#L13606">13606</span>
<span id="L13607" rel="#L13607">13607</span>
<span id="L13608" rel="#L13608">13608</span>
<span id="L13609" rel="#L13609">13609</span>
<span id="L13610" rel="#L13610">13610</span>
<span id="L13611" rel="#L13611">13611</span>
<span id="L13612" rel="#L13612">13612</span>
<span id="L13613" rel="#L13613">13613</span>
<span id="L13614" rel="#L13614">13614</span>
<span id="L13615" rel="#L13615">13615</span>
<span id="L13616" rel="#L13616">13616</span>
<span id="L13617" rel="#L13617">13617</span>
<span id="L13618" rel="#L13618">13618</span>
<span id="L13619" rel="#L13619">13619</span>
<span id="L13620" rel="#L13620">13620</span>
<span id="L13621" rel="#L13621">13621</span>
<span id="L13622" rel="#L13622">13622</span>
<span id="L13623" rel="#L13623">13623</span>
<span id="L13624" rel="#L13624">13624</span>
<span id="L13625" rel="#L13625">13625</span>
<span id="L13626" rel="#L13626">13626</span>
<span id="L13627" rel="#L13627">13627</span>
<span id="L13628" rel="#L13628">13628</span>
<span id="L13629" rel="#L13629">13629</span>
<span id="L13630" rel="#L13630">13630</span>
<span id="L13631" rel="#L13631">13631</span>
<span id="L13632" rel="#L13632">13632</span>
<span id="L13633" rel="#L13633">13633</span>
<span id="L13634" rel="#L13634">13634</span>
<span id="L13635" rel="#L13635">13635</span>
<span id="L13636" rel="#L13636">13636</span>
<span id="L13637" rel="#L13637">13637</span>
<span id="L13638" rel="#L13638">13638</span>
<span id="L13639" rel="#L13639">13639</span>
<span id="L13640" rel="#L13640">13640</span>
<span id="L13641" rel="#L13641">13641</span>
<span id="L13642" rel="#L13642">13642</span>
<span id="L13643" rel="#L13643">13643</span>
<span id="L13644" rel="#L13644">13644</span>
<span id="L13645" rel="#L13645">13645</span>
<span id="L13646" rel="#L13646">13646</span>
<span id="L13647" rel="#L13647">13647</span>
<span id="L13648" rel="#L13648">13648</span>
<span id="L13649" rel="#L13649">13649</span>
<span id="L13650" rel="#L13650">13650</span>
<span id="L13651" rel="#L13651">13651</span>
<span id="L13652" rel="#L13652">13652</span>
<span id="L13653" rel="#L13653">13653</span>
<span id="L13654" rel="#L13654">13654</span>
<span id="L13655" rel="#L13655">13655</span>
<span id="L13656" rel="#L13656">13656</span>
<span id="L13657" rel="#L13657">13657</span>
<span id="L13658" rel="#L13658">13658</span>
<span id="L13659" rel="#L13659">13659</span>
<span id="L13660" rel="#L13660">13660</span>
<span id="L13661" rel="#L13661">13661</span>
<span id="L13662" rel="#L13662">13662</span>
<span id="L13663" rel="#L13663">13663</span>
<span id="L13664" rel="#L13664">13664</span>
<span id="L13665" rel="#L13665">13665</span>
<span id="L13666" rel="#L13666">13666</span>
<span id="L13667" rel="#L13667">13667</span>
<span id="L13668" rel="#L13668">13668</span>
<span id="L13669" rel="#L13669">13669</span>
<span id="L13670" rel="#L13670">13670</span>
<span id="L13671" rel="#L13671">13671</span>
<span id="L13672" rel="#L13672">13672</span>
<span id="L13673" rel="#L13673">13673</span>
<span id="L13674" rel="#L13674">13674</span>
<span id="L13675" rel="#L13675">13675</span>
<span id="L13676" rel="#L13676">13676</span>
<span id="L13677" rel="#L13677">13677</span>
<span id="L13678" rel="#L13678">13678</span>
<span id="L13679" rel="#L13679">13679</span>
<span id="L13680" rel="#L13680">13680</span>
<span id="L13681" rel="#L13681">13681</span>
<span id="L13682" rel="#L13682">13682</span>
<span id="L13683" rel="#L13683">13683</span>
<span id="L13684" rel="#L13684">13684</span>
<span id="L13685" rel="#L13685">13685</span>
<span id="L13686" rel="#L13686">13686</span>
<span id="L13687" rel="#L13687">13687</span>
<span id="L13688" rel="#L13688">13688</span>
<span id="L13689" rel="#L13689">13689</span>
<span id="L13690" rel="#L13690">13690</span>
<span id="L13691" rel="#L13691">13691</span>
<span id="L13692" rel="#L13692">13692</span>
<span id="L13693" rel="#L13693">13693</span>
<span id="L13694" rel="#L13694">13694</span>
<span id="L13695" rel="#L13695">13695</span>
<span id="L13696" rel="#L13696">13696</span>
<span id="L13697" rel="#L13697">13697</span>
<span id="L13698" rel="#L13698">13698</span>
<span id="L13699" rel="#L13699">13699</span>
<span id="L13700" rel="#L13700">13700</span>
<span id="L13701" rel="#L13701">13701</span>
<span id="L13702" rel="#L13702">13702</span>
<span id="L13703" rel="#L13703">13703</span>
<span id="L13704" rel="#L13704">13704</span>
<span id="L13705" rel="#L13705">13705</span>
<span id="L13706" rel="#L13706">13706</span>
<span id="L13707" rel="#L13707">13707</span>
<span id="L13708" rel="#L13708">13708</span>
<span id="L13709" rel="#L13709">13709</span>
<span id="L13710" rel="#L13710">13710</span>
<span id="L13711" rel="#L13711">13711</span>
<span id="L13712" rel="#L13712">13712</span>
<span id="L13713" rel="#L13713">13713</span>
<span id="L13714" rel="#L13714">13714</span>
<span id="L13715" rel="#L13715">13715</span>
<span id="L13716" rel="#L13716">13716</span>
<span id="L13717" rel="#L13717">13717</span>
<span id="L13718" rel="#L13718">13718</span>
<span id="L13719" rel="#L13719">13719</span>
<span id="L13720" rel="#L13720">13720</span>
<span id="L13721" rel="#L13721">13721</span>
<span id="L13722" rel="#L13722">13722</span>
<span id="L13723" rel="#L13723">13723</span>
<span id="L13724" rel="#L13724">13724</span>
<span id="L13725" rel="#L13725">13725</span>
<span id="L13726" rel="#L13726">13726</span>
<span id="L13727" rel="#L13727">13727</span>
<span id="L13728" rel="#L13728">13728</span>
<span id="L13729" rel="#L13729">13729</span>
<span id="L13730" rel="#L13730">13730</span>
<span id="L13731" rel="#L13731">13731</span>
<span id="L13732" rel="#L13732">13732</span>
<span id="L13733" rel="#L13733">13733</span>
<span id="L13734" rel="#L13734">13734</span>
<span id="L13735" rel="#L13735">13735</span>
<span id="L13736" rel="#L13736">13736</span>
<span id="L13737" rel="#L13737">13737</span>
<span id="L13738" rel="#L13738">13738</span>
<span id="L13739" rel="#L13739">13739</span>
<span id="L13740" rel="#L13740">13740</span>
<span id="L13741" rel="#L13741">13741</span>
<span id="L13742" rel="#L13742">13742</span>
<span id="L13743" rel="#L13743">13743</span>
<span id="L13744" rel="#L13744">13744</span>
<span id="L13745" rel="#L13745">13745</span>
<span id="L13746" rel="#L13746">13746</span>
<span id="L13747" rel="#L13747">13747</span>
<span id="L13748" rel="#L13748">13748</span>
<span id="L13749" rel="#L13749">13749</span>
<span id="L13750" rel="#L13750">13750</span>
<span id="L13751" rel="#L13751">13751</span>
<span id="L13752" rel="#L13752">13752</span>
<span id="L13753" rel="#L13753">13753</span>
<span id="L13754" rel="#L13754">13754</span>
<span id="L13755" rel="#L13755">13755</span>
<span id="L13756" rel="#L13756">13756</span>
<span id="L13757" rel="#L13757">13757</span>
<span id="L13758" rel="#L13758">13758</span>
<span id="L13759" rel="#L13759">13759</span>
<span id="L13760" rel="#L13760">13760</span>
<span id="L13761" rel="#L13761">13761</span>
<span id="L13762" rel="#L13762">13762</span>
<span id="L13763" rel="#L13763">13763</span>
<span id="L13764" rel="#L13764">13764</span>
<span id="L13765" rel="#L13765">13765</span>
<span id="L13766" rel="#L13766">13766</span>
<span id="L13767" rel="#L13767">13767</span>
<span id="L13768" rel="#L13768">13768</span>
<span id="L13769" rel="#L13769">13769</span>
<span id="L13770" rel="#L13770">13770</span>
<span id="L13771" rel="#L13771">13771</span>
<span id="L13772" rel="#L13772">13772</span>
<span id="L13773" rel="#L13773">13773</span>
<span id="L13774" rel="#L13774">13774</span>
<span id="L13775" rel="#L13775">13775</span>
<span id="L13776" rel="#L13776">13776</span>
<span id="L13777" rel="#L13777">13777</span>
<span id="L13778" rel="#L13778">13778</span>
<span id="L13779" rel="#L13779">13779</span>
<span id="L13780" rel="#L13780">13780</span>
<span id="L13781" rel="#L13781">13781</span>
<span id="L13782" rel="#L13782">13782</span>
<span id="L13783" rel="#L13783">13783</span>
<span id="L13784" rel="#L13784">13784</span>
<span id="L13785" rel="#L13785">13785</span>
<span id="L13786" rel="#L13786">13786</span>
<span id="L13787" rel="#L13787">13787</span>
<span id="L13788" rel="#L13788">13788</span>
<span id="L13789" rel="#L13789">13789</span>
<span id="L13790" rel="#L13790">13790</span>
<span id="L13791" rel="#L13791">13791</span>
<span id="L13792" rel="#L13792">13792</span>
<span id="L13793" rel="#L13793">13793</span>
<span id="L13794" rel="#L13794">13794</span>
<span id="L13795" rel="#L13795">13795</span>
<span id="L13796" rel="#L13796">13796</span>
<span id="L13797" rel="#L13797">13797</span>
<span id="L13798" rel="#L13798">13798</span>
<span id="L13799" rel="#L13799">13799</span>
<span id="L13800" rel="#L13800">13800</span>
<span id="L13801" rel="#L13801">13801</span>
<span id="L13802" rel="#L13802">13802</span>
<span id="L13803" rel="#L13803">13803</span>
<span id="L13804" rel="#L13804">13804</span>
<span id="L13805" rel="#L13805">13805</span>
<span id="L13806" rel="#L13806">13806</span>
<span id="L13807" rel="#L13807">13807</span>
<span id="L13808" rel="#L13808">13808</span>
<span id="L13809" rel="#L13809">13809</span>
<span id="L13810" rel="#L13810">13810</span>
<span id="L13811" rel="#L13811">13811</span>
<span id="L13812" rel="#L13812">13812</span>
<span id="L13813" rel="#L13813">13813</span>
<span id="L13814" rel="#L13814">13814</span>
<span id="L13815" rel="#L13815">13815</span>
<span id="L13816" rel="#L13816">13816</span>
<span id="L13817" rel="#L13817">13817</span>
<span id="L13818" rel="#L13818">13818</span>
<span id="L13819" rel="#L13819">13819</span>
<span id="L13820" rel="#L13820">13820</span>
<span id="L13821" rel="#L13821">13821</span>
<span id="L13822" rel="#L13822">13822</span>
<span id="L13823" rel="#L13823">13823</span>
<span id="L13824" rel="#L13824">13824</span>
<span id="L13825" rel="#L13825">13825</span>
<span id="L13826" rel="#L13826">13826</span>
<span id="L13827" rel="#L13827">13827</span>
<span id="L13828" rel="#L13828">13828</span>
<span id="L13829" rel="#L13829">13829</span>
<span id="L13830" rel="#L13830">13830</span>
<span id="L13831" rel="#L13831">13831</span>
<span id="L13832" rel="#L13832">13832</span>
<span id="L13833" rel="#L13833">13833</span>
<span id="L13834" rel="#L13834">13834</span>
<span id="L13835" rel="#L13835">13835</span>
<span id="L13836" rel="#L13836">13836</span>
<span id="L13837" rel="#L13837">13837</span>
<span id="L13838" rel="#L13838">13838</span>
<span id="L13839" rel="#L13839">13839</span>
<span id="L13840" rel="#L13840">13840</span>
<span id="L13841" rel="#L13841">13841</span>
<span id="L13842" rel="#L13842">13842</span>
<span id="L13843" rel="#L13843">13843</span>
<span id="L13844" rel="#L13844">13844</span>
<span id="L13845" rel="#L13845">13845</span>
<span id="L13846" rel="#L13846">13846</span>
<span id="L13847" rel="#L13847">13847</span>
<span id="L13848" rel="#L13848">13848</span>
<span id="L13849" rel="#L13849">13849</span>
<span id="L13850" rel="#L13850">13850</span>
<span id="L13851" rel="#L13851">13851</span>
<span id="L13852" rel="#L13852">13852</span>
<span id="L13853" rel="#L13853">13853</span>
<span id="L13854" rel="#L13854">13854</span>
<span id="L13855" rel="#L13855">13855</span>
<span id="L13856" rel="#L13856">13856</span>
<span id="L13857" rel="#L13857">13857</span>
<span id="L13858" rel="#L13858">13858</span>
<span id="L13859" rel="#L13859">13859</span>
<span id="L13860" rel="#L13860">13860</span>
<span id="L13861" rel="#L13861">13861</span>
<span id="L13862" rel="#L13862">13862</span>
<span id="L13863" rel="#L13863">13863</span>
<span id="L13864" rel="#L13864">13864</span>
<span id="L13865" rel="#L13865">13865</span>
<span id="L13866" rel="#L13866">13866</span>
<span id="L13867" rel="#L13867">13867</span>
<span id="L13868" rel="#L13868">13868</span>
<span id="L13869" rel="#L13869">13869</span>
<span id="L13870" rel="#L13870">13870</span>
<span id="L13871" rel="#L13871">13871</span>
<span id="L13872" rel="#L13872">13872</span>
<span id="L13873" rel="#L13873">13873</span>
<span id="L13874" rel="#L13874">13874</span>
<span id="L13875" rel="#L13875">13875</span>
<span id="L13876" rel="#L13876">13876</span>
<span id="L13877" rel="#L13877">13877</span>
<span id="L13878" rel="#L13878">13878</span>
<span id="L13879" rel="#L13879">13879</span>
<span id="L13880" rel="#L13880">13880</span>
<span id="L13881" rel="#L13881">13881</span>
<span id="L13882" rel="#L13882">13882</span>
<span id="L13883" rel="#L13883">13883</span>
<span id="L13884" rel="#L13884">13884</span>
<span id="L13885" rel="#L13885">13885</span>
<span id="L13886" rel="#L13886">13886</span>
<span id="L13887" rel="#L13887">13887</span>
<span id="L13888" rel="#L13888">13888</span>
<span id="L13889" rel="#L13889">13889</span>
<span id="L13890" rel="#L13890">13890</span>
<span id="L13891" rel="#L13891">13891</span>
<span id="L13892" rel="#L13892">13892</span>
<span id="L13893" rel="#L13893">13893</span>
<span id="L13894" rel="#L13894">13894</span>
<span id="L13895" rel="#L13895">13895</span>
<span id="L13896" rel="#L13896">13896</span>
<span id="L13897" rel="#L13897">13897</span>
<span id="L13898" rel="#L13898">13898</span>
<span id="L13899" rel="#L13899">13899</span>
<span id="L13900" rel="#L13900">13900</span>
<span id="L13901" rel="#L13901">13901</span>
<span id="L13902" rel="#L13902">13902</span>
<span id="L13903" rel="#L13903">13903</span>
<span id="L13904" rel="#L13904">13904</span>
<span id="L13905" rel="#L13905">13905</span>
<span id="L13906" rel="#L13906">13906</span>
<span id="L13907" rel="#L13907">13907</span>
<span id="L13908" rel="#L13908">13908</span>
<span id="L13909" rel="#L13909">13909</span>
<span id="L13910" rel="#L13910">13910</span>
<span id="L13911" rel="#L13911">13911</span>
<span id="L13912" rel="#L13912">13912</span>
<span id="L13913" rel="#L13913">13913</span>
<span id="L13914" rel="#L13914">13914</span>
<span id="L13915" rel="#L13915">13915</span>
<span id="L13916" rel="#L13916">13916</span>
<span id="L13917" rel="#L13917">13917</span>
<span id="L13918" rel="#L13918">13918</span>
<span id="L13919" rel="#L13919">13919</span>
<span id="L13920" rel="#L13920">13920</span>
<span id="L13921" rel="#L13921">13921</span>
<span id="L13922" rel="#L13922">13922</span>
<span id="L13923" rel="#L13923">13923</span>
<span id="L13924" rel="#L13924">13924</span>
<span id="L13925" rel="#L13925">13925</span>
<span id="L13926" rel="#L13926">13926</span>
<span id="L13927" rel="#L13927">13927</span>
<span id="L13928" rel="#L13928">13928</span>
<span id="L13929" rel="#L13929">13929</span>
<span id="L13930" rel="#L13930">13930</span>
<span id="L13931" rel="#L13931">13931</span>
<span id="L13932" rel="#L13932">13932</span>
<span id="L13933" rel="#L13933">13933</span>
<span id="L13934" rel="#L13934">13934</span>
<span id="L13935" rel="#L13935">13935</span>
<span id="L13936" rel="#L13936">13936</span>
<span id="L13937" rel="#L13937">13937</span>
<span id="L13938" rel="#L13938">13938</span>
<span id="L13939" rel="#L13939">13939</span>
<span id="L13940" rel="#L13940">13940</span>
<span id="L13941" rel="#L13941">13941</span>
<span id="L13942" rel="#L13942">13942</span>
<span id="L13943" rel="#L13943">13943</span>
<span id="L13944" rel="#L13944">13944</span>
<span id="L13945" rel="#L13945">13945</span>
<span id="L13946" rel="#L13946">13946</span>
<span id="L13947" rel="#L13947">13947</span>
<span id="L13948" rel="#L13948">13948</span>
<span id="L13949" rel="#L13949">13949</span>
<span id="L13950" rel="#L13950">13950</span>
<span id="L13951" rel="#L13951">13951</span>
<span id="L13952" rel="#L13952">13952</span>
<span id="L13953" rel="#L13953">13953</span>
<span id="L13954" rel="#L13954">13954</span>
<span id="L13955" rel="#L13955">13955</span>
<span id="L13956" rel="#L13956">13956</span>
<span id="L13957" rel="#L13957">13957</span>
<span id="L13958" rel="#L13958">13958</span>
<span id="L13959" rel="#L13959">13959</span>
<span id="L13960" rel="#L13960">13960</span>
<span id="L13961" rel="#L13961">13961</span>
<span id="L13962" rel="#L13962">13962</span>
<span id="L13963" rel="#L13963">13963</span>
<span id="L13964" rel="#L13964">13964</span>
<span id="L13965" rel="#L13965">13965</span>
<span id="L13966" rel="#L13966">13966</span>
<span id="L13967" rel="#L13967">13967</span>
<span id="L13968" rel="#L13968">13968</span>
<span id="L13969" rel="#L13969">13969</span>
<span id="L13970" rel="#L13970">13970</span>
<span id="L13971" rel="#L13971">13971</span>
<span id="L13972" rel="#L13972">13972</span>
<span id="L13973" rel="#L13973">13973</span>
<span id="L13974" rel="#L13974">13974</span>
<span id="L13975" rel="#L13975">13975</span>
<span id="L13976" rel="#L13976">13976</span>
<span id="L13977" rel="#L13977">13977</span>
<span id="L13978" rel="#L13978">13978</span>
<span id="L13979" rel="#L13979">13979</span>
<span id="L13980" rel="#L13980">13980</span>
<span id="L13981" rel="#L13981">13981</span>
<span id="L13982" rel="#L13982">13982</span>
<span id="L13983" rel="#L13983">13983</span>
<span id="L13984" rel="#L13984">13984</span>
<span id="L13985" rel="#L13985">13985</span>
<span id="L13986" rel="#L13986">13986</span>
<span id="L13987" rel="#L13987">13987</span>
<span id="L13988" rel="#L13988">13988</span>
<span id="L13989" rel="#L13989">13989</span>
<span id="L13990" rel="#L13990">13990</span>
<span id="L13991" rel="#L13991">13991</span>
<span id="L13992" rel="#L13992">13992</span>
<span id="L13993" rel="#L13993">13993</span>
<span id="L13994" rel="#L13994">13994</span>
<span id="L13995" rel="#L13995">13995</span>
<span id="L13996" rel="#L13996">13996</span>
<span id="L13997" rel="#L13997">13997</span>
<span id="L13998" rel="#L13998">13998</span>
<span id="L13999" rel="#L13999">13999</span>
<span id="L14000" rel="#L14000">14000</span>
<span id="L14001" rel="#L14001">14001</span>
<span id="L14002" rel="#L14002">14002</span>
<span id="L14003" rel="#L14003">14003</span>
<span id="L14004" rel="#L14004">14004</span>
<span id="L14005" rel="#L14005">14005</span>
<span id="L14006" rel="#L14006">14006</span>
<span id="L14007" rel="#L14007">14007</span>
<span id="L14008" rel="#L14008">14008</span>
<span id="L14009" rel="#L14009">14009</span>
<span id="L14010" rel="#L14010">14010</span>
<span id="L14011" rel="#L14011">14011</span>
<span id="L14012" rel="#L14012">14012</span>
<span id="L14013" rel="#L14013">14013</span>
<span id="L14014" rel="#L14014">14014</span>
<span id="L14015" rel="#L14015">14015</span>
<span id="L14016" rel="#L14016">14016</span>
<span id="L14017" rel="#L14017">14017</span>
<span id="L14018" rel="#L14018">14018</span>
<span id="L14019" rel="#L14019">14019</span>
<span id="L14020" rel="#L14020">14020</span>
<span id="L14021" rel="#L14021">14021</span>
<span id="L14022" rel="#L14022">14022</span>
<span id="L14023" rel="#L14023">14023</span>
<span id="L14024" rel="#L14024">14024</span>
<span id="L14025" rel="#L14025">14025</span>
<span id="L14026" rel="#L14026">14026</span>
<span id="L14027" rel="#L14027">14027</span>
<span id="L14028" rel="#L14028">14028</span>
<span id="L14029" rel="#L14029">14029</span>
<span id="L14030" rel="#L14030">14030</span>
<span id="L14031" rel="#L14031">14031</span>
<span id="L14032" rel="#L14032">14032</span>
<span id="L14033" rel="#L14033">14033</span>
<span id="L14034" rel="#L14034">14034</span>
<span id="L14035" rel="#L14035">14035</span>
<span id="L14036" rel="#L14036">14036</span>
<span id="L14037" rel="#L14037">14037</span>
<span id="L14038" rel="#L14038">14038</span>
<span id="L14039" rel="#L14039">14039</span>
<span id="L14040" rel="#L14040">14040</span>
<span id="L14041" rel="#L14041">14041</span>
<span id="L14042" rel="#L14042">14042</span>
<span id="L14043" rel="#L14043">14043</span>
<span id="L14044" rel="#L14044">14044</span>
<span id="L14045" rel="#L14045">14045</span>
<span id="L14046" rel="#L14046">14046</span>
<span id="L14047" rel="#L14047">14047</span>
<span id="L14048" rel="#L14048">14048</span>
<span id="L14049" rel="#L14049">14049</span>
<span id="L14050" rel="#L14050">14050</span>
<span id="L14051" rel="#L14051">14051</span>
<span id="L14052" rel="#L14052">14052</span>
<span id="L14053" rel="#L14053">14053</span>
<span id="L14054" rel="#L14054">14054</span>
<span id="L14055" rel="#L14055">14055</span>
<span id="L14056" rel="#L14056">14056</span>
<span id="L14057" rel="#L14057">14057</span>
<span id="L14058" rel="#L14058">14058</span>
<span id="L14059" rel="#L14059">14059</span>
<span id="L14060" rel="#L14060">14060</span>
<span id="L14061" rel="#L14061">14061</span>
<span id="L14062" rel="#L14062">14062</span>
<span id="L14063" rel="#L14063">14063</span>
<span id="L14064" rel="#L14064">14064</span>
<span id="L14065" rel="#L14065">14065</span>
<span id="L14066" rel="#L14066">14066</span>
<span id="L14067" rel="#L14067">14067</span>
<span id="L14068" rel="#L14068">14068</span>
<span id="L14069" rel="#L14069">14069</span>
<span id="L14070" rel="#L14070">14070</span>
<span id="L14071" rel="#L14071">14071</span>
<span id="L14072" rel="#L14072">14072</span>
<span id="L14073" rel="#L14073">14073</span>
<span id="L14074" rel="#L14074">14074</span>
<span id="L14075" rel="#L14075">14075</span>
<span id="L14076" rel="#L14076">14076</span>
<span id="L14077" rel="#L14077">14077</span>
<span id="L14078" rel="#L14078">14078</span>
<span id="L14079" rel="#L14079">14079</span>
<span id="L14080" rel="#L14080">14080</span>
<span id="L14081" rel="#L14081">14081</span>
<span id="L14082" rel="#L14082">14082</span>
<span id="L14083" rel="#L14083">14083</span>
<span id="L14084" rel="#L14084">14084</span>
<span id="L14085" rel="#L14085">14085</span>
<span id="L14086" rel="#L14086">14086</span>
<span id="L14087" rel="#L14087">14087</span>
<span id="L14088" rel="#L14088">14088</span>
<span id="L14089" rel="#L14089">14089</span>
<span id="L14090" rel="#L14090">14090</span>
<span id="L14091" rel="#L14091">14091</span>
<span id="L14092" rel="#L14092">14092</span>
<span id="L14093" rel="#L14093">14093</span>
<span id="L14094" rel="#L14094">14094</span>
<span id="L14095" rel="#L14095">14095</span>
<span id="L14096" rel="#L14096">14096</span>
<span id="L14097" rel="#L14097">14097</span>
<span id="L14098" rel="#L14098">14098</span>
<span id="L14099" rel="#L14099">14099</span>
<span id="L14100" rel="#L14100">14100</span>
<span id="L14101" rel="#L14101">14101</span>
<span id="L14102" rel="#L14102">14102</span>
<span id="L14103" rel="#L14103">14103</span>
<span id="L14104" rel="#L14104">14104</span>
<span id="L14105" rel="#L14105">14105</span>
<span id="L14106" rel="#L14106">14106</span>
<span id="L14107" rel="#L14107">14107</span>
<span id="L14108" rel="#L14108">14108</span>
<span id="L14109" rel="#L14109">14109</span>
<span id="L14110" rel="#L14110">14110</span>
<span id="L14111" rel="#L14111">14111</span>
<span id="L14112" rel="#L14112">14112</span>
<span id="L14113" rel="#L14113">14113</span>
<span id="L14114" rel="#L14114">14114</span>
<span id="L14115" rel="#L14115">14115</span>
<span id="L14116" rel="#L14116">14116</span>
<span id="L14117" rel="#L14117">14117</span>
<span id="L14118" rel="#L14118">14118</span>
<span id="L14119" rel="#L14119">14119</span>
<span id="L14120" rel="#L14120">14120</span>
<span id="L14121" rel="#L14121">14121</span>
<span id="L14122" rel="#L14122">14122</span>
<span id="L14123" rel="#L14123">14123</span>
<span id="L14124" rel="#L14124">14124</span>
<span id="L14125" rel="#L14125">14125</span>
<span id="L14126" rel="#L14126">14126</span>
<span id="L14127" rel="#L14127">14127</span>
<span id="L14128" rel="#L14128">14128</span>
<span id="L14129" rel="#L14129">14129</span>
<span id="L14130" rel="#L14130">14130</span>
<span id="L14131" rel="#L14131">14131</span>
<span id="L14132" rel="#L14132">14132</span>
<span id="L14133" rel="#L14133">14133</span>
<span id="L14134" rel="#L14134">14134</span>
<span id="L14135" rel="#L14135">14135</span>
<span id="L14136" rel="#L14136">14136</span>
<span id="L14137" rel="#L14137">14137</span>
<span id="L14138" rel="#L14138">14138</span>
<span id="L14139" rel="#L14139">14139</span>
<span id="L14140" rel="#L14140">14140</span>
<span id="L14141" rel="#L14141">14141</span>
<span id="L14142" rel="#L14142">14142</span>
<span id="L14143" rel="#L14143">14143</span>
<span id="L14144" rel="#L14144">14144</span>
<span id="L14145" rel="#L14145">14145</span>
<span id="L14146" rel="#L14146">14146</span>
<span id="L14147" rel="#L14147">14147</span>
<span id="L14148" rel="#L14148">14148</span>
<span id="L14149" rel="#L14149">14149</span>
<span id="L14150" rel="#L14150">14150</span>
<span id="L14151" rel="#L14151">14151</span>
<span id="L14152" rel="#L14152">14152</span>
<span id="L14153" rel="#L14153">14153</span>
<span id="L14154" rel="#L14154">14154</span>
<span id="L14155" rel="#L14155">14155</span>
<span id="L14156" rel="#L14156">14156</span>
<span id="L14157" rel="#L14157">14157</span>
<span id="L14158" rel="#L14158">14158</span>
<span id="L14159" rel="#L14159">14159</span>
<span id="L14160" rel="#L14160">14160</span>
<span id="L14161" rel="#L14161">14161</span>
<span id="L14162" rel="#L14162">14162</span>
<span id="L14163" rel="#L14163">14163</span>
<span id="L14164" rel="#L14164">14164</span>
<span id="L14165" rel="#L14165">14165</span>
<span id="L14166" rel="#L14166">14166</span>
<span id="L14167" rel="#L14167">14167</span>
<span id="L14168" rel="#L14168">14168</span>
<span id="L14169" rel="#L14169">14169</span>
<span id="L14170" rel="#L14170">14170</span>
<span id="L14171" rel="#L14171">14171</span>
<span id="L14172" rel="#L14172">14172</span>
<span id="L14173" rel="#L14173">14173</span>
<span id="L14174" rel="#L14174">14174</span>
<span id="L14175" rel="#L14175">14175</span>
<span id="L14176" rel="#L14176">14176</span>
<span id="L14177" rel="#L14177">14177</span>
<span id="L14178" rel="#L14178">14178</span>
<span id="L14179" rel="#L14179">14179</span>
<span id="L14180" rel="#L14180">14180</span>
<span id="L14181" rel="#L14181">14181</span>
<span id="L14182" rel="#L14182">14182</span>
<span id="L14183" rel="#L14183">14183</span>
<span id="L14184" rel="#L14184">14184</span>
<span id="L14185" rel="#L14185">14185</span>
<span id="L14186" rel="#L14186">14186</span>
<span id="L14187" rel="#L14187">14187</span>
<span id="L14188" rel="#L14188">14188</span>
<span id="L14189" rel="#L14189">14189</span>
<span id="L14190" rel="#L14190">14190</span>
<span id="L14191" rel="#L14191">14191</span>
<span id="L14192" rel="#L14192">14192</span>
<span id="L14193" rel="#L14193">14193</span>
<span id="L14194" rel="#L14194">14194</span>
<span id="L14195" rel="#L14195">14195</span>
<span id="L14196" rel="#L14196">14196</span>
<span id="L14197" rel="#L14197">14197</span>
<span id="L14198" rel="#L14198">14198</span>
<span id="L14199" rel="#L14199">14199</span>
<span id="L14200" rel="#L14200">14200</span>
<span id="L14201" rel="#L14201">14201</span>
<span id="L14202" rel="#L14202">14202</span>
<span id="L14203" rel="#L14203">14203</span>
<span id="L14204" rel="#L14204">14204</span>
<span id="L14205" rel="#L14205">14205</span>
<span id="L14206" rel="#L14206">14206</span>
<span id="L14207" rel="#L14207">14207</span>
<span id="L14208" rel="#L14208">14208</span>
<span id="L14209" rel="#L14209">14209</span>
<span id="L14210" rel="#L14210">14210</span>
<span id="L14211" rel="#L14211">14211</span>
<span id="L14212" rel="#L14212">14212</span>
<span id="L14213" rel="#L14213">14213</span>
<span id="L14214" rel="#L14214">14214</span>
<span id="L14215" rel="#L14215">14215</span>
<span id="L14216" rel="#L14216">14216</span>
<span id="L14217" rel="#L14217">14217</span>
<span id="L14218" rel="#L14218">14218</span>
<span id="L14219" rel="#L14219">14219</span>
<span id="L14220" rel="#L14220">14220</span>
<span id="L14221" rel="#L14221">14221</span>
<span id="L14222" rel="#L14222">14222</span>
<span id="L14223" rel="#L14223">14223</span>
<span id="L14224" rel="#L14224">14224</span>
<span id="L14225" rel="#L14225">14225</span>
<span id="L14226" rel="#L14226">14226</span>
<span id="L14227" rel="#L14227">14227</span>
<span id="L14228" rel="#L14228">14228</span>
<span id="L14229" rel="#L14229">14229</span>
<span id="L14230" rel="#L14230">14230</span>
<span id="L14231" rel="#L14231">14231</span>
<span id="L14232" rel="#L14232">14232</span>
<span id="L14233" rel="#L14233">14233</span>
<span id="L14234" rel="#L14234">14234</span>
<span id="L14235" rel="#L14235">14235</span>
<span id="L14236" rel="#L14236">14236</span>
<span id="L14237" rel="#L14237">14237</span>
<span id="L14238" rel="#L14238">14238</span>
<span id="L14239" rel="#L14239">14239</span>
<span id="L14240" rel="#L14240">14240</span>
<span id="L14241" rel="#L14241">14241</span>
<span id="L14242" rel="#L14242">14242</span>
<span id="L14243" rel="#L14243">14243</span>
<span id="L14244" rel="#L14244">14244</span>
<span id="L14245" rel="#L14245">14245</span>
<span id="L14246" rel="#L14246">14246</span>
<span id="L14247" rel="#L14247">14247</span>
<span id="L14248" rel="#L14248">14248</span>
<span id="L14249" rel="#L14249">14249</span>
<span id="L14250" rel="#L14250">14250</span>
<span id="L14251" rel="#L14251">14251</span>
<span id="L14252" rel="#L14252">14252</span>
<span id="L14253" rel="#L14253">14253</span>
<span id="L14254" rel="#L14254">14254</span>
<span id="L14255" rel="#L14255">14255</span>
<span id="L14256" rel="#L14256">14256</span>
<span id="L14257" rel="#L14257">14257</span>
<span id="L14258" rel="#L14258">14258</span>
<span id="L14259" rel="#L14259">14259</span>
<span id="L14260" rel="#L14260">14260</span>
<span id="L14261" rel="#L14261">14261</span>
<span id="L14262" rel="#L14262">14262</span>
<span id="L14263" rel="#L14263">14263</span>
<span id="L14264" rel="#L14264">14264</span>
<span id="L14265" rel="#L14265">14265</span>
<span id="L14266" rel="#L14266">14266</span>
<span id="L14267" rel="#L14267">14267</span>
<span id="L14268" rel="#L14268">14268</span>
<span id="L14269" rel="#L14269">14269</span>
<span id="L14270" rel="#L14270">14270</span>
<span id="L14271" rel="#L14271">14271</span>
<span id="L14272" rel="#L14272">14272</span>
<span id="L14273" rel="#L14273">14273</span>
<span id="L14274" rel="#L14274">14274</span>
<span id="L14275" rel="#L14275">14275</span>
<span id="L14276" rel="#L14276">14276</span>
<span id="L14277" rel="#L14277">14277</span>
<span id="L14278" rel="#L14278">14278</span>
<span id="L14279" rel="#L14279">14279</span>
<span id="L14280" rel="#L14280">14280</span>
<span id="L14281" rel="#L14281">14281</span>
<span id="L14282" rel="#L14282">14282</span>
<span id="L14283" rel="#L14283">14283</span>
<span id="L14284" rel="#L14284">14284</span>
<span id="L14285" rel="#L14285">14285</span>
<span id="L14286" rel="#L14286">14286</span>
<span id="L14287" rel="#L14287">14287</span>
<span id="L14288" rel="#L14288">14288</span>
<span id="L14289" rel="#L14289">14289</span>
<span id="L14290" rel="#L14290">14290</span>
<span id="L14291" rel="#L14291">14291</span>
<span id="L14292" rel="#L14292">14292</span>
<span id="L14293" rel="#L14293">14293</span>
<span id="L14294" rel="#L14294">14294</span>
<span id="L14295" rel="#L14295">14295</span>
<span id="L14296" rel="#L14296">14296</span>
<span id="L14297" rel="#L14297">14297</span>
<span id="L14298" rel="#L14298">14298</span>
<span id="L14299" rel="#L14299">14299</span>
<span id="L14300" rel="#L14300">14300</span>
<span id="L14301" rel="#L14301">14301</span>
<span id="L14302" rel="#L14302">14302</span>
<span id="L14303" rel="#L14303">14303</span>
<span id="L14304" rel="#L14304">14304</span>
<span id="L14305" rel="#L14305">14305</span>
<span id="L14306" rel="#L14306">14306</span>
<span id="L14307" rel="#L14307">14307</span>
<span id="L14308" rel="#L14308">14308</span>
<span id="L14309" rel="#L14309">14309</span>
<span id="L14310" rel="#L14310">14310</span>
<span id="L14311" rel="#L14311">14311</span>
<span id="L14312" rel="#L14312">14312</span>
<span id="L14313" rel="#L14313">14313</span>
<span id="L14314" rel="#L14314">14314</span>
<span id="L14315" rel="#L14315">14315</span>
<span id="L14316" rel="#L14316">14316</span>
<span id="L14317" rel="#L14317">14317</span>
<span id="L14318" rel="#L14318">14318</span>
<span id="L14319" rel="#L14319">14319</span>
<span id="L14320" rel="#L14320">14320</span>
<span id="L14321" rel="#L14321">14321</span>
<span id="L14322" rel="#L14322">14322</span>
<span id="L14323" rel="#L14323">14323</span>
<span id="L14324" rel="#L14324">14324</span>
<span id="L14325" rel="#L14325">14325</span>
<span id="L14326" rel="#L14326">14326</span>
<span id="L14327" rel="#L14327">14327</span>
<span id="L14328" rel="#L14328">14328</span>
<span id="L14329" rel="#L14329">14329</span>
<span id="L14330" rel="#L14330">14330</span>
<span id="L14331" rel="#L14331">14331</span>
<span id="L14332" rel="#L14332">14332</span>
<span id="L14333" rel="#L14333">14333</span>
<span id="L14334" rel="#L14334">14334</span>
<span id="L14335" rel="#L14335">14335</span>
<span id="L14336" rel="#L14336">14336</span>
<span id="L14337" rel="#L14337">14337</span>
<span id="L14338" rel="#L14338">14338</span>
<span id="L14339" rel="#L14339">14339</span>
<span id="L14340" rel="#L14340">14340</span>
<span id="L14341" rel="#L14341">14341</span>
<span id="L14342" rel="#L14342">14342</span>
<span id="L14343" rel="#L14343">14343</span>
<span id="L14344" rel="#L14344">14344</span>
<span id="L14345" rel="#L14345">14345</span>
<span id="L14346" rel="#L14346">14346</span>
<span id="L14347" rel="#L14347">14347</span>
<span id="L14348" rel="#L14348">14348</span>
<span id="L14349" rel="#L14349">14349</span>
<span id="L14350" rel="#L14350">14350</span>
<span id="L14351" rel="#L14351">14351</span>
<span id="L14352" rel="#L14352">14352</span>
<span id="L14353" rel="#L14353">14353</span>
<span id="L14354" rel="#L14354">14354</span>
<span id="L14355" rel="#L14355">14355</span>
<span id="L14356" rel="#L14356">14356</span>
<span id="L14357" rel="#L14357">14357</span>
<span id="L14358" rel="#L14358">14358</span>
<span id="L14359" rel="#L14359">14359</span>
<span id="L14360" rel="#L14360">14360</span>
<span id="L14361" rel="#L14361">14361</span>
<span id="L14362" rel="#L14362">14362</span>
<span id="L14363" rel="#L14363">14363</span>
<span id="L14364" rel="#L14364">14364</span>
<span id="L14365" rel="#L14365">14365</span>
<span id="L14366" rel="#L14366">14366</span>
<span id="L14367" rel="#L14367">14367</span>
<span id="L14368" rel="#L14368">14368</span>
<span id="L14369" rel="#L14369">14369</span>
<span id="L14370" rel="#L14370">14370</span>
<span id="L14371" rel="#L14371">14371</span>
<span id="L14372" rel="#L14372">14372</span>
<span id="L14373" rel="#L14373">14373</span>
<span id="L14374" rel="#L14374">14374</span>
<span id="L14375" rel="#L14375">14375</span>
<span id="L14376" rel="#L14376">14376</span>
<span id="L14377" rel="#L14377">14377</span>
<span id="L14378" rel="#L14378">14378</span>
<span id="L14379" rel="#L14379">14379</span>
<span id="L14380" rel="#L14380">14380</span>
<span id="L14381" rel="#L14381">14381</span>
<span id="L14382" rel="#L14382">14382</span>
<span id="L14383" rel="#L14383">14383</span>
<span id="L14384" rel="#L14384">14384</span>
<span id="L14385" rel="#L14385">14385</span>
<span id="L14386" rel="#L14386">14386</span>
<span id="L14387" rel="#L14387">14387</span>
<span id="L14388" rel="#L14388">14388</span>
<span id="L14389" rel="#L14389">14389</span>
<span id="L14390" rel="#L14390">14390</span>
<span id="L14391" rel="#L14391">14391</span>
<span id="L14392" rel="#L14392">14392</span>
<span id="L14393" rel="#L14393">14393</span>
<span id="L14394" rel="#L14394">14394</span>
<span id="L14395" rel="#L14395">14395</span>
<span id="L14396" rel="#L14396">14396</span>
<span id="L14397" rel="#L14397">14397</span>
<span id="L14398" rel="#L14398">14398</span>
<span id="L14399" rel="#L14399">14399</span>
<span id="L14400" rel="#L14400">14400</span>
<span id="L14401" rel="#L14401">14401</span>
<span id="L14402" rel="#L14402">14402</span>
<span id="L14403" rel="#L14403">14403</span>
<span id="L14404" rel="#L14404">14404</span>
<span id="L14405" rel="#L14405">14405</span>
<span id="L14406" rel="#L14406">14406</span>
<span id="L14407" rel="#L14407">14407</span>
<span id="L14408" rel="#L14408">14408</span>
<span id="L14409" rel="#L14409">14409</span>
<span id="L14410" rel="#L14410">14410</span>
<span id="L14411" rel="#L14411">14411</span>
<span id="L14412" rel="#L14412">14412</span>
<span id="L14413" rel="#L14413">14413</span>
<span id="L14414" rel="#L14414">14414</span>
<span id="L14415" rel="#L14415">14415</span>
<span id="L14416" rel="#L14416">14416</span>
<span id="L14417" rel="#L14417">14417</span>
<span id="L14418" rel="#L14418">14418</span>
<span id="L14419" rel="#L14419">14419</span>
<span id="L14420" rel="#L14420">14420</span>
<span id="L14421" rel="#L14421">14421</span>
<span id="L14422" rel="#L14422">14422</span>
<span id="L14423" rel="#L14423">14423</span>
<span id="L14424" rel="#L14424">14424</span>
<span id="L14425" rel="#L14425">14425</span>
<span id="L14426" rel="#L14426">14426</span>
<span id="L14427" rel="#L14427">14427</span>
<span id="L14428" rel="#L14428">14428</span>
<span id="L14429" rel="#L14429">14429</span>
<span id="L14430" rel="#L14430">14430</span>
<span id="L14431" rel="#L14431">14431</span>
<span id="L14432" rel="#L14432">14432</span>
<span id="L14433" rel="#L14433">14433</span>
<span id="L14434" rel="#L14434">14434</span>
<span id="L14435" rel="#L14435">14435</span>
<span id="L14436" rel="#L14436">14436</span>
<span id="L14437" rel="#L14437">14437</span>
<span id="L14438" rel="#L14438">14438</span>
<span id="L14439" rel="#L14439">14439</span>
<span id="L14440" rel="#L14440">14440</span>
<span id="L14441" rel="#L14441">14441</span>
<span id="L14442" rel="#L14442">14442</span>
<span id="L14443" rel="#L14443">14443</span>
<span id="L14444" rel="#L14444">14444</span>
<span id="L14445" rel="#L14445">14445</span>
<span id="L14446" rel="#L14446">14446</span>
<span id="L14447" rel="#L14447">14447</span>
<span id="L14448" rel="#L14448">14448</span>
<span id="L14449" rel="#L14449">14449</span>
<span id="L14450" rel="#L14450">14450</span>
<span id="L14451" rel="#L14451">14451</span>
<span id="L14452" rel="#L14452">14452</span>
<span id="L14453" rel="#L14453">14453</span>
<span id="L14454" rel="#L14454">14454</span>
<span id="L14455" rel="#L14455">14455</span>
<span id="L14456" rel="#L14456">14456</span>
<span id="L14457" rel="#L14457">14457</span>
<span id="L14458" rel="#L14458">14458</span>
<span id="L14459" rel="#L14459">14459</span>
<span id="L14460" rel="#L14460">14460</span>
<span id="L14461" rel="#L14461">14461</span>
<span id="L14462" rel="#L14462">14462</span>
<span id="L14463" rel="#L14463">14463</span>
<span id="L14464" rel="#L14464">14464</span>
<span id="L14465" rel="#L14465">14465</span>
<span id="L14466" rel="#L14466">14466</span>
<span id="L14467" rel="#L14467">14467</span>
<span id="L14468" rel="#L14468">14468</span>
<span id="L14469" rel="#L14469">14469</span>
<span id="L14470" rel="#L14470">14470</span>
<span id="L14471" rel="#L14471">14471</span>
<span id="L14472" rel="#L14472">14472</span>
<span id="L14473" rel="#L14473">14473</span>
<span id="L14474" rel="#L14474">14474</span>
<span id="L14475" rel="#L14475">14475</span>
<span id="L14476" rel="#L14476">14476</span>
<span id="L14477" rel="#L14477">14477</span>
<span id="L14478" rel="#L14478">14478</span>
<span id="L14479" rel="#L14479">14479</span>
<span id="L14480" rel="#L14480">14480</span>
<span id="L14481" rel="#L14481">14481</span>
<span id="L14482" rel="#L14482">14482</span>
<span id="L14483" rel="#L14483">14483</span>
<span id="L14484" rel="#L14484">14484</span>
<span id="L14485" rel="#L14485">14485</span>
<span id="L14486" rel="#L14486">14486</span>
<span id="L14487" rel="#L14487">14487</span>
<span id="L14488" rel="#L14488">14488</span>
<span id="L14489" rel="#L14489">14489</span>
<span id="L14490" rel="#L14490">14490</span>
<span id="L14491" rel="#L14491">14491</span>
<span id="L14492" rel="#L14492">14492</span>
<span id="L14493" rel="#L14493">14493</span>
<span id="L14494" rel="#L14494">14494</span>
<span id="L14495" rel="#L14495">14495</span>
<span id="L14496" rel="#L14496">14496</span>
<span id="L14497" rel="#L14497">14497</span>
<span id="L14498" rel="#L14498">14498</span>
<span id="L14499" rel="#L14499">14499</span>
<span id="L14500" rel="#L14500">14500</span>
<span id="L14501" rel="#L14501">14501</span>
<span id="L14502" rel="#L14502">14502</span>
<span id="L14503" rel="#L14503">14503</span>
<span id="L14504" rel="#L14504">14504</span>
<span id="L14505" rel="#L14505">14505</span>
<span id="L14506" rel="#L14506">14506</span>
<span id="L14507" rel="#L14507">14507</span>
<span id="L14508" rel="#L14508">14508</span>
<span id="L14509" rel="#L14509">14509</span>
<span id="L14510" rel="#L14510">14510</span>
<span id="L14511" rel="#L14511">14511</span>
<span id="L14512" rel="#L14512">14512</span>
<span id="L14513" rel="#L14513">14513</span>
<span id="L14514" rel="#L14514">14514</span>
<span id="L14515" rel="#L14515">14515</span>
<span id="L14516" rel="#L14516">14516</span>
<span id="L14517" rel="#L14517">14517</span>
<span id="L14518" rel="#L14518">14518</span>
<span id="L14519" rel="#L14519">14519</span>
<span id="L14520" rel="#L14520">14520</span>
<span id="L14521" rel="#L14521">14521</span>
<span id="L14522" rel="#L14522">14522</span>
<span id="L14523" rel="#L14523">14523</span>
<span id="L14524" rel="#L14524">14524</span>
<span id="L14525" rel="#L14525">14525</span>
<span id="L14526" rel="#L14526">14526</span>
<span id="L14527" rel="#L14527">14527</span>
<span id="L14528" rel="#L14528">14528</span>
<span id="L14529" rel="#L14529">14529</span>
<span id="L14530" rel="#L14530">14530</span>
<span id="L14531" rel="#L14531">14531</span>
<span id="L14532" rel="#L14532">14532</span>
<span id="L14533" rel="#L14533">14533</span>
<span id="L14534" rel="#L14534">14534</span>
<span id="L14535" rel="#L14535">14535</span>
<span id="L14536" rel="#L14536">14536</span>
<span id="L14537" rel="#L14537">14537</span>
<span id="L14538" rel="#L14538">14538</span>
<span id="L14539" rel="#L14539">14539</span>
<span id="L14540" rel="#L14540">14540</span>
<span id="L14541" rel="#L14541">14541</span>
<span id="L14542" rel="#L14542">14542</span>
<span id="L14543" rel="#L14543">14543</span>
<span id="L14544" rel="#L14544">14544</span>
<span id="L14545" rel="#L14545">14545</span>
<span id="L14546" rel="#L14546">14546</span>
<span id="L14547" rel="#L14547">14547</span>
<span id="L14548" rel="#L14548">14548</span>
<span id="L14549" rel="#L14549">14549</span>
<span id="L14550" rel="#L14550">14550</span>
<span id="L14551" rel="#L14551">14551</span>
<span id="L14552" rel="#L14552">14552</span>
<span id="L14553" rel="#L14553">14553</span>
<span id="L14554" rel="#L14554">14554</span>
<span id="L14555" rel="#L14555">14555</span>
<span id="L14556" rel="#L14556">14556</span>
<span id="L14557" rel="#L14557">14557</span>
<span id="L14558" rel="#L14558">14558</span>
<span id="L14559" rel="#L14559">14559</span>
<span id="L14560" rel="#L14560">14560</span>
<span id="L14561" rel="#L14561">14561</span>
<span id="L14562" rel="#L14562">14562</span>
<span id="L14563" rel="#L14563">14563</span>
<span id="L14564" rel="#L14564">14564</span>
<span id="L14565" rel="#L14565">14565</span>
<span id="L14566" rel="#L14566">14566</span>
<span id="L14567" rel="#L14567">14567</span>
<span id="L14568" rel="#L14568">14568</span>
<span id="L14569" rel="#L14569">14569</span>
<span id="L14570" rel="#L14570">14570</span>
<span id="L14571" rel="#L14571">14571</span>
<span id="L14572" rel="#L14572">14572</span>
<span id="L14573" rel="#L14573">14573</span>
<span id="L14574" rel="#L14574">14574</span>
<span id="L14575" rel="#L14575">14575</span>
<span id="L14576" rel="#L14576">14576</span>
<span id="L14577" rel="#L14577">14577</span>
<span id="L14578" rel="#L14578">14578</span>
<span id="L14579" rel="#L14579">14579</span>
<span id="L14580" rel="#L14580">14580</span>
<span id="L14581" rel="#L14581">14581</span>
<span id="L14582" rel="#L14582">14582</span>
<span id="L14583" rel="#L14583">14583</span>
<span id="L14584" rel="#L14584">14584</span>
<span id="L14585" rel="#L14585">14585</span>
<span id="L14586" rel="#L14586">14586</span>
<span id="L14587" rel="#L14587">14587</span>
<span id="L14588" rel="#L14588">14588</span>
<span id="L14589" rel="#L14589">14589</span>
<span id="L14590" rel="#L14590">14590</span>
<span id="L14591" rel="#L14591">14591</span>
<span id="L14592" rel="#L14592">14592</span>
<span id="L14593" rel="#L14593">14593</span>
<span id="L14594" rel="#L14594">14594</span>
<span id="L14595" rel="#L14595">14595</span>
<span id="L14596" rel="#L14596">14596</span>
<span id="L14597" rel="#L14597">14597</span>
<span id="L14598" rel="#L14598">14598</span>
<span id="L14599" rel="#L14599">14599</span>
<span id="L14600" rel="#L14600">14600</span>
<span id="L14601" rel="#L14601">14601</span>
<span id="L14602" rel="#L14602">14602</span>
<span id="L14603" rel="#L14603">14603</span>
<span id="L14604" rel="#L14604">14604</span>
<span id="L14605" rel="#L14605">14605</span>
<span id="L14606" rel="#L14606">14606</span>
<span id="L14607" rel="#L14607">14607</span>
<span id="L14608" rel="#L14608">14608</span>
<span id="L14609" rel="#L14609">14609</span>
<span id="L14610" rel="#L14610">14610</span>
<span id="L14611" rel="#L14611">14611</span>
<span id="L14612" rel="#L14612">14612</span>
<span id="L14613" rel="#L14613">14613</span>
<span id="L14614" rel="#L14614">14614</span>
<span id="L14615" rel="#L14615">14615</span>
<span id="L14616" rel="#L14616">14616</span>
<span id="L14617" rel="#L14617">14617</span>
<span id="L14618" rel="#L14618">14618</span>
<span id="L14619" rel="#L14619">14619</span>
<span id="L14620" rel="#L14620">14620</span>
<span id="L14621" rel="#L14621">14621</span>
<span id="L14622" rel="#L14622">14622</span>
<span id="L14623" rel="#L14623">14623</span>
<span id="L14624" rel="#L14624">14624</span>
<span id="L14625" rel="#L14625">14625</span>
<span id="L14626" rel="#L14626">14626</span>
<span id="L14627" rel="#L14627">14627</span>
<span id="L14628" rel="#L14628">14628</span>
<span id="L14629" rel="#L14629">14629</span>
<span id="L14630" rel="#L14630">14630</span>
<span id="L14631" rel="#L14631">14631</span>
<span id="L14632" rel="#L14632">14632</span>
<span id="L14633" rel="#L14633">14633</span>
<span id="L14634" rel="#L14634">14634</span>
<span id="L14635" rel="#L14635">14635</span>
<span id="L14636" rel="#L14636">14636</span>
<span id="L14637" rel="#L14637">14637</span>
<span id="L14638" rel="#L14638">14638</span>
<span id="L14639" rel="#L14639">14639</span>
<span id="L14640" rel="#L14640">14640</span>
<span id="L14641" rel="#L14641">14641</span>
<span id="L14642" rel="#L14642">14642</span>
<span id="L14643" rel="#L14643">14643</span>
<span id="L14644" rel="#L14644">14644</span>
<span id="L14645" rel="#L14645">14645</span>
<span id="L14646" rel="#L14646">14646</span>
<span id="L14647" rel="#L14647">14647</span>
<span id="L14648" rel="#L14648">14648</span>
<span id="L14649" rel="#L14649">14649</span>
<span id="L14650" rel="#L14650">14650</span>
<span id="L14651" rel="#L14651">14651</span>
<span id="L14652" rel="#L14652">14652</span>
<span id="L14653" rel="#L14653">14653</span>
<span id="L14654" rel="#L14654">14654</span>
<span id="L14655" rel="#L14655">14655</span>
<span id="L14656" rel="#L14656">14656</span>
<span id="L14657" rel="#L14657">14657</span>
<span id="L14658" rel="#L14658">14658</span>
<span id="L14659" rel="#L14659">14659</span>
<span id="L14660" rel="#L14660">14660</span>
<span id="L14661" rel="#L14661">14661</span>
<span id="L14662" rel="#L14662">14662</span>
<span id="L14663" rel="#L14663">14663</span>
<span id="L14664" rel="#L14664">14664</span>
<span id="L14665" rel="#L14665">14665</span>
<span id="L14666" rel="#L14666">14666</span>
<span id="L14667" rel="#L14667">14667</span>
<span id="L14668" rel="#L14668">14668</span>
<span id="L14669" rel="#L14669">14669</span>
<span id="L14670" rel="#L14670">14670</span>
<span id="L14671" rel="#L14671">14671</span>
<span id="L14672" rel="#L14672">14672</span>
<span id="L14673" rel="#L14673">14673</span>
<span id="L14674" rel="#L14674">14674</span>
<span id="L14675" rel="#L14675">14675</span>
<span id="L14676" rel="#L14676">14676</span>
<span id="L14677" rel="#L14677">14677</span>
<span id="L14678" rel="#L14678">14678</span>
<span id="L14679" rel="#L14679">14679</span>
<span id="L14680" rel="#L14680">14680</span>
<span id="L14681" rel="#L14681">14681</span>
<span id="L14682" rel="#L14682">14682</span>
<span id="L14683" rel="#L14683">14683</span>
<span id="L14684" rel="#L14684">14684</span>
<span id="L14685" rel="#L14685">14685</span>
<span id="L14686" rel="#L14686">14686</span>
<span id="L14687" rel="#L14687">14687</span>
<span id="L14688" rel="#L14688">14688</span>
<span id="L14689" rel="#L14689">14689</span>
<span id="L14690" rel="#L14690">14690</span>
<span id="L14691" rel="#L14691">14691</span>
<span id="L14692" rel="#L14692">14692</span>
<span id="L14693" rel="#L14693">14693</span>
<span id="L14694" rel="#L14694">14694</span>
<span id="L14695" rel="#L14695">14695</span>
<span id="L14696" rel="#L14696">14696</span>
<span id="L14697" rel="#L14697">14697</span>
<span id="L14698" rel="#L14698">14698</span>
<span id="L14699" rel="#L14699">14699</span>
<span id="L14700" rel="#L14700">14700</span>
<span id="L14701" rel="#L14701">14701</span>
<span id="L14702" rel="#L14702">14702</span>
<span id="L14703" rel="#L14703">14703</span>
<span id="L14704" rel="#L14704">14704</span>
<span id="L14705" rel="#L14705">14705</span>
<span id="L14706" rel="#L14706">14706</span>
<span id="L14707" rel="#L14707">14707</span>
<span id="L14708" rel="#L14708">14708</span>
<span id="L14709" rel="#L14709">14709</span>
<span id="L14710" rel="#L14710">14710</span>
<span id="L14711" rel="#L14711">14711</span>
<span id="L14712" rel="#L14712">14712</span>
<span id="L14713" rel="#L14713">14713</span>
<span id="L14714" rel="#L14714">14714</span>
<span id="L14715" rel="#L14715">14715</span>
<span id="L14716" rel="#L14716">14716</span>
<span id="L14717" rel="#L14717">14717</span>
<span id="L14718" rel="#L14718">14718</span>
<span id="L14719" rel="#L14719">14719</span>
<span id="L14720" rel="#L14720">14720</span>
<span id="L14721" rel="#L14721">14721</span>
<span id="L14722" rel="#L14722">14722</span>
<span id="L14723" rel="#L14723">14723</span>
<span id="L14724" rel="#L14724">14724</span>
<span id="L14725" rel="#L14725">14725</span>
<span id="L14726" rel="#L14726">14726</span>
<span id="L14727" rel="#L14727">14727</span>
<span id="L14728" rel="#L14728">14728</span>
<span id="L14729" rel="#L14729">14729</span>
<span id="L14730" rel="#L14730">14730</span>
<span id="L14731" rel="#L14731">14731</span>
<span id="L14732" rel="#L14732">14732</span>
<span id="L14733" rel="#L14733">14733</span>
<span id="L14734" rel="#L14734">14734</span>
<span id="L14735" rel="#L14735">14735</span>
<span id="L14736" rel="#L14736">14736</span>
<span id="L14737" rel="#L14737">14737</span>
<span id="L14738" rel="#L14738">14738</span>
<span id="L14739" rel="#L14739">14739</span>
<span id="L14740" rel="#L14740">14740</span>
<span id="L14741" rel="#L14741">14741</span>
<span id="L14742" rel="#L14742">14742</span>
<span id="L14743" rel="#L14743">14743</span>
<span id="L14744" rel="#L14744">14744</span>
<span id="L14745" rel="#L14745">14745</span>
<span id="L14746" rel="#L14746">14746</span>
<span id="L14747" rel="#L14747">14747</span>
<span id="L14748" rel="#L14748">14748</span>
<span id="L14749" rel="#L14749">14749</span>
<span id="L14750" rel="#L14750">14750</span>
<span id="L14751" rel="#L14751">14751</span>
<span id="L14752" rel="#L14752">14752</span>
<span id="L14753" rel="#L14753">14753</span>
<span id="L14754" rel="#L14754">14754</span>
<span id="L14755" rel="#L14755">14755</span>
<span id="L14756" rel="#L14756">14756</span>
<span id="L14757" rel="#L14757">14757</span>
<span id="L14758" rel="#L14758">14758</span>
<span id="L14759" rel="#L14759">14759</span>
<span id="L14760" rel="#L14760">14760</span>
<span id="L14761" rel="#L14761">14761</span>
<span id="L14762" rel="#L14762">14762</span>
<span id="L14763" rel="#L14763">14763</span>
<span id="L14764" rel="#L14764">14764</span>
<span id="L14765" rel="#L14765">14765</span>
<span id="L14766" rel="#L14766">14766</span>
<span id="L14767" rel="#L14767">14767</span>
<span id="L14768" rel="#L14768">14768</span>
<span id="L14769" rel="#L14769">14769</span>
<span id="L14770" rel="#L14770">14770</span>
<span id="L14771" rel="#L14771">14771</span>
<span id="L14772" rel="#L14772">14772</span>
<span id="L14773" rel="#L14773">14773</span>
<span id="L14774" rel="#L14774">14774</span>
<span id="L14775" rel="#L14775">14775</span>
<span id="L14776" rel="#L14776">14776</span>
<span id="L14777" rel="#L14777">14777</span>
<span id="L14778" rel="#L14778">14778</span>
<span id="L14779" rel="#L14779">14779</span>
<span id="L14780" rel="#L14780">14780</span>
<span id="L14781" rel="#L14781">14781</span>
<span id="L14782" rel="#L14782">14782</span>
<span id="L14783" rel="#L14783">14783</span>
<span id="L14784" rel="#L14784">14784</span>
<span id="L14785" rel="#L14785">14785</span>
<span id="L14786" rel="#L14786">14786</span>
<span id="L14787" rel="#L14787">14787</span>
<span id="L14788" rel="#L14788">14788</span>
<span id="L14789" rel="#L14789">14789</span>
<span id="L14790" rel="#L14790">14790</span>
<span id="L14791" rel="#L14791">14791</span>
<span id="L14792" rel="#L14792">14792</span>
<span id="L14793" rel="#L14793">14793</span>
<span id="L14794" rel="#L14794">14794</span>
<span id="L14795" rel="#L14795">14795</span>
<span id="L14796" rel="#L14796">14796</span>
<span id="L14797" rel="#L14797">14797</span>
<span id="L14798" rel="#L14798">14798</span>
<span id="L14799" rel="#L14799">14799</span>
<span id="L14800" rel="#L14800">14800</span>
<span id="L14801" rel="#L14801">14801</span>
<span id="L14802" rel="#L14802">14802</span>
<span id="L14803" rel="#L14803">14803</span>
<span id="L14804" rel="#L14804">14804</span>
<span id="L14805" rel="#L14805">14805</span>
<span id="L14806" rel="#L14806">14806</span>
<span id="L14807" rel="#L14807">14807</span>
<span id="L14808" rel="#L14808">14808</span>
<span id="L14809" rel="#L14809">14809</span>
<span id="L14810" rel="#L14810">14810</span>
<span id="L14811" rel="#L14811">14811</span>
<span id="L14812" rel="#L14812">14812</span>
<span id="L14813" rel="#L14813">14813</span>
<span id="L14814" rel="#L14814">14814</span>
<span id="L14815" rel="#L14815">14815</span>
<span id="L14816" rel="#L14816">14816</span>
<span id="L14817" rel="#L14817">14817</span>
<span id="L14818" rel="#L14818">14818</span>
<span id="L14819" rel="#L14819">14819</span>
<span id="L14820" rel="#L14820">14820</span>
<span id="L14821" rel="#L14821">14821</span>
<span id="L14822" rel="#L14822">14822</span>
<span id="L14823" rel="#L14823">14823</span>
<span id="L14824" rel="#L14824">14824</span>
<span id="L14825" rel="#L14825">14825</span>
<span id="L14826" rel="#L14826">14826</span>
<span id="L14827" rel="#L14827">14827</span>
<span id="L14828" rel="#L14828">14828</span>
<span id="L14829" rel="#L14829">14829</span>
<span id="L14830" rel="#L14830">14830</span>
<span id="L14831" rel="#L14831">14831</span>
<span id="L14832" rel="#L14832">14832</span>
<span id="L14833" rel="#L14833">14833</span>
<span id="L14834" rel="#L14834">14834</span>
<span id="L14835" rel="#L14835">14835</span>
<span id="L14836" rel="#L14836">14836</span>
<span id="L14837" rel="#L14837">14837</span>
<span id="L14838" rel="#L14838">14838</span>
<span id="L14839" rel="#L14839">14839</span>
<span id="L14840" rel="#L14840">14840</span>
<span id="L14841" rel="#L14841">14841</span>
<span id="L14842" rel="#L14842">14842</span>
<span id="L14843" rel="#L14843">14843</span>
<span id="L14844" rel="#L14844">14844</span>
<span id="L14845" rel="#L14845">14845</span>
<span id="L14846" rel="#L14846">14846</span>
<span id="L14847" rel="#L14847">14847</span>
<span id="L14848" rel="#L14848">14848</span>
<span id="L14849" rel="#L14849">14849</span>
<span id="L14850" rel="#L14850">14850</span>
<span id="L14851" rel="#L14851">14851</span>
<span id="L14852" rel="#L14852">14852</span>
<span id="L14853" rel="#L14853">14853</span>
<span id="L14854" rel="#L14854">14854</span>
<span id="L14855" rel="#L14855">14855</span>
<span id="L14856" rel="#L14856">14856</span>
<span id="L14857" rel="#L14857">14857</span>
<span id="L14858" rel="#L14858">14858</span>
<span id="L14859" rel="#L14859">14859</span>
<span id="L14860" rel="#L14860">14860</span>
<span id="L14861" rel="#L14861">14861</span>
<span id="L14862" rel="#L14862">14862</span>
<span id="L14863" rel="#L14863">14863</span>
<span id="L14864" rel="#L14864">14864</span>
<span id="L14865" rel="#L14865">14865</span>
<span id="L14866" rel="#L14866">14866</span>
<span id="L14867" rel="#L14867">14867</span>
<span id="L14868" rel="#L14868">14868</span>
<span id="L14869" rel="#L14869">14869</span>
<span id="L14870" rel="#L14870">14870</span>
<span id="L14871" rel="#L14871">14871</span>
<span id="L14872" rel="#L14872">14872</span>
<span id="L14873" rel="#L14873">14873</span>
<span id="L14874" rel="#L14874">14874</span>
<span id="L14875" rel="#L14875">14875</span>
<span id="L14876" rel="#L14876">14876</span>
<span id="L14877" rel="#L14877">14877</span>
<span id="L14878" rel="#L14878">14878</span>
<span id="L14879" rel="#L14879">14879</span>
<span id="L14880" rel="#L14880">14880</span>
<span id="L14881" rel="#L14881">14881</span>
<span id="L14882" rel="#L14882">14882</span>
<span id="L14883" rel="#L14883">14883</span>
<span id="L14884" rel="#L14884">14884</span>
<span id="L14885" rel="#L14885">14885</span>
<span id="L14886" rel="#L14886">14886</span>
<span id="L14887" rel="#L14887">14887</span>
<span id="L14888" rel="#L14888">14888</span>
<span id="L14889" rel="#L14889">14889</span>
<span id="L14890" rel="#L14890">14890</span>
<span id="L14891" rel="#L14891">14891</span>
<span id="L14892" rel="#L14892">14892</span>
<span id="L14893" rel="#L14893">14893</span>
<span id="L14894" rel="#L14894">14894</span>
<span id="L14895" rel="#L14895">14895</span>
<span id="L14896" rel="#L14896">14896</span>
<span id="L14897" rel="#L14897">14897</span>
<span id="L14898" rel="#L14898">14898</span>
<span id="L14899" rel="#L14899">14899</span>
<span id="L14900" rel="#L14900">14900</span>
<span id="L14901" rel="#L14901">14901</span>
<span id="L14902" rel="#L14902">14902</span>
<span id="L14903" rel="#L14903">14903</span>
<span id="L14904" rel="#L14904">14904</span>
<span id="L14905" rel="#L14905">14905</span>
<span id="L14906" rel="#L14906">14906</span>
<span id="L14907" rel="#L14907">14907</span>
<span id="L14908" rel="#L14908">14908</span>
<span id="L14909" rel="#L14909">14909</span>
<span id="L14910" rel="#L14910">14910</span>
<span id="L14911" rel="#L14911">14911</span>
<span id="L14912" rel="#L14912">14912</span>
<span id="L14913" rel="#L14913">14913</span>
<span id="L14914" rel="#L14914">14914</span>
<span id="L14915" rel="#L14915">14915</span>
<span id="L14916" rel="#L14916">14916</span>
<span id="L14917" rel="#L14917">14917</span>
<span id="L14918" rel="#L14918">14918</span>
<span id="L14919" rel="#L14919">14919</span>
<span id="L14920" rel="#L14920">14920</span>
<span id="L14921" rel="#L14921">14921</span>
<span id="L14922" rel="#L14922">14922</span>
<span id="L14923" rel="#L14923">14923</span>
<span id="L14924" rel="#L14924">14924</span>
<span id="L14925" rel="#L14925">14925</span>
<span id="L14926" rel="#L14926">14926</span>
<span id="L14927" rel="#L14927">14927</span>
<span id="L14928" rel="#L14928">14928</span>
<span id="L14929" rel="#L14929">14929</span>
<span id="L14930" rel="#L14930">14930</span>
<span id="L14931" rel="#L14931">14931</span>
<span id="L14932" rel="#L14932">14932</span>
<span id="L14933" rel="#L14933">14933</span>
<span id="L14934" rel="#L14934">14934</span>
<span id="L14935" rel="#L14935">14935</span>
<span id="L14936" rel="#L14936">14936</span>
<span id="L14937" rel="#L14937">14937</span>
<span id="L14938" rel="#L14938">14938</span>
<span id="L14939" rel="#L14939">14939</span>
<span id="L14940" rel="#L14940">14940</span>
<span id="L14941" rel="#L14941">14941</span>
<span id="L14942" rel="#L14942">14942</span>
<span id="L14943" rel="#L14943">14943</span>
<span id="L14944" rel="#L14944">14944</span>
<span id="L14945" rel="#L14945">14945</span>
<span id="L14946" rel="#L14946">14946</span>
<span id="L14947" rel="#L14947">14947</span>
<span id="L14948" rel="#L14948">14948</span>
<span id="L14949" rel="#L14949">14949</span>
<span id="L14950" rel="#L14950">14950</span>
<span id="L14951" rel="#L14951">14951</span>
<span id="L14952" rel="#L14952">14952</span>
<span id="L14953" rel="#L14953">14953</span>
<span id="L14954" rel="#L14954">14954</span>
<span id="L14955" rel="#L14955">14955</span>
<span id="L14956" rel="#L14956">14956</span>
<span id="L14957" rel="#L14957">14957</span>
<span id="L14958" rel="#L14958">14958</span>
<span id="L14959" rel="#L14959">14959</span>
<span id="L14960" rel="#L14960">14960</span>
<span id="L14961" rel="#L14961">14961</span>
<span id="L14962" rel="#L14962">14962</span>
<span id="L14963" rel="#L14963">14963</span>
<span id="L14964" rel="#L14964">14964</span>
<span id="L14965" rel="#L14965">14965</span>
<span id="L14966" rel="#L14966">14966</span>
<span id="L14967" rel="#L14967">14967</span>
<span id="L14968" rel="#L14968">14968</span>
<span id="L14969" rel="#L14969">14969</span>
<span id="L14970" rel="#L14970">14970</span>
<span id="L14971" rel="#L14971">14971</span>
<span id="L14972" rel="#L14972">14972</span>
<span id="L14973" rel="#L14973">14973</span>
<span id="L14974" rel="#L14974">14974</span>
<span id="L14975" rel="#L14975">14975</span>
<span id="L14976" rel="#L14976">14976</span>
<span id="L14977" rel="#L14977">14977</span>
<span id="L14978" rel="#L14978">14978</span>
<span id="L14979" rel="#L14979">14979</span>
<span id="L14980" rel="#L14980">14980</span>
<span id="L14981" rel="#L14981">14981</span>
<span id="L14982" rel="#L14982">14982</span>
<span id="L14983" rel="#L14983">14983</span>
<span id="L14984" rel="#L14984">14984</span>
<span id="L14985" rel="#L14985">14985</span>
<span id="L14986" rel="#L14986">14986</span>
<span id="L14987" rel="#L14987">14987</span>
<span id="L14988" rel="#L14988">14988</span>
<span id="L14989" rel="#L14989">14989</span>
<span id="L14990" rel="#L14990">14990</span>
<span id="L14991" rel="#L14991">14991</span>
<span id="L14992" rel="#L14992">14992</span>
<span id="L14993" rel="#L14993">14993</span>
<span id="L14994" rel="#L14994">14994</span>
<span id="L14995" rel="#L14995">14995</span>
<span id="L14996" rel="#L14996">14996</span>
<span id="L14997" rel="#L14997">14997</span>
<span id="L14998" rel="#L14998">14998</span>
<span id="L14999" rel="#L14999">14999</span>
<span id="L15000" rel="#L15000">15000</span>
<span id="L15001" rel="#L15001">15001</span>
<span id="L15002" rel="#L15002">15002</span>
<span id="L15003" rel="#L15003">15003</span>
<span id="L15004" rel="#L15004">15004</span>
<span id="L15005" rel="#L15005">15005</span>
<span id="L15006" rel="#L15006">15006</span>
<span id="L15007" rel="#L15007">15007</span>
<span id="L15008" rel="#L15008">15008</span>
<span id="L15009" rel="#L15009">15009</span>
<span id="L15010" rel="#L15010">15010</span>
<span id="L15011" rel="#L15011">15011</span>
<span id="L15012" rel="#L15012">15012</span>
<span id="L15013" rel="#L15013">15013</span>
<span id="L15014" rel="#L15014">15014</span>
<span id="L15015" rel="#L15015">15015</span>
<span id="L15016" rel="#L15016">15016</span>
<span id="L15017" rel="#L15017">15017</span>
<span id="L15018" rel="#L15018">15018</span>
<span id="L15019" rel="#L15019">15019</span>
<span id="L15020" rel="#L15020">15020</span>
<span id="L15021" rel="#L15021">15021</span>
<span id="L15022" rel="#L15022">15022</span>
<span id="L15023" rel="#L15023">15023</span>
<span id="L15024" rel="#L15024">15024</span>
<span id="L15025" rel="#L15025">15025</span>
<span id="L15026" rel="#L15026">15026</span>
<span id="L15027" rel="#L15027">15027</span>
<span id="L15028" rel="#L15028">15028</span>
<span id="L15029" rel="#L15029">15029</span>
<span id="L15030" rel="#L15030">15030</span>
<span id="L15031" rel="#L15031">15031</span>
<span id="L15032" rel="#L15032">15032</span>
<span id="L15033" rel="#L15033">15033</span>
<span id="L15034" rel="#L15034">15034</span>
<span id="L15035" rel="#L15035">15035</span>
<span id="L15036" rel="#L15036">15036</span>
<span id="L15037" rel="#L15037">15037</span>
<span id="L15038" rel="#L15038">15038</span>
<span id="L15039" rel="#L15039">15039</span>
<span id="L15040" rel="#L15040">15040</span>
<span id="L15041" rel="#L15041">15041</span>
<span id="L15042" rel="#L15042">15042</span>
<span id="L15043" rel="#L15043">15043</span>
<span id="L15044" rel="#L15044">15044</span>
<span id="L15045" rel="#L15045">15045</span>
<span id="L15046" rel="#L15046">15046</span>
<span id="L15047" rel="#L15047">15047</span>
<span id="L15048" rel="#L15048">15048</span>
<span id="L15049" rel="#L15049">15049</span>
<span id="L15050" rel="#L15050">15050</span>
<span id="L15051" rel="#L15051">15051</span>
<span id="L15052" rel="#L15052">15052</span>
<span id="L15053" rel="#L15053">15053</span>
<span id="L15054" rel="#L15054">15054</span>
<span id="L15055" rel="#L15055">15055</span>
<span id="L15056" rel="#L15056">15056</span>
<span id="L15057" rel="#L15057">15057</span>
<span id="L15058" rel="#L15058">15058</span>
<span id="L15059" rel="#L15059">15059</span>
<span id="L15060" rel="#L15060">15060</span>
<span id="L15061" rel="#L15061">15061</span>
<span id="L15062" rel="#L15062">15062</span>
<span id="L15063" rel="#L15063">15063</span>
<span id="L15064" rel="#L15064">15064</span>
<span id="L15065" rel="#L15065">15065</span>
<span id="L15066" rel="#L15066">15066</span>
<span id="L15067" rel="#L15067">15067</span>
<span id="L15068" rel="#L15068">15068</span>
<span id="L15069" rel="#L15069">15069</span>
<span id="L15070" rel="#L15070">15070</span>
<span id="L15071" rel="#L15071">15071</span>
<span id="L15072" rel="#L15072">15072</span>
<span id="L15073" rel="#L15073">15073</span>
<span id="L15074" rel="#L15074">15074</span>
<span id="L15075" rel="#L15075">15075</span>
<span id="L15076" rel="#L15076">15076</span>
<span id="L15077" rel="#L15077">15077</span>
<span id="L15078" rel="#L15078">15078</span>
<span id="L15079" rel="#L15079">15079</span>
<span id="L15080" rel="#L15080">15080</span>
<span id="L15081" rel="#L15081">15081</span>
<span id="L15082" rel="#L15082">15082</span>
<span id="L15083" rel="#L15083">15083</span>
<span id="L15084" rel="#L15084">15084</span>
<span id="L15085" rel="#L15085">15085</span>
<span id="L15086" rel="#L15086">15086</span>
<span id="L15087" rel="#L15087">15087</span>
<span id="L15088" rel="#L15088">15088</span>
<span id="L15089" rel="#L15089">15089</span>
<span id="L15090" rel="#L15090">15090</span>
<span id="L15091" rel="#L15091">15091</span>
<span id="L15092" rel="#L15092">15092</span>
<span id="L15093" rel="#L15093">15093</span>
<span id="L15094" rel="#L15094">15094</span>
<span id="L15095" rel="#L15095">15095</span>
<span id="L15096" rel="#L15096">15096</span>
<span id="L15097" rel="#L15097">15097</span>
<span id="L15098" rel="#L15098">15098</span>
<span id="L15099" rel="#L15099">15099</span>
<span id="L15100" rel="#L15100">15100</span>
<span id="L15101" rel="#L15101">15101</span>
<span id="L15102" rel="#L15102">15102</span>
<span id="L15103" rel="#L15103">15103</span>
<span id="L15104" rel="#L15104">15104</span>
<span id="L15105" rel="#L15105">15105</span>
<span id="L15106" rel="#L15106">15106</span>
<span id="L15107" rel="#L15107">15107</span>
<span id="L15108" rel="#L15108">15108</span>
<span id="L15109" rel="#L15109">15109</span>
<span id="L15110" rel="#L15110">15110</span>
<span id="L15111" rel="#L15111">15111</span>
<span id="L15112" rel="#L15112">15112</span>
<span id="L15113" rel="#L15113">15113</span>
<span id="L15114" rel="#L15114">15114</span>
<span id="L15115" rel="#L15115">15115</span>
<span id="L15116" rel="#L15116">15116</span>
<span id="L15117" rel="#L15117">15117</span>
<span id="L15118" rel="#L15118">15118</span>
<span id="L15119" rel="#L15119">15119</span>
<span id="L15120" rel="#L15120">15120</span>
<span id="L15121" rel="#L15121">15121</span>
<span id="L15122" rel="#L15122">15122</span>
<span id="L15123" rel="#L15123">15123</span>
<span id="L15124" rel="#L15124">15124</span>
<span id="L15125" rel="#L15125">15125</span>
<span id="L15126" rel="#L15126">15126</span>
<span id="L15127" rel="#L15127">15127</span>
<span id="L15128" rel="#L15128">15128</span>
<span id="L15129" rel="#L15129">15129</span>
<span id="L15130" rel="#L15130">15130</span>
<span id="L15131" rel="#L15131">15131</span>
<span id="L15132" rel="#L15132">15132</span>
<span id="L15133" rel="#L15133">15133</span>
<span id="L15134" rel="#L15134">15134</span>
<span id="L15135" rel="#L15135">15135</span>
<span id="L15136" rel="#L15136">15136</span>
<span id="L15137" rel="#L15137">15137</span>
<span id="L15138" rel="#L15138">15138</span>
<span id="L15139" rel="#L15139">15139</span>
<span id="L15140" rel="#L15140">15140</span>
<span id="L15141" rel="#L15141">15141</span>
<span id="L15142" rel="#L15142">15142</span>
<span id="L15143" rel="#L15143">15143</span>
<span id="L15144" rel="#L15144">15144</span>
<span id="L15145" rel="#L15145">15145</span>
<span id="L15146" rel="#L15146">15146</span>
<span id="L15147" rel="#L15147">15147</span>
<span id="L15148" rel="#L15148">15148</span>
<span id="L15149" rel="#L15149">15149</span>
<span id="L15150" rel="#L15150">15150</span>
<span id="L15151" rel="#L15151">15151</span>
<span id="L15152" rel="#L15152">15152</span>
<span id="L15153" rel="#L15153">15153</span>
<span id="L15154" rel="#L15154">15154</span>
<span id="L15155" rel="#L15155">15155</span>
<span id="L15156" rel="#L15156">15156</span>
<span id="L15157" rel="#L15157">15157</span>
<span id="L15158" rel="#L15158">15158</span>
<span id="L15159" rel="#L15159">15159</span>
<span id="L15160" rel="#L15160">15160</span>
<span id="L15161" rel="#L15161">15161</span>
<span id="L15162" rel="#L15162">15162</span>
<span id="L15163" rel="#L15163">15163</span>
<span id="L15164" rel="#L15164">15164</span>
<span id="L15165" rel="#L15165">15165</span>
<span id="L15166" rel="#L15166">15166</span>
<span id="L15167" rel="#L15167">15167</span>
<span id="L15168" rel="#L15168">15168</span>
<span id="L15169" rel="#L15169">15169</span>
<span id="L15170" rel="#L15170">15170</span>
<span id="L15171" rel="#L15171">15171</span>
<span id="L15172" rel="#L15172">15172</span>
<span id="L15173" rel="#L15173">15173</span>
<span id="L15174" rel="#L15174">15174</span>
<span id="L15175" rel="#L15175">15175</span>
<span id="L15176" rel="#L15176">15176</span>
<span id="L15177" rel="#L15177">15177</span>
<span id="L15178" rel="#L15178">15178</span>
<span id="L15179" rel="#L15179">15179</span>
<span id="L15180" rel="#L15180">15180</span>
<span id="L15181" rel="#L15181">15181</span>
<span id="L15182" rel="#L15182">15182</span>
<span id="L15183" rel="#L15183">15183</span>
<span id="L15184" rel="#L15184">15184</span>
<span id="L15185" rel="#L15185">15185</span>
<span id="L15186" rel="#L15186">15186</span>
<span id="L15187" rel="#L15187">15187</span>
<span id="L15188" rel="#L15188">15188</span>
<span id="L15189" rel="#L15189">15189</span>
<span id="L15190" rel="#L15190">15190</span>
<span id="L15191" rel="#L15191">15191</span>
<span id="L15192" rel="#L15192">15192</span>
<span id="L15193" rel="#L15193">15193</span>
<span id="L15194" rel="#L15194">15194</span>
<span id="L15195" rel="#L15195">15195</span>
<span id="L15196" rel="#L15196">15196</span>
<span id="L15197" rel="#L15197">15197</span>
<span id="L15198" rel="#L15198">15198</span>
<span id="L15199" rel="#L15199">15199</span>
<span id="L15200" rel="#L15200">15200</span>
<span id="L15201" rel="#L15201">15201</span>
<span id="L15202" rel="#L15202">15202</span>
<span id="L15203" rel="#L15203">15203</span>
<span id="L15204" rel="#L15204">15204</span>
<span id="L15205" rel="#L15205">15205</span>
<span id="L15206" rel="#L15206">15206</span>
<span id="L15207" rel="#L15207">15207</span>
<span id="L15208" rel="#L15208">15208</span>
<span id="L15209" rel="#L15209">15209</span>
<span id="L15210" rel="#L15210">15210</span>
<span id="L15211" rel="#L15211">15211</span>
<span id="L15212" rel="#L15212">15212</span>
<span id="L15213" rel="#L15213">15213</span>
<span id="L15214" rel="#L15214">15214</span>
<span id="L15215" rel="#L15215">15215</span>
<span id="L15216" rel="#L15216">15216</span>
<span id="L15217" rel="#L15217">15217</span>
<span id="L15218" rel="#L15218">15218</span>
<span id="L15219" rel="#L15219">15219</span>
<span id="L15220" rel="#L15220">15220</span>
<span id="L15221" rel="#L15221">15221</span>
<span id="L15222" rel="#L15222">15222</span>
<span id="L15223" rel="#L15223">15223</span>
<span id="L15224" rel="#L15224">15224</span>
<span id="L15225" rel="#L15225">15225</span>
<span id="L15226" rel="#L15226">15226</span>
<span id="L15227" rel="#L15227">15227</span>
<span id="L15228" rel="#L15228">15228</span>
<span id="L15229" rel="#L15229">15229</span>
<span id="L15230" rel="#L15230">15230</span>
<span id="L15231" rel="#L15231">15231</span>
<span id="L15232" rel="#L15232">15232</span>
<span id="L15233" rel="#L15233">15233</span>
<span id="L15234" rel="#L15234">15234</span>
<span id="L15235" rel="#L15235">15235</span>
<span id="L15236" rel="#L15236">15236</span>
<span id="L15237" rel="#L15237">15237</span>
<span id="L15238" rel="#L15238">15238</span>
<span id="L15239" rel="#L15239">15239</span>
<span id="L15240" rel="#L15240">15240</span>
<span id="L15241" rel="#L15241">15241</span>
<span id="L15242" rel="#L15242">15242</span>
<span id="L15243" rel="#L15243">15243</span>
<span id="L15244" rel="#L15244">15244</span>
<span id="L15245" rel="#L15245">15245</span>
<span id="L15246" rel="#L15246">15246</span>
<span id="L15247" rel="#L15247">15247</span>
<span id="L15248" rel="#L15248">15248</span>
<span id="L15249" rel="#L15249">15249</span>
<span id="L15250" rel="#L15250">15250</span>
<span id="L15251" rel="#L15251">15251</span>
<span id="L15252" rel="#L15252">15252</span>
<span id="L15253" rel="#L15253">15253</span>
<span id="L15254" rel="#L15254">15254</span>
<span id="L15255" rel="#L15255">15255</span>
<span id="L15256" rel="#L15256">15256</span>
<span id="L15257" rel="#L15257">15257</span>
<span id="L15258" rel="#L15258">15258</span>
<span id="L15259" rel="#L15259">15259</span>
<span id="L15260" rel="#L15260">15260</span>
<span id="L15261" rel="#L15261">15261</span>
<span id="L15262" rel="#L15262">15262</span>
<span id="L15263" rel="#L15263">15263</span>
<span id="L15264" rel="#L15264">15264</span>
<span id="L15265" rel="#L15265">15265</span>
<span id="L15266" rel="#L15266">15266</span>
<span id="L15267" rel="#L15267">15267</span>
<span id="L15268" rel="#L15268">15268</span>
<span id="L15269" rel="#L15269">15269</span>
<span id="L15270" rel="#L15270">15270</span>
<span id="L15271" rel="#L15271">15271</span>
<span id="L15272" rel="#L15272">15272</span>
<span id="L15273" rel="#L15273">15273</span>
<span id="L15274" rel="#L15274">15274</span>
<span id="L15275" rel="#L15275">15275</span>
<span id="L15276" rel="#L15276">15276</span>
<span id="L15277" rel="#L15277">15277</span>
<span id="L15278" rel="#L15278">15278</span>
<span id="L15279" rel="#L15279">15279</span>
<span id="L15280" rel="#L15280">15280</span>
<span id="L15281" rel="#L15281">15281</span>
<span id="L15282" rel="#L15282">15282</span>
<span id="L15283" rel="#L15283">15283</span>
<span id="L15284" rel="#L15284">15284</span>
<span id="L15285" rel="#L15285">15285</span>
<span id="L15286" rel="#L15286">15286</span>
<span id="L15287" rel="#L15287">15287</span>
<span id="L15288" rel="#L15288">15288</span>
<span id="L15289" rel="#L15289">15289</span>
<span id="L15290" rel="#L15290">15290</span>
<span id="L15291" rel="#L15291">15291</span>
<span id="L15292" rel="#L15292">15292</span>
<span id="L15293" rel="#L15293">15293</span>
<span id="L15294" rel="#L15294">15294</span>
<span id="L15295" rel="#L15295">15295</span>
<span id="L15296" rel="#L15296">15296</span>
<span id="L15297" rel="#L15297">15297</span>
<span id="L15298" rel="#L15298">15298</span>
<span id="L15299" rel="#L15299">15299</span>
<span id="L15300" rel="#L15300">15300</span>
<span id="L15301" rel="#L15301">15301</span>
<span id="L15302" rel="#L15302">15302</span>
<span id="L15303" rel="#L15303">15303</span>
<span id="L15304" rel="#L15304">15304</span>
<span id="L15305" rel="#L15305">15305</span>
<span id="L15306" rel="#L15306">15306</span>
<span id="L15307" rel="#L15307">15307</span>
<span id="L15308" rel="#L15308">15308</span>
<span id="L15309" rel="#L15309">15309</span>
<span id="L15310" rel="#L15310">15310</span>
<span id="L15311" rel="#L15311">15311</span>
<span id="L15312" rel="#L15312">15312</span>
<span id="L15313" rel="#L15313">15313</span>
<span id="L15314" rel="#L15314">15314</span>
<span id="L15315" rel="#L15315">15315</span>
<span id="L15316" rel="#L15316">15316</span>
<span id="L15317" rel="#L15317">15317</span>
<span id="L15318" rel="#L15318">15318</span>
<span id="L15319" rel="#L15319">15319</span>
<span id="L15320" rel="#L15320">15320</span>
<span id="L15321" rel="#L15321">15321</span>
<span id="L15322" rel="#L15322">15322</span>
<span id="L15323" rel="#L15323">15323</span>
<span id="L15324" rel="#L15324">15324</span>
<span id="L15325" rel="#L15325">15325</span>
<span id="L15326" rel="#L15326">15326</span>
<span id="L15327" rel="#L15327">15327</span>
<span id="L15328" rel="#L15328">15328</span>
<span id="L15329" rel="#L15329">15329</span>
<span id="L15330" rel="#L15330">15330</span>
<span id="L15331" rel="#L15331">15331</span>
<span id="L15332" rel="#L15332">15332</span>
<span id="L15333" rel="#L15333">15333</span>
<span id="L15334" rel="#L15334">15334</span>
<span id="L15335" rel="#L15335">15335</span>
<span id="L15336" rel="#L15336">15336</span>
<span id="L15337" rel="#L15337">15337</span>
<span id="L15338" rel="#L15338">15338</span>
<span id="L15339" rel="#L15339">15339</span>
<span id="L15340" rel="#L15340">15340</span>
<span id="L15341" rel="#L15341">15341</span>
<span id="L15342" rel="#L15342">15342</span>
<span id="L15343" rel="#L15343">15343</span>
<span id="L15344" rel="#L15344">15344</span>
<span id="L15345" rel="#L15345">15345</span>
<span id="L15346" rel="#L15346">15346</span>
<span id="L15347" rel="#L15347">15347</span>
<span id="L15348" rel="#L15348">15348</span>
<span id="L15349" rel="#L15349">15349</span>
<span id="L15350" rel="#L15350">15350</span>
<span id="L15351" rel="#L15351">15351</span>
<span id="L15352" rel="#L15352">15352</span>
<span id="L15353" rel="#L15353">15353</span>
<span id="L15354" rel="#L15354">15354</span>
<span id="L15355" rel="#L15355">15355</span>
<span id="L15356" rel="#L15356">15356</span>
<span id="L15357" rel="#L15357">15357</span>
<span id="L15358" rel="#L15358">15358</span>
<span id="L15359" rel="#L15359">15359</span>
<span id="L15360" rel="#L15360">15360</span>
<span id="L15361" rel="#L15361">15361</span>
<span id="L15362" rel="#L15362">15362</span>
<span id="L15363" rel="#L15363">15363</span>
<span id="L15364" rel="#L15364">15364</span>
<span id="L15365" rel="#L15365">15365</span>
<span id="L15366" rel="#L15366">15366</span>
<span id="L15367" rel="#L15367">15367</span>
<span id="L15368" rel="#L15368">15368</span>
<span id="L15369" rel="#L15369">15369</span>
<span id="L15370" rel="#L15370">15370</span>
<span id="L15371" rel="#L15371">15371</span>
<span id="L15372" rel="#L15372">15372</span>
<span id="L15373" rel="#L15373">15373</span>
<span id="L15374" rel="#L15374">15374</span>
<span id="L15375" rel="#L15375">15375</span>
<span id="L15376" rel="#L15376">15376</span>
<span id="L15377" rel="#L15377">15377</span>
<span id="L15378" rel="#L15378">15378</span>
<span id="L15379" rel="#L15379">15379</span>
<span id="L15380" rel="#L15380">15380</span>
<span id="L15381" rel="#L15381">15381</span>
<span id="L15382" rel="#L15382">15382</span>
<span id="L15383" rel="#L15383">15383</span>
<span id="L15384" rel="#L15384">15384</span>
<span id="L15385" rel="#L15385">15385</span>
<span id="L15386" rel="#L15386">15386</span>
<span id="L15387" rel="#L15387">15387</span>
<span id="L15388" rel="#L15388">15388</span>
<span id="L15389" rel="#L15389">15389</span>
<span id="L15390" rel="#L15390">15390</span>
<span id="L15391" rel="#L15391">15391</span>
<span id="L15392" rel="#L15392">15392</span>
<span id="L15393" rel="#L15393">15393</span>
<span id="L15394" rel="#L15394">15394</span>
<span id="L15395" rel="#L15395">15395</span>
<span id="L15396" rel="#L15396">15396</span>
<span id="L15397" rel="#L15397">15397</span>
<span id="L15398" rel="#L15398">15398</span>
<span id="L15399" rel="#L15399">15399</span>
<span id="L15400" rel="#L15400">15400</span>
<span id="L15401" rel="#L15401">15401</span>
<span id="L15402" rel="#L15402">15402</span>
<span id="L15403" rel="#L15403">15403</span>
<span id="L15404" rel="#L15404">15404</span>
<span id="L15405" rel="#L15405">15405</span>
<span id="L15406" rel="#L15406">15406</span>
<span id="L15407" rel="#L15407">15407</span>
<span id="L15408" rel="#L15408">15408</span>
<span id="L15409" rel="#L15409">15409</span>
<span id="L15410" rel="#L15410">15410</span>
<span id="L15411" rel="#L15411">15411</span>
<span id="L15412" rel="#L15412">15412</span>
<span id="L15413" rel="#L15413">15413</span>
<span id="L15414" rel="#L15414">15414</span>
<span id="L15415" rel="#L15415">15415</span>
<span id="L15416" rel="#L15416">15416</span>
<span id="L15417" rel="#L15417">15417</span>
<span id="L15418" rel="#L15418">15418</span>
<span id="L15419" rel="#L15419">15419</span>
<span id="L15420" rel="#L15420">15420</span>
<span id="L15421" rel="#L15421">15421</span>
<span id="L15422" rel="#L15422">15422</span>
<span id="L15423" rel="#L15423">15423</span>
<span id="L15424" rel="#L15424">15424</span>
<span id="L15425" rel="#L15425">15425</span>
<span id="L15426" rel="#L15426">15426</span>
<span id="L15427" rel="#L15427">15427</span>
<span id="L15428" rel="#L15428">15428</span>
<span id="L15429" rel="#L15429">15429</span>
<span id="L15430" rel="#L15430">15430</span>
<span id="L15431" rel="#L15431">15431</span>
<span id="L15432" rel="#L15432">15432</span>
<span id="L15433" rel="#L15433">15433</span>
<span id="L15434" rel="#L15434">15434</span>
<span id="L15435" rel="#L15435">15435</span>
<span id="L15436" rel="#L15436">15436</span>
<span id="L15437" rel="#L15437">15437</span>
<span id="L15438" rel="#L15438">15438</span>
<span id="L15439" rel="#L15439">15439</span>
<span id="L15440" rel="#L15440">15440</span>
<span id="L15441" rel="#L15441">15441</span>
<span id="L15442" rel="#L15442">15442</span>
<span id="L15443" rel="#L15443">15443</span>
<span id="L15444" rel="#L15444">15444</span>
<span id="L15445" rel="#L15445">15445</span>
<span id="L15446" rel="#L15446">15446</span>
<span id="L15447" rel="#L15447">15447</span>
<span id="L15448" rel="#L15448">15448</span>
<span id="L15449" rel="#L15449">15449</span>
<span id="L15450" rel="#L15450">15450</span>
<span id="L15451" rel="#L15451">15451</span>
<span id="L15452" rel="#L15452">15452</span>
<span id="L15453" rel="#L15453">15453</span>
<span id="L15454" rel="#L15454">15454</span>
<span id="L15455" rel="#L15455">15455</span>
<span id="L15456" rel="#L15456">15456</span>
<span id="L15457" rel="#L15457">15457</span>
<span id="L15458" rel="#L15458">15458</span>
<span id="L15459" rel="#L15459">15459</span>
<span id="L15460" rel="#L15460">15460</span>
<span id="L15461" rel="#L15461">15461</span>
<span id="L15462" rel="#L15462">15462</span>
<span id="L15463" rel="#L15463">15463</span>
<span id="L15464" rel="#L15464">15464</span>
<span id="L15465" rel="#L15465">15465</span>
<span id="L15466" rel="#L15466">15466</span>
<span id="L15467" rel="#L15467">15467</span>
<span id="L15468" rel="#L15468">15468</span>
<span id="L15469" rel="#L15469">15469</span>
<span id="L15470" rel="#L15470">15470</span>
<span id="L15471" rel="#L15471">15471</span>
<span id="L15472" rel="#L15472">15472</span>
<span id="L15473" rel="#L15473">15473</span>
<span id="L15474" rel="#L15474">15474</span>
<span id="L15475" rel="#L15475">15475</span>
<span id="L15476" rel="#L15476">15476</span>
<span id="L15477" rel="#L15477">15477</span>
<span id="L15478" rel="#L15478">15478</span>
<span id="L15479" rel="#L15479">15479</span>
<span id="L15480" rel="#L15480">15480</span>
<span id="L15481" rel="#L15481">15481</span>
<span id="L15482" rel="#L15482">15482</span>
<span id="L15483" rel="#L15483">15483</span>
<span id="L15484" rel="#L15484">15484</span>
<span id="L15485" rel="#L15485">15485</span>
<span id="L15486" rel="#L15486">15486</span>
<span id="L15487" rel="#L15487">15487</span>
<span id="L15488" rel="#L15488">15488</span>
<span id="L15489" rel="#L15489">15489</span>
<span id="L15490" rel="#L15490">15490</span>
<span id="L15491" rel="#L15491">15491</span>
<span id="L15492" rel="#L15492">15492</span>
<span id="L15493" rel="#L15493">15493</span>
<span id="L15494" rel="#L15494">15494</span>
<span id="L15495" rel="#L15495">15495</span>
<span id="L15496" rel="#L15496">15496</span>
<span id="L15497" rel="#L15497">15497</span>
<span id="L15498" rel="#L15498">15498</span>
<span id="L15499" rel="#L15499">15499</span>
<span id="L15500" rel="#L15500">15500</span>
<span id="L15501" rel="#L15501">15501</span>
<span id="L15502" rel="#L15502">15502</span>
<span id="L15503" rel="#L15503">15503</span>
<span id="L15504" rel="#L15504">15504</span>
<span id="L15505" rel="#L15505">15505</span>
<span id="L15506" rel="#L15506">15506</span>
<span id="L15507" rel="#L15507">15507</span>
<span id="L15508" rel="#L15508">15508</span>
<span id="L15509" rel="#L15509">15509</span>
<span id="L15510" rel="#L15510">15510</span>
<span id="L15511" rel="#L15511">15511</span>
<span id="L15512" rel="#L15512">15512</span>
<span id="L15513" rel="#L15513">15513</span>
<span id="L15514" rel="#L15514">15514</span>
<span id="L15515" rel="#L15515">15515</span>
<span id="L15516" rel="#L15516">15516</span>
<span id="L15517" rel="#L15517">15517</span>
<span id="L15518" rel="#L15518">15518</span>
<span id="L15519" rel="#L15519">15519</span>
<span id="L15520" rel="#L15520">15520</span>
<span id="L15521" rel="#L15521">15521</span>
<span id="L15522" rel="#L15522">15522</span>
<span id="L15523" rel="#L15523">15523</span>
<span id="L15524" rel="#L15524">15524</span>
<span id="L15525" rel="#L15525">15525</span>
<span id="L15526" rel="#L15526">15526</span>
<span id="L15527" rel="#L15527">15527</span>
<span id="L15528" rel="#L15528">15528</span>
<span id="L15529" rel="#L15529">15529</span>
<span id="L15530" rel="#L15530">15530</span>
<span id="L15531" rel="#L15531">15531</span>
<span id="L15532" rel="#L15532">15532</span>
<span id="L15533" rel="#L15533">15533</span>
<span id="L15534" rel="#L15534">15534</span>
<span id="L15535" rel="#L15535">15535</span>
<span id="L15536" rel="#L15536">15536</span>
<span id="L15537" rel="#L15537">15537</span>
<span id="L15538" rel="#L15538">15538</span>
<span id="L15539" rel="#L15539">15539</span>
<span id="L15540" rel="#L15540">15540</span>
<span id="L15541" rel="#L15541">15541</span>
<span id="L15542" rel="#L15542">15542</span>
<span id="L15543" rel="#L15543">15543</span>
<span id="L15544" rel="#L15544">15544</span>
<span id="L15545" rel="#L15545">15545</span>
<span id="L15546" rel="#L15546">15546</span>
<span id="L15547" rel="#L15547">15547</span>
<span id="L15548" rel="#L15548">15548</span>
<span id="L15549" rel="#L15549">15549</span>
<span id="L15550" rel="#L15550">15550</span>
<span id="L15551" rel="#L15551">15551</span>
<span id="L15552" rel="#L15552">15552</span>
<span id="L15553" rel="#L15553">15553</span>
<span id="L15554" rel="#L15554">15554</span>
<span id="L15555" rel="#L15555">15555</span>
<span id="L15556" rel="#L15556">15556</span>
<span id="L15557" rel="#L15557">15557</span>
<span id="L15558" rel="#L15558">15558</span>
<span id="L15559" rel="#L15559">15559</span>
<span id="L15560" rel="#L15560">15560</span>
<span id="L15561" rel="#L15561">15561</span>
<span id="L15562" rel="#L15562">15562</span>
<span id="L15563" rel="#L15563">15563</span>
<span id="L15564" rel="#L15564">15564</span>
<span id="L15565" rel="#L15565">15565</span>
<span id="L15566" rel="#L15566">15566</span>
<span id="L15567" rel="#L15567">15567</span>
<span id="L15568" rel="#L15568">15568</span>
<span id="L15569" rel="#L15569">15569</span>
<span id="L15570" rel="#L15570">15570</span>
<span id="L15571" rel="#L15571">15571</span>
<span id="L15572" rel="#L15572">15572</span>
<span id="L15573" rel="#L15573">15573</span>
<span id="L15574" rel="#L15574">15574</span>
<span id="L15575" rel="#L15575">15575</span>
<span id="L15576" rel="#L15576">15576</span>
<span id="L15577" rel="#L15577">15577</span>
<span id="L15578" rel="#L15578">15578</span>
<span id="L15579" rel="#L15579">15579</span>
<span id="L15580" rel="#L15580">15580</span>
<span id="L15581" rel="#L15581">15581</span>
<span id="L15582" rel="#L15582">15582</span>
<span id="L15583" rel="#L15583">15583</span>
<span id="L15584" rel="#L15584">15584</span>
<span id="L15585" rel="#L15585">15585</span>
<span id="L15586" rel="#L15586">15586</span>
<span id="L15587" rel="#L15587">15587</span>
<span id="L15588" rel="#L15588">15588</span>
<span id="L15589" rel="#L15589">15589</span>
<span id="L15590" rel="#L15590">15590</span>
<span id="L15591" rel="#L15591">15591</span>
<span id="L15592" rel="#L15592">15592</span>
<span id="L15593" rel="#L15593">15593</span>
<span id="L15594" rel="#L15594">15594</span>
<span id="L15595" rel="#L15595">15595</span>
<span id="L15596" rel="#L15596">15596</span>
<span id="L15597" rel="#L15597">15597</span>
<span id="L15598" rel="#L15598">15598</span>
<span id="L15599" rel="#L15599">15599</span>
<span id="L15600" rel="#L15600">15600</span>
<span id="L15601" rel="#L15601">15601</span>
<span id="L15602" rel="#L15602">15602</span>
<span id="L15603" rel="#L15603">15603</span>
<span id="L15604" rel="#L15604">15604</span>
<span id="L15605" rel="#L15605">15605</span>
<span id="L15606" rel="#L15606">15606</span>
<span id="L15607" rel="#L15607">15607</span>
<span id="L15608" rel="#L15608">15608</span>
<span id="L15609" rel="#L15609">15609</span>
<span id="L15610" rel="#L15610">15610</span>
<span id="L15611" rel="#L15611">15611</span>
<span id="L15612" rel="#L15612">15612</span>
<span id="L15613" rel="#L15613">15613</span>
<span id="L15614" rel="#L15614">15614</span>
<span id="L15615" rel="#L15615">15615</span>
<span id="L15616" rel="#L15616">15616</span>
<span id="L15617" rel="#L15617">15617</span>
<span id="L15618" rel="#L15618">15618</span>
<span id="L15619" rel="#L15619">15619</span>
<span id="L15620" rel="#L15620">15620</span>
<span id="L15621" rel="#L15621">15621</span>
<span id="L15622" rel="#L15622">15622</span>
<span id="L15623" rel="#L15623">15623</span>
<span id="L15624" rel="#L15624">15624</span>
<span id="L15625" rel="#L15625">15625</span>
<span id="L15626" rel="#L15626">15626</span>
<span id="L15627" rel="#L15627">15627</span>
<span id="L15628" rel="#L15628">15628</span>
<span id="L15629" rel="#L15629">15629</span>
<span id="L15630" rel="#L15630">15630</span>
<span id="L15631" rel="#L15631">15631</span>
<span id="L15632" rel="#L15632">15632</span>
<span id="L15633" rel="#L15633">15633</span>
<span id="L15634" rel="#L15634">15634</span>
<span id="L15635" rel="#L15635">15635</span>
<span id="L15636" rel="#L15636">15636</span>
<span id="L15637" rel="#L15637">15637</span>
<span id="L15638" rel="#L15638">15638</span>
<span id="L15639" rel="#L15639">15639</span>
<span id="L15640" rel="#L15640">15640</span>
<span id="L15641" rel="#L15641">15641</span>
<span id="L15642" rel="#L15642">15642</span>
<span id="L15643" rel="#L15643">15643</span>
<span id="L15644" rel="#L15644">15644</span>
<span id="L15645" rel="#L15645">15645</span>
<span id="L15646" rel="#L15646">15646</span>
<span id="L15647" rel="#L15647">15647</span>
<span id="L15648" rel="#L15648">15648</span>
<span id="L15649" rel="#L15649">15649</span>
<span id="L15650" rel="#L15650">15650</span>
<span id="L15651" rel="#L15651">15651</span>
<span id="L15652" rel="#L15652">15652</span>
<span id="L15653" rel="#L15653">15653</span>
<span id="L15654" rel="#L15654">15654</span>
<span id="L15655" rel="#L15655">15655</span>
<span id="L15656" rel="#L15656">15656</span>
<span id="L15657" rel="#L15657">15657</span>
<span id="L15658" rel="#L15658">15658</span>
<span id="L15659" rel="#L15659">15659</span>
<span id="L15660" rel="#L15660">15660</span>
<span id="L15661" rel="#L15661">15661</span>
<span id="L15662" rel="#L15662">15662</span>
<span id="L15663" rel="#L15663">15663</span>
<span id="L15664" rel="#L15664">15664</span>
<span id="L15665" rel="#L15665">15665</span>
<span id="L15666" rel="#L15666">15666</span>
<span id="L15667" rel="#L15667">15667</span>
<span id="L15668" rel="#L15668">15668</span>
<span id="L15669" rel="#L15669">15669</span>
<span id="L15670" rel="#L15670">15670</span>
<span id="L15671" rel="#L15671">15671</span>
<span id="L15672" rel="#L15672">15672</span>
<span id="L15673" rel="#L15673">15673</span>
<span id="L15674" rel="#L15674">15674</span>
<span id="L15675" rel="#L15675">15675</span>
<span id="L15676" rel="#L15676">15676</span>
<span id="L15677" rel="#L15677">15677</span>
<span id="L15678" rel="#L15678">15678</span>
<span id="L15679" rel="#L15679">15679</span>
<span id="L15680" rel="#L15680">15680</span>
<span id="L15681" rel="#L15681">15681</span>
<span id="L15682" rel="#L15682">15682</span>
<span id="L15683" rel="#L15683">15683</span>
<span id="L15684" rel="#L15684">15684</span>
<span id="L15685" rel="#L15685">15685</span>
<span id="L15686" rel="#L15686">15686</span>
<span id="L15687" rel="#L15687">15687</span>
<span id="L15688" rel="#L15688">15688</span>
<span id="L15689" rel="#L15689">15689</span>
<span id="L15690" rel="#L15690">15690</span>
<span id="L15691" rel="#L15691">15691</span>
<span id="L15692" rel="#L15692">15692</span>
<span id="L15693" rel="#L15693">15693</span>
<span id="L15694" rel="#L15694">15694</span>
<span id="L15695" rel="#L15695">15695</span>
<span id="L15696" rel="#L15696">15696</span>
<span id="L15697" rel="#L15697">15697</span>
<span id="L15698" rel="#L15698">15698</span>
<span id="L15699" rel="#L15699">15699</span>
<span id="L15700" rel="#L15700">15700</span>
<span id="L15701" rel="#L15701">15701</span>
<span id="L15702" rel="#L15702">15702</span>
<span id="L15703" rel="#L15703">15703</span>
<span id="L15704" rel="#L15704">15704</span>
<span id="L15705" rel="#L15705">15705</span>
<span id="L15706" rel="#L15706">15706</span>
<span id="L15707" rel="#L15707">15707</span>
<span id="L15708" rel="#L15708">15708</span>
<span id="L15709" rel="#L15709">15709</span>
<span id="L15710" rel="#L15710">15710</span>
<span id="L15711" rel="#L15711">15711</span>
<span id="L15712" rel="#L15712">15712</span>
<span id="L15713" rel="#L15713">15713</span>
<span id="L15714" rel="#L15714">15714</span>
<span id="L15715" rel="#L15715">15715</span>
<span id="L15716" rel="#L15716">15716</span>
<span id="L15717" rel="#L15717">15717</span>
<span id="L15718" rel="#L15718">15718</span>
<span id="L15719" rel="#L15719">15719</span>
<span id="L15720" rel="#L15720">15720</span>
<span id="L15721" rel="#L15721">15721</span>
<span id="L15722" rel="#L15722">15722</span>
<span id="L15723" rel="#L15723">15723</span>
<span id="L15724" rel="#L15724">15724</span>
<span id="L15725" rel="#L15725">15725</span>
<span id="L15726" rel="#L15726">15726</span>
<span id="L15727" rel="#L15727">15727</span>
<span id="L15728" rel="#L15728">15728</span>
<span id="L15729" rel="#L15729">15729</span>
<span id="L15730" rel="#L15730">15730</span>
<span id="L15731" rel="#L15731">15731</span>
<span id="L15732" rel="#L15732">15732</span>
<span id="L15733" rel="#L15733">15733</span>
<span id="L15734" rel="#L15734">15734</span>
<span id="L15735" rel="#L15735">15735</span>
<span id="L15736" rel="#L15736">15736</span>
<span id="L15737" rel="#L15737">15737</span>
<span id="L15738" rel="#L15738">15738</span>
<span id="L15739" rel="#L15739">15739</span>
<span id="L15740" rel="#L15740">15740</span>
<span id="L15741" rel="#L15741">15741</span>
<span id="L15742" rel="#L15742">15742</span>
<span id="L15743" rel="#L15743">15743</span>
<span id="L15744" rel="#L15744">15744</span>
<span id="L15745" rel="#L15745">15745</span>
<span id="L15746" rel="#L15746">15746</span>
<span id="L15747" rel="#L15747">15747</span>
<span id="L15748" rel="#L15748">15748</span>
<span id="L15749" rel="#L15749">15749</span>
<span id="L15750" rel="#L15750">15750</span>
<span id="L15751" rel="#L15751">15751</span>
<span id="L15752" rel="#L15752">15752</span>
<span id="L15753" rel="#L15753">15753</span>
<span id="L15754" rel="#L15754">15754</span>
<span id="L15755" rel="#L15755">15755</span>
<span id="L15756" rel="#L15756">15756</span>
<span id="L15757" rel="#L15757">15757</span>
<span id="L15758" rel="#L15758">15758</span>
<span id="L15759" rel="#L15759">15759</span>
<span id="L15760" rel="#L15760">15760</span>
<span id="L15761" rel="#L15761">15761</span>
<span id="L15762" rel="#L15762">15762</span>
<span id="L15763" rel="#L15763">15763</span>
<span id="L15764" rel="#L15764">15764</span>
<span id="L15765" rel="#L15765">15765</span>
<span id="L15766" rel="#L15766">15766</span>
<span id="L15767" rel="#L15767">15767</span>
<span id="L15768" rel="#L15768">15768</span>
<span id="L15769" rel="#L15769">15769</span>
<span id="L15770" rel="#L15770">15770</span>
<span id="L15771" rel="#L15771">15771</span>
<span id="L15772" rel="#L15772">15772</span>
<span id="L15773" rel="#L15773">15773</span>
<span id="L15774" rel="#L15774">15774</span>
<span id="L15775" rel="#L15775">15775</span>
<span id="L15776" rel="#L15776">15776</span>
<span id="L15777" rel="#L15777">15777</span>
<span id="L15778" rel="#L15778">15778</span>
<span id="L15779" rel="#L15779">15779</span>
<span id="L15780" rel="#L15780">15780</span>
<span id="L15781" rel="#L15781">15781</span>
<span id="L15782" rel="#L15782">15782</span>
<span id="L15783" rel="#L15783">15783</span>
<span id="L15784" rel="#L15784">15784</span>
<span id="L15785" rel="#L15785">15785</span>
<span id="L15786" rel="#L15786">15786</span>
<span id="L15787" rel="#L15787">15787</span>
<span id="L15788" rel="#L15788">15788</span>
<span id="L15789" rel="#L15789">15789</span>
<span id="L15790" rel="#L15790">15790</span>
<span id="L15791" rel="#L15791">15791</span>
<span id="L15792" rel="#L15792">15792</span>
<span id="L15793" rel="#L15793">15793</span>
<span id="L15794" rel="#L15794">15794</span>
<span id="L15795" rel="#L15795">15795</span>
<span id="L15796" rel="#L15796">15796</span>
<span id="L15797" rel="#L15797">15797</span>
<span id="L15798" rel="#L15798">15798</span>
<span id="L15799" rel="#L15799">15799</span>
<span id="L15800" rel="#L15800">15800</span>
<span id="L15801" rel="#L15801">15801</span>
<span id="L15802" rel="#L15802">15802</span>
<span id="L15803" rel="#L15803">15803</span>
<span id="L15804" rel="#L15804">15804</span>
<span id="L15805" rel="#L15805">15805</span>
<span id="L15806" rel="#L15806">15806</span>
<span id="L15807" rel="#L15807">15807</span>
<span id="L15808" rel="#L15808">15808</span>
<span id="L15809" rel="#L15809">15809</span>
<span id="L15810" rel="#L15810">15810</span>
<span id="L15811" rel="#L15811">15811</span>
<span id="L15812" rel="#L15812">15812</span>
<span id="L15813" rel="#L15813">15813</span>
<span id="L15814" rel="#L15814">15814</span>
<span id="L15815" rel="#L15815">15815</span>
<span id="L15816" rel="#L15816">15816</span>
<span id="L15817" rel="#L15817">15817</span>
<span id="L15818" rel="#L15818">15818</span>
<span id="L15819" rel="#L15819">15819</span>
<span id="L15820" rel="#L15820">15820</span>
<span id="L15821" rel="#L15821">15821</span>
<span id="L15822" rel="#L15822">15822</span>
<span id="L15823" rel="#L15823">15823</span>
<span id="L15824" rel="#L15824">15824</span>
<span id="L15825" rel="#L15825">15825</span>
<span id="L15826" rel="#L15826">15826</span>
<span id="L15827" rel="#L15827">15827</span>
<span id="L15828" rel="#L15828">15828</span>
<span id="L15829" rel="#L15829">15829</span>
<span id="L15830" rel="#L15830">15830</span>
<span id="L15831" rel="#L15831">15831</span>
<span id="L15832" rel="#L15832">15832</span>
<span id="L15833" rel="#L15833">15833</span>
<span id="L15834" rel="#L15834">15834</span>
<span id="L15835" rel="#L15835">15835</span>
<span id="L15836" rel="#L15836">15836</span>
<span id="L15837" rel="#L15837">15837</span>
<span id="L15838" rel="#L15838">15838</span>
<span id="L15839" rel="#L15839">15839</span>
<span id="L15840" rel="#L15840">15840</span>
<span id="L15841" rel="#L15841">15841</span>
<span id="L15842" rel="#L15842">15842</span>
<span id="L15843" rel="#L15843">15843</span>
<span id="L15844" rel="#L15844">15844</span>
<span id="L15845" rel="#L15845">15845</span>
<span id="L15846" rel="#L15846">15846</span>
<span id="L15847" rel="#L15847">15847</span>
<span id="L15848" rel="#L15848">15848</span>
<span id="L15849" rel="#L15849">15849</span>
<span id="L15850" rel="#L15850">15850</span>
<span id="L15851" rel="#L15851">15851</span>
<span id="L15852" rel="#L15852">15852</span>
<span id="L15853" rel="#L15853">15853</span>
<span id="L15854" rel="#L15854">15854</span>
<span id="L15855" rel="#L15855">15855</span>
<span id="L15856" rel="#L15856">15856</span>
<span id="L15857" rel="#L15857">15857</span>
<span id="L15858" rel="#L15858">15858</span>
<span id="L15859" rel="#L15859">15859</span>
<span id="L15860" rel="#L15860">15860</span>
<span id="L15861" rel="#L15861">15861</span>
<span id="L15862" rel="#L15862">15862</span>
<span id="L15863" rel="#L15863">15863</span>
<span id="L15864" rel="#L15864">15864</span>
<span id="L15865" rel="#L15865">15865</span>
<span id="L15866" rel="#L15866">15866</span>
<span id="L15867" rel="#L15867">15867</span>
<span id="L15868" rel="#L15868">15868</span>
<span id="L15869" rel="#L15869">15869</span>
<span id="L15870" rel="#L15870">15870</span>
<span id="L15871" rel="#L15871">15871</span>
<span id="L15872" rel="#L15872">15872</span>
<span id="L15873" rel="#L15873">15873</span>
<span id="L15874" rel="#L15874">15874</span>
<span id="L15875" rel="#L15875">15875</span>
<span id="L15876" rel="#L15876">15876</span>
<span id="L15877" rel="#L15877">15877</span>
<span id="L15878" rel="#L15878">15878</span>
<span id="L15879" rel="#L15879">15879</span>
<span id="L15880" rel="#L15880">15880</span>
<span id="L15881" rel="#L15881">15881</span>
<span id="L15882" rel="#L15882">15882</span>
<span id="L15883" rel="#L15883">15883</span>
<span id="L15884" rel="#L15884">15884</span>
<span id="L15885" rel="#L15885">15885</span>
<span id="L15886" rel="#L15886">15886</span>
<span id="L15887" rel="#L15887">15887</span>
<span id="L15888" rel="#L15888">15888</span>
<span id="L15889" rel="#L15889">15889</span>
<span id="L15890" rel="#L15890">15890</span>
<span id="L15891" rel="#L15891">15891</span>
<span id="L15892" rel="#L15892">15892</span>
<span id="L15893" rel="#L15893">15893</span>
<span id="L15894" rel="#L15894">15894</span>
<span id="L15895" rel="#L15895">15895</span>
<span id="L15896" rel="#L15896">15896</span>
<span id="L15897" rel="#L15897">15897</span>
<span id="L15898" rel="#L15898">15898</span>
<span id="L15899" rel="#L15899">15899</span>
<span id="L15900" rel="#L15900">15900</span>
<span id="L15901" rel="#L15901">15901</span>
<span id="L15902" rel="#L15902">15902</span>
<span id="L15903" rel="#L15903">15903</span>
<span id="L15904" rel="#L15904">15904</span>
<span id="L15905" rel="#L15905">15905</span>
<span id="L15906" rel="#L15906">15906</span>
<span id="L15907" rel="#L15907">15907</span>
<span id="L15908" rel="#L15908">15908</span>
<span id="L15909" rel="#L15909">15909</span>
<span id="L15910" rel="#L15910">15910</span>
<span id="L15911" rel="#L15911">15911</span>
<span id="L15912" rel="#L15912">15912</span>
<span id="L15913" rel="#L15913">15913</span>
<span id="L15914" rel="#L15914">15914</span>
<span id="L15915" rel="#L15915">15915</span>
<span id="L15916" rel="#L15916">15916</span>
<span id="L15917" rel="#L15917">15917</span>
<span id="L15918" rel="#L15918">15918</span>
<span id="L15919" rel="#L15919">15919</span>
<span id="L15920" rel="#L15920">15920</span>
<span id="L15921" rel="#L15921">15921</span>
<span id="L15922" rel="#L15922">15922</span>
<span id="L15923" rel="#L15923">15923</span>
<span id="L15924" rel="#L15924">15924</span>
<span id="L15925" rel="#L15925">15925</span>
<span id="L15926" rel="#L15926">15926</span>
<span id="L15927" rel="#L15927">15927</span>
<span id="L15928" rel="#L15928">15928</span>
<span id="L15929" rel="#L15929">15929</span>
<span id="L15930" rel="#L15930">15930</span>
<span id="L15931" rel="#L15931">15931</span>
<span id="L15932" rel="#L15932">15932</span>
<span id="L15933" rel="#L15933">15933</span>
<span id="L15934" rel="#L15934">15934</span>
<span id="L15935" rel="#L15935">15935</span>
<span id="L15936" rel="#L15936">15936</span>
<span id="L15937" rel="#L15937">15937</span>
<span id="L15938" rel="#L15938">15938</span>
<span id="L15939" rel="#L15939">15939</span>
<span id="L15940" rel="#L15940">15940</span>
<span id="L15941" rel="#L15941">15941</span>
<span id="L15942" rel="#L15942">15942</span>
<span id="L15943" rel="#L15943">15943</span>
<span id="L15944" rel="#L15944">15944</span>
<span id="L15945" rel="#L15945">15945</span>
<span id="L15946" rel="#L15946">15946</span>
<span id="L15947" rel="#L15947">15947</span>
<span id="L15948" rel="#L15948">15948</span>
<span id="L15949" rel="#L15949">15949</span>
<span id="L15950" rel="#L15950">15950</span>
<span id="L15951" rel="#L15951">15951</span>
<span id="L15952" rel="#L15952">15952</span>
<span id="L15953" rel="#L15953">15953</span>
<span id="L15954" rel="#L15954">15954</span>
<span id="L15955" rel="#L15955">15955</span>
<span id="L15956" rel="#L15956">15956</span>
<span id="L15957" rel="#L15957">15957</span>
<span id="L15958" rel="#L15958">15958</span>
<span id="L15959" rel="#L15959">15959</span>
<span id="L15960" rel="#L15960">15960</span>
<span id="L15961" rel="#L15961">15961</span>
<span id="L15962" rel="#L15962">15962</span>
<span id="L15963" rel="#L15963">15963</span>
<span id="L15964" rel="#L15964">15964</span>
<span id="L15965" rel="#L15965">15965</span>
<span id="L15966" rel="#L15966">15966</span>
<span id="L15967" rel="#L15967">15967</span>
<span id="L15968" rel="#L15968">15968</span>
<span id="L15969" rel="#L15969">15969</span>
<span id="L15970" rel="#L15970">15970</span>
<span id="L15971" rel="#L15971">15971</span>
<span id="L15972" rel="#L15972">15972</span>
<span id="L15973" rel="#L15973">15973</span>
<span id="L15974" rel="#L15974">15974</span>
<span id="L15975" rel="#L15975">15975</span>
<span id="L15976" rel="#L15976">15976</span>
<span id="L15977" rel="#L15977">15977</span>
<span id="L15978" rel="#L15978">15978</span>
<span id="L15979" rel="#L15979">15979</span>
<span id="L15980" rel="#L15980">15980</span>
<span id="L15981" rel="#L15981">15981</span>
<span id="L15982" rel="#L15982">15982</span>
<span id="L15983" rel="#L15983">15983</span>
<span id="L15984" rel="#L15984">15984</span>
<span id="L15985" rel="#L15985">15985</span>
<span id="L15986" rel="#L15986">15986</span>
<span id="L15987" rel="#L15987">15987</span>
<span id="L15988" rel="#L15988">15988</span>
<span id="L15989" rel="#L15989">15989</span>
<span id="L15990" rel="#L15990">15990</span>
<span id="L15991" rel="#L15991">15991</span>
<span id="L15992" rel="#L15992">15992</span>
<span id="L15993" rel="#L15993">15993</span>
<span id="L15994" rel="#L15994">15994</span>
<span id="L15995" rel="#L15995">15995</span>
<span id="L15996" rel="#L15996">15996</span>
<span id="L15997" rel="#L15997">15997</span>
<span id="L15998" rel="#L15998">15998</span>
<span id="L15999" rel="#L15999">15999</span>
<span id="L16000" rel="#L16000">16000</span>
<span id="L16001" rel="#L16001">16001</span>
<span id="L16002" rel="#L16002">16002</span>
<span id="L16003" rel="#L16003">16003</span>
<span id="L16004" rel="#L16004">16004</span>
<span id="L16005" rel="#L16005">16005</span>
<span id="L16006" rel="#L16006">16006</span>
<span id="L16007" rel="#L16007">16007</span>
<span id="L16008" rel="#L16008">16008</span>
<span id="L16009" rel="#L16009">16009</span>
<span id="L16010" rel="#L16010">16010</span>
<span id="L16011" rel="#L16011">16011</span>
<span id="L16012" rel="#L16012">16012</span>
<span id="L16013" rel="#L16013">16013</span>
<span id="L16014" rel="#L16014">16014</span>
<span id="L16015" rel="#L16015">16015</span>
<span id="L16016" rel="#L16016">16016</span>
<span id="L16017" rel="#L16017">16017</span>
<span id="L16018" rel="#L16018">16018</span>
<span id="L16019" rel="#L16019">16019</span>
<span id="L16020" rel="#L16020">16020</span>
<span id="L16021" rel="#L16021">16021</span>
<span id="L16022" rel="#L16022">16022</span>
<span id="L16023" rel="#L16023">16023</span>
<span id="L16024" rel="#L16024">16024</span>
<span id="L16025" rel="#L16025">16025</span>
<span id="L16026" rel="#L16026">16026</span>
<span id="L16027" rel="#L16027">16027</span>
<span id="L16028" rel="#L16028">16028</span>
<span id="L16029" rel="#L16029">16029</span>
<span id="L16030" rel="#L16030">16030</span>
<span id="L16031" rel="#L16031">16031</span>
<span id="L16032" rel="#L16032">16032</span>
<span id="L16033" rel="#L16033">16033</span>
<span id="L16034" rel="#L16034">16034</span>
<span id="L16035" rel="#L16035">16035</span>
<span id="L16036" rel="#L16036">16036</span>
<span id="L16037" rel="#L16037">16037</span>
<span id="L16038" rel="#L16038">16038</span>
<span id="L16039" rel="#L16039">16039</span>
<span id="L16040" rel="#L16040">16040</span>
<span id="L16041" rel="#L16041">16041</span>
<span id="L16042" rel="#L16042">16042</span>
<span id="L16043" rel="#L16043">16043</span>
<span id="L16044" rel="#L16044">16044</span>
<span id="L16045" rel="#L16045">16045</span>
<span id="L16046" rel="#L16046">16046</span>
<span id="L16047" rel="#L16047">16047</span>
<span id="L16048" rel="#L16048">16048</span>
<span id="L16049" rel="#L16049">16049</span>
<span id="L16050" rel="#L16050">16050</span>
<span id="L16051" rel="#L16051">16051</span>
<span id="L16052" rel="#L16052">16052</span>
<span id="L16053" rel="#L16053">16053</span>
<span id="L16054" rel="#L16054">16054</span>
<span id="L16055" rel="#L16055">16055</span>
<span id="L16056" rel="#L16056">16056</span>
<span id="L16057" rel="#L16057">16057</span>
<span id="L16058" rel="#L16058">16058</span>
<span id="L16059" rel="#L16059">16059</span>
<span id="L16060" rel="#L16060">16060</span>
<span id="L16061" rel="#L16061">16061</span>
<span id="L16062" rel="#L16062">16062</span>
<span id="L16063" rel="#L16063">16063</span>
<span id="L16064" rel="#L16064">16064</span>
<span id="L16065" rel="#L16065">16065</span>
<span id="L16066" rel="#L16066">16066</span>
<span id="L16067" rel="#L16067">16067</span>
<span id="L16068" rel="#L16068">16068</span>
<span id="L16069" rel="#L16069">16069</span>
<span id="L16070" rel="#L16070">16070</span>
<span id="L16071" rel="#L16071">16071</span>
<span id="L16072" rel="#L16072">16072</span>
<span id="L16073" rel="#L16073">16073</span>
<span id="L16074" rel="#L16074">16074</span>
<span id="L16075" rel="#L16075">16075</span>
<span id="L16076" rel="#L16076">16076</span>
<span id="L16077" rel="#L16077">16077</span>
<span id="L16078" rel="#L16078">16078</span>
<span id="L16079" rel="#L16079">16079</span>
<span id="L16080" rel="#L16080">16080</span>
<span id="L16081" rel="#L16081">16081</span>
<span id="L16082" rel="#L16082">16082</span>
<span id="L16083" rel="#L16083">16083</span>
<span id="L16084" rel="#L16084">16084</span>
<span id="L16085" rel="#L16085">16085</span>
<span id="L16086" rel="#L16086">16086</span>
<span id="L16087" rel="#L16087">16087</span>
<span id="L16088" rel="#L16088">16088</span>
<span id="L16089" rel="#L16089">16089</span>
<span id="L16090" rel="#L16090">16090</span>
<span id="L16091" rel="#L16091">16091</span>
<span id="L16092" rel="#L16092">16092</span>
<span id="L16093" rel="#L16093">16093</span>
<span id="L16094" rel="#L16094">16094</span>
<span id="L16095" rel="#L16095">16095</span>
<span id="L16096" rel="#L16096">16096</span>
<span id="L16097" rel="#L16097">16097</span>
<span id="L16098" rel="#L16098">16098</span>
<span id="L16099" rel="#L16099">16099</span>
<span id="L16100" rel="#L16100">16100</span>
<span id="L16101" rel="#L16101">16101</span>
<span id="L16102" rel="#L16102">16102</span>
<span id="L16103" rel="#L16103">16103</span>
<span id="L16104" rel="#L16104">16104</span>
<span id="L16105" rel="#L16105">16105</span>
<span id="L16106" rel="#L16106">16106</span>
<span id="L16107" rel="#L16107">16107</span>
<span id="L16108" rel="#L16108">16108</span>
<span id="L16109" rel="#L16109">16109</span>
<span id="L16110" rel="#L16110">16110</span>
<span id="L16111" rel="#L16111">16111</span>
<span id="L16112" rel="#L16112">16112</span>
<span id="L16113" rel="#L16113">16113</span>
<span id="L16114" rel="#L16114">16114</span>
<span id="L16115" rel="#L16115">16115</span>
<span id="L16116" rel="#L16116">16116</span>
<span id="L16117" rel="#L16117">16117</span>
<span id="L16118" rel="#L16118">16118</span>
<span id="L16119" rel="#L16119">16119</span>
<span id="L16120" rel="#L16120">16120</span>
<span id="L16121" rel="#L16121">16121</span>
<span id="L16122" rel="#L16122">16122</span>
<span id="L16123" rel="#L16123">16123</span>
<span id="L16124" rel="#L16124">16124</span>
<span id="L16125" rel="#L16125">16125</span>
<span id="L16126" rel="#L16126">16126</span>
<span id="L16127" rel="#L16127">16127</span>
<span id="L16128" rel="#L16128">16128</span>
<span id="L16129" rel="#L16129">16129</span>
<span id="L16130" rel="#L16130">16130</span>
<span id="L16131" rel="#L16131">16131</span>
<span id="L16132" rel="#L16132">16132</span>
<span id="L16133" rel="#L16133">16133</span>
<span id="L16134" rel="#L16134">16134</span>
<span id="L16135" rel="#L16135">16135</span>
<span id="L16136" rel="#L16136">16136</span>
<span id="L16137" rel="#L16137">16137</span>
<span id="L16138" rel="#L16138">16138</span>
<span id="L16139" rel="#L16139">16139</span>
<span id="L16140" rel="#L16140">16140</span>
<span id="L16141" rel="#L16141">16141</span>
<span id="L16142" rel="#L16142">16142</span>
<span id="L16143" rel="#L16143">16143</span>
<span id="L16144" rel="#L16144">16144</span>
<span id="L16145" rel="#L16145">16145</span>
<span id="L16146" rel="#L16146">16146</span>
<span id="L16147" rel="#L16147">16147</span>
<span id="L16148" rel="#L16148">16148</span>
<span id="L16149" rel="#L16149">16149</span>
<span id="L16150" rel="#L16150">16150</span>
<span id="L16151" rel="#L16151">16151</span>
<span id="L16152" rel="#L16152">16152</span>
<span id="L16153" rel="#L16153">16153</span>
<span id="L16154" rel="#L16154">16154</span>
<span id="L16155" rel="#L16155">16155</span>
<span id="L16156" rel="#L16156">16156</span>
<span id="L16157" rel="#L16157">16157</span>
<span id="L16158" rel="#L16158">16158</span>
<span id="L16159" rel="#L16159">16159</span>
<span id="L16160" rel="#L16160">16160</span>
<span id="L16161" rel="#L16161">16161</span>
<span id="L16162" rel="#L16162">16162</span>
<span id="L16163" rel="#L16163">16163</span>
<span id="L16164" rel="#L16164">16164</span>
<span id="L16165" rel="#L16165">16165</span>
<span id="L16166" rel="#L16166">16166</span>
<span id="L16167" rel="#L16167">16167</span>
<span id="L16168" rel="#L16168">16168</span>
<span id="L16169" rel="#L16169">16169</span>
<span id="L16170" rel="#L16170">16170</span>
<span id="L16171" rel="#L16171">16171</span>
<span id="L16172" rel="#L16172">16172</span>
<span id="L16173" rel="#L16173">16173</span>
<span id="L16174" rel="#L16174">16174</span>
<span id="L16175" rel="#L16175">16175</span>
<span id="L16176" rel="#L16176">16176</span>
<span id="L16177" rel="#L16177">16177</span>
<span id="L16178" rel="#L16178">16178</span>
<span id="L16179" rel="#L16179">16179</span>
<span id="L16180" rel="#L16180">16180</span>
<span id="L16181" rel="#L16181">16181</span>
<span id="L16182" rel="#L16182">16182</span>
<span id="L16183" rel="#L16183">16183</span>
<span id="L16184" rel="#L16184">16184</span>
<span id="L16185" rel="#L16185">16185</span>
<span id="L16186" rel="#L16186">16186</span>
<span id="L16187" rel="#L16187">16187</span>
<span id="L16188" rel="#L16188">16188</span>
<span id="L16189" rel="#L16189">16189</span>
<span id="L16190" rel="#L16190">16190</span>
<span id="L16191" rel="#L16191">16191</span>
<span id="L16192" rel="#L16192">16192</span>
<span id="L16193" rel="#L16193">16193</span>
<span id="L16194" rel="#L16194">16194</span>
<span id="L16195" rel="#L16195">16195</span>
<span id="L16196" rel="#L16196">16196</span>
<span id="L16197" rel="#L16197">16197</span>
<span id="L16198" rel="#L16198">16198</span>
<span id="L16199" rel="#L16199">16199</span>
<span id="L16200" rel="#L16200">16200</span>
<span id="L16201" rel="#L16201">16201</span>
<span id="L16202" rel="#L16202">16202</span>
<span id="L16203" rel="#L16203">16203</span>
<span id="L16204" rel="#L16204">16204</span>
<span id="L16205" rel="#L16205">16205</span>
<span id="L16206" rel="#L16206">16206</span>
<span id="L16207" rel="#L16207">16207</span>
<span id="L16208" rel="#L16208">16208</span>
<span id="L16209" rel="#L16209">16209</span>
<span id="L16210" rel="#L16210">16210</span>
<span id="L16211" rel="#L16211">16211</span>
<span id="L16212" rel="#L16212">16212</span>
<span id="L16213" rel="#L16213">16213</span>
<span id="L16214" rel="#L16214">16214</span>
<span id="L16215" rel="#L16215">16215</span>
<span id="L16216" rel="#L16216">16216</span>
<span id="L16217" rel="#L16217">16217</span>
<span id="L16218" rel="#L16218">16218</span>
<span id="L16219" rel="#L16219">16219</span>
<span id="L16220" rel="#L16220">16220</span>
<span id="L16221" rel="#L16221">16221</span>
<span id="L16222" rel="#L16222">16222</span>
<span id="L16223" rel="#L16223">16223</span>
<span id="L16224" rel="#L16224">16224</span>
<span id="L16225" rel="#L16225">16225</span>
<span id="L16226" rel="#L16226">16226</span>
<span id="L16227" rel="#L16227">16227</span>
<span id="L16228" rel="#L16228">16228</span>
<span id="L16229" rel="#L16229">16229</span>
<span id="L16230" rel="#L16230">16230</span>
<span id="L16231" rel="#L16231">16231</span>
<span id="L16232" rel="#L16232">16232</span>
<span id="L16233" rel="#L16233">16233</span>
<span id="L16234" rel="#L16234">16234</span>
<span id="L16235" rel="#L16235">16235</span>
<span id="L16236" rel="#L16236">16236</span>
<span id="L16237" rel="#L16237">16237</span>
<span id="L16238" rel="#L16238">16238</span>
<span id="L16239" rel="#L16239">16239</span>
<span id="L16240" rel="#L16240">16240</span>
<span id="L16241" rel="#L16241">16241</span>
<span id="L16242" rel="#L16242">16242</span>
<span id="L16243" rel="#L16243">16243</span>
<span id="L16244" rel="#L16244">16244</span>
<span id="L16245" rel="#L16245">16245</span>
<span id="L16246" rel="#L16246">16246</span>
<span id="L16247" rel="#L16247">16247</span>
<span id="L16248" rel="#L16248">16248</span>
<span id="L16249" rel="#L16249">16249</span>
<span id="L16250" rel="#L16250">16250</span>
<span id="L16251" rel="#L16251">16251</span>
<span id="L16252" rel="#L16252">16252</span>
<span id="L16253" rel="#L16253">16253</span>
<span id="L16254" rel="#L16254">16254</span>
<span id="L16255" rel="#L16255">16255</span>
<span id="L16256" rel="#L16256">16256</span>
<span id="L16257" rel="#L16257">16257</span>
<span id="L16258" rel="#L16258">16258</span>
<span id="L16259" rel="#L16259">16259</span>
<span id="L16260" rel="#L16260">16260</span>
<span id="L16261" rel="#L16261">16261</span>
<span id="L16262" rel="#L16262">16262</span>
<span id="L16263" rel="#L16263">16263</span>
<span id="L16264" rel="#L16264">16264</span>
<span id="L16265" rel="#L16265">16265</span>
<span id="L16266" rel="#L16266">16266</span>
<span id="L16267" rel="#L16267">16267</span>
<span id="L16268" rel="#L16268">16268</span>
<span id="L16269" rel="#L16269">16269</span>
<span id="L16270" rel="#L16270">16270</span>
<span id="L16271" rel="#L16271">16271</span>
<span id="L16272" rel="#L16272">16272</span>
<span id="L16273" rel="#L16273">16273</span>
<span id="L16274" rel="#L16274">16274</span>
<span id="L16275" rel="#L16275">16275</span>
<span id="L16276" rel="#L16276">16276</span>
<span id="L16277" rel="#L16277">16277</span>
<span id="L16278" rel="#L16278">16278</span>
<span id="L16279" rel="#L16279">16279</span>
<span id="L16280" rel="#L16280">16280</span>
<span id="L16281" rel="#L16281">16281</span>
<span id="L16282" rel="#L16282">16282</span>
<span id="L16283" rel="#L16283">16283</span>
<span id="L16284" rel="#L16284">16284</span>
<span id="L16285" rel="#L16285">16285</span>
<span id="L16286" rel="#L16286">16286</span>
<span id="L16287" rel="#L16287">16287</span>
<span id="L16288" rel="#L16288">16288</span>
<span id="L16289" rel="#L16289">16289</span>
<span id="L16290" rel="#L16290">16290</span>
<span id="L16291" rel="#L16291">16291</span>
<span id="L16292" rel="#L16292">16292</span>
<span id="L16293" rel="#L16293">16293</span>
<span id="L16294" rel="#L16294">16294</span>
<span id="L16295" rel="#L16295">16295</span>
<span id="L16296" rel="#L16296">16296</span>
<span id="L16297" rel="#L16297">16297</span>
<span id="L16298" rel="#L16298">16298</span>
<span id="L16299" rel="#L16299">16299</span>
<span id="L16300" rel="#L16300">16300</span>
<span id="L16301" rel="#L16301">16301</span>
<span id="L16302" rel="#L16302">16302</span>
<span id="L16303" rel="#L16303">16303</span>
<span id="L16304" rel="#L16304">16304</span>
<span id="L16305" rel="#L16305">16305</span>
<span id="L16306" rel="#L16306">16306</span>
<span id="L16307" rel="#L16307">16307</span>
<span id="L16308" rel="#L16308">16308</span>
<span id="L16309" rel="#L16309">16309</span>
<span id="L16310" rel="#L16310">16310</span>
<span id="L16311" rel="#L16311">16311</span>
<span id="L16312" rel="#L16312">16312</span>
<span id="L16313" rel="#L16313">16313</span>
<span id="L16314" rel="#L16314">16314</span>
<span id="L16315" rel="#L16315">16315</span>
<span id="L16316" rel="#L16316">16316</span>
<span id="L16317" rel="#L16317">16317</span>
<span id="L16318" rel="#L16318">16318</span>
<span id="L16319" rel="#L16319">16319</span>
<span id="L16320" rel="#L16320">16320</span>
<span id="L16321" rel="#L16321">16321</span>
<span id="L16322" rel="#L16322">16322</span>
<span id="L16323" rel="#L16323">16323</span>
<span id="L16324" rel="#L16324">16324</span>
<span id="L16325" rel="#L16325">16325</span>
<span id="L16326" rel="#L16326">16326</span>
<span id="L16327" rel="#L16327">16327</span>
<span id="L16328" rel="#L16328">16328</span>
<span id="L16329" rel="#L16329">16329</span>
<span id="L16330" rel="#L16330">16330</span>
<span id="L16331" rel="#L16331">16331</span>
<span id="L16332" rel="#L16332">16332</span>
<span id="L16333" rel="#L16333">16333</span>
<span id="L16334" rel="#L16334">16334</span>
<span id="L16335" rel="#L16335">16335</span>
<span id="L16336" rel="#L16336">16336</span>
<span id="L16337" rel="#L16337">16337</span>
<span id="L16338" rel="#L16338">16338</span>
<span id="L16339" rel="#L16339">16339</span>
<span id="L16340" rel="#L16340">16340</span>
<span id="L16341" rel="#L16341">16341</span>
<span id="L16342" rel="#L16342">16342</span>
<span id="L16343" rel="#L16343">16343</span>
<span id="L16344" rel="#L16344">16344</span>
<span id="L16345" rel="#L16345">16345</span>
<span id="L16346" rel="#L16346">16346</span>
<span id="L16347" rel="#L16347">16347</span>
<span id="L16348" rel="#L16348">16348</span>
<span id="L16349" rel="#L16349">16349</span>
<span id="L16350" rel="#L16350">16350</span>
<span id="L16351" rel="#L16351">16351</span>
<span id="L16352" rel="#L16352">16352</span>
<span id="L16353" rel="#L16353">16353</span>
<span id="L16354" rel="#L16354">16354</span>
<span id="L16355" rel="#L16355">16355</span>
<span id="L16356" rel="#L16356">16356</span>
<span id="L16357" rel="#L16357">16357</span>
<span id="L16358" rel="#L16358">16358</span>
<span id="L16359" rel="#L16359">16359</span>
<span id="L16360" rel="#L16360">16360</span>
<span id="L16361" rel="#L16361">16361</span>
<span id="L16362" rel="#L16362">16362</span>
<span id="L16363" rel="#L16363">16363</span>
<span id="L16364" rel="#L16364">16364</span>
<span id="L16365" rel="#L16365">16365</span>
<span id="L16366" rel="#L16366">16366</span>
<span id="L16367" rel="#L16367">16367</span>
<span id="L16368" rel="#L16368">16368</span>
<span id="L16369" rel="#L16369">16369</span>
<span id="L16370" rel="#L16370">16370</span>
<span id="L16371" rel="#L16371">16371</span>
<span id="L16372" rel="#L16372">16372</span>
<span id="L16373" rel="#L16373">16373</span>
<span id="L16374" rel="#L16374">16374</span>
<span id="L16375" rel="#L16375">16375</span>
<span id="L16376" rel="#L16376">16376</span>
<span id="L16377" rel="#L16377">16377</span>
<span id="L16378" rel="#L16378">16378</span>
<span id="L16379" rel="#L16379">16379</span>
<span id="L16380" rel="#L16380">16380</span>
<span id="L16381" rel="#L16381">16381</span>
<span id="L16382" rel="#L16382">16382</span>
<span id="L16383" rel="#L16383">16383</span>
<span id="L16384" rel="#L16384">16384</span>
<span id="L16385" rel="#L16385">16385</span>
<span id="L16386" rel="#L16386">16386</span>
<span id="L16387" rel="#L16387">16387</span>
<span id="L16388" rel="#L16388">16388</span>
<span id="L16389" rel="#L16389">16389</span>
<span id="L16390" rel="#L16390">16390</span>
<span id="L16391" rel="#L16391">16391</span>
<span id="L16392" rel="#L16392">16392</span>
<span id="L16393" rel="#L16393">16393</span>
<span id="L16394" rel="#L16394">16394</span>
<span id="L16395" rel="#L16395">16395</span>
<span id="L16396" rel="#L16396">16396</span>
<span id="L16397" rel="#L16397">16397</span>
<span id="L16398" rel="#L16398">16398</span>
<span id="L16399" rel="#L16399">16399</span>
<span id="L16400" rel="#L16400">16400</span>
<span id="L16401" rel="#L16401">16401</span>
<span id="L16402" rel="#L16402">16402</span>
<span id="L16403" rel="#L16403">16403</span>
<span id="L16404" rel="#L16404">16404</span>
<span id="L16405" rel="#L16405">16405</span>
<span id="L16406" rel="#L16406">16406</span>
<span id="L16407" rel="#L16407">16407</span>
<span id="L16408" rel="#L16408">16408</span>
<span id="L16409" rel="#L16409">16409</span>
<span id="L16410" rel="#L16410">16410</span>
<span id="L16411" rel="#L16411">16411</span>
<span id="L16412" rel="#L16412">16412</span>
<span id="L16413" rel="#L16413">16413</span>
<span id="L16414" rel="#L16414">16414</span>
<span id="L16415" rel="#L16415">16415</span>
<span id="L16416" rel="#L16416">16416</span>
<span id="L16417" rel="#L16417">16417</span>
<span id="L16418" rel="#L16418">16418</span>
<span id="L16419" rel="#L16419">16419</span>
<span id="L16420" rel="#L16420">16420</span>
<span id="L16421" rel="#L16421">16421</span>
<span id="L16422" rel="#L16422">16422</span>
<span id="L16423" rel="#L16423">16423</span>
<span id="L16424" rel="#L16424">16424</span>
<span id="L16425" rel="#L16425">16425</span>
<span id="L16426" rel="#L16426">16426</span>
<span id="L16427" rel="#L16427">16427</span>
<span id="L16428" rel="#L16428">16428</span>
<span id="L16429" rel="#L16429">16429</span>
<span id="L16430" rel="#L16430">16430</span>
<span id="L16431" rel="#L16431">16431</span>
<span id="L16432" rel="#L16432">16432</span>
<span id="L16433" rel="#L16433">16433</span>
<span id="L16434" rel="#L16434">16434</span>
<span id="L16435" rel="#L16435">16435</span>
<span id="L16436" rel="#L16436">16436</span>
<span id="L16437" rel="#L16437">16437</span>
<span id="L16438" rel="#L16438">16438</span>
<span id="L16439" rel="#L16439">16439</span>
<span id="L16440" rel="#L16440">16440</span>
<span id="L16441" rel="#L16441">16441</span>
<span id="L16442" rel="#L16442">16442</span>
<span id="L16443" rel="#L16443">16443</span>
<span id="L16444" rel="#L16444">16444</span>
<span id="L16445" rel="#L16445">16445</span>
<span id="L16446" rel="#L16446">16446</span>
<span id="L16447" rel="#L16447">16447</span>
<span id="L16448" rel="#L16448">16448</span>
<span id="L16449" rel="#L16449">16449</span>
<span id="L16450" rel="#L16450">16450</span>
<span id="L16451" rel="#L16451">16451</span>
<span id="L16452" rel="#L16452">16452</span>
<span id="L16453" rel="#L16453">16453</span>
<span id="L16454" rel="#L16454">16454</span>
<span id="L16455" rel="#L16455">16455</span>
<span id="L16456" rel="#L16456">16456</span>
<span id="L16457" rel="#L16457">16457</span>
<span id="L16458" rel="#L16458">16458</span>
<span id="L16459" rel="#L16459">16459</span>
<span id="L16460" rel="#L16460">16460</span>
<span id="L16461" rel="#L16461">16461</span>
<span id="L16462" rel="#L16462">16462</span>
<span id="L16463" rel="#L16463">16463</span>
<span id="L16464" rel="#L16464">16464</span>
<span id="L16465" rel="#L16465">16465</span>
<span id="L16466" rel="#L16466">16466</span>
<span id="L16467" rel="#L16467">16467</span>
<span id="L16468" rel="#L16468">16468</span>
<span id="L16469" rel="#L16469">16469</span>
<span id="L16470" rel="#L16470">16470</span>
<span id="L16471" rel="#L16471">16471</span>
<span id="L16472" rel="#L16472">16472</span>
<span id="L16473" rel="#L16473">16473</span>
<span id="L16474" rel="#L16474">16474</span>
<span id="L16475" rel="#L16475">16475</span>
<span id="L16476" rel="#L16476">16476</span>
<span id="L16477" rel="#L16477">16477</span>
<span id="L16478" rel="#L16478">16478</span>
<span id="L16479" rel="#L16479">16479</span>
<span id="L16480" rel="#L16480">16480</span>
<span id="L16481" rel="#L16481">16481</span>
<span id="L16482" rel="#L16482">16482</span>
<span id="L16483" rel="#L16483">16483</span>
<span id="L16484" rel="#L16484">16484</span>
<span id="L16485" rel="#L16485">16485</span>
<span id="L16486" rel="#L16486">16486</span>
<span id="L16487" rel="#L16487">16487</span>
<span id="L16488" rel="#L16488">16488</span>
<span id="L16489" rel="#L16489">16489</span>
<span id="L16490" rel="#L16490">16490</span>
<span id="L16491" rel="#L16491">16491</span>
<span id="L16492" rel="#L16492">16492</span>
<span id="L16493" rel="#L16493">16493</span>
<span id="L16494" rel="#L16494">16494</span>
<span id="L16495" rel="#L16495">16495</span>
<span id="L16496" rel="#L16496">16496</span>
<span id="L16497" rel="#L16497">16497</span>
<span id="L16498" rel="#L16498">16498</span>
<span id="L16499" rel="#L16499">16499</span>
<span id="L16500" rel="#L16500">16500</span>
<span id="L16501" rel="#L16501">16501</span>
<span id="L16502" rel="#L16502">16502</span>
<span id="L16503" rel="#L16503">16503</span>
<span id="L16504" rel="#L16504">16504</span>
<span id="L16505" rel="#L16505">16505</span>
<span id="L16506" rel="#L16506">16506</span>
<span id="L16507" rel="#L16507">16507</span>
<span id="L16508" rel="#L16508">16508</span>
<span id="L16509" rel="#L16509">16509</span>
<span id="L16510" rel="#L16510">16510</span>
<span id="L16511" rel="#L16511">16511</span>
<span id="L16512" rel="#L16512">16512</span>
<span id="L16513" rel="#L16513">16513</span>
<span id="L16514" rel="#L16514">16514</span>
<span id="L16515" rel="#L16515">16515</span>
<span id="L16516" rel="#L16516">16516</span>
<span id="L16517" rel="#L16517">16517</span>
<span id="L16518" rel="#L16518">16518</span>
<span id="L16519" rel="#L16519">16519</span>
<span id="L16520" rel="#L16520">16520</span>
<span id="L16521" rel="#L16521">16521</span>
<span id="L16522" rel="#L16522">16522</span>
<span id="L16523" rel="#L16523">16523</span>
<span id="L16524" rel="#L16524">16524</span>
<span id="L16525" rel="#L16525">16525</span>
<span id="L16526" rel="#L16526">16526</span>
<span id="L16527" rel="#L16527">16527</span>
<span id="L16528" rel="#L16528">16528</span>
<span id="L16529" rel="#L16529">16529</span>
<span id="L16530" rel="#L16530">16530</span>
<span id="L16531" rel="#L16531">16531</span>
<span id="L16532" rel="#L16532">16532</span>
<span id="L16533" rel="#L16533">16533</span>
<span id="L16534" rel="#L16534">16534</span>
<span id="L16535" rel="#L16535">16535</span>
<span id="L16536" rel="#L16536">16536</span>
<span id="L16537" rel="#L16537">16537</span>
<span id="L16538" rel="#L16538">16538</span>
<span id="L16539" rel="#L16539">16539</span>
<span id="L16540" rel="#L16540">16540</span>
<span id="L16541" rel="#L16541">16541</span>
<span id="L16542" rel="#L16542">16542</span>
<span id="L16543" rel="#L16543">16543</span>
<span id="L16544" rel="#L16544">16544</span>
<span id="L16545" rel="#L16545">16545</span>
<span id="L16546" rel="#L16546">16546</span>
<span id="L16547" rel="#L16547">16547</span>
<span id="L16548" rel="#L16548">16548</span>
<span id="L16549" rel="#L16549">16549</span>
<span id="L16550" rel="#L16550">16550</span>
<span id="L16551" rel="#L16551">16551</span>
<span id="L16552" rel="#L16552">16552</span>
<span id="L16553" rel="#L16553">16553</span>
<span id="L16554" rel="#L16554">16554</span>
<span id="L16555" rel="#L16555">16555</span>
<span id="L16556" rel="#L16556">16556</span>
<span id="L16557" rel="#L16557">16557</span>
<span id="L16558" rel="#L16558">16558</span>
<span id="L16559" rel="#L16559">16559</span>
<span id="L16560" rel="#L16560">16560</span>
<span id="L16561" rel="#L16561">16561</span>
<span id="L16562" rel="#L16562">16562</span>
<span id="L16563" rel="#L16563">16563</span>
<span id="L16564" rel="#L16564">16564</span>
<span id="L16565" rel="#L16565">16565</span>
<span id="L16566" rel="#L16566">16566</span>
<span id="L16567" rel="#L16567">16567</span>
<span id="L16568" rel="#L16568">16568</span>
<span id="L16569" rel="#L16569">16569</span>
<span id="L16570" rel="#L16570">16570</span>
<span id="L16571" rel="#L16571">16571</span>
<span id="L16572" rel="#L16572">16572</span>
<span id="L16573" rel="#L16573">16573</span>
<span id="L16574" rel="#L16574">16574</span>
<span id="L16575" rel="#L16575">16575</span>
<span id="L16576" rel="#L16576">16576</span>
<span id="L16577" rel="#L16577">16577</span>
<span id="L16578" rel="#L16578">16578</span>
<span id="L16579" rel="#L16579">16579</span>
<span id="L16580" rel="#L16580">16580</span>
<span id="L16581" rel="#L16581">16581</span>
<span id="L16582" rel="#L16582">16582</span>
<span id="L16583" rel="#L16583">16583</span>
<span id="L16584" rel="#L16584">16584</span>
<span id="L16585" rel="#L16585">16585</span>
<span id="L16586" rel="#L16586">16586</span>
<span id="L16587" rel="#L16587">16587</span>
<span id="L16588" rel="#L16588">16588</span>
<span id="L16589" rel="#L16589">16589</span>
<span id="L16590" rel="#L16590">16590</span>
<span id="L16591" rel="#L16591">16591</span>
<span id="L16592" rel="#L16592">16592</span>
<span id="L16593" rel="#L16593">16593</span>
<span id="L16594" rel="#L16594">16594</span>
<span id="L16595" rel="#L16595">16595</span>
<span id="L16596" rel="#L16596">16596</span>
<span id="L16597" rel="#L16597">16597</span>
<span id="L16598" rel="#L16598">16598</span>
<span id="L16599" rel="#L16599">16599</span>
<span id="L16600" rel="#L16600">16600</span>
<span id="L16601" rel="#L16601">16601</span>
<span id="L16602" rel="#L16602">16602</span>
<span id="L16603" rel="#L16603">16603</span>
<span id="L16604" rel="#L16604">16604</span>
<span id="L16605" rel="#L16605">16605</span>
<span id="L16606" rel="#L16606">16606</span>
<span id="L16607" rel="#L16607">16607</span>
<span id="L16608" rel="#L16608">16608</span>
<span id="L16609" rel="#L16609">16609</span>
<span id="L16610" rel="#L16610">16610</span>
<span id="L16611" rel="#L16611">16611</span>
<span id="L16612" rel="#L16612">16612</span>
<span id="L16613" rel="#L16613">16613</span>
<span id="L16614" rel="#L16614">16614</span>
<span id="L16615" rel="#L16615">16615</span>
<span id="L16616" rel="#L16616">16616</span>
<span id="L16617" rel="#L16617">16617</span>
<span id="L16618" rel="#L16618">16618</span>
<span id="L16619" rel="#L16619">16619</span>
<span id="L16620" rel="#L16620">16620</span>
<span id="L16621" rel="#L16621">16621</span>
<span id="L16622" rel="#L16622">16622</span>
<span id="L16623" rel="#L16623">16623</span>
<span id="L16624" rel="#L16624">16624</span>
<span id="L16625" rel="#L16625">16625</span>
<span id="L16626" rel="#L16626">16626</span>
<span id="L16627" rel="#L16627">16627</span>
<span id="L16628" rel="#L16628">16628</span>
<span id="L16629" rel="#L16629">16629</span>
<span id="L16630" rel="#L16630">16630</span>
<span id="L16631" rel="#L16631">16631</span>
<span id="L16632" rel="#L16632">16632</span>
<span id="L16633" rel="#L16633">16633</span>
<span id="L16634" rel="#L16634">16634</span>
<span id="L16635" rel="#L16635">16635</span>
<span id="L16636" rel="#L16636">16636</span>
<span id="L16637" rel="#L16637">16637</span>
<span id="L16638" rel="#L16638">16638</span>
<span id="L16639" rel="#L16639">16639</span>
<span id="L16640" rel="#L16640">16640</span>
<span id="L16641" rel="#L16641">16641</span>
<span id="L16642" rel="#L16642">16642</span>
<span id="L16643" rel="#L16643">16643</span>
<span id="L16644" rel="#L16644">16644</span>
<span id="L16645" rel="#L16645">16645</span>
<span id="L16646" rel="#L16646">16646</span>
<span id="L16647" rel="#L16647">16647</span>
<span id="L16648" rel="#L16648">16648</span>
<span id="L16649" rel="#L16649">16649</span>
<span id="L16650" rel="#L16650">16650</span>
<span id="L16651" rel="#L16651">16651</span>
<span id="L16652" rel="#L16652">16652</span>
<span id="L16653" rel="#L16653">16653</span>
<span id="L16654" rel="#L16654">16654</span>
<span id="L16655" rel="#L16655">16655</span>
<span id="L16656" rel="#L16656">16656</span>
<span id="L16657" rel="#L16657">16657</span>
<span id="L16658" rel="#L16658">16658</span>
<span id="L16659" rel="#L16659">16659</span>
<span id="L16660" rel="#L16660">16660</span>
<span id="L16661" rel="#L16661">16661</span>
<span id="L16662" rel="#L16662">16662</span>
<span id="L16663" rel="#L16663">16663</span>
<span id="L16664" rel="#L16664">16664</span>
<span id="L16665" rel="#L16665">16665</span>
<span id="L16666" rel="#L16666">16666</span>
<span id="L16667" rel="#L16667">16667</span>
<span id="L16668" rel="#L16668">16668</span>
<span id="L16669" rel="#L16669">16669</span>
<span id="L16670" rel="#L16670">16670</span>
<span id="L16671" rel="#L16671">16671</span>
<span id="L16672" rel="#L16672">16672</span>
<span id="L16673" rel="#L16673">16673</span>
<span id="L16674" rel="#L16674">16674</span>
<span id="L16675" rel="#L16675">16675</span>
<span id="L16676" rel="#L16676">16676</span>
<span id="L16677" rel="#L16677">16677</span>
<span id="L16678" rel="#L16678">16678</span>
<span id="L16679" rel="#L16679">16679</span>
<span id="L16680" rel="#L16680">16680</span>
<span id="L16681" rel="#L16681">16681</span>
<span id="L16682" rel="#L16682">16682</span>
<span id="L16683" rel="#L16683">16683</span>
<span id="L16684" rel="#L16684">16684</span>
<span id="L16685" rel="#L16685">16685</span>
<span id="L16686" rel="#L16686">16686</span>
<span id="L16687" rel="#L16687">16687</span>
<span id="L16688" rel="#L16688">16688</span>
<span id="L16689" rel="#L16689">16689</span>
<span id="L16690" rel="#L16690">16690</span>
<span id="L16691" rel="#L16691">16691</span>
<span id="L16692" rel="#L16692">16692</span>
<span id="L16693" rel="#L16693">16693</span>
<span id="L16694" rel="#L16694">16694</span>
<span id="L16695" rel="#L16695">16695</span>
<span id="L16696" rel="#L16696">16696</span>
<span id="L16697" rel="#L16697">16697</span>
<span id="L16698" rel="#L16698">16698</span>
<span id="L16699" rel="#L16699">16699</span>
<span id="L16700" rel="#L16700">16700</span>
<span id="L16701" rel="#L16701">16701</span>
<span id="L16702" rel="#L16702">16702</span>
<span id="L16703" rel="#L16703">16703</span>
<span id="L16704" rel="#L16704">16704</span>
<span id="L16705" rel="#L16705">16705</span>
<span id="L16706" rel="#L16706">16706</span>
<span id="L16707" rel="#L16707">16707</span>
<span id="L16708" rel="#L16708">16708</span>
<span id="L16709" rel="#L16709">16709</span>
<span id="L16710" rel="#L16710">16710</span>
<span id="L16711" rel="#L16711">16711</span>
<span id="L16712" rel="#L16712">16712</span>
<span id="L16713" rel="#L16713">16713</span>
<span id="L16714" rel="#L16714">16714</span>
<span id="L16715" rel="#L16715">16715</span>
<span id="L16716" rel="#L16716">16716</span>
<span id="L16717" rel="#L16717">16717</span>
<span id="L16718" rel="#L16718">16718</span>
<span id="L16719" rel="#L16719">16719</span>
<span id="L16720" rel="#L16720">16720</span>
<span id="L16721" rel="#L16721">16721</span>
<span id="L16722" rel="#L16722">16722</span>
<span id="L16723" rel="#L16723">16723</span>
<span id="L16724" rel="#L16724">16724</span>
<span id="L16725" rel="#L16725">16725</span>
<span id="L16726" rel="#L16726">16726</span>
<span id="L16727" rel="#L16727">16727</span>
<span id="L16728" rel="#L16728">16728</span>
<span id="L16729" rel="#L16729">16729</span>
<span id="L16730" rel="#L16730">16730</span>
<span id="L16731" rel="#L16731">16731</span>
<span id="L16732" rel="#L16732">16732</span>
<span id="L16733" rel="#L16733">16733</span>
<span id="L16734" rel="#L16734">16734</span>
<span id="L16735" rel="#L16735">16735</span>
<span id="L16736" rel="#L16736">16736</span>
<span id="L16737" rel="#L16737">16737</span>
<span id="L16738" rel="#L16738">16738</span>
<span id="L16739" rel="#L16739">16739</span>
<span id="L16740" rel="#L16740">16740</span>
<span id="L16741" rel="#L16741">16741</span>
<span id="L16742" rel="#L16742">16742</span>
<span id="L16743" rel="#L16743">16743</span>
<span id="L16744" rel="#L16744">16744</span>
<span id="L16745" rel="#L16745">16745</span>
<span id="L16746" rel="#L16746">16746</span>
<span id="L16747" rel="#L16747">16747</span>
<span id="L16748" rel="#L16748">16748</span>
<span id="L16749" rel="#L16749">16749</span>
<span id="L16750" rel="#L16750">16750</span>
<span id="L16751" rel="#L16751">16751</span>
<span id="L16752" rel="#L16752">16752</span>
<span id="L16753" rel="#L16753">16753</span>
<span id="L16754" rel="#L16754">16754</span>
<span id="L16755" rel="#L16755">16755</span>
<span id="L16756" rel="#L16756">16756</span>
<span id="L16757" rel="#L16757">16757</span>
<span id="L16758" rel="#L16758">16758</span>
<span id="L16759" rel="#L16759">16759</span>
<span id="L16760" rel="#L16760">16760</span>
<span id="L16761" rel="#L16761">16761</span>
<span id="L16762" rel="#L16762">16762</span>
<span id="L16763" rel="#L16763">16763</span>
<span id="L16764" rel="#L16764">16764</span>
<span id="L16765" rel="#L16765">16765</span>
<span id="L16766" rel="#L16766">16766</span>
<span id="L16767" rel="#L16767">16767</span>
<span id="L16768" rel="#L16768">16768</span>
<span id="L16769" rel="#L16769">16769</span>
<span id="L16770" rel="#L16770">16770</span>
<span id="L16771" rel="#L16771">16771</span>
<span id="L16772" rel="#L16772">16772</span>
<span id="L16773" rel="#L16773">16773</span>
<span id="L16774" rel="#L16774">16774</span>
<span id="L16775" rel="#L16775">16775</span>
<span id="L16776" rel="#L16776">16776</span>
<span id="L16777" rel="#L16777">16777</span>
<span id="L16778" rel="#L16778">16778</span>
<span id="L16779" rel="#L16779">16779</span>
<span id="L16780" rel="#L16780">16780</span>
<span id="L16781" rel="#L16781">16781</span>
<span id="L16782" rel="#L16782">16782</span>
<span id="L16783" rel="#L16783">16783</span>
<span id="L16784" rel="#L16784">16784</span>
<span id="L16785" rel="#L16785">16785</span>
<span id="L16786" rel="#L16786">16786</span>
<span id="L16787" rel="#L16787">16787</span>
<span id="L16788" rel="#L16788">16788</span>
<span id="L16789" rel="#L16789">16789</span>
<span id="L16790" rel="#L16790">16790</span>
<span id="L16791" rel="#L16791">16791</span>
<span id="L16792" rel="#L16792">16792</span>
<span id="L16793" rel="#L16793">16793</span>
<span id="L16794" rel="#L16794">16794</span>
<span id="L16795" rel="#L16795">16795</span>
<span id="L16796" rel="#L16796">16796</span>
<span id="L16797" rel="#L16797">16797</span>
<span id="L16798" rel="#L16798">16798</span>
<span id="L16799" rel="#L16799">16799</span>
<span id="L16800" rel="#L16800">16800</span>
<span id="L16801" rel="#L16801">16801</span>
<span id="L16802" rel="#L16802">16802</span>
<span id="L16803" rel="#L16803">16803</span>
<span id="L16804" rel="#L16804">16804</span>
<span id="L16805" rel="#L16805">16805</span>
<span id="L16806" rel="#L16806">16806</span>
<span id="L16807" rel="#L16807">16807</span>
<span id="L16808" rel="#L16808">16808</span>
<span id="L16809" rel="#L16809">16809</span>
<span id="L16810" rel="#L16810">16810</span>
<span id="L16811" rel="#L16811">16811</span>
<span id="L16812" rel="#L16812">16812</span>
<span id="L16813" rel="#L16813">16813</span>
<span id="L16814" rel="#L16814">16814</span>
<span id="L16815" rel="#L16815">16815</span>
<span id="L16816" rel="#L16816">16816</span>
<span id="L16817" rel="#L16817">16817</span>
<span id="L16818" rel="#L16818">16818</span>
<span id="L16819" rel="#L16819">16819</span>
<span id="L16820" rel="#L16820">16820</span>
<span id="L16821" rel="#L16821">16821</span>
<span id="L16822" rel="#L16822">16822</span>
<span id="L16823" rel="#L16823">16823</span>
<span id="L16824" rel="#L16824">16824</span>
<span id="L16825" rel="#L16825">16825</span>
<span id="L16826" rel="#L16826">16826</span>
<span id="L16827" rel="#L16827">16827</span>
<span id="L16828" rel="#L16828">16828</span>
<span id="L16829" rel="#L16829">16829</span>
<span id="L16830" rel="#L16830">16830</span>
<span id="L16831" rel="#L16831">16831</span>
<span id="L16832" rel="#L16832">16832</span>
<span id="L16833" rel="#L16833">16833</span>
<span id="L16834" rel="#L16834">16834</span>
<span id="L16835" rel="#L16835">16835</span>
<span id="L16836" rel="#L16836">16836</span>
<span id="L16837" rel="#L16837">16837</span>
<span id="L16838" rel="#L16838">16838</span>
<span id="L16839" rel="#L16839">16839</span>
<span id="L16840" rel="#L16840">16840</span>
<span id="L16841" rel="#L16841">16841</span>
<span id="L16842" rel="#L16842">16842</span>
<span id="L16843" rel="#L16843">16843</span>
<span id="L16844" rel="#L16844">16844</span>
<span id="L16845" rel="#L16845">16845</span>
<span id="L16846" rel="#L16846">16846</span>
<span id="L16847" rel="#L16847">16847</span>
<span id="L16848" rel="#L16848">16848</span>
<span id="L16849" rel="#L16849">16849</span>
<span id="L16850" rel="#L16850">16850</span>
<span id="L16851" rel="#L16851">16851</span>
<span id="L16852" rel="#L16852">16852</span>
<span id="L16853" rel="#L16853">16853</span>
<span id="L16854" rel="#L16854">16854</span>
<span id="L16855" rel="#L16855">16855</span>
<span id="L16856" rel="#L16856">16856</span>
<span id="L16857" rel="#L16857">16857</span>
<span id="L16858" rel="#L16858">16858</span>
<span id="L16859" rel="#L16859">16859</span>
<span id="L16860" rel="#L16860">16860</span>
<span id="L16861" rel="#L16861">16861</span>
<span id="L16862" rel="#L16862">16862</span>
<span id="L16863" rel="#L16863">16863</span>
<span id="L16864" rel="#L16864">16864</span>
<span id="L16865" rel="#L16865">16865</span>
<span id="L16866" rel="#L16866">16866</span>
<span id="L16867" rel="#L16867">16867</span>
<span id="L16868" rel="#L16868">16868</span>
<span id="L16869" rel="#L16869">16869</span>
<span id="L16870" rel="#L16870">16870</span>
<span id="L16871" rel="#L16871">16871</span>
<span id="L16872" rel="#L16872">16872</span>
<span id="L16873" rel="#L16873">16873</span>
<span id="L16874" rel="#L16874">16874</span>
<span id="L16875" rel="#L16875">16875</span>
<span id="L16876" rel="#L16876">16876</span>
<span id="L16877" rel="#L16877">16877</span>
<span id="L16878" rel="#L16878">16878</span>
<span id="L16879" rel="#L16879">16879</span>
<span id="L16880" rel="#L16880">16880</span>
<span id="L16881" rel="#L16881">16881</span>
<span id="L16882" rel="#L16882">16882</span>
<span id="L16883" rel="#L16883">16883</span>
<span id="L16884" rel="#L16884">16884</span>
<span id="L16885" rel="#L16885">16885</span>
<span id="L16886" rel="#L16886">16886</span>
<span id="L16887" rel="#L16887">16887</span>
<span id="L16888" rel="#L16888">16888</span>
<span id="L16889" rel="#L16889">16889</span>
<span id="L16890" rel="#L16890">16890</span>
<span id="L16891" rel="#L16891">16891</span>
<span id="L16892" rel="#L16892">16892</span>
<span id="L16893" rel="#L16893">16893</span>
<span id="L16894" rel="#L16894">16894</span>
<span id="L16895" rel="#L16895">16895</span>
<span id="L16896" rel="#L16896">16896</span>
<span id="L16897" rel="#L16897">16897</span>
<span id="L16898" rel="#L16898">16898</span>
<span id="L16899" rel="#L16899">16899</span>
<span id="L16900" rel="#L16900">16900</span>
<span id="L16901" rel="#L16901">16901</span>
<span id="L16902" rel="#L16902">16902</span>
<span id="L16903" rel="#L16903">16903</span>
<span id="L16904" rel="#L16904">16904</span>
<span id="L16905" rel="#L16905">16905</span>
<span id="L16906" rel="#L16906">16906</span>
<span id="L16907" rel="#L16907">16907</span>
<span id="L16908" rel="#L16908">16908</span>
<span id="L16909" rel="#L16909">16909</span>
<span id="L16910" rel="#L16910">16910</span>
<span id="L16911" rel="#L16911">16911</span>
<span id="L16912" rel="#L16912">16912</span>
<span id="L16913" rel="#L16913">16913</span>
<span id="L16914" rel="#L16914">16914</span>
<span id="L16915" rel="#L16915">16915</span>
<span id="L16916" rel="#L16916">16916</span>
<span id="L16917" rel="#L16917">16917</span>
<span id="L16918" rel="#L16918">16918</span>
<span id="L16919" rel="#L16919">16919</span>
<span id="L16920" rel="#L16920">16920</span>
<span id="L16921" rel="#L16921">16921</span>
<span id="L16922" rel="#L16922">16922</span>
<span id="L16923" rel="#L16923">16923</span>
<span id="L16924" rel="#L16924">16924</span>
<span id="L16925" rel="#L16925">16925</span>
<span id="L16926" rel="#L16926">16926</span>
<span id="L16927" rel="#L16927">16927</span>
<span id="L16928" rel="#L16928">16928</span>
<span id="L16929" rel="#L16929">16929</span>
<span id="L16930" rel="#L16930">16930</span>
<span id="L16931" rel="#L16931">16931</span>
<span id="L16932" rel="#L16932">16932</span>
<span id="L16933" rel="#L16933">16933</span>
<span id="L16934" rel="#L16934">16934</span>
<span id="L16935" rel="#L16935">16935</span>
<span id="L16936" rel="#L16936">16936</span>
<span id="L16937" rel="#L16937">16937</span>
<span id="L16938" rel="#L16938">16938</span>
<span id="L16939" rel="#L16939">16939</span>
<span id="L16940" rel="#L16940">16940</span>
<span id="L16941" rel="#L16941">16941</span>
<span id="L16942" rel="#L16942">16942</span>
<span id="L16943" rel="#L16943">16943</span>
<span id="L16944" rel="#L16944">16944</span>
<span id="L16945" rel="#L16945">16945</span>
<span id="L16946" rel="#L16946">16946</span>
<span id="L16947" rel="#L16947">16947</span>
<span id="L16948" rel="#L16948">16948</span>
<span id="L16949" rel="#L16949">16949</span>
<span id="L16950" rel="#L16950">16950</span>
<span id="L16951" rel="#L16951">16951</span>
<span id="L16952" rel="#L16952">16952</span>
<span id="L16953" rel="#L16953">16953</span>
<span id="L16954" rel="#L16954">16954</span>
<span id="L16955" rel="#L16955">16955</span>
<span id="L16956" rel="#L16956">16956</span>
<span id="L16957" rel="#L16957">16957</span>
<span id="L16958" rel="#L16958">16958</span>
<span id="L16959" rel="#L16959">16959</span>
<span id="L16960" rel="#L16960">16960</span>
<span id="L16961" rel="#L16961">16961</span>
<span id="L16962" rel="#L16962">16962</span>
<span id="L16963" rel="#L16963">16963</span>
<span id="L16964" rel="#L16964">16964</span>
<span id="L16965" rel="#L16965">16965</span>
<span id="L16966" rel="#L16966">16966</span>
<span id="L16967" rel="#L16967">16967</span>
<span id="L16968" rel="#L16968">16968</span>
<span id="L16969" rel="#L16969">16969</span>
<span id="L16970" rel="#L16970">16970</span>
<span id="L16971" rel="#L16971">16971</span>
<span id="L16972" rel="#L16972">16972</span>
<span id="L16973" rel="#L16973">16973</span>
<span id="L16974" rel="#L16974">16974</span>
<span id="L16975" rel="#L16975">16975</span>
<span id="L16976" rel="#L16976">16976</span>
<span id="L16977" rel="#L16977">16977</span>
<span id="L16978" rel="#L16978">16978</span>
<span id="L16979" rel="#L16979">16979</span>
<span id="L16980" rel="#L16980">16980</span>
<span id="L16981" rel="#L16981">16981</span>
<span id="L16982" rel="#L16982">16982</span>
<span id="L16983" rel="#L16983">16983</span>
<span id="L16984" rel="#L16984">16984</span>
<span id="L16985" rel="#L16985">16985</span>
<span id="L16986" rel="#L16986">16986</span>
<span id="L16987" rel="#L16987">16987</span>
<span id="L16988" rel="#L16988">16988</span>
<span id="L16989" rel="#L16989">16989</span>
<span id="L16990" rel="#L16990">16990</span>
<span id="L16991" rel="#L16991">16991</span>
<span id="L16992" rel="#L16992">16992</span>
<span id="L16993" rel="#L16993">16993</span>
<span id="L16994" rel="#L16994">16994</span>
<span id="L16995" rel="#L16995">16995</span>
<span id="L16996" rel="#L16996">16996</span>
<span id="L16997" rel="#L16997">16997</span>
<span id="L16998" rel="#L16998">16998</span>
<span id="L16999" rel="#L16999">16999</span>
<span id="L17000" rel="#L17000">17000</span>
<span id="L17001" rel="#L17001">17001</span>
<span id="L17002" rel="#L17002">17002</span>
<span id="L17003" rel="#L17003">17003</span>
<span id="L17004" rel="#L17004">17004</span>
<span id="L17005" rel="#L17005">17005</span>
<span id="L17006" rel="#L17006">17006</span>
<span id="L17007" rel="#L17007">17007</span>
<span id="L17008" rel="#L17008">17008</span>
<span id="L17009" rel="#L17009">17009</span>
<span id="L17010" rel="#L17010">17010</span>
<span id="L17011" rel="#L17011">17011</span>
<span id="L17012" rel="#L17012">17012</span>
<span id="L17013" rel="#L17013">17013</span>
<span id="L17014" rel="#L17014">17014</span>
<span id="L17015" rel="#L17015">17015</span>
<span id="L17016" rel="#L17016">17016</span>
<span id="L17017" rel="#L17017">17017</span>
<span id="L17018" rel="#L17018">17018</span>
<span id="L17019" rel="#L17019">17019</span>
<span id="L17020" rel="#L17020">17020</span>
<span id="L17021" rel="#L17021">17021</span>
<span id="L17022" rel="#L17022">17022</span>
<span id="L17023" rel="#L17023">17023</span>
<span id="L17024" rel="#L17024">17024</span>
<span id="L17025" rel="#L17025">17025</span>
<span id="L17026" rel="#L17026">17026</span>
<span id="L17027" rel="#L17027">17027</span>
<span id="L17028" rel="#L17028">17028</span>
<span id="L17029" rel="#L17029">17029</span>
<span id="L17030" rel="#L17030">17030</span>
<span id="L17031" rel="#L17031">17031</span>
<span id="L17032" rel="#L17032">17032</span>
<span id="L17033" rel="#L17033">17033</span>
<span id="L17034" rel="#L17034">17034</span>
<span id="L17035" rel="#L17035">17035</span>
<span id="L17036" rel="#L17036">17036</span>
<span id="L17037" rel="#L17037">17037</span>
<span id="L17038" rel="#L17038">17038</span>
<span id="L17039" rel="#L17039">17039</span>
<span id="L17040" rel="#L17040">17040</span>
<span id="L17041" rel="#L17041">17041</span>
<span id="L17042" rel="#L17042">17042</span>
<span id="L17043" rel="#L17043">17043</span>
<span id="L17044" rel="#L17044">17044</span>
<span id="L17045" rel="#L17045">17045</span>
<span id="L17046" rel="#L17046">17046</span>
<span id="L17047" rel="#L17047">17047</span>
<span id="L17048" rel="#L17048">17048</span>
<span id="L17049" rel="#L17049">17049</span>
<span id="L17050" rel="#L17050">17050</span>
<span id="L17051" rel="#L17051">17051</span>
<span id="L17052" rel="#L17052">17052</span>
<span id="L17053" rel="#L17053">17053</span>
<span id="L17054" rel="#L17054">17054</span>
<span id="L17055" rel="#L17055">17055</span>
<span id="L17056" rel="#L17056">17056</span>
<span id="L17057" rel="#L17057">17057</span>
<span id="L17058" rel="#L17058">17058</span>
<span id="L17059" rel="#L17059">17059</span>
<span id="L17060" rel="#L17060">17060</span>
<span id="L17061" rel="#L17061">17061</span>
<span id="L17062" rel="#L17062">17062</span>
<span id="L17063" rel="#L17063">17063</span>
<span id="L17064" rel="#L17064">17064</span>
<span id="L17065" rel="#L17065">17065</span>
<span id="L17066" rel="#L17066">17066</span>
<span id="L17067" rel="#L17067">17067</span>
<span id="L17068" rel="#L17068">17068</span>
<span id="L17069" rel="#L17069">17069</span>
<span id="L17070" rel="#L17070">17070</span>
<span id="L17071" rel="#L17071">17071</span>
<span id="L17072" rel="#L17072">17072</span>
<span id="L17073" rel="#L17073">17073</span>
<span id="L17074" rel="#L17074">17074</span>
<span id="L17075" rel="#L17075">17075</span>
<span id="L17076" rel="#L17076">17076</span>
<span id="L17077" rel="#L17077">17077</span>
<span id="L17078" rel="#L17078">17078</span>
<span id="L17079" rel="#L17079">17079</span>
<span id="L17080" rel="#L17080">17080</span>
<span id="L17081" rel="#L17081">17081</span>
<span id="L17082" rel="#L17082">17082</span>
<span id="L17083" rel="#L17083">17083</span>
<span id="L17084" rel="#L17084">17084</span>
<span id="L17085" rel="#L17085">17085</span>
<span id="L17086" rel="#L17086">17086</span>
<span id="L17087" rel="#L17087">17087</span>
<span id="L17088" rel="#L17088">17088</span>
<span id="L17089" rel="#L17089">17089</span>
<span id="L17090" rel="#L17090">17090</span>
<span id="L17091" rel="#L17091">17091</span>
<span id="L17092" rel="#L17092">17092</span>
<span id="L17093" rel="#L17093">17093</span>
<span id="L17094" rel="#L17094">17094</span>
<span id="L17095" rel="#L17095">17095</span>
<span id="L17096" rel="#L17096">17096</span>
<span id="L17097" rel="#L17097">17097</span>
<span id="L17098" rel="#L17098">17098</span>
<span id="L17099" rel="#L17099">17099</span>
<span id="L17100" rel="#L17100">17100</span>
<span id="L17101" rel="#L17101">17101</span>
<span id="L17102" rel="#L17102">17102</span>
<span id="L17103" rel="#L17103">17103</span>
<span id="L17104" rel="#L17104">17104</span>
<span id="L17105" rel="#L17105">17105</span>
<span id="L17106" rel="#L17106">17106</span>
<span id="L17107" rel="#L17107">17107</span>
<span id="L17108" rel="#L17108">17108</span>
<span id="L17109" rel="#L17109">17109</span>
<span id="L17110" rel="#L17110">17110</span>
<span id="L17111" rel="#L17111">17111</span>
<span id="L17112" rel="#L17112">17112</span>
<span id="L17113" rel="#L17113">17113</span>
<span id="L17114" rel="#L17114">17114</span>
<span id="L17115" rel="#L17115">17115</span>
<span id="L17116" rel="#L17116">17116</span>
<span id="L17117" rel="#L17117">17117</span>
<span id="L17118" rel="#L17118">17118</span>
<span id="L17119" rel="#L17119">17119</span>
<span id="L17120" rel="#L17120">17120</span>
<span id="L17121" rel="#L17121">17121</span>
<span id="L17122" rel="#L17122">17122</span>
<span id="L17123" rel="#L17123">17123</span>
<span id="L17124" rel="#L17124">17124</span>
<span id="L17125" rel="#L17125">17125</span>
<span id="L17126" rel="#L17126">17126</span>
<span id="L17127" rel="#L17127">17127</span>
<span id="L17128" rel="#L17128">17128</span>
<span id="L17129" rel="#L17129">17129</span>
<span id="L17130" rel="#L17130">17130</span>
<span id="L17131" rel="#L17131">17131</span>
<span id="L17132" rel="#L17132">17132</span>
<span id="L17133" rel="#L17133">17133</span>
<span id="L17134" rel="#L17134">17134</span>
<span id="L17135" rel="#L17135">17135</span>
<span id="L17136" rel="#L17136">17136</span>
<span id="L17137" rel="#L17137">17137</span>
<span id="L17138" rel="#L17138">17138</span>
<span id="L17139" rel="#L17139">17139</span>
<span id="L17140" rel="#L17140">17140</span>
<span id="L17141" rel="#L17141">17141</span>
<span id="L17142" rel="#L17142">17142</span>
<span id="L17143" rel="#L17143">17143</span>
<span id="L17144" rel="#L17144">17144</span>
<span id="L17145" rel="#L17145">17145</span>
<span id="L17146" rel="#L17146">17146</span>
<span id="L17147" rel="#L17147">17147</span>
<span id="L17148" rel="#L17148">17148</span>
<span id="L17149" rel="#L17149">17149</span>
<span id="L17150" rel="#L17150">17150</span>
<span id="L17151" rel="#L17151">17151</span>
<span id="L17152" rel="#L17152">17152</span>
<span id="L17153" rel="#L17153">17153</span>
<span id="L17154" rel="#L17154">17154</span>
<span id="L17155" rel="#L17155">17155</span>
<span id="L17156" rel="#L17156">17156</span>
<span id="L17157" rel="#L17157">17157</span>
<span id="L17158" rel="#L17158">17158</span>
<span id="L17159" rel="#L17159">17159</span>
<span id="L17160" rel="#L17160">17160</span>
<span id="L17161" rel="#L17161">17161</span>
<span id="L17162" rel="#L17162">17162</span>
<span id="L17163" rel="#L17163">17163</span>
<span id="L17164" rel="#L17164">17164</span>
<span id="L17165" rel="#L17165">17165</span>
<span id="L17166" rel="#L17166">17166</span>
<span id="L17167" rel="#L17167">17167</span>
<span id="L17168" rel="#L17168">17168</span>
<span id="L17169" rel="#L17169">17169</span>
<span id="L17170" rel="#L17170">17170</span>
<span id="L17171" rel="#L17171">17171</span>
<span id="L17172" rel="#L17172">17172</span>
<span id="L17173" rel="#L17173">17173</span>
<span id="L17174" rel="#L17174">17174</span>
<span id="L17175" rel="#L17175">17175</span>
<span id="L17176" rel="#L17176">17176</span>
<span id="L17177" rel="#L17177">17177</span>
<span id="L17178" rel="#L17178">17178</span>
<span id="L17179" rel="#L17179">17179</span>
<span id="L17180" rel="#L17180">17180</span>
<span id="L17181" rel="#L17181">17181</span>
<span id="L17182" rel="#L17182">17182</span>
<span id="L17183" rel="#L17183">17183</span>
<span id="L17184" rel="#L17184">17184</span>
<span id="L17185" rel="#L17185">17185</span>
<span id="L17186" rel="#L17186">17186</span>
<span id="L17187" rel="#L17187">17187</span>
<span id="L17188" rel="#L17188">17188</span>
<span id="L17189" rel="#L17189">17189</span>
<span id="L17190" rel="#L17190">17190</span>
<span id="L17191" rel="#L17191">17191</span>
<span id="L17192" rel="#L17192">17192</span>
<span id="L17193" rel="#L17193">17193</span>
<span id="L17194" rel="#L17194">17194</span>
<span id="L17195" rel="#L17195">17195</span>
<span id="L17196" rel="#L17196">17196</span>
<span id="L17197" rel="#L17197">17197</span>
<span id="L17198" rel="#L17198">17198</span>
<span id="L17199" rel="#L17199">17199</span>
<span id="L17200" rel="#L17200">17200</span>
<span id="L17201" rel="#L17201">17201</span>
<span id="L17202" rel="#L17202">17202</span>
<span id="L17203" rel="#L17203">17203</span>
<span id="L17204" rel="#L17204">17204</span>
<span id="L17205" rel="#L17205">17205</span>
<span id="L17206" rel="#L17206">17206</span>
<span id="L17207" rel="#L17207">17207</span>
<span id="L17208" rel="#L17208">17208</span>
<span id="L17209" rel="#L17209">17209</span>
<span id="L17210" rel="#L17210">17210</span>
<span id="L17211" rel="#L17211">17211</span>
<span id="L17212" rel="#L17212">17212</span>
<span id="L17213" rel="#L17213">17213</span>
<span id="L17214" rel="#L17214">17214</span>
<span id="L17215" rel="#L17215">17215</span>
<span id="L17216" rel="#L17216">17216</span>
<span id="L17217" rel="#L17217">17217</span>
<span id="L17218" rel="#L17218">17218</span>
<span id="L17219" rel="#L17219">17219</span>
<span id="L17220" rel="#L17220">17220</span>
<span id="L17221" rel="#L17221">17221</span>
<span id="L17222" rel="#L17222">17222</span>
<span id="L17223" rel="#L17223">17223</span>
<span id="L17224" rel="#L17224">17224</span>
<span id="L17225" rel="#L17225">17225</span>
<span id="L17226" rel="#L17226">17226</span>
<span id="L17227" rel="#L17227">17227</span>
<span id="L17228" rel="#L17228">17228</span>
<span id="L17229" rel="#L17229">17229</span>
<span id="L17230" rel="#L17230">17230</span>
<span id="L17231" rel="#L17231">17231</span>
<span id="L17232" rel="#L17232">17232</span>
<span id="L17233" rel="#L17233">17233</span>
<span id="L17234" rel="#L17234">17234</span>
<span id="L17235" rel="#L17235">17235</span>
<span id="L17236" rel="#L17236">17236</span>
<span id="L17237" rel="#L17237">17237</span>
<span id="L17238" rel="#L17238">17238</span>
<span id="L17239" rel="#L17239">17239</span>
<span id="L17240" rel="#L17240">17240</span>
<span id="L17241" rel="#L17241">17241</span>
<span id="L17242" rel="#L17242">17242</span>
<span id="L17243" rel="#L17243">17243</span>
<span id="L17244" rel="#L17244">17244</span>
<span id="L17245" rel="#L17245">17245</span>
<span id="L17246" rel="#L17246">17246</span>
<span id="L17247" rel="#L17247">17247</span>
<span id="L17248" rel="#L17248">17248</span>
<span id="L17249" rel="#L17249">17249</span>
<span id="L17250" rel="#L17250">17250</span>
<span id="L17251" rel="#L17251">17251</span>
<span id="L17252" rel="#L17252">17252</span>
<span id="L17253" rel="#L17253">17253</span>
<span id="L17254" rel="#L17254">17254</span>
<span id="L17255" rel="#L17255">17255</span>
<span id="L17256" rel="#L17256">17256</span>
<span id="L17257" rel="#L17257">17257</span>
<span id="L17258" rel="#L17258">17258</span>
<span id="L17259" rel="#L17259">17259</span>
<span id="L17260" rel="#L17260">17260</span>
<span id="L17261" rel="#L17261">17261</span>
<span id="L17262" rel="#L17262">17262</span>
<span id="L17263" rel="#L17263">17263</span>
<span id="L17264" rel="#L17264">17264</span>
<span id="L17265" rel="#L17265">17265</span>
<span id="L17266" rel="#L17266">17266</span>
<span id="L17267" rel="#L17267">17267</span>
<span id="L17268" rel="#L17268">17268</span>
<span id="L17269" rel="#L17269">17269</span>
<span id="L17270" rel="#L17270">17270</span>
<span id="L17271" rel="#L17271">17271</span>
<span id="L17272" rel="#L17272">17272</span>
<span id="L17273" rel="#L17273">17273</span>
<span id="L17274" rel="#L17274">17274</span>
<span id="L17275" rel="#L17275">17275</span>
<span id="L17276" rel="#L17276">17276</span>
<span id="L17277" rel="#L17277">17277</span>
<span id="L17278" rel="#L17278">17278</span>
<span id="L17279" rel="#L17279">17279</span>
<span id="L17280" rel="#L17280">17280</span>
<span id="L17281" rel="#L17281">17281</span>
<span id="L17282" rel="#L17282">17282</span>
<span id="L17283" rel="#L17283">17283</span>
<span id="L17284" rel="#L17284">17284</span>
<span id="L17285" rel="#L17285">17285</span>
<span id="L17286" rel="#L17286">17286</span>
<span id="L17287" rel="#L17287">17287</span>
<span id="L17288" rel="#L17288">17288</span>
<span id="L17289" rel="#L17289">17289</span>
<span id="L17290" rel="#L17290">17290</span>
<span id="L17291" rel="#L17291">17291</span>
<span id="L17292" rel="#L17292">17292</span>
<span id="L17293" rel="#L17293">17293</span>
<span id="L17294" rel="#L17294">17294</span>
<span id="L17295" rel="#L17295">17295</span>
<span id="L17296" rel="#L17296">17296</span>
<span id="L17297" rel="#L17297">17297</span>
<span id="L17298" rel="#L17298">17298</span>
<span id="L17299" rel="#L17299">17299</span>
<span id="L17300" rel="#L17300">17300</span>
<span id="L17301" rel="#L17301">17301</span>
<span id="L17302" rel="#L17302">17302</span>
<span id="L17303" rel="#L17303">17303</span>
<span id="L17304" rel="#L17304">17304</span>
<span id="L17305" rel="#L17305">17305</span>
<span id="L17306" rel="#L17306">17306</span>
<span id="L17307" rel="#L17307">17307</span>
<span id="L17308" rel="#L17308">17308</span>
<span id="L17309" rel="#L17309">17309</span>
<span id="L17310" rel="#L17310">17310</span>
<span id="L17311" rel="#L17311">17311</span>
<span id="L17312" rel="#L17312">17312</span>
<span id="L17313" rel="#L17313">17313</span>
<span id="L17314" rel="#L17314">17314</span>
<span id="L17315" rel="#L17315">17315</span>
<span id="L17316" rel="#L17316">17316</span>
<span id="L17317" rel="#L17317">17317</span>
<span id="L17318" rel="#L17318">17318</span>
<span id="L17319" rel="#L17319">17319</span>
<span id="L17320" rel="#L17320">17320</span>
<span id="L17321" rel="#L17321">17321</span>
<span id="L17322" rel="#L17322">17322</span>
<span id="L17323" rel="#L17323">17323</span>
<span id="L17324" rel="#L17324">17324</span>
<span id="L17325" rel="#L17325">17325</span>
<span id="L17326" rel="#L17326">17326</span>
<span id="L17327" rel="#L17327">17327</span>
<span id="L17328" rel="#L17328">17328</span>
<span id="L17329" rel="#L17329">17329</span>
<span id="L17330" rel="#L17330">17330</span>
<span id="L17331" rel="#L17331">17331</span>
<span id="L17332" rel="#L17332">17332</span>
<span id="L17333" rel="#L17333">17333</span>
<span id="L17334" rel="#L17334">17334</span>
<span id="L17335" rel="#L17335">17335</span>
<span id="L17336" rel="#L17336">17336</span>
<span id="L17337" rel="#L17337">17337</span>
<span id="L17338" rel="#L17338">17338</span>
<span id="L17339" rel="#L17339">17339</span>
<span id="L17340" rel="#L17340">17340</span>
<span id="L17341" rel="#L17341">17341</span>
<span id="L17342" rel="#L17342">17342</span>
<span id="L17343" rel="#L17343">17343</span>
<span id="L17344" rel="#L17344">17344</span>
<span id="L17345" rel="#L17345">17345</span>
<span id="L17346" rel="#L17346">17346</span>
<span id="L17347" rel="#L17347">17347</span>
<span id="L17348" rel="#L17348">17348</span>
<span id="L17349" rel="#L17349">17349</span>
<span id="L17350" rel="#L17350">17350</span>
<span id="L17351" rel="#L17351">17351</span>
<span id="L17352" rel="#L17352">17352</span>
<span id="L17353" rel="#L17353">17353</span>
<span id="L17354" rel="#L17354">17354</span>
<span id="L17355" rel="#L17355">17355</span>
<span id="L17356" rel="#L17356">17356</span>
<span id="L17357" rel="#L17357">17357</span>
<span id="L17358" rel="#L17358">17358</span>
<span id="L17359" rel="#L17359">17359</span>
<span id="L17360" rel="#L17360">17360</span>
<span id="L17361" rel="#L17361">17361</span>
<span id="L17362" rel="#L17362">17362</span>
<span id="L17363" rel="#L17363">17363</span>
<span id="L17364" rel="#L17364">17364</span>
<span id="L17365" rel="#L17365">17365</span>
<span id="L17366" rel="#L17366">17366</span>
<span id="L17367" rel="#L17367">17367</span>
<span id="L17368" rel="#L17368">17368</span>
<span id="L17369" rel="#L17369">17369</span>
<span id="L17370" rel="#L17370">17370</span>
<span id="L17371" rel="#L17371">17371</span>
<span id="L17372" rel="#L17372">17372</span>
<span id="L17373" rel="#L17373">17373</span>
<span id="L17374" rel="#L17374">17374</span>
<span id="L17375" rel="#L17375">17375</span>
<span id="L17376" rel="#L17376">17376</span>
<span id="L17377" rel="#L17377">17377</span>
<span id="L17378" rel="#L17378">17378</span>
<span id="L17379" rel="#L17379">17379</span>
<span id="L17380" rel="#L17380">17380</span>
<span id="L17381" rel="#L17381">17381</span>
<span id="L17382" rel="#L17382">17382</span>
<span id="L17383" rel="#L17383">17383</span>
<span id="L17384" rel="#L17384">17384</span>
<span id="L17385" rel="#L17385">17385</span>
<span id="L17386" rel="#L17386">17386</span>
<span id="L17387" rel="#L17387">17387</span>
<span id="L17388" rel="#L17388">17388</span>
<span id="L17389" rel="#L17389">17389</span>
<span id="L17390" rel="#L17390">17390</span>
<span id="L17391" rel="#L17391">17391</span>
<span id="L17392" rel="#L17392">17392</span>
<span id="L17393" rel="#L17393">17393</span>
<span id="L17394" rel="#L17394">17394</span>
<span id="L17395" rel="#L17395">17395</span>
<span id="L17396" rel="#L17396">17396</span>
<span id="L17397" rel="#L17397">17397</span>
<span id="L17398" rel="#L17398">17398</span>
<span id="L17399" rel="#L17399">17399</span>
<span id="L17400" rel="#L17400">17400</span>
<span id="L17401" rel="#L17401">17401</span>
<span id="L17402" rel="#L17402">17402</span>
<span id="L17403" rel="#L17403">17403</span>
<span id="L17404" rel="#L17404">17404</span>
<span id="L17405" rel="#L17405">17405</span>
<span id="L17406" rel="#L17406">17406</span>
<span id="L17407" rel="#L17407">17407</span>
<span id="L17408" rel="#L17408">17408</span>
<span id="L17409" rel="#L17409">17409</span>
<span id="L17410" rel="#L17410">17410</span>
<span id="L17411" rel="#L17411">17411</span>
<span id="L17412" rel="#L17412">17412</span>
<span id="L17413" rel="#L17413">17413</span>
<span id="L17414" rel="#L17414">17414</span>
<span id="L17415" rel="#L17415">17415</span>
<span id="L17416" rel="#L17416">17416</span>
<span id="L17417" rel="#L17417">17417</span>
<span id="L17418" rel="#L17418">17418</span>
<span id="L17419" rel="#L17419">17419</span>
<span id="L17420" rel="#L17420">17420</span>
<span id="L17421" rel="#L17421">17421</span>
<span id="L17422" rel="#L17422">17422</span>
<span id="L17423" rel="#L17423">17423</span>
<span id="L17424" rel="#L17424">17424</span>
<span id="L17425" rel="#L17425">17425</span>
<span id="L17426" rel="#L17426">17426</span>
<span id="L17427" rel="#L17427">17427</span>
<span id="L17428" rel="#L17428">17428</span>
<span id="L17429" rel="#L17429">17429</span>
<span id="L17430" rel="#L17430">17430</span>
<span id="L17431" rel="#L17431">17431</span>
<span id="L17432" rel="#L17432">17432</span>
<span id="L17433" rel="#L17433">17433</span>
<span id="L17434" rel="#L17434">17434</span>
<span id="L17435" rel="#L17435">17435</span>
<span id="L17436" rel="#L17436">17436</span>
<span id="L17437" rel="#L17437">17437</span>
<span id="L17438" rel="#L17438">17438</span>
<span id="L17439" rel="#L17439">17439</span>
<span id="L17440" rel="#L17440">17440</span>
<span id="L17441" rel="#L17441">17441</span>
<span id="L17442" rel="#L17442">17442</span>
<span id="L17443" rel="#L17443">17443</span>
<span id="L17444" rel="#L17444">17444</span>
<span id="L17445" rel="#L17445">17445</span>
<span id="L17446" rel="#L17446">17446</span>
<span id="L17447" rel="#L17447">17447</span>
<span id="L17448" rel="#L17448">17448</span>
<span id="L17449" rel="#L17449">17449</span>
<span id="L17450" rel="#L17450">17450</span>
<span id="L17451" rel="#L17451">17451</span>
<span id="L17452" rel="#L17452">17452</span>
<span id="L17453" rel="#L17453">17453</span>
<span id="L17454" rel="#L17454">17454</span>
<span id="L17455" rel="#L17455">17455</span>
<span id="L17456" rel="#L17456">17456</span>
<span id="L17457" rel="#L17457">17457</span>
<span id="L17458" rel="#L17458">17458</span>
<span id="L17459" rel="#L17459">17459</span>
<span id="L17460" rel="#L17460">17460</span>
<span id="L17461" rel="#L17461">17461</span>
<span id="L17462" rel="#L17462">17462</span>
<span id="L17463" rel="#L17463">17463</span>
<span id="L17464" rel="#L17464">17464</span>
<span id="L17465" rel="#L17465">17465</span>
<span id="L17466" rel="#L17466">17466</span>
<span id="L17467" rel="#L17467">17467</span>
<span id="L17468" rel="#L17468">17468</span>
<span id="L17469" rel="#L17469">17469</span>
<span id="L17470" rel="#L17470">17470</span>
<span id="L17471" rel="#L17471">17471</span>
<span id="L17472" rel="#L17472">17472</span>
<span id="L17473" rel="#L17473">17473</span>
<span id="L17474" rel="#L17474">17474</span>
<span id="L17475" rel="#L17475">17475</span>
<span id="L17476" rel="#L17476">17476</span>
<span id="L17477" rel="#L17477">17477</span>
<span id="L17478" rel="#L17478">17478</span>
<span id="L17479" rel="#L17479">17479</span>
<span id="L17480" rel="#L17480">17480</span>
<span id="L17481" rel="#L17481">17481</span>
<span id="L17482" rel="#L17482">17482</span>
<span id="L17483" rel="#L17483">17483</span>
<span id="L17484" rel="#L17484">17484</span>
<span id="L17485" rel="#L17485">17485</span>
<span id="L17486" rel="#L17486">17486</span>
<span id="L17487" rel="#L17487">17487</span>
<span id="L17488" rel="#L17488">17488</span>
<span id="L17489" rel="#L17489">17489</span>
<span id="L17490" rel="#L17490">17490</span>
<span id="L17491" rel="#L17491">17491</span>
<span id="L17492" rel="#L17492">17492</span>
<span id="L17493" rel="#L17493">17493</span>
<span id="L17494" rel="#L17494">17494</span>
<span id="L17495" rel="#L17495">17495</span>
<span id="L17496" rel="#L17496">17496</span>
<span id="L17497" rel="#L17497">17497</span>
<span id="L17498" rel="#L17498">17498</span>
<span id="L17499" rel="#L17499">17499</span>
<span id="L17500" rel="#L17500">17500</span>
<span id="L17501" rel="#L17501">17501</span>
<span id="L17502" rel="#L17502">17502</span>
<span id="L17503" rel="#L17503">17503</span>
<span id="L17504" rel="#L17504">17504</span>
<span id="L17505" rel="#L17505">17505</span>
<span id="L17506" rel="#L17506">17506</span>
<span id="L17507" rel="#L17507">17507</span>
<span id="L17508" rel="#L17508">17508</span>
<span id="L17509" rel="#L17509">17509</span>
<span id="L17510" rel="#L17510">17510</span>
<span id="L17511" rel="#L17511">17511</span>
<span id="L17512" rel="#L17512">17512</span>
<span id="L17513" rel="#L17513">17513</span>
<span id="L17514" rel="#L17514">17514</span>
<span id="L17515" rel="#L17515">17515</span>
<span id="L17516" rel="#L17516">17516</span>
<span id="L17517" rel="#L17517">17517</span>
<span id="L17518" rel="#L17518">17518</span>
<span id="L17519" rel="#L17519">17519</span>
<span id="L17520" rel="#L17520">17520</span>
<span id="L17521" rel="#L17521">17521</span>
<span id="L17522" rel="#L17522">17522</span>
<span id="L17523" rel="#L17523">17523</span>
<span id="L17524" rel="#L17524">17524</span>
<span id="L17525" rel="#L17525">17525</span>
<span id="L17526" rel="#L17526">17526</span>
<span id="L17527" rel="#L17527">17527</span>
<span id="L17528" rel="#L17528">17528</span>
<span id="L17529" rel="#L17529">17529</span>
<span id="L17530" rel="#L17530">17530</span>
<span id="L17531" rel="#L17531">17531</span>
<span id="L17532" rel="#L17532">17532</span>
<span id="L17533" rel="#L17533">17533</span>
<span id="L17534" rel="#L17534">17534</span>
<span id="L17535" rel="#L17535">17535</span>
<span id="L17536" rel="#L17536">17536</span>
<span id="L17537" rel="#L17537">17537</span>
<span id="L17538" rel="#L17538">17538</span>
<span id="L17539" rel="#L17539">17539</span>
<span id="L17540" rel="#L17540">17540</span>
<span id="L17541" rel="#L17541">17541</span>
<span id="L17542" rel="#L17542">17542</span>
<span id="L17543" rel="#L17543">17543</span>
<span id="L17544" rel="#L17544">17544</span>
<span id="L17545" rel="#L17545">17545</span>
<span id="L17546" rel="#L17546">17546</span>
<span id="L17547" rel="#L17547">17547</span>
<span id="L17548" rel="#L17548">17548</span>
<span id="L17549" rel="#L17549">17549</span>
<span id="L17550" rel="#L17550">17550</span>
<span id="L17551" rel="#L17551">17551</span>
<span id="L17552" rel="#L17552">17552</span>
<span id="L17553" rel="#L17553">17553</span>
<span id="L17554" rel="#L17554">17554</span>
<span id="L17555" rel="#L17555">17555</span>
<span id="L17556" rel="#L17556">17556</span>
<span id="L17557" rel="#L17557">17557</span>
<span id="L17558" rel="#L17558">17558</span>
<span id="L17559" rel="#L17559">17559</span>
<span id="L17560" rel="#L17560">17560</span>
<span id="L17561" rel="#L17561">17561</span>
<span id="L17562" rel="#L17562">17562</span>
<span id="L17563" rel="#L17563">17563</span>
<span id="L17564" rel="#L17564">17564</span>
<span id="L17565" rel="#L17565">17565</span>
<span id="L17566" rel="#L17566">17566</span>
<span id="L17567" rel="#L17567">17567</span>
<span id="L17568" rel="#L17568">17568</span>
<span id="L17569" rel="#L17569">17569</span>
<span id="L17570" rel="#L17570">17570</span>
<span id="L17571" rel="#L17571">17571</span>
<span id="L17572" rel="#L17572">17572</span>
<span id="L17573" rel="#L17573">17573</span>
<span id="L17574" rel="#L17574">17574</span>
<span id="L17575" rel="#L17575">17575</span>
<span id="L17576" rel="#L17576">17576</span>
<span id="L17577" rel="#L17577">17577</span>
<span id="L17578" rel="#L17578">17578</span>
<span id="L17579" rel="#L17579">17579</span>
<span id="L17580" rel="#L17580">17580</span>
<span id="L17581" rel="#L17581">17581</span>
<span id="L17582" rel="#L17582">17582</span>
<span id="L17583" rel="#L17583">17583</span>
<span id="L17584" rel="#L17584">17584</span>
<span id="L17585" rel="#L17585">17585</span>
<span id="L17586" rel="#L17586">17586</span>
<span id="L17587" rel="#L17587">17587</span>
<span id="L17588" rel="#L17588">17588</span>
<span id="L17589" rel="#L17589">17589</span>
<span id="L17590" rel="#L17590">17590</span>
<span id="L17591" rel="#L17591">17591</span>
<span id="L17592" rel="#L17592">17592</span>
<span id="L17593" rel="#L17593">17593</span>
<span id="L17594" rel="#L17594">17594</span>
<span id="L17595" rel="#L17595">17595</span>
<span id="L17596" rel="#L17596">17596</span>
<span id="L17597" rel="#L17597">17597</span>
<span id="L17598" rel="#L17598">17598</span>
<span id="L17599" rel="#L17599">17599</span>
<span id="L17600" rel="#L17600">17600</span>
<span id="L17601" rel="#L17601">17601</span>
<span id="L17602" rel="#L17602">17602</span>
<span id="L17603" rel="#L17603">17603</span>
<span id="L17604" rel="#L17604">17604</span>
<span id="L17605" rel="#L17605">17605</span>
<span id="L17606" rel="#L17606">17606</span>
<span id="L17607" rel="#L17607">17607</span>
<span id="L17608" rel="#L17608">17608</span>
<span id="L17609" rel="#L17609">17609</span>
<span id="L17610" rel="#L17610">17610</span>
<span id="L17611" rel="#L17611">17611</span>
<span id="L17612" rel="#L17612">17612</span>
<span id="L17613" rel="#L17613">17613</span>
<span id="L17614" rel="#L17614">17614</span>
<span id="L17615" rel="#L17615">17615</span>
<span id="L17616" rel="#L17616">17616</span>
<span id="L17617" rel="#L17617">17617</span>
<span id="L17618" rel="#L17618">17618</span>
<span id="L17619" rel="#L17619">17619</span>
<span id="L17620" rel="#L17620">17620</span>
<span id="L17621" rel="#L17621">17621</span>
<span id="L17622" rel="#L17622">17622</span>
<span id="L17623" rel="#L17623">17623</span>
<span id="L17624" rel="#L17624">17624</span>
<span id="L17625" rel="#L17625">17625</span>
<span id="L17626" rel="#L17626">17626</span>
<span id="L17627" rel="#L17627">17627</span>
<span id="L17628" rel="#L17628">17628</span>
<span id="L17629" rel="#L17629">17629</span>
<span id="L17630" rel="#L17630">17630</span>
<span id="L17631" rel="#L17631">17631</span>
<span id="L17632" rel="#L17632">17632</span>
<span id="L17633" rel="#L17633">17633</span>
<span id="L17634" rel="#L17634">17634</span>
<span id="L17635" rel="#L17635">17635</span>
<span id="L17636" rel="#L17636">17636</span>
<span id="L17637" rel="#L17637">17637</span>
<span id="L17638" rel="#L17638">17638</span>
<span id="L17639" rel="#L17639">17639</span>
<span id="L17640" rel="#L17640">17640</span>
<span id="L17641" rel="#L17641">17641</span>
<span id="L17642" rel="#L17642">17642</span>
<span id="L17643" rel="#L17643">17643</span>
<span id="L17644" rel="#L17644">17644</span>
<span id="L17645" rel="#L17645">17645</span>
<span id="L17646" rel="#L17646">17646</span>
<span id="L17647" rel="#L17647">17647</span>
<span id="L17648" rel="#L17648">17648</span>
<span id="L17649" rel="#L17649">17649</span>
<span id="L17650" rel="#L17650">17650</span>
<span id="L17651" rel="#L17651">17651</span>
<span id="L17652" rel="#L17652">17652</span>
<span id="L17653" rel="#L17653">17653</span>
<span id="L17654" rel="#L17654">17654</span>
<span id="L17655" rel="#L17655">17655</span>
<span id="L17656" rel="#L17656">17656</span>
<span id="L17657" rel="#L17657">17657</span>
<span id="L17658" rel="#L17658">17658</span>
<span id="L17659" rel="#L17659">17659</span>
<span id="L17660" rel="#L17660">17660</span>
<span id="L17661" rel="#L17661">17661</span>
<span id="L17662" rel="#L17662">17662</span>
<span id="L17663" rel="#L17663">17663</span>
<span id="L17664" rel="#L17664">17664</span>
<span id="L17665" rel="#L17665">17665</span>
<span id="L17666" rel="#L17666">17666</span>
<span id="L17667" rel="#L17667">17667</span>
<span id="L17668" rel="#L17668">17668</span>
<span id="L17669" rel="#L17669">17669</span>
<span id="L17670" rel="#L17670">17670</span>
<span id="L17671" rel="#L17671">17671</span>
<span id="L17672" rel="#L17672">17672</span>
<span id="L17673" rel="#L17673">17673</span>
<span id="L17674" rel="#L17674">17674</span>
<span id="L17675" rel="#L17675">17675</span>
<span id="L17676" rel="#L17676">17676</span>
<span id="L17677" rel="#L17677">17677</span>
<span id="L17678" rel="#L17678">17678</span>
<span id="L17679" rel="#L17679">17679</span>
<span id="L17680" rel="#L17680">17680</span>
<span id="L17681" rel="#L17681">17681</span>
<span id="L17682" rel="#L17682">17682</span>
<span id="L17683" rel="#L17683">17683</span>
<span id="L17684" rel="#L17684">17684</span>
<span id="L17685" rel="#L17685">17685</span>
<span id="L17686" rel="#L17686">17686</span>
<span id="L17687" rel="#L17687">17687</span>
<span id="L17688" rel="#L17688">17688</span>
<span id="L17689" rel="#L17689">17689</span>
<span id="L17690" rel="#L17690">17690</span>
<span id="L17691" rel="#L17691">17691</span>
<span id="L17692" rel="#L17692">17692</span>
<span id="L17693" rel="#L17693">17693</span>
<span id="L17694" rel="#L17694">17694</span>
<span id="L17695" rel="#L17695">17695</span>
<span id="L17696" rel="#L17696">17696</span>
<span id="L17697" rel="#L17697">17697</span>
<span id="L17698" rel="#L17698">17698</span>
<span id="L17699" rel="#L17699">17699</span>
<span id="L17700" rel="#L17700">17700</span>
<span id="L17701" rel="#L17701">17701</span>
<span id="L17702" rel="#L17702">17702</span>
<span id="L17703" rel="#L17703">17703</span>
<span id="L17704" rel="#L17704">17704</span>
<span id="L17705" rel="#L17705">17705</span>
<span id="L17706" rel="#L17706">17706</span>
<span id="L17707" rel="#L17707">17707</span>
<span id="L17708" rel="#L17708">17708</span>
<span id="L17709" rel="#L17709">17709</span>
<span id="L17710" rel="#L17710">17710</span>
<span id="L17711" rel="#L17711">17711</span>
<span id="L17712" rel="#L17712">17712</span>
<span id="L17713" rel="#L17713">17713</span>
<span id="L17714" rel="#L17714">17714</span>
<span id="L17715" rel="#L17715">17715</span>
<span id="L17716" rel="#L17716">17716</span>
<span id="L17717" rel="#L17717">17717</span>
<span id="L17718" rel="#L17718">17718</span>
<span id="L17719" rel="#L17719">17719</span>
<span id="L17720" rel="#L17720">17720</span>
<span id="L17721" rel="#L17721">17721</span>
<span id="L17722" rel="#L17722">17722</span>
<span id="L17723" rel="#L17723">17723</span>
<span id="L17724" rel="#L17724">17724</span>
<span id="L17725" rel="#L17725">17725</span>
<span id="L17726" rel="#L17726">17726</span>
<span id="L17727" rel="#L17727">17727</span>
<span id="L17728" rel="#L17728">17728</span>
<span id="L17729" rel="#L17729">17729</span>
<span id="L17730" rel="#L17730">17730</span>
<span id="L17731" rel="#L17731">17731</span>
<span id="L17732" rel="#L17732">17732</span>
<span id="L17733" rel="#L17733">17733</span>
<span id="L17734" rel="#L17734">17734</span>
<span id="L17735" rel="#L17735">17735</span>
<span id="L17736" rel="#L17736">17736</span>
<span id="L17737" rel="#L17737">17737</span>
<span id="L17738" rel="#L17738">17738</span>
<span id="L17739" rel="#L17739">17739</span>
<span id="L17740" rel="#L17740">17740</span>
<span id="L17741" rel="#L17741">17741</span>
<span id="L17742" rel="#L17742">17742</span>
<span id="L17743" rel="#L17743">17743</span>
<span id="L17744" rel="#L17744">17744</span>
<span id="L17745" rel="#L17745">17745</span>
<span id="L17746" rel="#L17746">17746</span>
<span id="L17747" rel="#L17747">17747</span>
<span id="L17748" rel="#L17748">17748</span>
<span id="L17749" rel="#L17749">17749</span>
<span id="L17750" rel="#L17750">17750</span>
<span id="L17751" rel="#L17751">17751</span>
<span id="L17752" rel="#L17752">17752</span>
<span id="L17753" rel="#L17753">17753</span>
<span id="L17754" rel="#L17754">17754</span>
<span id="L17755" rel="#L17755">17755</span>
<span id="L17756" rel="#L17756">17756</span>
<span id="L17757" rel="#L17757">17757</span>
<span id="L17758" rel="#L17758">17758</span>
<span id="L17759" rel="#L17759">17759</span>
<span id="L17760" rel="#L17760">17760</span>
<span id="L17761" rel="#L17761">17761</span>
<span id="L17762" rel="#L17762">17762</span>
<span id="L17763" rel="#L17763">17763</span>
<span id="L17764" rel="#L17764">17764</span>
<span id="L17765" rel="#L17765">17765</span>
<span id="L17766" rel="#L17766">17766</span>
<span id="L17767" rel="#L17767">17767</span>
<span id="L17768" rel="#L17768">17768</span>
<span id="L17769" rel="#L17769">17769</span>
<span id="L17770" rel="#L17770">17770</span>
<span id="L17771" rel="#L17771">17771</span>
<span id="L17772" rel="#L17772">17772</span>
<span id="L17773" rel="#L17773">17773</span>
<span id="L17774" rel="#L17774">17774</span>
<span id="L17775" rel="#L17775">17775</span>
<span id="L17776" rel="#L17776">17776</span>
<span id="L17777" rel="#L17777">17777</span>
<span id="L17778" rel="#L17778">17778</span>
<span id="L17779" rel="#L17779">17779</span>
<span id="L17780" rel="#L17780">17780</span>
<span id="L17781" rel="#L17781">17781</span>
<span id="L17782" rel="#L17782">17782</span>
<span id="L17783" rel="#L17783">17783</span>
<span id="L17784" rel="#L17784">17784</span>
<span id="L17785" rel="#L17785">17785</span>
<span id="L17786" rel="#L17786">17786</span>
<span id="L17787" rel="#L17787">17787</span>
<span id="L17788" rel="#L17788">17788</span>
<span id="L17789" rel="#L17789">17789</span>
<span id="L17790" rel="#L17790">17790</span>
<span id="L17791" rel="#L17791">17791</span>
<span id="L17792" rel="#L17792">17792</span>
<span id="L17793" rel="#L17793">17793</span>
<span id="L17794" rel="#L17794">17794</span>
<span id="L17795" rel="#L17795">17795</span>
<span id="L17796" rel="#L17796">17796</span>
<span id="L17797" rel="#L17797">17797</span>
<span id="L17798" rel="#L17798">17798</span>
<span id="L17799" rel="#L17799">17799</span>
<span id="L17800" rel="#L17800">17800</span>
<span id="L17801" rel="#L17801">17801</span>
<span id="L17802" rel="#L17802">17802</span>
<span id="L17803" rel="#L17803">17803</span>
<span id="L17804" rel="#L17804">17804</span>
<span id="L17805" rel="#L17805">17805</span>
<span id="L17806" rel="#L17806">17806</span>
<span id="L17807" rel="#L17807">17807</span>
<span id="L17808" rel="#L17808">17808</span>
<span id="L17809" rel="#L17809">17809</span>
<span id="L17810" rel="#L17810">17810</span>
<span id="L17811" rel="#L17811">17811</span>
<span id="L17812" rel="#L17812">17812</span>
<span id="L17813" rel="#L17813">17813</span>
<span id="L17814" rel="#L17814">17814</span>
<span id="L17815" rel="#L17815">17815</span>
<span id="L17816" rel="#L17816">17816</span>
<span id="L17817" rel="#L17817">17817</span>
<span id="L17818" rel="#L17818">17818</span>
<span id="L17819" rel="#L17819">17819</span>
<span id="L17820" rel="#L17820">17820</span>
<span id="L17821" rel="#L17821">17821</span>
<span id="L17822" rel="#L17822">17822</span>
<span id="L17823" rel="#L17823">17823</span>
<span id="L17824" rel="#L17824">17824</span>
<span id="L17825" rel="#L17825">17825</span>
<span id="L17826" rel="#L17826">17826</span>
<span id="L17827" rel="#L17827">17827</span>
<span id="L17828" rel="#L17828">17828</span>
<span id="L17829" rel="#L17829">17829</span>
<span id="L17830" rel="#L17830">17830</span>
<span id="L17831" rel="#L17831">17831</span>
<span id="L17832" rel="#L17832">17832</span>
<span id="L17833" rel="#L17833">17833</span>
<span id="L17834" rel="#L17834">17834</span>
<span id="L17835" rel="#L17835">17835</span>
<span id="L17836" rel="#L17836">17836</span>
<span id="L17837" rel="#L17837">17837</span>
<span id="L17838" rel="#L17838">17838</span>
<span id="L17839" rel="#L17839">17839</span>
<span id="L17840" rel="#L17840">17840</span>
<span id="L17841" rel="#L17841">17841</span>
<span id="L17842" rel="#L17842">17842</span>
<span id="L17843" rel="#L17843">17843</span>
<span id="L17844" rel="#L17844">17844</span>
<span id="L17845" rel="#L17845">17845</span>
<span id="L17846" rel="#L17846">17846</span>
<span id="L17847" rel="#L17847">17847</span>
<span id="L17848" rel="#L17848">17848</span>
<span id="L17849" rel="#L17849">17849</span>
<span id="L17850" rel="#L17850">17850</span>
<span id="L17851" rel="#L17851">17851</span>
<span id="L17852" rel="#L17852">17852</span>
<span id="L17853" rel="#L17853">17853</span>
<span id="L17854" rel="#L17854">17854</span>
<span id="L17855" rel="#L17855">17855</span>
<span id="L17856" rel="#L17856">17856</span>
<span id="L17857" rel="#L17857">17857</span>
<span id="L17858" rel="#L17858">17858</span>
<span id="L17859" rel="#L17859">17859</span>
<span id="L17860" rel="#L17860">17860</span>
<span id="L17861" rel="#L17861">17861</span>
<span id="L17862" rel="#L17862">17862</span>
<span id="L17863" rel="#L17863">17863</span>
<span id="L17864" rel="#L17864">17864</span>
<span id="L17865" rel="#L17865">17865</span>
<span id="L17866" rel="#L17866">17866</span>
<span id="L17867" rel="#L17867">17867</span>
<span id="L17868" rel="#L17868">17868</span>
<span id="L17869" rel="#L17869">17869</span>
<span id="L17870" rel="#L17870">17870</span>
<span id="L17871" rel="#L17871">17871</span>
<span id="L17872" rel="#L17872">17872</span>
<span id="L17873" rel="#L17873">17873</span>
<span id="L17874" rel="#L17874">17874</span>
<span id="L17875" rel="#L17875">17875</span>
<span id="L17876" rel="#L17876">17876</span>
<span id="L17877" rel="#L17877">17877</span>
<span id="L17878" rel="#L17878">17878</span>
<span id="L17879" rel="#L17879">17879</span>
<span id="L17880" rel="#L17880">17880</span>
<span id="L17881" rel="#L17881">17881</span>
<span id="L17882" rel="#L17882">17882</span>
<span id="L17883" rel="#L17883">17883</span>
<span id="L17884" rel="#L17884">17884</span>
<span id="L17885" rel="#L17885">17885</span>
<span id="L17886" rel="#L17886">17886</span>
<span id="L17887" rel="#L17887">17887</span>
<span id="L17888" rel="#L17888">17888</span>
<span id="L17889" rel="#L17889">17889</span>
<span id="L17890" rel="#L17890">17890</span>
<span id="L17891" rel="#L17891">17891</span>
<span id="L17892" rel="#L17892">17892</span>
<span id="L17893" rel="#L17893">17893</span>
<span id="L17894" rel="#L17894">17894</span>
<span id="L17895" rel="#L17895">17895</span>
<span id="L17896" rel="#L17896">17896</span>
<span id="L17897" rel="#L17897">17897</span>
<span id="L17898" rel="#L17898">17898</span>
<span id="L17899" rel="#L17899">17899</span>
<span id="L17900" rel="#L17900">17900</span>
<span id="L17901" rel="#L17901">17901</span>
<span id="L17902" rel="#L17902">17902</span>
<span id="L17903" rel="#L17903">17903</span>
<span id="L17904" rel="#L17904">17904</span>
<span id="L17905" rel="#L17905">17905</span>
<span id="L17906" rel="#L17906">17906</span>
<span id="L17907" rel="#L17907">17907</span>
<span id="L17908" rel="#L17908">17908</span>
<span id="L17909" rel="#L17909">17909</span>
<span id="L17910" rel="#L17910">17910</span>
<span id="L17911" rel="#L17911">17911</span>
<span id="L17912" rel="#L17912">17912</span>
<span id="L17913" rel="#L17913">17913</span>
<span id="L17914" rel="#L17914">17914</span>
<span id="L17915" rel="#L17915">17915</span>
<span id="L17916" rel="#L17916">17916</span>
<span id="L17917" rel="#L17917">17917</span>
<span id="L17918" rel="#L17918">17918</span>
<span id="L17919" rel="#L17919">17919</span>
<span id="L17920" rel="#L17920">17920</span>
<span id="L17921" rel="#L17921">17921</span>
<span id="L17922" rel="#L17922">17922</span>
<span id="L17923" rel="#L17923">17923</span>
<span id="L17924" rel="#L17924">17924</span>
<span id="L17925" rel="#L17925">17925</span>
<span id="L17926" rel="#L17926">17926</span>
<span id="L17927" rel="#L17927">17927</span>
<span id="L17928" rel="#L17928">17928</span>
<span id="L17929" rel="#L17929">17929</span>
<span id="L17930" rel="#L17930">17930</span>
<span id="L17931" rel="#L17931">17931</span>
<span id="L17932" rel="#L17932">17932</span>
<span id="L17933" rel="#L17933">17933</span>
<span id="L17934" rel="#L17934">17934</span>
<span id="L17935" rel="#L17935">17935</span>
<span id="L17936" rel="#L17936">17936</span>
<span id="L17937" rel="#L17937">17937</span>
<span id="L17938" rel="#L17938">17938</span>
<span id="L17939" rel="#L17939">17939</span>
<span id="L17940" rel="#L17940">17940</span>
<span id="L17941" rel="#L17941">17941</span>
<span id="L17942" rel="#L17942">17942</span>
<span id="L17943" rel="#L17943">17943</span>
<span id="L17944" rel="#L17944">17944</span>
<span id="L17945" rel="#L17945">17945</span>
<span id="L17946" rel="#L17946">17946</span>
<span id="L17947" rel="#L17947">17947</span>
<span id="L17948" rel="#L17948">17948</span>
<span id="L17949" rel="#L17949">17949</span>
<span id="L17950" rel="#L17950">17950</span>
<span id="L17951" rel="#L17951">17951</span>
<span id="L17952" rel="#L17952">17952</span>
<span id="L17953" rel="#L17953">17953</span>
<span id="L17954" rel="#L17954">17954</span>
<span id="L17955" rel="#L17955">17955</span>
<span id="L17956" rel="#L17956">17956</span>
<span id="L17957" rel="#L17957">17957</span>
<span id="L17958" rel="#L17958">17958</span>
<span id="L17959" rel="#L17959">17959</span>
<span id="L17960" rel="#L17960">17960</span>
<span id="L17961" rel="#L17961">17961</span>
<span id="L17962" rel="#L17962">17962</span>
<span id="L17963" rel="#L17963">17963</span>
<span id="L17964" rel="#L17964">17964</span>
<span id="L17965" rel="#L17965">17965</span>
<span id="L17966" rel="#L17966">17966</span>
<span id="L17967" rel="#L17967">17967</span>
<span id="L17968" rel="#L17968">17968</span>
<span id="L17969" rel="#L17969">17969</span>
<span id="L17970" rel="#L17970">17970</span>
<span id="L17971" rel="#L17971">17971</span>
<span id="L17972" rel="#L17972">17972</span>
<span id="L17973" rel="#L17973">17973</span>
<span id="L17974" rel="#L17974">17974</span>
<span id="L17975" rel="#L17975">17975</span>
<span id="L17976" rel="#L17976">17976</span>
<span id="L17977" rel="#L17977">17977</span>
<span id="L17978" rel="#L17978">17978</span>
<span id="L17979" rel="#L17979">17979</span>
<span id="L17980" rel="#L17980">17980</span>
<span id="L17981" rel="#L17981">17981</span>
<span id="L17982" rel="#L17982">17982</span>
<span id="L17983" rel="#L17983">17983</span>
<span id="L17984" rel="#L17984">17984</span>
<span id="L17985" rel="#L17985">17985</span>
<span id="L17986" rel="#L17986">17986</span>
<span id="L17987" rel="#L17987">17987</span>
<span id="L17988" rel="#L17988">17988</span>
<span id="L17989" rel="#L17989">17989</span>
<span id="L17990" rel="#L17990">17990</span>
<span id="L17991" rel="#L17991">17991</span>
<span id="L17992" rel="#L17992">17992</span>
<span id="L17993" rel="#L17993">17993</span>
<span id="L17994" rel="#L17994">17994</span>
<span id="L17995" rel="#L17995">17995</span>
<span id="L17996" rel="#L17996">17996</span>
<span id="L17997" rel="#L17997">17997</span>
<span id="L17998" rel="#L17998">17998</span>
<span id="L17999" rel="#L17999">17999</span>
<span id="L18000" rel="#L18000">18000</span>
<span id="L18001" rel="#L18001">18001</span>
<span id="L18002" rel="#L18002">18002</span>
<span id="L18003" rel="#L18003">18003</span>
<span id="L18004" rel="#L18004">18004</span>
<span id="L18005" rel="#L18005">18005</span>
<span id="L18006" rel="#L18006">18006</span>
<span id="L18007" rel="#L18007">18007</span>
<span id="L18008" rel="#L18008">18008</span>
<span id="L18009" rel="#L18009">18009</span>
<span id="L18010" rel="#L18010">18010</span>
<span id="L18011" rel="#L18011">18011</span>
<span id="L18012" rel="#L18012">18012</span>
<span id="L18013" rel="#L18013">18013</span>
<span id="L18014" rel="#L18014">18014</span>
<span id="L18015" rel="#L18015">18015</span>
<span id="L18016" rel="#L18016">18016</span>
<span id="L18017" rel="#L18017">18017</span>
<span id="L18018" rel="#L18018">18018</span>
<span id="L18019" rel="#L18019">18019</span>
<span id="L18020" rel="#L18020">18020</span>
<span id="L18021" rel="#L18021">18021</span>
<span id="L18022" rel="#L18022">18022</span>
<span id="L18023" rel="#L18023">18023</span>
<span id="L18024" rel="#L18024">18024</span>
<span id="L18025" rel="#L18025">18025</span>
<span id="L18026" rel="#L18026">18026</span>
<span id="L18027" rel="#L18027">18027</span>
<span id="L18028" rel="#L18028">18028</span>
<span id="L18029" rel="#L18029">18029</span>
<span id="L18030" rel="#L18030">18030</span>
<span id="L18031" rel="#L18031">18031</span>
<span id="L18032" rel="#L18032">18032</span>
<span id="L18033" rel="#L18033">18033</span>
<span id="L18034" rel="#L18034">18034</span>
<span id="L18035" rel="#L18035">18035</span>
<span id="L18036" rel="#L18036">18036</span>
<span id="L18037" rel="#L18037">18037</span>
<span id="L18038" rel="#L18038">18038</span>
<span id="L18039" rel="#L18039">18039</span>
<span id="L18040" rel="#L18040">18040</span>
<span id="L18041" rel="#L18041">18041</span>
<span id="L18042" rel="#L18042">18042</span>
<span id="L18043" rel="#L18043">18043</span>
<span id="L18044" rel="#L18044">18044</span>
<span id="L18045" rel="#L18045">18045</span>
<span id="L18046" rel="#L18046">18046</span>
<span id="L18047" rel="#L18047">18047</span>
<span id="L18048" rel="#L18048">18048</span>
<span id="L18049" rel="#L18049">18049</span>
<span id="L18050" rel="#L18050">18050</span>
<span id="L18051" rel="#L18051">18051</span>
<span id="L18052" rel="#L18052">18052</span>
<span id="L18053" rel="#L18053">18053</span>
<span id="L18054" rel="#L18054">18054</span>
<span id="L18055" rel="#L18055">18055</span>
<span id="L18056" rel="#L18056">18056</span>
<span id="L18057" rel="#L18057">18057</span>
<span id="L18058" rel="#L18058">18058</span>
<span id="L18059" rel="#L18059">18059</span>
<span id="L18060" rel="#L18060">18060</span>
<span id="L18061" rel="#L18061">18061</span>
<span id="L18062" rel="#L18062">18062</span>
<span id="L18063" rel="#L18063">18063</span>
<span id="L18064" rel="#L18064">18064</span>
<span id="L18065" rel="#L18065">18065</span>
<span id="L18066" rel="#L18066">18066</span>
<span id="L18067" rel="#L18067">18067</span>
<span id="L18068" rel="#L18068">18068</span>
<span id="L18069" rel="#L18069">18069</span>
<span id="L18070" rel="#L18070">18070</span>
<span id="L18071" rel="#L18071">18071</span>
<span id="L18072" rel="#L18072">18072</span>
<span id="L18073" rel="#L18073">18073</span>
<span id="L18074" rel="#L18074">18074</span>
<span id="L18075" rel="#L18075">18075</span>
<span id="L18076" rel="#L18076">18076</span>
<span id="L18077" rel="#L18077">18077</span>
<span id="L18078" rel="#L18078">18078</span>
<span id="L18079" rel="#L18079">18079</span>
<span id="L18080" rel="#L18080">18080</span>
<span id="L18081" rel="#L18081">18081</span>
<span id="L18082" rel="#L18082">18082</span>
<span id="L18083" rel="#L18083">18083</span>
<span id="L18084" rel="#L18084">18084</span>
<span id="L18085" rel="#L18085">18085</span>
<span id="L18086" rel="#L18086">18086</span>
<span id="L18087" rel="#L18087">18087</span>
<span id="L18088" rel="#L18088">18088</span>
<span id="L18089" rel="#L18089">18089</span>
<span id="L18090" rel="#L18090">18090</span>
<span id="L18091" rel="#L18091">18091</span>
<span id="L18092" rel="#L18092">18092</span>
<span id="L18093" rel="#L18093">18093</span>
<span id="L18094" rel="#L18094">18094</span>
<span id="L18095" rel="#L18095">18095</span>
<span id="L18096" rel="#L18096">18096</span>
<span id="L18097" rel="#L18097">18097</span>
<span id="L18098" rel="#L18098">18098</span>
<span id="L18099" rel="#L18099">18099</span>
<span id="L18100" rel="#L18100">18100</span>
<span id="L18101" rel="#L18101">18101</span>
<span id="L18102" rel="#L18102">18102</span>
<span id="L18103" rel="#L18103">18103</span>
<span id="L18104" rel="#L18104">18104</span>
<span id="L18105" rel="#L18105">18105</span>
<span id="L18106" rel="#L18106">18106</span>
<span id="L18107" rel="#L18107">18107</span>
<span id="L18108" rel="#L18108">18108</span>
<span id="L18109" rel="#L18109">18109</span>
<span id="L18110" rel="#L18110">18110</span>
<span id="L18111" rel="#L18111">18111</span>
<span id="L18112" rel="#L18112">18112</span>
<span id="L18113" rel="#L18113">18113</span>
<span id="L18114" rel="#L18114">18114</span>
<span id="L18115" rel="#L18115">18115</span>
<span id="L18116" rel="#L18116">18116</span>
<span id="L18117" rel="#L18117">18117</span>
<span id="L18118" rel="#L18118">18118</span>
<span id="L18119" rel="#L18119">18119</span>
<span id="L18120" rel="#L18120">18120</span>
<span id="L18121" rel="#L18121">18121</span>
<span id="L18122" rel="#L18122">18122</span>
<span id="L18123" rel="#L18123">18123</span>
<span id="L18124" rel="#L18124">18124</span>
<span id="L18125" rel="#L18125">18125</span>
<span id="L18126" rel="#L18126">18126</span>
<span id="L18127" rel="#L18127">18127</span>
<span id="L18128" rel="#L18128">18128</span>
<span id="L18129" rel="#L18129">18129</span>
<span id="L18130" rel="#L18130">18130</span>
<span id="L18131" rel="#L18131">18131</span>
<span id="L18132" rel="#L18132">18132</span>
<span id="L18133" rel="#L18133">18133</span>
<span id="L18134" rel="#L18134">18134</span>
<span id="L18135" rel="#L18135">18135</span>
<span id="L18136" rel="#L18136">18136</span>
<span id="L18137" rel="#L18137">18137</span>
<span id="L18138" rel="#L18138">18138</span>
<span id="L18139" rel="#L18139">18139</span>
<span id="L18140" rel="#L18140">18140</span>
<span id="L18141" rel="#L18141">18141</span>
<span id="L18142" rel="#L18142">18142</span>
<span id="L18143" rel="#L18143">18143</span>
<span id="L18144" rel="#L18144">18144</span>
<span id="L18145" rel="#L18145">18145</span>
<span id="L18146" rel="#L18146">18146</span>
<span id="L18147" rel="#L18147">18147</span>
<span id="L18148" rel="#L18148">18148</span>
<span id="L18149" rel="#L18149">18149</span>
<span id="L18150" rel="#L18150">18150</span>
<span id="L18151" rel="#L18151">18151</span>
<span id="L18152" rel="#L18152">18152</span>
<span id="L18153" rel="#L18153">18153</span>
<span id="L18154" rel="#L18154">18154</span>
<span id="L18155" rel="#L18155">18155</span>
<span id="L18156" rel="#L18156">18156</span>
<span id="L18157" rel="#L18157">18157</span>
<span id="L18158" rel="#L18158">18158</span>
<span id="L18159" rel="#L18159">18159</span>
<span id="L18160" rel="#L18160">18160</span>
<span id="L18161" rel="#L18161">18161</span>
<span id="L18162" rel="#L18162">18162</span>
<span id="L18163" rel="#L18163">18163</span>
<span id="L18164" rel="#L18164">18164</span>
<span id="L18165" rel="#L18165">18165</span>
<span id="L18166" rel="#L18166">18166</span>
<span id="L18167" rel="#L18167">18167</span>
<span id="L18168" rel="#L18168">18168</span>
<span id="L18169" rel="#L18169">18169</span>
<span id="L18170" rel="#L18170">18170</span>
<span id="L18171" rel="#L18171">18171</span>
<span id="L18172" rel="#L18172">18172</span>
<span id="L18173" rel="#L18173">18173</span>
<span id="L18174" rel="#L18174">18174</span>
<span id="L18175" rel="#L18175">18175</span>
<span id="L18176" rel="#L18176">18176</span>
<span id="L18177" rel="#L18177">18177</span>
<span id="L18178" rel="#L18178">18178</span>
<span id="L18179" rel="#L18179">18179</span>
<span id="L18180" rel="#L18180">18180</span>
<span id="L18181" rel="#L18181">18181</span>
<span id="L18182" rel="#L18182">18182</span>
<span id="L18183" rel="#L18183">18183</span>
<span id="L18184" rel="#L18184">18184</span>
<span id="L18185" rel="#L18185">18185</span>
<span id="L18186" rel="#L18186">18186</span>
<span id="L18187" rel="#L18187">18187</span>
<span id="L18188" rel="#L18188">18188</span>
<span id="L18189" rel="#L18189">18189</span>
<span id="L18190" rel="#L18190">18190</span>
<span id="L18191" rel="#L18191">18191</span>
<span id="L18192" rel="#L18192">18192</span>
<span id="L18193" rel="#L18193">18193</span>
<span id="L18194" rel="#L18194">18194</span>
<span id="L18195" rel="#L18195">18195</span>
<span id="L18196" rel="#L18196">18196</span>
<span id="L18197" rel="#L18197">18197</span>
<span id="L18198" rel="#L18198">18198</span>
<span id="L18199" rel="#L18199">18199</span>
<span id="L18200" rel="#L18200">18200</span>
<span id="L18201" rel="#L18201">18201</span>
<span id="L18202" rel="#L18202">18202</span>
<span id="L18203" rel="#L18203">18203</span>
<span id="L18204" rel="#L18204">18204</span>
<span id="L18205" rel="#L18205">18205</span>
<span id="L18206" rel="#L18206">18206</span>
<span id="L18207" rel="#L18207">18207</span>
<span id="L18208" rel="#L18208">18208</span>
<span id="L18209" rel="#L18209">18209</span>
<span id="L18210" rel="#L18210">18210</span>
<span id="L18211" rel="#L18211">18211</span>
<span id="L18212" rel="#L18212">18212</span>
<span id="L18213" rel="#L18213">18213</span>
<span id="L18214" rel="#L18214">18214</span>
<span id="L18215" rel="#L18215">18215</span>
<span id="L18216" rel="#L18216">18216</span>
<span id="L18217" rel="#L18217">18217</span>
<span id="L18218" rel="#L18218">18218</span>
<span id="L18219" rel="#L18219">18219</span>
<span id="L18220" rel="#L18220">18220</span>
<span id="L18221" rel="#L18221">18221</span>
<span id="L18222" rel="#L18222">18222</span>
<span id="L18223" rel="#L18223">18223</span>
<span id="L18224" rel="#L18224">18224</span>
<span id="L18225" rel="#L18225">18225</span>
<span id="L18226" rel="#L18226">18226</span>
<span id="L18227" rel="#L18227">18227</span>
<span id="L18228" rel="#L18228">18228</span>
<span id="L18229" rel="#L18229">18229</span>
<span id="L18230" rel="#L18230">18230</span>
<span id="L18231" rel="#L18231">18231</span>
<span id="L18232" rel="#L18232">18232</span>
<span id="L18233" rel="#L18233">18233</span>
<span id="L18234" rel="#L18234">18234</span>
<span id="L18235" rel="#L18235">18235</span>
<span id="L18236" rel="#L18236">18236</span>
<span id="L18237" rel="#L18237">18237</span>
<span id="L18238" rel="#L18238">18238</span>
<span id="L18239" rel="#L18239">18239</span>
<span id="L18240" rel="#L18240">18240</span>
<span id="L18241" rel="#L18241">18241</span>
<span id="L18242" rel="#L18242">18242</span>
<span id="L18243" rel="#L18243">18243</span>
<span id="L18244" rel="#L18244">18244</span>
<span id="L18245" rel="#L18245">18245</span>
<span id="L18246" rel="#L18246">18246</span>
<span id="L18247" rel="#L18247">18247</span>
<span id="L18248" rel="#L18248">18248</span>
<span id="L18249" rel="#L18249">18249</span>
<span id="L18250" rel="#L18250">18250</span>
<span id="L18251" rel="#L18251">18251</span>
<span id="L18252" rel="#L18252">18252</span>
<span id="L18253" rel="#L18253">18253</span>
<span id="L18254" rel="#L18254">18254</span>
<span id="L18255" rel="#L18255">18255</span>
<span id="L18256" rel="#L18256">18256</span>
<span id="L18257" rel="#L18257">18257</span>
<span id="L18258" rel="#L18258">18258</span>
<span id="L18259" rel="#L18259">18259</span>
<span id="L18260" rel="#L18260">18260</span>
<span id="L18261" rel="#L18261">18261</span>
<span id="L18262" rel="#L18262">18262</span>
<span id="L18263" rel="#L18263">18263</span>
<span id="L18264" rel="#L18264">18264</span>
<span id="L18265" rel="#L18265">18265</span>
<span id="L18266" rel="#L18266">18266</span>
<span id="L18267" rel="#L18267">18267</span>
<span id="L18268" rel="#L18268">18268</span>
<span id="L18269" rel="#L18269">18269</span>
<span id="L18270" rel="#L18270">18270</span>
<span id="L18271" rel="#L18271">18271</span>
<span id="L18272" rel="#L18272">18272</span>
<span id="L18273" rel="#L18273">18273</span>
<span id="L18274" rel="#L18274">18274</span>
<span id="L18275" rel="#L18275">18275</span>
<span id="L18276" rel="#L18276">18276</span>
<span id="L18277" rel="#L18277">18277</span>
<span id="L18278" rel="#L18278">18278</span>
<span id="L18279" rel="#L18279">18279</span>
<span id="L18280" rel="#L18280">18280</span>
<span id="L18281" rel="#L18281">18281</span>
<span id="L18282" rel="#L18282">18282</span>
<span id="L18283" rel="#L18283">18283</span>
<span id="L18284" rel="#L18284">18284</span>
<span id="L18285" rel="#L18285">18285</span>
<span id="L18286" rel="#L18286">18286</span>
<span id="L18287" rel="#L18287">18287</span>
<span id="L18288" rel="#L18288">18288</span>
<span id="L18289" rel="#L18289">18289</span>
<span id="L18290" rel="#L18290">18290</span>
<span id="L18291" rel="#L18291">18291</span>
<span id="L18292" rel="#L18292">18292</span>
<span id="L18293" rel="#L18293">18293</span>
<span id="L18294" rel="#L18294">18294</span>
<span id="L18295" rel="#L18295">18295</span>
<span id="L18296" rel="#L18296">18296</span>
<span id="L18297" rel="#L18297">18297</span>
<span id="L18298" rel="#L18298">18298</span>
<span id="L18299" rel="#L18299">18299</span>
<span id="L18300" rel="#L18300">18300</span>
<span id="L18301" rel="#L18301">18301</span>
<span id="L18302" rel="#L18302">18302</span>
<span id="L18303" rel="#L18303">18303</span>
<span id="L18304" rel="#L18304">18304</span>
<span id="L18305" rel="#L18305">18305</span>
<span id="L18306" rel="#L18306">18306</span>
<span id="L18307" rel="#L18307">18307</span>
<span id="L18308" rel="#L18308">18308</span>
<span id="L18309" rel="#L18309">18309</span>
<span id="L18310" rel="#L18310">18310</span>
<span id="L18311" rel="#L18311">18311</span>
<span id="L18312" rel="#L18312">18312</span>
<span id="L18313" rel="#L18313">18313</span>
<span id="L18314" rel="#L18314">18314</span>
<span id="L18315" rel="#L18315">18315</span>
<span id="L18316" rel="#L18316">18316</span>
<span id="L18317" rel="#L18317">18317</span>
<span id="L18318" rel="#L18318">18318</span>
<span id="L18319" rel="#L18319">18319</span>
<span id="L18320" rel="#L18320">18320</span>
<span id="L18321" rel="#L18321">18321</span>
<span id="L18322" rel="#L18322">18322</span>
<span id="L18323" rel="#L18323">18323</span>
<span id="L18324" rel="#L18324">18324</span>
<span id="L18325" rel="#L18325">18325</span>
<span id="L18326" rel="#L18326">18326</span>
<span id="L18327" rel="#L18327">18327</span>
<span id="L18328" rel="#L18328">18328</span>
<span id="L18329" rel="#L18329">18329</span>
<span id="L18330" rel="#L18330">18330</span>
<span id="L18331" rel="#L18331">18331</span>
<span id="L18332" rel="#L18332">18332</span>
<span id="L18333" rel="#L18333">18333</span>
<span id="L18334" rel="#L18334">18334</span>
<span id="L18335" rel="#L18335">18335</span>
<span id="L18336" rel="#L18336">18336</span>
<span id="L18337" rel="#L18337">18337</span>
<span id="L18338" rel="#L18338">18338</span>
<span id="L18339" rel="#L18339">18339</span>
<span id="L18340" rel="#L18340">18340</span>
<span id="L18341" rel="#L18341">18341</span>
<span id="L18342" rel="#L18342">18342</span>
<span id="L18343" rel="#L18343">18343</span>
<span id="L18344" rel="#L18344">18344</span>
<span id="L18345" rel="#L18345">18345</span>
<span id="L18346" rel="#L18346">18346</span>
<span id="L18347" rel="#L18347">18347</span>
<span id="L18348" rel="#L18348">18348</span>
<span id="L18349" rel="#L18349">18349</span>
<span id="L18350" rel="#L18350">18350</span>
<span id="L18351" rel="#L18351">18351</span>
<span id="L18352" rel="#L18352">18352</span>
<span id="L18353" rel="#L18353">18353</span>
<span id="L18354" rel="#L18354">18354</span>
<span id="L18355" rel="#L18355">18355</span>
<span id="L18356" rel="#L18356">18356</span>
<span id="L18357" rel="#L18357">18357</span>
<span id="L18358" rel="#L18358">18358</span>
<span id="L18359" rel="#L18359">18359</span>
<span id="L18360" rel="#L18360">18360</span>
<span id="L18361" rel="#L18361">18361</span>
<span id="L18362" rel="#L18362">18362</span>
<span id="L18363" rel="#L18363">18363</span>
<span id="L18364" rel="#L18364">18364</span>
<span id="L18365" rel="#L18365">18365</span>
<span id="L18366" rel="#L18366">18366</span>
<span id="L18367" rel="#L18367">18367</span>
<span id="L18368" rel="#L18368">18368</span>
<span id="L18369" rel="#L18369">18369</span>
<span id="L18370" rel="#L18370">18370</span>
<span id="L18371" rel="#L18371">18371</span>
<span id="L18372" rel="#L18372">18372</span>
<span id="L18373" rel="#L18373">18373</span>
<span id="L18374" rel="#L18374">18374</span>
<span id="L18375" rel="#L18375">18375</span>
<span id="L18376" rel="#L18376">18376</span>
<span id="L18377" rel="#L18377">18377</span>
<span id="L18378" rel="#L18378">18378</span>
<span id="L18379" rel="#L18379">18379</span>
<span id="L18380" rel="#L18380">18380</span>
<span id="L18381" rel="#L18381">18381</span>
<span id="L18382" rel="#L18382">18382</span>
<span id="L18383" rel="#L18383">18383</span>
<span id="L18384" rel="#L18384">18384</span>
<span id="L18385" rel="#L18385">18385</span>
<span id="L18386" rel="#L18386">18386</span>
<span id="L18387" rel="#L18387">18387</span>
<span id="L18388" rel="#L18388">18388</span>
<span id="L18389" rel="#L18389">18389</span>
<span id="L18390" rel="#L18390">18390</span>
<span id="L18391" rel="#L18391">18391</span>
<span id="L18392" rel="#L18392">18392</span>
<span id="L18393" rel="#L18393">18393</span>
<span id="L18394" rel="#L18394">18394</span>
<span id="L18395" rel="#L18395">18395</span>
<span id="L18396" rel="#L18396">18396</span>
<span id="L18397" rel="#L18397">18397</span>
<span id="L18398" rel="#L18398">18398</span>
<span id="L18399" rel="#L18399">18399</span>
<span id="L18400" rel="#L18400">18400</span>
<span id="L18401" rel="#L18401">18401</span>
<span id="L18402" rel="#L18402">18402</span>
<span id="L18403" rel="#L18403">18403</span>
<span id="L18404" rel="#L18404">18404</span>
<span id="L18405" rel="#L18405">18405</span>
<span id="L18406" rel="#L18406">18406</span>
<span id="L18407" rel="#L18407">18407</span>
<span id="L18408" rel="#L18408">18408</span>
<span id="L18409" rel="#L18409">18409</span>
<span id="L18410" rel="#L18410">18410</span>
<span id="L18411" rel="#L18411">18411</span>
<span id="L18412" rel="#L18412">18412</span>
<span id="L18413" rel="#L18413">18413</span>
<span id="L18414" rel="#L18414">18414</span>
<span id="L18415" rel="#L18415">18415</span>
<span id="L18416" rel="#L18416">18416</span>
<span id="L18417" rel="#L18417">18417</span>
<span id="L18418" rel="#L18418">18418</span>
<span id="L18419" rel="#L18419">18419</span>
<span id="L18420" rel="#L18420">18420</span>
<span id="L18421" rel="#L18421">18421</span>
<span id="L18422" rel="#L18422">18422</span>
<span id="L18423" rel="#L18423">18423</span>
<span id="L18424" rel="#L18424">18424</span>
<span id="L18425" rel="#L18425">18425</span>
<span id="L18426" rel="#L18426">18426</span>
<span id="L18427" rel="#L18427">18427</span>
<span id="L18428" rel="#L18428">18428</span>
<span id="L18429" rel="#L18429">18429</span>
<span id="L18430" rel="#L18430">18430</span>
<span id="L18431" rel="#L18431">18431</span>
<span id="L18432" rel="#L18432">18432</span>
<span id="L18433" rel="#L18433">18433</span>
<span id="L18434" rel="#L18434">18434</span>
<span id="L18435" rel="#L18435">18435</span>
<span id="L18436" rel="#L18436">18436</span>
<span id="L18437" rel="#L18437">18437</span>
<span id="L18438" rel="#L18438">18438</span>
<span id="L18439" rel="#L18439">18439</span>
<span id="L18440" rel="#L18440">18440</span>
<span id="L18441" rel="#L18441">18441</span>
<span id="L18442" rel="#L18442">18442</span>
<span id="L18443" rel="#L18443">18443</span>
<span id="L18444" rel="#L18444">18444</span>
<span id="L18445" rel="#L18445">18445</span>
<span id="L18446" rel="#L18446">18446</span>
<span id="L18447" rel="#L18447">18447</span>
<span id="L18448" rel="#L18448">18448</span>
<span id="L18449" rel="#L18449">18449</span>
<span id="L18450" rel="#L18450">18450</span>
<span id="L18451" rel="#L18451">18451</span>
<span id="L18452" rel="#L18452">18452</span>
<span id="L18453" rel="#L18453">18453</span>
<span id="L18454" rel="#L18454">18454</span>
<span id="L18455" rel="#L18455">18455</span>
<span id="L18456" rel="#L18456">18456</span>
<span id="L18457" rel="#L18457">18457</span>
<span id="L18458" rel="#L18458">18458</span>
<span id="L18459" rel="#L18459">18459</span>
<span id="L18460" rel="#L18460">18460</span>
<span id="L18461" rel="#L18461">18461</span>
<span id="L18462" rel="#L18462">18462</span>
<span id="L18463" rel="#L18463">18463</span>
<span id="L18464" rel="#L18464">18464</span>
<span id="L18465" rel="#L18465">18465</span>
<span id="L18466" rel="#L18466">18466</span>
<span id="L18467" rel="#L18467">18467</span>
<span id="L18468" rel="#L18468">18468</span>
<span id="L18469" rel="#L18469">18469</span>
<span id="L18470" rel="#L18470">18470</span>
<span id="L18471" rel="#L18471">18471</span>
<span id="L18472" rel="#L18472">18472</span>
<span id="L18473" rel="#L18473">18473</span>
<span id="L18474" rel="#L18474">18474</span>
<span id="L18475" rel="#L18475">18475</span>
<span id="L18476" rel="#L18476">18476</span>
<span id="L18477" rel="#L18477">18477</span>
<span id="L18478" rel="#L18478">18478</span>
<span id="L18479" rel="#L18479">18479</span>
<span id="L18480" rel="#L18480">18480</span>
<span id="L18481" rel="#L18481">18481</span>
<span id="L18482" rel="#L18482">18482</span>
<span id="L18483" rel="#L18483">18483</span>
<span id="L18484" rel="#L18484">18484</span>
<span id="L18485" rel="#L18485">18485</span>
<span id="L18486" rel="#L18486">18486</span>
<span id="L18487" rel="#L18487">18487</span>
<span id="L18488" rel="#L18488">18488</span>
<span id="L18489" rel="#L18489">18489</span>
<span id="L18490" rel="#L18490">18490</span>
<span id="L18491" rel="#L18491">18491</span>
<span id="L18492" rel="#L18492">18492</span>
<span id="L18493" rel="#L18493">18493</span>
<span id="L18494" rel="#L18494">18494</span>
<span id="L18495" rel="#L18495">18495</span>
<span id="L18496" rel="#L18496">18496</span>
<span id="L18497" rel="#L18497">18497</span>
<span id="L18498" rel="#L18498">18498</span>
<span id="L18499" rel="#L18499">18499</span>
<span id="L18500" rel="#L18500">18500</span>
<span id="L18501" rel="#L18501">18501</span>
<span id="L18502" rel="#L18502">18502</span>
<span id="L18503" rel="#L18503">18503</span>
<span id="L18504" rel="#L18504">18504</span>
<span id="L18505" rel="#L18505">18505</span>
<span id="L18506" rel="#L18506">18506</span>
<span id="L18507" rel="#L18507">18507</span>
<span id="L18508" rel="#L18508">18508</span>
<span id="L18509" rel="#L18509">18509</span>
<span id="L18510" rel="#L18510">18510</span>
<span id="L18511" rel="#L18511">18511</span>
<span id="L18512" rel="#L18512">18512</span>
<span id="L18513" rel="#L18513">18513</span>
<span id="L18514" rel="#L18514">18514</span>
<span id="L18515" rel="#L18515">18515</span>
<span id="L18516" rel="#L18516">18516</span>
<span id="L18517" rel="#L18517">18517</span>
<span id="L18518" rel="#L18518">18518</span>
<span id="L18519" rel="#L18519">18519</span>
<span id="L18520" rel="#L18520">18520</span>
<span id="L18521" rel="#L18521">18521</span>
<span id="L18522" rel="#L18522">18522</span>
<span id="L18523" rel="#L18523">18523</span>
<span id="L18524" rel="#L18524">18524</span>
<span id="L18525" rel="#L18525">18525</span>
<span id="L18526" rel="#L18526">18526</span>
<span id="L18527" rel="#L18527">18527</span>
<span id="L18528" rel="#L18528">18528</span>
<span id="L18529" rel="#L18529">18529</span>
<span id="L18530" rel="#L18530">18530</span>
<span id="L18531" rel="#L18531">18531</span>
<span id="L18532" rel="#L18532">18532</span>
<span id="L18533" rel="#L18533">18533</span>
<span id="L18534" rel="#L18534">18534</span>
<span id="L18535" rel="#L18535">18535</span>
<span id="L18536" rel="#L18536">18536</span>
<span id="L18537" rel="#L18537">18537</span>
<span id="L18538" rel="#L18538">18538</span>
<span id="L18539" rel="#L18539">18539</span>
<span id="L18540" rel="#L18540">18540</span>
<span id="L18541" rel="#L18541">18541</span>
<span id="L18542" rel="#L18542">18542</span>
<span id="L18543" rel="#L18543">18543</span>
<span id="L18544" rel="#L18544">18544</span>
<span id="L18545" rel="#L18545">18545</span>
<span id="L18546" rel="#L18546">18546</span>
<span id="L18547" rel="#L18547">18547</span>
<span id="L18548" rel="#L18548">18548</span>
<span id="L18549" rel="#L18549">18549</span>
<span id="L18550" rel="#L18550">18550</span>
<span id="L18551" rel="#L18551">18551</span>
<span id="L18552" rel="#L18552">18552</span>
<span id="L18553" rel="#L18553">18553</span>
<span id="L18554" rel="#L18554">18554</span>
<span id="L18555" rel="#L18555">18555</span>
<span id="L18556" rel="#L18556">18556</span>
<span id="L18557" rel="#L18557">18557</span>
<span id="L18558" rel="#L18558">18558</span>
<span id="L18559" rel="#L18559">18559</span>
<span id="L18560" rel="#L18560">18560</span>
<span id="L18561" rel="#L18561">18561</span>
<span id="L18562" rel="#L18562">18562</span>
<span id="L18563" rel="#L18563">18563</span>
<span id="L18564" rel="#L18564">18564</span>
<span id="L18565" rel="#L18565">18565</span>
<span id="L18566" rel="#L18566">18566</span>
<span id="L18567" rel="#L18567">18567</span>
<span id="L18568" rel="#L18568">18568</span>
<span id="L18569" rel="#L18569">18569</span>
<span id="L18570" rel="#L18570">18570</span>
<span id="L18571" rel="#L18571">18571</span>
<span id="L18572" rel="#L18572">18572</span>
<span id="L18573" rel="#L18573">18573</span>
<span id="L18574" rel="#L18574">18574</span>
<span id="L18575" rel="#L18575">18575</span>
<span id="L18576" rel="#L18576">18576</span>
<span id="L18577" rel="#L18577">18577</span>
<span id="L18578" rel="#L18578">18578</span>
<span id="L18579" rel="#L18579">18579</span>
<span id="L18580" rel="#L18580">18580</span>
<span id="L18581" rel="#L18581">18581</span>
<span id="L18582" rel="#L18582">18582</span>
<span id="L18583" rel="#L18583">18583</span>
<span id="L18584" rel="#L18584">18584</span>
<span id="L18585" rel="#L18585">18585</span>
<span id="L18586" rel="#L18586">18586</span>
<span id="L18587" rel="#L18587">18587</span>
<span id="L18588" rel="#L18588">18588</span>
<span id="L18589" rel="#L18589">18589</span>
<span id="L18590" rel="#L18590">18590</span>
<span id="L18591" rel="#L18591">18591</span>
<span id="L18592" rel="#L18592">18592</span>
<span id="L18593" rel="#L18593">18593</span>
<span id="L18594" rel="#L18594">18594</span>
<span id="L18595" rel="#L18595">18595</span>
<span id="L18596" rel="#L18596">18596</span>
<span id="L18597" rel="#L18597">18597</span>
<span id="L18598" rel="#L18598">18598</span>
<span id="L18599" rel="#L18599">18599</span>
<span id="L18600" rel="#L18600">18600</span>
<span id="L18601" rel="#L18601">18601</span>
<span id="L18602" rel="#L18602">18602</span>
<span id="L18603" rel="#L18603">18603</span>
<span id="L18604" rel="#L18604">18604</span>
<span id="L18605" rel="#L18605">18605</span>
<span id="L18606" rel="#L18606">18606</span>
<span id="L18607" rel="#L18607">18607</span>
<span id="L18608" rel="#L18608">18608</span>
<span id="L18609" rel="#L18609">18609</span>
<span id="L18610" rel="#L18610">18610</span>
<span id="L18611" rel="#L18611">18611</span>
<span id="L18612" rel="#L18612">18612</span>
<span id="L18613" rel="#L18613">18613</span>
<span id="L18614" rel="#L18614">18614</span>
<span id="L18615" rel="#L18615">18615</span>
<span id="L18616" rel="#L18616">18616</span>
<span id="L18617" rel="#L18617">18617</span>
<span id="L18618" rel="#L18618">18618</span>
<span id="L18619" rel="#L18619">18619</span>
<span id="L18620" rel="#L18620">18620</span>
<span id="L18621" rel="#L18621">18621</span>
<span id="L18622" rel="#L18622">18622</span>
<span id="L18623" rel="#L18623">18623</span>
<span id="L18624" rel="#L18624">18624</span>
<span id="L18625" rel="#L18625">18625</span>
<span id="L18626" rel="#L18626">18626</span>
<span id="L18627" rel="#L18627">18627</span>
<span id="L18628" rel="#L18628">18628</span>
<span id="L18629" rel="#L18629">18629</span>
<span id="L18630" rel="#L18630">18630</span>
<span id="L18631" rel="#L18631">18631</span>
<span id="L18632" rel="#L18632">18632</span>
<span id="L18633" rel="#L18633">18633</span>
<span id="L18634" rel="#L18634">18634</span>
<span id="L18635" rel="#L18635">18635</span>
<span id="L18636" rel="#L18636">18636</span>
<span id="L18637" rel="#L18637">18637</span>
<span id="L18638" rel="#L18638">18638</span>
<span id="L18639" rel="#L18639">18639</span>
<span id="L18640" rel="#L18640">18640</span>
<span id="L18641" rel="#L18641">18641</span>
<span id="L18642" rel="#L18642">18642</span>
<span id="L18643" rel="#L18643">18643</span>
<span id="L18644" rel="#L18644">18644</span>
<span id="L18645" rel="#L18645">18645</span>
<span id="L18646" rel="#L18646">18646</span>
<span id="L18647" rel="#L18647">18647</span>
<span id="L18648" rel="#L18648">18648</span>
<span id="L18649" rel="#L18649">18649</span>
<span id="L18650" rel="#L18650">18650</span>
<span id="L18651" rel="#L18651">18651</span>
<span id="L18652" rel="#L18652">18652</span>
<span id="L18653" rel="#L18653">18653</span>
<span id="L18654" rel="#L18654">18654</span>
<span id="L18655" rel="#L18655">18655</span>
<span id="L18656" rel="#L18656">18656</span>
<span id="L18657" rel="#L18657">18657</span>
<span id="L18658" rel="#L18658">18658</span>
<span id="L18659" rel="#L18659">18659</span>
<span id="L18660" rel="#L18660">18660</span>
<span id="L18661" rel="#L18661">18661</span>
<span id="L18662" rel="#L18662">18662</span>
<span id="L18663" rel="#L18663">18663</span>
<span id="L18664" rel="#L18664">18664</span>
<span id="L18665" rel="#L18665">18665</span>
<span id="L18666" rel="#L18666">18666</span>
<span id="L18667" rel="#L18667">18667</span>
<span id="L18668" rel="#L18668">18668</span>
<span id="L18669" rel="#L18669">18669</span>
<span id="L18670" rel="#L18670">18670</span>
<span id="L18671" rel="#L18671">18671</span>
<span id="L18672" rel="#L18672">18672</span>
<span id="L18673" rel="#L18673">18673</span>
<span id="L18674" rel="#L18674">18674</span>
<span id="L18675" rel="#L18675">18675</span>
<span id="L18676" rel="#L18676">18676</span>
<span id="L18677" rel="#L18677">18677</span>
<span id="L18678" rel="#L18678">18678</span>
<span id="L18679" rel="#L18679">18679</span>
<span id="L18680" rel="#L18680">18680</span>
<span id="L18681" rel="#L18681">18681</span>
<span id="L18682" rel="#L18682">18682</span>
<span id="L18683" rel="#L18683">18683</span>
<span id="L18684" rel="#L18684">18684</span>
<span id="L18685" rel="#L18685">18685</span>
<span id="L18686" rel="#L18686">18686</span>
<span id="L18687" rel="#L18687">18687</span>
<span id="L18688" rel="#L18688">18688</span>
<span id="L18689" rel="#L18689">18689</span>
<span id="L18690" rel="#L18690">18690</span>
<span id="L18691" rel="#L18691">18691</span>
<span id="L18692" rel="#L18692">18692</span>
<span id="L18693" rel="#L18693">18693</span>
<span id="L18694" rel="#L18694">18694</span>
<span id="L18695" rel="#L18695">18695</span>
<span id="L18696" rel="#L18696">18696</span>
<span id="L18697" rel="#L18697">18697</span>
<span id="L18698" rel="#L18698">18698</span>
<span id="L18699" rel="#L18699">18699</span>
<span id="L18700" rel="#L18700">18700</span>
<span id="L18701" rel="#L18701">18701</span>
<span id="L18702" rel="#L18702">18702</span>
<span id="L18703" rel="#L18703">18703</span>
<span id="L18704" rel="#L18704">18704</span>
<span id="L18705" rel="#L18705">18705</span>
<span id="L18706" rel="#L18706">18706</span>
<span id="L18707" rel="#L18707">18707</span>
<span id="L18708" rel="#L18708">18708</span>
<span id="L18709" rel="#L18709">18709</span>
<span id="L18710" rel="#L18710">18710</span>
<span id="L18711" rel="#L18711">18711</span>
<span id="L18712" rel="#L18712">18712</span>
<span id="L18713" rel="#L18713">18713</span>
<span id="L18714" rel="#L18714">18714</span>
<span id="L18715" rel="#L18715">18715</span>
<span id="L18716" rel="#L18716">18716</span>
<span id="L18717" rel="#L18717">18717</span>
<span id="L18718" rel="#L18718">18718</span>
<span id="L18719" rel="#L18719">18719</span>
<span id="L18720" rel="#L18720">18720</span>
<span id="L18721" rel="#L18721">18721</span>
<span id="L18722" rel="#L18722">18722</span>
<span id="L18723" rel="#L18723">18723</span>
<span id="L18724" rel="#L18724">18724</span>
<span id="L18725" rel="#L18725">18725</span>
<span id="L18726" rel="#L18726">18726</span>
<span id="L18727" rel="#L18727">18727</span>
<span id="L18728" rel="#L18728">18728</span>
<span id="L18729" rel="#L18729">18729</span>
<span id="L18730" rel="#L18730">18730</span>
<span id="L18731" rel="#L18731">18731</span>
<span id="L18732" rel="#L18732">18732</span>
<span id="L18733" rel="#L18733">18733</span>
<span id="L18734" rel="#L18734">18734</span>
<span id="L18735" rel="#L18735">18735</span>
<span id="L18736" rel="#L18736">18736</span>
<span id="L18737" rel="#L18737">18737</span>
<span id="L18738" rel="#L18738">18738</span>
<span id="L18739" rel="#L18739">18739</span>
<span id="L18740" rel="#L18740">18740</span>
<span id="L18741" rel="#L18741">18741</span>
<span id="L18742" rel="#L18742">18742</span>
<span id="L18743" rel="#L18743">18743</span>
<span id="L18744" rel="#L18744">18744</span>
<span id="L18745" rel="#L18745">18745</span>
<span id="L18746" rel="#L18746">18746</span>
<span id="L18747" rel="#L18747">18747</span>
<span id="L18748" rel="#L18748">18748</span>
<span id="L18749" rel="#L18749">18749</span>
<span id="L18750" rel="#L18750">18750</span>
<span id="L18751" rel="#L18751">18751</span>
<span id="L18752" rel="#L18752">18752</span>
<span id="L18753" rel="#L18753">18753</span>
<span id="L18754" rel="#L18754">18754</span>
<span id="L18755" rel="#L18755">18755</span>
<span id="L18756" rel="#L18756">18756</span>
<span id="L18757" rel="#L18757">18757</span>
<span id="L18758" rel="#L18758">18758</span>
<span id="L18759" rel="#L18759">18759</span>
<span id="L18760" rel="#L18760">18760</span>
<span id="L18761" rel="#L18761">18761</span>
<span id="L18762" rel="#L18762">18762</span>
<span id="L18763" rel="#L18763">18763</span>
<span id="L18764" rel="#L18764">18764</span>
<span id="L18765" rel="#L18765">18765</span>
<span id="L18766" rel="#L18766">18766</span>
<span id="L18767" rel="#L18767">18767</span>
<span id="L18768" rel="#L18768">18768</span>
<span id="L18769" rel="#L18769">18769</span>
<span id="L18770" rel="#L18770">18770</span>
<span id="L18771" rel="#L18771">18771</span>
<span id="L18772" rel="#L18772">18772</span>
<span id="L18773" rel="#L18773">18773</span>
<span id="L18774" rel="#L18774">18774</span>
<span id="L18775" rel="#L18775">18775</span>
<span id="L18776" rel="#L18776">18776</span>
<span id="L18777" rel="#L18777">18777</span>
<span id="L18778" rel="#L18778">18778</span>
<span id="L18779" rel="#L18779">18779</span>
<span id="L18780" rel="#L18780">18780</span>
<span id="L18781" rel="#L18781">18781</span>
<span id="L18782" rel="#L18782">18782</span>
<span id="L18783" rel="#L18783">18783</span>
<span id="L18784" rel="#L18784">18784</span>
<span id="L18785" rel="#L18785">18785</span>
<span id="L18786" rel="#L18786">18786</span>
<span id="L18787" rel="#L18787">18787</span>
<span id="L18788" rel="#L18788">18788</span>
<span id="L18789" rel="#L18789">18789</span>
<span id="L18790" rel="#L18790">18790</span>
<span id="L18791" rel="#L18791">18791</span>
<span id="L18792" rel="#L18792">18792</span>
<span id="L18793" rel="#L18793">18793</span>
<span id="L18794" rel="#L18794">18794</span>
<span id="L18795" rel="#L18795">18795</span>
<span id="L18796" rel="#L18796">18796</span>
<span id="L18797" rel="#L18797">18797</span>
<span id="L18798" rel="#L18798">18798</span>
<span id="L18799" rel="#L18799">18799</span>
<span id="L18800" rel="#L18800">18800</span>
<span id="L18801" rel="#L18801">18801</span>
<span id="L18802" rel="#L18802">18802</span>
<span id="L18803" rel="#L18803">18803</span>
<span id="L18804" rel="#L18804">18804</span>
<span id="L18805" rel="#L18805">18805</span>
<span id="L18806" rel="#L18806">18806</span>
<span id="L18807" rel="#L18807">18807</span>
<span id="L18808" rel="#L18808">18808</span>
<span id="L18809" rel="#L18809">18809</span>
<span id="L18810" rel="#L18810">18810</span>
<span id="L18811" rel="#L18811">18811</span>
<span id="L18812" rel="#L18812">18812</span>
<span id="L18813" rel="#L18813">18813</span>
<span id="L18814" rel="#L18814">18814</span>
<span id="L18815" rel="#L18815">18815</span>
<span id="L18816" rel="#L18816">18816</span>
<span id="L18817" rel="#L18817">18817</span>
<span id="L18818" rel="#L18818">18818</span>
<span id="L18819" rel="#L18819">18819</span>
<span id="L18820" rel="#L18820">18820</span>
<span id="L18821" rel="#L18821">18821</span>
<span id="L18822" rel="#L18822">18822</span>
<span id="L18823" rel="#L18823">18823</span>
<span id="L18824" rel="#L18824">18824</span>
<span id="L18825" rel="#L18825">18825</span>
<span id="L18826" rel="#L18826">18826</span>
<span id="L18827" rel="#L18827">18827</span>
<span id="L18828" rel="#L18828">18828</span>
<span id="L18829" rel="#L18829">18829</span>
<span id="L18830" rel="#L18830">18830</span>
<span id="L18831" rel="#L18831">18831</span>
<span id="L18832" rel="#L18832">18832</span>
<span id="L18833" rel="#L18833">18833</span>
<span id="L18834" rel="#L18834">18834</span>
<span id="L18835" rel="#L18835">18835</span>
<span id="L18836" rel="#L18836">18836</span>
<span id="L18837" rel="#L18837">18837</span>
<span id="L18838" rel="#L18838">18838</span>
<span id="L18839" rel="#L18839">18839</span>
<span id="L18840" rel="#L18840">18840</span>
<span id="L18841" rel="#L18841">18841</span>
<span id="L18842" rel="#L18842">18842</span>
<span id="L18843" rel="#L18843">18843</span>
<span id="L18844" rel="#L18844">18844</span>
<span id="L18845" rel="#L18845">18845</span>
<span id="L18846" rel="#L18846">18846</span>
<span id="L18847" rel="#L18847">18847</span>
<span id="L18848" rel="#L18848">18848</span>
<span id="L18849" rel="#L18849">18849</span>
<span id="L18850" rel="#L18850">18850</span>
<span id="L18851" rel="#L18851">18851</span>
<span id="L18852" rel="#L18852">18852</span>
<span id="L18853" rel="#L18853">18853</span>
<span id="L18854" rel="#L18854">18854</span>
<span id="L18855" rel="#L18855">18855</span>
<span id="L18856" rel="#L18856">18856</span>
<span id="L18857" rel="#L18857">18857</span>
<span id="L18858" rel="#L18858">18858</span>
<span id="L18859" rel="#L18859">18859</span>
<span id="L18860" rel="#L18860">18860</span>
<span id="L18861" rel="#L18861">18861</span>
<span id="L18862" rel="#L18862">18862</span>
<span id="L18863" rel="#L18863">18863</span>
<span id="L18864" rel="#L18864">18864</span>
<span id="L18865" rel="#L18865">18865</span>
<span id="L18866" rel="#L18866">18866</span>
<span id="L18867" rel="#L18867">18867</span>
<span id="L18868" rel="#L18868">18868</span>
<span id="L18869" rel="#L18869">18869</span>
<span id="L18870" rel="#L18870">18870</span>
<span id="L18871" rel="#L18871">18871</span>
<span id="L18872" rel="#L18872">18872</span>
<span id="L18873" rel="#L18873">18873</span>
<span id="L18874" rel="#L18874">18874</span>
<span id="L18875" rel="#L18875">18875</span>
<span id="L18876" rel="#L18876">18876</span>
<span id="L18877" rel="#L18877">18877</span>
<span id="L18878" rel="#L18878">18878</span>
<span id="L18879" rel="#L18879">18879</span>
<span id="L18880" rel="#L18880">18880</span>
<span id="L18881" rel="#L18881">18881</span>
<span id="L18882" rel="#L18882">18882</span>
<span id="L18883" rel="#L18883">18883</span>
<span id="L18884" rel="#L18884">18884</span>
<span id="L18885" rel="#L18885">18885</span>
<span id="L18886" rel="#L18886">18886</span>
<span id="L18887" rel="#L18887">18887</span>
<span id="L18888" rel="#L18888">18888</span>
<span id="L18889" rel="#L18889">18889</span>
<span id="L18890" rel="#L18890">18890</span>
<span id="L18891" rel="#L18891">18891</span>
<span id="L18892" rel="#L18892">18892</span>
<span id="L18893" rel="#L18893">18893</span>
<span id="L18894" rel="#L18894">18894</span>
<span id="L18895" rel="#L18895">18895</span>
<span id="L18896" rel="#L18896">18896</span>
<span id="L18897" rel="#L18897">18897</span>
<span id="L18898" rel="#L18898">18898</span>
<span id="L18899" rel="#L18899">18899</span>
<span id="L18900" rel="#L18900">18900</span>
<span id="L18901" rel="#L18901">18901</span>
<span id="L18902" rel="#L18902">18902</span>
<span id="L18903" rel="#L18903">18903</span>
<span id="L18904" rel="#L18904">18904</span>
<span id="L18905" rel="#L18905">18905</span>
<span id="L18906" rel="#L18906">18906</span>
<span id="L18907" rel="#L18907">18907</span>
<span id="L18908" rel="#L18908">18908</span>
<span id="L18909" rel="#L18909">18909</span>
<span id="L18910" rel="#L18910">18910</span>
<span id="L18911" rel="#L18911">18911</span>
<span id="L18912" rel="#L18912">18912</span>
<span id="L18913" rel="#L18913">18913</span>
<span id="L18914" rel="#L18914">18914</span>
<span id="L18915" rel="#L18915">18915</span>
<span id="L18916" rel="#L18916">18916</span>
<span id="L18917" rel="#L18917">18917</span>
<span id="L18918" rel="#L18918">18918</span>
<span id="L18919" rel="#L18919">18919</span>
<span id="L18920" rel="#L18920">18920</span>
<span id="L18921" rel="#L18921">18921</span>
<span id="L18922" rel="#L18922">18922</span>
<span id="L18923" rel="#L18923">18923</span>
<span id="L18924" rel="#L18924">18924</span>
<span id="L18925" rel="#L18925">18925</span>
<span id="L18926" rel="#L18926">18926</span>
<span id="L18927" rel="#L18927">18927</span>
<span id="L18928" rel="#L18928">18928</span>
<span id="L18929" rel="#L18929">18929</span>
<span id="L18930" rel="#L18930">18930</span>
<span id="L18931" rel="#L18931">18931</span>
<span id="L18932" rel="#L18932">18932</span>
<span id="L18933" rel="#L18933">18933</span>
<span id="L18934" rel="#L18934">18934</span>
<span id="L18935" rel="#L18935">18935</span>
<span id="L18936" rel="#L18936">18936</span>
<span id="L18937" rel="#L18937">18937</span>
<span id="L18938" rel="#L18938">18938</span>
<span id="L18939" rel="#L18939">18939</span>
<span id="L18940" rel="#L18940">18940</span>
<span id="L18941" rel="#L18941">18941</span>
<span id="L18942" rel="#L18942">18942</span>
<span id="L18943" rel="#L18943">18943</span>
<span id="L18944" rel="#L18944">18944</span>
<span id="L18945" rel="#L18945">18945</span>
<span id="L18946" rel="#L18946">18946</span>
<span id="L18947" rel="#L18947">18947</span>
<span id="L18948" rel="#L18948">18948</span>
<span id="L18949" rel="#L18949">18949</span>
<span id="L18950" rel="#L18950">18950</span>
<span id="L18951" rel="#L18951">18951</span>
<span id="L18952" rel="#L18952">18952</span>
<span id="L18953" rel="#L18953">18953</span>
<span id="L18954" rel="#L18954">18954</span>
<span id="L18955" rel="#L18955">18955</span>
<span id="L18956" rel="#L18956">18956</span>
<span id="L18957" rel="#L18957">18957</span>
<span id="L18958" rel="#L18958">18958</span>
<span id="L18959" rel="#L18959">18959</span>
<span id="L18960" rel="#L18960">18960</span>
<span id="L18961" rel="#L18961">18961</span>
<span id="L18962" rel="#L18962">18962</span>
<span id="L18963" rel="#L18963">18963</span>
<span id="L18964" rel="#L18964">18964</span>
<span id="L18965" rel="#L18965">18965</span>
<span id="L18966" rel="#L18966">18966</span>
<span id="L18967" rel="#L18967">18967</span>
<span id="L18968" rel="#L18968">18968</span>
<span id="L18969" rel="#L18969">18969</span>
<span id="L18970" rel="#L18970">18970</span>
<span id="L18971" rel="#L18971">18971</span>
<span id="L18972" rel="#L18972">18972</span>
<span id="L18973" rel="#L18973">18973</span>
<span id="L18974" rel="#L18974">18974</span>
<span id="L18975" rel="#L18975">18975</span>
<span id="L18976" rel="#L18976">18976</span>
<span id="L18977" rel="#L18977">18977</span>
<span id="L18978" rel="#L18978">18978</span>
<span id="L18979" rel="#L18979">18979</span>
<span id="L18980" rel="#L18980">18980</span>
<span id="L18981" rel="#L18981">18981</span>
<span id="L18982" rel="#L18982">18982</span>
<span id="L18983" rel="#L18983">18983</span>
<span id="L18984" rel="#L18984">18984</span>
<span id="L18985" rel="#L18985">18985</span>
<span id="L18986" rel="#L18986">18986</span>
<span id="L18987" rel="#L18987">18987</span>
<span id="L18988" rel="#L18988">18988</span>
<span id="L18989" rel="#L18989">18989</span>
<span id="L18990" rel="#L18990">18990</span>
<span id="L18991" rel="#L18991">18991</span>
<span id="L18992" rel="#L18992">18992</span>
<span id="L18993" rel="#L18993">18993</span>
<span id="L18994" rel="#L18994">18994</span>
<span id="L18995" rel="#L18995">18995</span>
<span id="L18996" rel="#L18996">18996</span>
<span id="L18997" rel="#L18997">18997</span>
<span id="L18998" rel="#L18998">18998</span>
<span id="L18999" rel="#L18999">18999</span>
<span id="L19000" rel="#L19000">19000</span>
<span id="L19001" rel="#L19001">19001</span>
<span id="L19002" rel="#L19002">19002</span>
<span id="L19003" rel="#L19003">19003</span>
<span id="L19004" rel="#L19004">19004</span>
<span id="L19005" rel="#L19005">19005</span>
<span id="L19006" rel="#L19006">19006</span>
<span id="L19007" rel="#L19007">19007</span>
<span id="L19008" rel="#L19008">19008</span>
<span id="L19009" rel="#L19009">19009</span>
<span id="L19010" rel="#L19010">19010</span>
<span id="L19011" rel="#L19011">19011</span>
<span id="L19012" rel="#L19012">19012</span>
<span id="L19013" rel="#L19013">19013</span>
<span id="L19014" rel="#L19014">19014</span>
<span id="L19015" rel="#L19015">19015</span>
<span id="L19016" rel="#L19016">19016</span>
<span id="L19017" rel="#L19017">19017</span>
<span id="L19018" rel="#L19018">19018</span>
<span id="L19019" rel="#L19019">19019</span>
<span id="L19020" rel="#L19020">19020</span>
<span id="L19021" rel="#L19021">19021</span>
<span id="L19022" rel="#L19022">19022</span>
<span id="L19023" rel="#L19023">19023</span>
<span id="L19024" rel="#L19024">19024</span>
<span id="L19025" rel="#L19025">19025</span>
<span id="L19026" rel="#L19026">19026</span>
<span id="L19027" rel="#L19027">19027</span>
<span id="L19028" rel="#L19028">19028</span>
<span id="L19029" rel="#L19029">19029</span>
<span id="L19030" rel="#L19030">19030</span>
<span id="L19031" rel="#L19031">19031</span>
<span id="L19032" rel="#L19032">19032</span>
<span id="L19033" rel="#L19033">19033</span>
<span id="L19034" rel="#L19034">19034</span>
<span id="L19035" rel="#L19035">19035</span>
<span id="L19036" rel="#L19036">19036</span>
<span id="L19037" rel="#L19037">19037</span>
<span id="L19038" rel="#L19038">19038</span>
<span id="L19039" rel="#L19039">19039</span>
<span id="L19040" rel="#L19040">19040</span>
<span id="L19041" rel="#L19041">19041</span>
<span id="L19042" rel="#L19042">19042</span>
<span id="L19043" rel="#L19043">19043</span>
<span id="L19044" rel="#L19044">19044</span>
<span id="L19045" rel="#L19045">19045</span>
<span id="L19046" rel="#L19046">19046</span>
<span id="L19047" rel="#L19047">19047</span>
<span id="L19048" rel="#L19048">19048</span>
<span id="L19049" rel="#L19049">19049</span>
<span id="L19050" rel="#L19050">19050</span>
<span id="L19051" rel="#L19051">19051</span>
<span id="L19052" rel="#L19052">19052</span>
<span id="L19053" rel="#L19053">19053</span>
<span id="L19054" rel="#L19054">19054</span>
<span id="L19055" rel="#L19055">19055</span>
<span id="L19056" rel="#L19056">19056</span>
<span id="L19057" rel="#L19057">19057</span>
<span id="L19058" rel="#L19058">19058</span>
<span id="L19059" rel="#L19059">19059</span>
<span id="L19060" rel="#L19060">19060</span>
<span id="L19061" rel="#L19061">19061</span>
<span id="L19062" rel="#L19062">19062</span>
<span id="L19063" rel="#L19063">19063</span>
<span id="L19064" rel="#L19064">19064</span>
<span id="L19065" rel="#L19065">19065</span>
<span id="L19066" rel="#L19066">19066</span>
<span id="L19067" rel="#L19067">19067</span>
<span id="L19068" rel="#L19068">19068</span>
<span id="L19069" rel="#L19069">19069</span>
<span id="L19070" rel="#L19070">19070</span>
<span id="L19071" rel="#L19071">19071</span>
<span id="L19072" rel="#L19072">19072</span>
<span id="L19073" rel="#L19073">19073</span>
<span id="L19074" rel="#L19074">19074</span>
<span id="L19075" rel="#L19075">19075</span>
<span id="L19076" rel="#L19076">19076</span>
<span id="L19077" rel="#L19077">19077</span>
<span id="L19078" rel="#L19078">19078</span>
<span id="L19079" rel="#L19079">19079</span>
<span id="L19080" rel="#L19080">19080</span>
<span id="L19081" rel="#L19081">19081</span>
<span id="L19082" rel="#L19082">19082</span>
<span id="L19083" rel="#L19083">19083</span>
<span id="L19084" rel="#L19084">19084</span>
<span id="L19085" rel="#L19085">19085</span>
<span id="L19086" rel="#L19086">19086</span>
<span id="L19087" rel="#L19087">19087</span>
<span id="L19088" rel="#L19088">19088</span>
<span id="L19089" rel="#L19089">19089</span>
<span id="L19090" rel="#L19090">19090</span>
<span id="L19091" rel="#L19091">19091</span>
<span id="L19092" rel="#L19092">19092</span>
<span id="L19093" rel="#L19093">19093</span>
<span id="L19094" rel="#L19094">19094</span>
<span id="L19095" rel="#L19095">19095</span>
<span id="L19096" rel="#L19096">19096</span>
<span id="L19097" rel="#L19097">19097</span>
<span id="L19098" rel="#L19098">19098</span>
<span id="L19099" rel="#L19099">19099</span>
<span id="L19100" rel="#L19100">19100</span>
<span id="L19101" rel="#L19101">19101</span>
<span id="L19102" rel="#L19102">19102</span>
<span id="L19103" rel="#L19103">19103</span>
<span id="L19104" rel="#L19104">19104</span>
<span id="L19105" rel="#L19105">19105</span>
<span id="L19106" rel="#L19106">19106</span>
<span id="L19107" rel="#L19107">19107</span>
<span id="L19108" rel="#L19108">19108</span>
<span id="L19109" rel="#L19109">19109</span>
<span id="L19110" rel="#L19110">19110</span>
<span id="L19111" rel="#L19111">19111</span>
<span id="L19112" rel="#L19112">19112</span>
<span id="L19113" rel="#L19113">19113</span>
<span id="L19114" rel="#L19114">19114</span>
<span id="L19115" rel="#L19115">19115</span>
<span id="L19116" rel="#L19116">19116</span>
<span id="L19117" rel="#L19117">19117</span>
<span id="L19118" rel="#L19118">19118</span>
<span id="L19119" rel="#L19119">19119</span>
<span id="L19120" rel="#L19120">19120</span>
<span id="L19121" rel="#L19121">19121</span>
<span id="L19122" rel="#L19122">19122</span>
<span id="L19123" rel="#L19123">19123</span>
<span id="L19124" rel="#L19124">19124</span>
<span id="L19125" rel="#L19125">19125</span>
<span id="L19126" rel="#L19126">19126</span>
<span id="L19127" rel="#L19127">19127</span>
<span id="L19128" rel="#L19128">19128</span>
<span id="L19129" rel="#L19129">19129</span>
<span id="L19130" rel="#L19130">19130</span>
<span id="L19131" rel="#L19131">19131</span>
<span id="L19132" rel="#L19132">19132</span>
<span id="L19133" rel="#L19133">19133</span>
<span id="L19134" rel="#L19134">19134</span>
<span id="L19135" rel="#L19135">19135</span>
<span id="L19136" rel="#L19136">19136</span>
<span id="L19137" rel="#L19137">19137</span>
<span id="L19138" rel="#L19138">19138</span>
<span id="L19139" rel="#L19139">19139</span>
<span id="L19140" rel="#L19140">19140</span>
<span id="L19141" rel="#L19141">19141</span>
<span id="L19142" rel="#L19142">19142</span>
<span id="L19143" rel="#L19143">19143</span>
<span id="L19144" rel="#L19144">19144</span>
<span id="L19145" rel="#L19145">19145</span>
<span id="L19146" rel="#L19146">19146</span>
<span id="L19147" rel="#L19147">19147</span>
<span id="L19148" rel="#L19148">19148</span>
<span id="L19149" rel="#L19149">19149</span>
<span id="L19150" rel="#L19150">19150</span>
<span id="L19151" rel="#L19151">19151</span>
<span id="L19152" rel="#L19152">19152</span>
<span id="L19153" rel="#L19153">19153</span>
<span id="L19154" rel="#L19154">19154</span>
<span id="L19155" rel="#L19155">19155</span>
<span id="L19156" rel="#L19156">19156</span>
<span id="L19157" rel="#L19157">19157</span>
<span id="L19158" rel="#L19158">19158</span>
<span id="L19159" rel="#L19159">19159</span>
<span id="L19160" rel="#L19160">19160</span>
<span id="L19161" rel="#L19161">19161</span>
<span id="L19162" rel="#L19162">19162</span>
<span id="L19163" rel="#L19163">19163</span>
<span id="L19164" rel="#L19164">19164</span>
<span id="L19165" rel="#L19165">19165</span>
<span id="L19166" rel="#L19166">19166</span>
<span id="L19167" rel="#L19167">19167</span>
<span id="L19168" rel="#L19168">19168</span>
<span id="L19169" rel="#L19169">19169</span>
<span id="L19170" rel="#L19170">19170</span>
<span id="L19171" rel="#L19171">19171</span>
<span id="L19172" rel="#L19172">19172</span>
<span id="L19173" rel="#L19173">19173</span>
<span id="L19174" rel="#L19174">19174</span>
<span id="L19175" rel="#L19175">19175</span>
<span id="L19176" rel="#L19176">19176</span>
<span id="L19177" rel="#L19177">19177</span>
<span id="L19178" rel="#L19178">19178</span>
<span id="L19179" rel="#L19179">19179</span>
<span id="L19180" rel="#L19180">19180</span>
<span id="L19181" rel="#L19181">19181</span>
<span id="L19182" rel="#L19182">19182</span>
<span id="L19183" rel="#L19183">19183</span>
<span id="L19184" rel="#L19184">19184</span>
<span id="L19185" rel="#L19185">19185</span>
<span id="L19186" rel="#L19186">19186</span>
<span id="L19187" rel="#L19187">19187</span>
<span id="L19188" rel="#L19188">19188</span>
<span id="L19189" rel="#L19189">19189</span>
<span id="L19190" rel="#L19190">19190</span>
<span id="L19191" rel="#L19191">19191</span>
<span id="L19192" rel="#L19192">19192</span>
<span id="L19193" rel="#L19193">19193</span>
<span id="L19194" rel="#L19194">19194</span>
<span id="L19195" rel="#L19195">19195</span>
<span id="L19196" rel="#L19196">19196</span>
<span id="L19197" rel="#L19197">19197</span>
<span id="L19198" rel="#L19198">19198</span>
<span id="L19199" rel="#L19199">19199</span>
<span id="L19200" rel="#L19200">19200</span>
<span id="L19201" rel="#L19201">19201</span>
<span id="L19202" rel="#L19202">19202</span>
<span id="L19203" rel="#L19203">19203</span>
<span id="L19204" rel="#L19204">19204</span>
<span id="L19205" rel="#L19205">19205</span>
<span id="L19206" rel="#L19206">19206</span>
<span id="L19207" rel="#L19207">19207</span>
<span id="L19208" rel="#L19208">19208</span>
<span id="L19209" rel="#L19209">19209</span>
<span id="L19210" rel="#L19210">19210</span>
<span id="L19211" rel="#L19211">19211</span>
<span id="L19212" rel="#L19212">19212</span>
<span id="L19213" rel="#L19213">19213</span>
<span id="L19214" rel="#L19214">19214</span>
<span id="L19215" rel="#L19215">19215</span>
<span id="L19216" rel="#L19216">19216</span>
<span id="L19217" rel="#L19217">19217</span>
<span id="L19218" rel="#L19218">19218</span>
<span id="L19219" rel="#L19219">19219</span>
<span id="L19220" rel="#L19220">19220</span>
<span id="L19221" rel="#L19221">19221</span>
<span id="L19222" rel="#L19222">19222</span>
<span id="L19223" rel="#L19223">19223</span>
<span id="L19224" rel="#L19224">19224</span>
<span id="L19225" rel="#L19225">19225</span>
<span id="L19226" rel="#L19226">19226</span>
<span id="L19227" rel="#L19227">19227</span>
<span id="L19228" rel="#L19228">19228</span>
<span id="L19229" rel="#L19229">19229</span>
<span id="L19230" rel="#L19230">19230</span>
<span id="L19231" rel="#L19231">19231</span>
<span id="L19232" rel="#L19232">19232</span>
<span id="L19233" rel="#L19233">19233</span>
<span id="L19234" rel="#L19234">19234</span>
<span id="L19235" rel="#L19235">19235</span>
<span id="L19236" rel="#L19236">19236</span>
<span id="L19237" rel="#L19237">19237</span>
<span id="L19238" rel="#L19238">19238</span>
<span id="L19239" rel="#L19239">19239</span>
<span id="L19240" rel="#L19240">19240</span>
<span id="L19241" rel="#L19241">19241</span>
<span id="L19242" rel="#L19242">19242</span>
<span id="L19243" rel="#L19243">19243</span>
<span id="L19244" rel="#L19244">19244</span>
<span id="L19245" rel="#L19245">19245</span>
<span id="L19246" rel="#L19246">19246</span>
<span id="L19247" rel="#L19247">19247</span>
<span id="L19248" rel="#L19248">19248</span>
<span id="L19249" rel="#L19249">19249</span>
<span id="L19250" rel="#L19250">19250</span>
<span id="L19251" rel="#L19251">19251</span>
<span id="L19252" rel="#L19252">19252</span>
<span id="L19253" rel="#L19253">19253</span>
<span id="L19254" rel="#L19254">19254</span>
<span id="L19255" rel="#L19255">19255</span>
<span id="L19256" rel="#L19256">19256</span>
<span id="L19257" rel="#L19257">19257</span>
<span id="L19258" rel="#L19258">19258</span>
<span id="L19259" rel="#L19259">19259</span>
<span id="L19260" rel="#L19260">19260</span>
<span id="L19261" rel="#L19261">19261</span>
<span id="L19262" rel="#L19262">19262</span>
<span id="L19263" rel="#L19263">19263</span>
<span id="L19264" rel="#L19264">19264</span>
<span id="L19265" rel="#L19265">19265</span>
<span id="L19266" rel="#L19266">19266</span>
<span id="L19267" rel="#L19267">19267</span>
<span id="L19268" rel="#L19268">19268</span>
<span id="L19269" rel="#L19269">19269</span>
<span id="L19270" rel="#L19270">19270</span>
<span id="L19271" rel="#L19271">19271</span>
<span id="L19272" rel="#L19272">19272</span>
<span id="L19273" rel="#L19273">19273</span>
<span id="L19274" rel="#L19274">19274</span>
<span id="L19275" rel="#L19275">19275</span>
<span id="L19276" rel="#L19276">19276</span>
<span id="L19277" rel="#L19277">19277</span>
<span id="L19278" rel="#L19278">19278</span>
<span id="L19279" rel="#L19279">19279</span>
<span id="L19280" rel="#L19280">19280</span>
<span id="L19281" rel="#L19281">19281</span>
<span id="L19282" rel="#L19282">19282</span>
<span id="L19283" rel="#L19283">19283</span>
<span id="L19284" rel="#L19284">19284</span>
<span id="L19285" rel="#L19285">19285</span>
<span id="L19286" rel="#L19286">19286</span>
<span id="L19287" rel="#L19287">19287</span>
<span id="L19288" rel="#L19288">19288</span>
<span id="L19289" rel="#L19289">19289</span>
<span id="L19290" rel="#L19290">19290</span>
<span id="L19291" rel="#L19291">19291</span>
<span id="L19292" rel="#L19292">19292</span>
<span id="L19293" rel="#L19293">19293</span>
<span id="L19294" rel="#L19294">19294</span>
<span id="L19295" rel="#L19295">19295</span>
<span id="L19296" rel="#L19296">19296</span>
<span id="L19297" rel="#L19297">19297</span>
<span id="L19298" rel="#L19298">19298</span>
<span id="L19299" rel="#L19299">19299</span>
<span id="L19300" rel="#L19300">19300</span>
<span id="L19301" rel="#L19301">19301</span>
<span id="L19302" rel="#L19302">19302</span>
<span id="L19303" rel="#L19303">19303</span>
<span id="L19304" rel="#L19304">19304</span>
<span id="L19305" rel="#L19305">19305</span>
<span id="L19306" rel="#L19306">19306</span>
<span id="L19307" rel="#L19307">19307</span>
<span id="L19308" rel="#L19308">19308</span>
<span id="L19309" rel="#L19309">19309</span>
<span id="L19310" rel="#L19310">19310</span>
<span id="L19311" rel="#L19311">19311</span>
<span id="L19312" rel="#L19312">19312</span>
<span id="L19313" rel="#L19313">19313</span>
<span id="L19314" rel="#L19314">19314</span>
<span id="L19315" rel="#L19315">19315</span>
<span id="L19316" rel="#L19316">19316</span>
<span id="L19317" rel="#L19317">19317</span>
<span id="L19318" rel="#L19318">19318</span>
<span id="L19319" rel="#L19319">19319</span>
<span id="L19320" rel="#L19320">19320</span>
<span id="L19321" rel="#L19321">19321</span>
<span id="L19322" rel="#L19322">19322</span>
<span id="L19323" rel="#L19323">19323</span>
<span id="L19324" rel="#L19324">19324</span>
<span id="L19325" rel="#L19325">19325</span>
<span id="L19326" rel="#L19326">19326</span>
<span id="L19327" rel="#L19327">19327</span>
<span id="L19328" rel="#L19328">19328</span>
<span id="L19329" rel="#L19329">19329</span>
<span id="L19330" rel="#L19330">19330</span>
<span id="L19331" rel="#L19331">19331</span>
<span id="L19332" rel="#L19332">19332</span>
<span id="L19333" rel="#L19333">19333</span>

            </td>
            <td class="blob-line-code"><div class="code-body highlight"><pre><div class='line' id='LC1'>/*! jQuery v1.7.2 jquery.com | jquery.org/license */</div><div class='line' id='LC2'><br/></div><div class='line' id='LC3'>(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cu(a){if(!cj[a]){var b=c.body,d=f(&quot;&lt;&quot;+a+&quot;&gt;&quot;).appendTo(b),e=d.css(&quot;display&quot;);d.remove();if(e===&quot;none&quot;||e===&quot;&quot;){ck||(ck=c.createElement(&quot;iframe&quot;),ck.frameBorder=ck.width=ck.height=0),b.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write((f.support.boxModel?&quot;&lt;!doctype html&gt;&quot;:&quot;&quot;)+&quot;&lt;html&gt;&lt;body&gt;&quot;),cl.close();d=cl.createElement(a),cl.body.appendChild(d),e=f.css(d,&quot;display&quot;),b.removeChild(ck)}cj[a]=e}return cj[a]}function ct(a,b){var c={};f.each(cp.concat.apply([],cp.slice(0,b)),function(){c[this]=a});return c}function cs(){cq=b}function cr(){setTimeout(cs,0);return cq=f.now()}function ci(){try{return new a.ActiveXObject(&quot;Microsoft.XMLHTTP&quot;)}catch(b){}}function ch(){try{return new a.XMLHttpRequest}catch(b){}}function cb(a,c){a.dataFilter&amp;&amp;(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g&lt;i;g++){if(g===1)for(h in a.converters)typeof h==&quot;string&quot;&amp;&amp;(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k===&quot;*&quot;)k=l;else if(l!==&quot;*&quot;&amp;&amp;l!==k){m=l+&quot; &quot;+k,n=e[m]||e[&quot;* &quot;+k];if(!n){p=b;for(o in e){j=o.split(&quot; &quot;);if(j[0]===l||j[0]===&quot;*&quot;){p=e[j[1]+&quot; &quot;+k];if(p){o=e[o],o===!0?n=p:p===!0&amp;&amp;(n=o);break}}}}!n&amp;&amp;!p&amp;&amp;f.error(&quot;No conversion from &quot;+m.replace(&quot; &quot;,&quot; to &quot;)),n!==!0&amp;&amp;(c=n?n(c):p(o(c)))}}return c}function ca(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&amp;&amp;(c[g[i]]=d[i]);while(f[0]===&quot;*&quot;)f.shift(),h===b&amp;&amp;(h=a.mimeType||c.getResponseHeader(&quot;content-type&quot;));if(h)for(i in e)if(e[i]&amp;&amp;e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+&quot; &quot;+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&amp;&amp;f.unshift(j);return d[j]}}function b_(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bD.test(a)?d(a,e):b_(a+&quot;[&quot;+(typeof e==&quot;object&quot;?b:&quot;&quot;)+&quot;]&quot;,e,c,d)});else if(!c&amp;&amp;f.type(b)===&quot;object&quot;)for(var e in b)b_(a+&quot;[&quot;+e+&quot;]&quot;,b[e],c,d);else d(a,b)}function b$(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&amp;&amp;((g[d]?a:e||(e={}))[d]=c[d]);e&amp;&amp;f.extend(!0,a,e)}function bZ(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bS,l;for(;i&lt;j&amp;&amp;(k||!l);i++)l=h[i](c,d,e),typeof l==&quot;string&quot;&amp;&amp;(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bZ(a,c,d,e,l,g)));(k||!l)&amp;&amp;!g[&quot;*&quot;]&amp;&amp;(l=bZ(a,c,d,e,&quot;*&quot;,g));return l}function bY(a){return function(b,c){typeof b!=&quot;string&quot;&amp;&amp;(c=b,b=&quot;*&quot;);if(f.isFunction(c)){var d=b.toLowerCase().split(bO),e=0,g=d.length,h,i,j;for(;e&lt;g;e++)h=d[e],j=/^\+/.test(h),j&amp;&amp;(h=h.substr(1)||&quot;*&quot;),i=a[h]=a[h]||[],i[j?&quot;unshift&quot;:&quot;push&quot;](c)}}}function bB(a,b,c){var d=b===&quot;width&quot;?a.offsetWidth:a.offsetHeight,e=b===&quot;width&quot;?1:0,g=4;if(d&gt;0){if(c!==&quot;border&quot;)for(;e&lt;g;e+=2)c||(d-=parseFloat(f.css(a,&quot;padding&quot;+bx[e]))||0),c===&quot;margin&quot;?d+=parseFloat(f.css(a,c+bx[e]))||0:d-=parseFloat(f.css(a,&quot;border&quot;+bx[e]+&quot;Width&quot;))||0;return d+&quot;px&quot;}d=by(a,b);if(d&lt;0||d==null)d=a.style[b];if(bt.test(d))return d;d=parseFloat(d)||0;if(c)for(;e&lt;g;e+=2)d+=parseFloat(f.css(a,&quot;padding&quot;+bx[e]))||0,c!==&quot;padding&quot;&amp;&amp;(d+=parseFloat(f.css(a,&quot;border&quot;+bx[e]+&quot;Width&quot;))||0),c===&quot;margin&quot;&amp;&amp;(d+=parseFloat(f.css(a,c+bx[e]))||0);return d+&quot;px&quot;}function bo(a){var b=c.createElement(&quot;div&quot;);bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||&quot;&quot;).toLowerCase();b===&quot;input&quot;?bm(a):b!==&quot;script&quot;&amp;&amp;typeof a.getElementsByTagName!=&quot;undefined&quot;&amp;&amp;f.grep(a.getElementsByTagName(&quot;input&quot;),bm)}function bm(a){if(a.type===&quot;checkbox&quot;||a.type===&quot;radio&quot;)a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!=&quot;undefined&quot;?a.getElementsByTagName(&quot;*&quot;):typeof a.querySelectorAll!=&quot;undefined&quot;?a.querySelectorAll(&quot;*&quot;):[]}function bk(a,b){var c;b.nodeType===1&amp;&amp;(b.clearAttributes&amp;&amp;b.clearAttributes(),b.mergeAttributes&amp;&amp;b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c===&quot;object&quot;?b.outerHTML=a.outerHTML:c!==&quot;input&quot;||a.type!==&quot;checkbox&quot;&amp;&amp;a.type!==&quot;radio&quot;?c===&quot;option&quot;?b.selected=a.defaultSelected:c===&quot;input&quot;||c===&quot;textarea&quot;?b.defaultValue=a.defaultValue:c===&quot;script&quot;&amp;&amp;b.text!==a.text&amp;&amp;(b.text=a.text):(a.checked&amp;&amp;(b.defaultChecked=b.checked=a.checked),b.value!==a.value&amp;&amp;(b.value=a.value)),b.removeAttribute(f.expando),b.removeAttribute(&quot;_submit_attached&quot;),b.removeAttribute(&quot;_change_attached&quot;))}function bj(a,b){if(b.nodeType===1&amp;&amp;!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d&lt;e;d++)f.event.add(b,c,i[c][d])}h.data&amp;&amp;(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,&quot;table&quot;)?a.getElementsByTagName(&quot;tbody&quot;)[0]||a.appendChild(a.ownerDocument.createElement(&quot;tbody&quot;)):a}function U(a){var b=V.split(&quot;|&quot;),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b==&quot;string&quot;){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)&gt;=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+&quot;defer&quot;,e=b+&quot;queue&quot;,g=b+&quot;mark&quot;,h=f._data(a,d);h&amp;&amp;(c===&quot;queue&quot;||!f._data(a,e))&amp;&amp;(c===&quot;mark&quot;||!f._data(a,g))&amp;&amp;setTimeout(function(){!f._data(a,e)&amp;&amp;!f._data(a,g)&amp;&amp;(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b===&quot;data&quot;&amp;&amp;f.isEmptyObject(a[b]))continue;if(b!==&quot;toJSON&quot;)return!1}return!0}function l(a,c,d){if(d===b&amp;&amp;a.nodeType===1){var e=&quot;data-&quot;+c.replace(k,&quot;-$1&quot;).toLowerCase();d=a.getAttribute(e);if(typeof d==&quot;string&quot;){try{d=d===&quot;true&quot;?!0:d===&quot;false&quot;?!1:d===&quot;null&quot;?null:f.isNumeric(d)?+d:j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(/\s+/);for(c=0,d=a.length;c&lt;d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll(&quot;left&quot;)}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=/^(?:[^#&lt;]*(&lt;[\w\W]+&gt;)[^&gt;]*$|#([\w\-]*)$)/,j=/\S/,k=/^\s+/,l=/\s+$/,m=/^&lt;(\w+)\s*\/?&gt;(?:&lt;\/\1&gt;)?$/,n=/^[\],:{}\s]*$/,o=/\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g,p=/&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,q=/(?:^|:|,)(?:\s*\[)+/g,r=/(webkit)[ \/]([\w.]+)/,s=/(opera)(?:.*version)?[ \/]([\w.]+)/,t=/(msie) ([\w.]+)/,u=/(mozilla)(?:.*? rv:([\w.]+))?/,v=/-([a-z]|[0-9])/ig,w=/^-ms-/,x=function(a,b){return(b+&quot;&quot;).toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a===&quot;body&quot;&amp;&amp;!d&amp;&amp;c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a==&quot;string&quot;){a.charAt(0)!==&quot;&lt;&quot;||a.charAt(a.length-1)!==&quot;&gt;&quot;||a.length&lt;3?g=i.exec(a):g=[null,a,null];if(g&amp;&amp;(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&amp;&amp;h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&amp;&amp;(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:&quot;&quot;,jquery:&quot;1.7.2&quot;,length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a&lt;0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b===&quot;find&quot;?d.selector=this.selector+(this.selector?&quot; &quot;:&quot;&quot;)+c:b&amp;&amp;(d.selector=this.selector+&quot;.&quot;+b+&quot;(&quot;+c+&quot;)&quot;);return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),&quot;slice&quot;,F.call(arguments).join(&quot;,&quot;))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i==&quot;boolean&quot;&amp;&amp;(l=i,i=arguments[1]||{},j=2),typeof i!=&quot;object&quot;&amp;&amp;!e.isFunction(i)&amp;&amp;(i={}),k===j&amp;&amp;(i=this,--j);for(;j&lt;k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&amp;&amp;f&amp;&amp;(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&amp;&amp;e.isArray(d)?d:[]):h=d&amp;&amp;e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&amp;&amp;(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&amp;&amp;(a.$=g),b&amp;&amp;a.jQuery===e&amp;&amp;(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&amp;&amp;!--e.readyWait||a!==!0&amp;&amp;!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&amp;&amp;--e.readyWait&gt;0)return;A.fireWith(c,[e]),e.fn.trigger&amp;&amp;e(c).trigger(&quot;ready&quot;).off(&quot;ready&quot;)}},bindReady:function(){if(!A){A=e.Callbacks(&quot;once memory&quot;);if(c.readyState===&quot;complete&quot;)return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener(&quot;DOMContentLoaded&quot;,B,!1),a.addEventListener(&quot;load&quot;,e.ready,!1);else if(c.attachEvent){c.attachEvent(&quot;onreadystatechange&quot;,B),a.attachEvent(&quot;onload&quot;,e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&amp;&amp;b&amp;&amp;J()}}},isFunction:function(a){return e.type(a)===&quot;function&quot;},isArray:Array.isArray||function(a){return e.type(a)===&quot;array&quot;},isWindow:function(a){return a!=null&amp;&amp;a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&amp;&amp;isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||&quot;object&quot;},isPlainObject:function(a){if(!a||e.type(a)!==&quot;object&quot;||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&amp;&amp;!D.call(a,&quot;constructor&quot;)&amp;&amp;!D.call(a.constructor.prototype,&quot;isPrototypeOf&quot;))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!=&quot;string&quot;||!b)return null;b=e.trim(b);if(a.JSON&amp;&amp;a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,&quot;@&quot;).replace(p,&quot;]&quot;).replace(q,&quot;&quot;)))return(new Function(&quot;return &quot;+b))();e.error(&quot;Invalid JSON: &quot;+b)},parseXML:function(c){if(typeof c!=&quot;string&quot;||!c)return null;var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,&quot;text/xml&quot;)):(d=new ActiveXObject(&quot;Microsoft.XMLDOM&quot;),d.async=&quot;false&quot;,d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName(&quot;parsererror&quot;).length)&amp;&amp;e.error(&quot;Invalid XML: &quot;+c);return d},noop:function(){},globalEval:function(b){b&amp;&amp;j.test(b)&amp;&amp;(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,&quot;ms-&quot;).replace(v,x)},nodeName:function(a,b){return a.nodeName&amp;&amp;a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g&lt;h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g&lt;h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?&quot;&quot;:G.call(a)}:function(a){return a==null?&quot;&quot;:(a+&quot;&quot;).replace(k,&quot;&quot;).replace(l,&quot;&quot;)},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d===&quot;string&quot;||d===&quot;function&quot;||d===&quot;regexp&quot;||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c&lt;0?Math.max(0,d+c):c:0;for(;c&lt;d;c++)if(c in b&amp;&amp;b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length==&quot;number&quot;)for(var f=c.length;e&lt;f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f&lt;g;f++)e=!!b(a[f],f),c!==e&amp;&amp;d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&amp;&amp;typeof j==&quot;number&quot;&amp;&amp;(j&gt;0&amp;&amp;a[0]&amp;&amp;a[j-1]||j===0||e.isArray(a));if(k)for(;i&lt;j;i++)f=c(a[i],i,d),f!=null&amp;&amp;(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&amp;&amp;(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c==&quot;string&quot;){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h,i){var j,k=d==null,l=0,m=a.length;if(d&amp;&amp;typeof d==&quot;object&quot;){for(l in d)e.access(a,c,l,d[l],1,h,f);g=1}else if(f!==b){j=i===b&amp;&amp;e.isFunction(f),k&amp;&amp;(j?(j=c,c=function(a,b,c){return j.call(e(a),c)}):(c.call(a,f),c=null));if(c)for(;l&lt;m;l++)c(a[l],d,j?f.call(a[l],l,c(a[l],d)):f,i);g=1}return g?a:k?c.call(a):m?c(a[0],d):h},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf(&quot;compatible&quot;)&lt;0&amp;&amp;u.exec(a)||[];return{browser:b[1]||&quot;&quot;,version:b[2]||&quot;0&quot;}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&amp;&amp;f instanceof e&amp;&amp;!(f instanceof a)&amp;&amp;(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each(&quot;Boolean Number String Function Array Date RegExp Object&quot;.split(&quot; &quot;),function(a,b){I[&quot;[object &quot;+b+&quot;]&quot;]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&amp;&amp;(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&amp;&amp;(e.browser.safari=!0),j.test(&quot;Â &quot;)&amp;&amp;(k=/^[\s\xA0]+/,l=/[\s\xA0]+$/),h=e(c),c.addEventListener?B=function(){c.removeEventListener(&quot;DOMContentLoaded&quot;,B,!1),e.ready()}:c.attachEvent&amp;&amp;(B=function(){c.readyState===&quot;complete&quot;&amp;&amp;(c.detachEvent(&quot;onreadystatechange&quot;,B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m,n=function(b){var d,e,g,h,i;for(d=0,e=b.length;d&lt;e;d++)g=b[d],h=f.type(g),h===&quot;array&quot;?n(g):h===&quot;function&quot;&amp;&amp;(!a.unique||!p.has(g))&amp;&amp;c.push(g)},o=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,j=!0,m=k||0,k=0,l=c.length;for(;c&amp;&amp;m&lt;l;m++)if(c[m].apply(b,f)===!1&amp;&amp;a.stopOnFalse){e=!0;break}j=!1,c&amp;&amp;(a.once?e===!0?p.disable():c=[]:d&amp;&amp;d.length&amp;&amp;(e=d.shift(),p.fireWith(e[0],e[1])))},p={add:function(){if(c){var a=c.length;n(arguments),j?l=c.length:e&amp;&amp;e!==!0&amp;&amp;(k=a,o(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d&lt;e;d++)for(var f=0;f&lt;c.length;f++)if(b[d]===c[f]){j&amp;&amp;f&lt;=l&amp;&amp;(l--,f&lt;=m&amp;&amp;m--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b&lt;d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&amp;&amp;p.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&amp;&amp;(j?a.once||d.push([b,c]):(!a.once||!e)&amp;&amp;o(b,c));return this},fire:function(){p.fireWith(this,arguments);return this},fired:function(){return!!i}};return p};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks(&quot;once memory&quot;),c=f.Callbacks(&quot;once memory&quot;),d=f.Callbacks(&quot;memory&quot;),e=&quot;pending&quot;,g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,&quot;resolve&quot;],fail:[b,&quot;reject&quot;],progress:[c,&quot;notify&quot;]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&amp;&amp;f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+&quot;With&quot;](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+&quot;With&quot;]=g[j].fireWith;i.done(function(){e=&quot;resolved&quot;},c.disable,d.lock).fail(function(){e=&quot;rejected&quot;},b.disable,d.lock),a&amp;&amp;a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length&gt;1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length&gt;1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d&lt;=1&amp;&amp;a&amp;&amp;f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d&gt;1){for(;c&lt;d;c++)b[c]&amp;&amp;b[c].promise&amp;&amp;f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&amp;&amp;j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p=c.createElement(&quot;div&quot;),q=c.documentElement;p.setAttribute(&quot;className&quot;,&quot;t&quot;),p.innerHTML=&quot;   &lt;link/&gt;&lt;table&gt;&lt;/table&gt;&lt;a href=&#39;/a&#39; style=&#39;top:1px;float:left;opacity:.55;&#39;&gt;a&lt;/a&gt;&lt;input type=&#39;checkbox&#39;/&gt;&quot;,d=p.getElementsByTagName(&quot;*&quot;),e=p.getElementsByTagName(&quot;a&quot;)[0];if(!d||!d.length||!e)return{};g=c.createElement(&quot;select&quot;),h=g.appendChild(c.createElement(&quot;option&quot;)),i=p.getElementsByTagName(&quot;input&quot;)[0],b={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName(&quot;tbody&quot;).length,htmlSerialize:!!p.getElementsByTagName(&quot;link&quot;).length,style:/top/.test(e.getAttribute(&quot;style&quot;)),hrefNormalized:e.getAttribute(&quot;href&quot;)===&quot;/a&quot;,opacity:/^0.55/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value===&quot;on&quot;,optSelected:h.selected,getSetAttribute:p.className!==&quot;t&quot;,enctype:!!c.createElement(&quot;form&quot;).enctype,html5Clone:c.createElement(&quot;nav&quot;).cloneNode(!0).outerHTML!==&quot;&lt;:nav&gt;&lt;/:nav&gt;&quot;,submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,pixelMargin:!0},f.boxModel=b.boxModel=c.compatMode===&quot;CSS1Compat&quot;,i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete p.test}catch(r){b.deleteExpando=!1}!p.addEventListener&amp;&amp;p.attachEvent&amp;&amp;p.fireEvent&amp;&amp;(p.attachEvent(&quot;onclick&quot;,function(){b.noCloneEvent=!1}),p.cloneNode(!0).fireEvent(&quot;onclick&quot;)),i=c.createElement(&quot;input&quot;),i.value=&quot;t&quot;,i.setAttribute(&quot;type&quot;,&quot;radio&quot;),b.radioValue=i.value===&quot;t&quot;,i.setAttribute(&quot;checked&quot;,&quot;checked&quot;),i.setAttribute(&quot;name&quot;,&quot;t&quot;),p.appendChild(i),j=c.createDocumentFragment(),j.appendChild(p.lastChild),b.checkClone=j.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,j.removeChild(i),j.appendChild(p);if(p.attachEvent)for(n in{submit:1,change:1,focusin:1})m=&quot;on&quot;+n,o=m in p,o||(p.setAttribute(m,&quot;return;&quot;),o=typeof p[m]==&quot;function&quot;),b[n+&quot;Bubbles&quot;]=o;j.removeChild(p),j=g=h=p=i=null,f(function(){var d,e,g,h,i,j,l,m,n,q,r,s,t,u=c.getElementsByTagName(&quot;body&quot;)[0];!u||(m=1,t=&quot;padding:0;margin:0;border:&quot;,r=&quot;position:absolute;top:0;left:0;width:1px;height:1px;&quot;,s=t+&quot;0;visibility:hidden;&quot;,n=&quot;style=&#39;&quot;+r+t+&quot;5px solid #000;&quot;,q=&quot;&lt;div &quot;+n+&quot;display:block;&#39;&gt;&lt;div style=&#39;&quot;+t+&quot;0;display:block;overflow:hidden;&#39;&gt;&lt;/div&gt;&lt;/div&gt;&quot;+&quot;&lt;table &quot;+n+&quot;&#39; cellpadding=&#39;0&#39; cellspacing=&#39;0&#39;&gt;&quot;+&quot;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&quot;,d=c.createElement(&quot;div&quot;),d.style.cssText=s+&quot;width:0;height:0;position:static;top:0;margin-top:&quot;+m+&quot;px&quot;,u.insertBefore(d,u.firstChild),p=c.createElement(&quot;div&quot;),d.appendChild(p),p.innerHTML=&quot;&lt;table&gt;&lt;tr&gt;&lt;td style=&#39;&quot;+t+&quot;0;display:none&#39;&gt;&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&quot;,k=p.getElementsByTagName(&quot;td&quot;),o=k[0].offsetHeight===0,k[0].style.display=&quot;&quot;,k[1].style.display=&quot;none&quot;,b.reliableHiddenOffsets=o&amp;&amp;k[0].offsetHeight===0,a.getComputedStyle&amp;&amp;(p.innerHTML=&quot;&quot;,l=c.createElement(&quot;div&quot;),l.style.width=&quot;0&quot;,l.style.marginRight=&quot;0&quot;,p.style.width=&quot;2px&quot;,p.appendChild(l),b.reliableMarginRight=(parseInt((a.getComputedStyle(l,null)||{marginRight:0}).marginRight,10)||0)===0),typeof p.style.zoom!=&quot;undefined&quot;&amp;&amp;(p.innerHTML=&quot;&quot;,p.style.width=p.style.padding=&quot;1px&quot;,p.style.border=0,p.style.overflow=&quot;hidden&quot;,p.style.display=&quot;inline&quot;,p.style.zoom=1,b.inlineBlockNeedsLayout=p.offsetWidth===3,p.style.display=&quot;block&quot;,p.style.overflow=&quot;visible&quot;,p.innerHTML=&quot;&lt;div style=&#39;width:5px;&#39;&gt;&lt;/div&gt;&quot;,b.shrinkWrapBlocks=p.offsetWidth!==3),p.style.cssText=r+s,p.innerHTML=q,e=p.firstChild,g=e.firstChild,i=e.nextSibling.firstChild.firstChild,j={doesNotAddBorder:g.offsetTop!==5,doesAddBorderForTableAndCells:i.offsetTop===5},g.style.position=&quot;fixed&quot;,g.style.top=&quot;20px&quot;,j.fixedPosition=g.offsetTop===20||g.offsetTop===15,g.style.position=g.style.top=&quot;&quot;,e.style.overflow=&quot;hidden&quot;,e.style.position=&quot;relative&quot;,j.subtractsBorderForOverflowNotVisible=g.offsetTop===-5,j.doesNotIncludeMarginInBodyOffset=u.offsetTop!==m,a.getComputedStyle&amp;&amp;(p.style.marginTop=&quot;1%&quot;,b.pixelMargin=(a.getComputedStyle(p,null)||{marginTop:0}).marginTop!==&quot;1%&quot;),typeof d.style.zoom!=&quot;undefined&quot;&amp;&amp;(d.style.zoom=1),u.removeChild(d),l=p=d=null,f.extend(b,j))});return b}();var j=/^(?:\{.*\}|\[.*\])$/,k=/([A-Z])/g;f.extend({cache:{},uuid:0,expando:&quot;jQuery&quot;+(f.fn.jquery+Math.random()).replace(/\D/g,&quot;&quot;),noData:{embed:!0,object:&quot;clsid:D27CDB6E-AE6D-11cf-96B8-444553540000&quot;,applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&amp;&amp;!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c==&quot;string&quot;,l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&amp;&amp;j,o=c===&quot;events&quot;;if((!n||!m[n]||!o&amp;&amp;!e&amp;&amp;!m[n].data)&amp;&amp;k&amp;&amp;d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c==&quot;object&quot;||typeof c==&quot;function&quot;)e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&amp;&amp;(h[f.camelCase(c)]=d);if(o&amp;&amp;!h[c])return g.events;k?(i=h[c],i==null&amp;&amp;(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(&quot; &quot;)));for(e=0,g=b.length;e&lt;g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&amp;&amp;(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&amp;&amp;a.getAttribute(&quot;classid&quot;)===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h,i,j=this[0],k=0,m=null;if(a===b){if(this.length){m=f.data(j);if(j.nodeType===1&amp;&amp;!f._data(j,&quot;parsedAttrs&quot;)){g=j.attributes;for(i=g.length;k&lt;i;k++)h=g[k].name,h.indexOf(&quot;data-&quot;)===0&amp;&amp;(h=f.camelCase(h.substring(5)),l(j,h,m[h]));f._data(j,&quot;parsedAttrs&quot;,!0)}}return m}if(typeof a==&quot;object&quot;)return this.each(function(){f.data(this,a)});d=a.split(&quot;.&quot;,2),d[1]=d[1]?&quot;.&quot;+d[1]:&quot;&quot;,e=d[1]+&quot;!&quot;;return f.access(this,function(c){if(c===b){m=this.triggerHandler(&quot;getData&quot;+e,[d[0]]),m===b&amp;&amp;j&amp;&amp;(m=f.data(j,a),m=l(j,a,m));return m===b&amp;&amp;d[1]?this.data(d[0]):m}d[1]=c,this.each(function(){var b=f(this);b.triggerHandler(&quot;setData&quot;+e,d),f.data(this,a,c),b.triggerHandler(&quot;changeData&quot;+e,d)})},null,c,arguments.length&gt;1,null,!1)},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&amp;&amp;(b=(b||&quot;fx&quot;)+&quot;mark&quot;,f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&amp;&amp;(c=b,b=a,a=!1);if(b){c=c||&quot;fx&quot;;var d=c+&quot;mark&quot;,e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,&quot;mark&quot;))}},queue:function(a,b,c){var d;if(a){b=(b||&quot;fx&quot;)+&quot;queue&quot;,d=f._data(a,b),c&amp;&amp;(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||&quot;fx&quot;;var c=f.queue(a,b),d=c.shift(),e={};d===&quot;inprogress&quot;&amp;&amp;(d=c.shift()),d&amp;&amp;(b===&quot;fx&quot;&amp;&amp;c.unshift(&quot;inprogress&quot;),f._data(a,b+&quot;.run&quot;,e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+&quot;queue &quot;+b+&quot;.run&quot;,!0),n(a,b,&quot;queue&quot;))}}),f.fn.extend({queue:function(a,c){var d=2;typeof a!=&quot;string&quot;&amp;&amp;(c=a,a=&quot;fx&quot;,d--);if(arguments.length&lt;d)return f.queue(this[0],a);return c===b?this:this.each(function(){var b=f.queue(this,a,c);a===&quot;fx&quot;&amp;&amp;b[0]!==&quot;inprogress&quot;&amp;&amp;f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||&quot;fx&quot;;return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||&quot;fx&quot;,[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!=&quot;string&quot;&amp;&amp;(c=a,a=b),a=a||&quot;fx&quot;;var d=f.Deferred(),e=this,g=e.length,h=1,i=a+&quot;defer&quot;,j=a+&quot;queue&quot;,k=a+&quot;mark&quot;,l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&amp;&amp;f.data(e[g],i,f.Callbacks(&quot;once memory&quot;),!0))h++,l.add(m);m();return d.promise(c)}});var o=/[\n\t\r]/g,p=/\s+/,q=/\r/g,r=/^(?:button|input)$/i,s=/^(?:button|input|object|select|textarea)$/i,t=/^a(?:rea)?$/i,u=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,f.attr,a,b,arguments.length&gt;1)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,f.prop,a,b,arguments.length&gt;1)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&amp;&amp;typeof a==&quot;string&quot;){b=a.split(p);for(c=0,d=this.length;c&lt;d;c++){e=this[c];if(e.nodeType===1)if(!e.className&amp;&amp;b.length===1)e.className=a;else{g=&quot; &quot;+e.className+&quot; &quot;;for(h=0,i=b.length;h&lt;i;h++)~g.indexOf(&quot; &quot;+b[h]+&quot; &quot;)||(g+=b[h]+&quot; &quot;);e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&amp;&amp;typeof a==&quot;string&quot;||a===b){c=(a||&quot;&quot;).split(p);for(d=0,e=this.length;d&lt;e;d++){g=this[d];if(g.nodeType===1&amp;&amp;g.className)if(a){h=(&quot; &quot;+g.className+&quot; &quot;).replace(o,&quot; &quot;);for(i=0,j=c.length;i&lt;j;i++)h=h.replace(&quot; &quot;+c[i]+&quot; &quot;,&quot; &quot;);g.className=f.trim(h)}else g.className=&quot;&quot;}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b==&quot;boolean&quot;;if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c===&quot;string&quot;){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?&quot;addClass&quot;:&quot;removeClass&quot;](e)}else if(c===&quot;undefined&quot;||c===&quot;boolean&quot;)this.className&amp;&amp;f._data(this,&quot;__className__&quot;,this.className),this.className=this.className||a===!1?&quot;&quot;:f._data(this,&quot;__className__&quot;)||&quot;&quot;})},hasClass:function(a){var b=&quot; &quot;+a+&quot; &quot;,c=0,d=this.length;for(;c&lt;d;c++)if(this[c].nodeType===1&amp;&amp;(&quot; &quot;+this[c].className+&quot; &quot;).replace(o,&quot; &quot;).indexOf(b)&gt;-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h=&quot;&quot;:typeof h==&quot;number&quot;?h+=&quot;&quot;:f.isArray(h)&amp;&amp;(h=f.map(h,function(a){return a==null?&quot;&quot;:a+&quot;&quot;})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()];if(!c||!(&quot;set&quot;in c)||c.set(this,h,&quot;value&quot;)===b)this.value=h}})}if(g){c=f.valHooks[g.type]||f.valHooks[g.nodeName.toLowerCase()];if(c&amp;&amp;&quot;get&quot;in c&amp;&amp;(d=c.get(g,&quot;value&quot;))!==b)return d;d=g.value;return typeof d==&quot;string&quot;?d.replace(q,&quot;&quot;):d==null?&quot;&quot;:d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type===&quot;select-one&quot;;if(g&lt;0)return null;c=j?g:0,d=j?g+1:i.length;for(;c&lt;d;c++){e=i[c];if(e.selected&amp;&amp;(f.support.optDisabled?!e.disabled:e.getAttribute(&quot;disabled&quot;)===null)&amp;&amp;(!e.parentNode.disabled||!f.nodeName(e.parentNode,&quot;optgroup&quot;))){b=f(e).val();if(j)return b;h.push(b)}}if(j&amp;&amp;!h.length&amp;&amp;i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find(&quot;option&quot;).each(function(){this.selected=f.inArray(f(this).val(),c)&gt;=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&amp;&amp;j!==3&amp;&amp;j!==8&amp;&amp;j!==2){if(e&amp;&amp;c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute==&quot;undefined&quot;)return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&amp;&amp;(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&amp;&amp;&quot;set&quot;in h&amp;&amp;i&amp;&amp;(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,&quot;&quot;+d);return d}if(h&amp;&amp;&quot;get&quot;in h&amp;&amp;i&amp;&amp;(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h,i=0;if(b&amp;&amp;a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;i&lt;g;i++)e=d[i],e&amp;&amp;(c=f.propFix[e]||e,h=u.test(e),h||f.attr(a,e,&quot;&quot;),a.removeAttribute(v?e:c),h&amp;&amp;c in a&amp;&amp;(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&amp;&amp;a.parentNode)f.error(&quot;type property can&#39;t be changed&quot;);else if(!f.support.radioValue&amp;&amp;b===&quot;radio&quot;&amp;&amp;f.nodeName(a,&quot;input&quot;)){var c=a.value;a.setAttribute(&quot;type&quot;,b),c&amp;&amp;(a.value=c);return b}}},value:{get:function(a,b){if(w&amp;&amp;f.nodeName(a,&quot;button&quot;))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&amp;&amp;f.nodeName(a,&quot;button&quot;))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:&quot;tabIndex&quot;,readonly:&quot;readOnly&quot;,&quot;for&quot;:&quot;htmlFor&quot;,&quot;class&quot;:&quot;className&quot;,maxlength:&quot;maxLength&quot;,cellspacing:&quot;cellSpacing&quot;,cellpadding:&quot;cellPadding&quot;,rowspan:&quot;rowSpan&quot;,colspan:&quot;colSpan&quot;,usemap:&quot;useMap&quot;,frameborder:&quot;frameBorder&quot;,contenteditable:&quot;contentEditable&quot;},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&amp;&amp;i!==3&amp;&amp;i!==8&amp;&amp;i!==2){h=i!==1||!f.isXMLDoc(a),h&amp;&amp;(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&amp;&amp;&quot;set&quot;in g&amp;&amp;(e=g.set(a,d,c))!==b?e:a[c]=d:g&amp;&amp;&quot;get&quot;in g&amp;&amp;(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode(&quot;tabindex&quot;);return c&amp;&amp;c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&amp;&amp;a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!=&quot;boolean&quot;&amp;&amp;(d=a.getAttributeNode(c))&amp;&amp;d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&amp;&amp;(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0,coords:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&amp;&amp;(y[c]?d.nodeValue!==&quot;&quot;:d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+&quot;&quot;}},f.attrHooks.tabindex.set=w.set,f.each([&quot;width&quot;,&quot;height&quot;],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===&quot;&quot;){a.setAttribute(b,&quot;auto&quot;);return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===&quot;&quot;&amp;&amp;(b=&quot;false&quot;),w.set(a,b,c)}}),f.support.hrefNormalized||f.each([&quot;href&quot;,&quot;src&quot;,&quot;width&quot;,&quot;height&quot;],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=&quot;&quot;+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&amp;&amp;(b.selectedIndex,b.parentNode&amp;&amp;b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype=&quot;encoding&quot;),f.support.checkOn||f.each([&quot;radio&quot;,&quot;checkbox&quot;],function(){f.valHooks[this]={get:function(a){return a.getAttribute(&quot;value&quot;)===null?&quot;on&quot;:a.value}}}),f.each([&quot;radio&quot;,&quot;checkbox&quot;],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)&gt;=0}})});var z=/^(?:textarea|input|select)$/i,A=/^([^\.]*)?(?:\.(.+))?$/,B=/(?:^|\s)hover(\.\S+)?\b/,C=/^key/,D=/^(?:mouse|contextmenu)|click/,E=/^(?:focusinfocus|focusoutblur)$/,F=/^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/,G=function(</div><div class='line' id='LC4'>a){var b=F.exec(a);b&amp;&amp;(b[1]=(b[1]||&quot;&quot;).toLowerCase(),b[3]=b[3]&amp;&amp;new RegExp(&quot;(?:^|\\s)&quot;+b[3]+&quot;(?:\\s|$)&quot;));return b},H=function(a,b){var c=a.attributes||{};return(!b[1]||a.nodeName.toLowerCase()===b[1])&amp;&amp;(!b[2]||(c.id||{}).value===b[2])&amp;&amp;(!b[3]||b[3].test((c[&quot;class&quot;]||{}).value))},I=function(a){return f.event.special.hover?a:a.replace(B,&quot;mouseenter$1 mouseleave$1&quot;)};f.event={add:function(a,c,d,e,g){var h,i,j,k,l,m,n,o,p,q,r,s;if(!(a.nodeType===3||a.nodeType===8||!c||!d||!(h=f._data(a)))){d.handler&amp;&amp;(p=d,d=p.handler,g=p.selector),d.guid||(d.guid=f.guid++),j=h.events,j||(h.events=j={}),i=h.handle,i||(h.handle=i=function(a){return typeof f!=&quot;undefined&quot;&amp;&amp;(!a||f.event.triggered!==a.type)?f.event.dispatch.apply(i.elem,arguments):b},i.elem=a),c=f.trim(I(c)).split(&quot; &quot;);for(k=0;k&lt;c.length;k++){l=A.exec(c[k])||[],m=l[1],n=(l[2]||&quot;&quot;).split(&quot;.&quot;).sort(),s=f.event.special[m]||{},m=(g?s.delegateType:s.bindType)||m,s=f.event.special[m]||{},o=f.extend({type:m,origType:l[1],data:e,handler:d,guid:d.guid,selector:g,quick:g&amp;&amp;G(g),namespace:n.join(&quot;.&quot;)},p),r=j[m];if(!r){r=j[m]=[],r.delegateCount=0;if(!s.setup||s.setup.call(a,e,n,i)===!1)a.addEventListener?a.addEventListener(m,i,!1):a.attachEvent&amp;&amp;a.attachEvent(&quot;on&quot;+m,i)}s.add&amp;&amp;(s.add.call(a,o),o.handler.guid||(o.handler.guid=d.guid)),g?r.splice(r.delegateCount++,0,o):r.push(o),f.event.global[m]=!0}a=null}},global:{},remove:function(a,b,c,d,e){var g=f.hasData(a)&amp;&amp;f._data(a),h,i,j,k,l,m,n,o,p,q,r,s;if(!!g&amp;&amp;!!(o=g.events)){b=f.trim(I(b||&quot;&quot;)).split(&quot; &quot;);for(h=0;h&lt;b.length;h++){i=A.exec(b[h])||[],j=k=i[1],l=i[2];if(!j){for(j in o)f.event.remove(a,j+b[h],c,d,!0);continue}p=f.event.special[j]||{},j=(d?p.delegateType:p.bindType)||j,r=o[j]||[],m=r.length,l=l?new RegExp(&quot;(^|\\.)&quot;+l.split(&quot;.&quot;).sort().join(&quot;\\.(?:.*\\.)?&quot;)+&quot;(\\.|$)&quot;):null;for(n=0;n&lt;r.length;n++)s=r[n],(e||k===s.origType)&amp;&amp;(!c||c.guid===s.guid)&amp;&amp;(!l||l.test(s.namespace))&amp;&amp;(!d||d===s.selector||d===&quot;**&quot;&amp;&amp;s.selector)&amp;&amp;(r.splice(n--,1),s.selector&amp;&amp;r.delegateCount--,p.remove&amp;&amp;p.remove.call(a,s));r.length===0&amp;&amp;m!==r.length&amp;&amp;((!p.teardown||p.teardown.call(a,l)===!1)&amp;&amp;f.removeEvent(a,j,g.handle),delete o[j])}f.isEmptyObject(o)&amp;&amp;(q=g.handle,q&amp;&amp;(q.elem=null),f.removeData(a,[&quot;events&quot;,&quot;handle&quot;],!0))}},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,e,g){if(!e||e.nodeType!==3&amp;&amp;e.nodeType!==8){var h=c.type||c,i=[],j,k,l,m,n,o,p,q,r,s;if(E.test(h+f.event.triggered))return;h.indexOf(&quot;!&quot;)&gt;=0&amp;&amp;(h=h.slice(0,-1),k=!0),h.indexOf(&quot;.&quot;)&gt;=0&amp;&amp;(i=h.split(&quot;.&quot;),h=i.shift(),i.sort());if((!e||f.event.customEvent[h])&amp;&amp;!f.event.global[h])return;c=typeof c==&quot;object&quot;?c[f.expando]?c:new f.Event(h,c):new f.Event(h),c.type=h,c.isTrigger=!0,c.exclusive=k,c.namespace=i.join(&quot;.&quot;),c.namespace_re=c.namespace?new RegExp(&quot;(^|\\.)&quot;+i.join(&quot;\\.(?:.*\\.)?&quot;)+&quot;(\\.|$)&quot;):null,o=h.indexOf(&quot;:&quot;)&lt;0?&quot;on&quot;+h:&quot;&quot;;if(!e){j=f.cache;for(l in j)j[l].events&amp;&amp;j[l].events[h]&amp;&amp;f.event.trigger(c,d,j[l].handle.elem,!0);return}c.result=b,c.target||(c.target=e),d=d!=null?f.makeArray(d):[],d.unshift(c),p=f.event.special[h]||{};if(p.trigger&amp;&amp;p.trigger.apply(e,d)===!1)return;r=[[e,p.bindType||h]];if(!g&amp;&amp;!p.noBubble&amp;&amp;!f.isWindow(e)){s=p.delegateType||h,m=E.test(s+h)?e:e.parentNode,n=null;for(;m;m=m.parentNode)r.push([m,s]),n=m;n&amp;&amp;n===e.ownerDocument&amp;&amp;r.push([n.defaultView||n.parentWindow||a,s])}for(l=0;l&lt;r.length&amp;&amp;!c.isPropagationStopped();l++)m=r[l][0],c.type=r[l][1],q=(f._data(m,&quot;events&quot;)||{})[c.type]&amp;&amp;f._data(m,&quot;handle&quot;),q&amp;&amp;q.apply(m,d),q=o&amp;&amp;m[o],q&amp;&amp;f.acceptData(m)&amp;&amp;q.apply(m,d)===!1&amp;&amp;c.preventDefault();c.type=h,!g&amp;&amp;!c.isDefaultPrevented()&amp;&amp;(!p._default||p._default.apply(e.ownerDocument,d)===!1)&amp;&amp;(h!==&quot;click&quot;||!f.nodeName(e,&quot;a&quot;))&amp;&amp;f.acceptData(e)&amp;&amp;o&amp;&amp;e[h]&amp;&amp;(h!==&quot;focus&quot;&amp;&amp;h!==&quot;blur&quot;||c.target.offsetWidth!==0)&amp;&amp;!f.isWindow(e)&amp;&amp;(n=e[o],n&amp;&amp;(e[o]=null),f.event.triggered=h,e[h](),f.event.triggered=b,n&amp;&amp;(e[o]=n));return c.result}},dispatch:function(c){c=f.event.fix(c||a.event);var d=(f._data(this,&quot;events&quot;)||{})[c.type]||[],e=d.delegateCount,g=[].slice.call(arguments,0),h=!c.exclusive&amp;&amp;!c.namespace,i=f.event.special[c.type]||{},j=[],k,l,m,n,o,p,q,r,s,t,u;g[0]=c,c.delegateTarget=this;if(!i.preDispatch||i.preDispatch.call(this,c)!==!1){if(e&amp;&amp;(!c.button||c.type!==&quot;click&quot;)){n=f(this),n.context=this.ownerDocument||this;for(m=c.target;m!=this;m=m.parentNode||this)if(m.disabled!==!0){p={},r=[],n[0]=m;for(k=0;k&lt;e;k++)s=d[k],t=s.selector,p[t]===b&amp;&amp;(p[t]=s.quick?H(m,s.quick):n.is(t)),p[t]&amp;&amp;r.push(s);r.length&amp;&amp;j.push({elem:m,matches:r})}}d.length&gt;e&amp;&amp;j.push({elem:this,matches:d.slice(e)});for(k=0;k&lt;j.length&amp;&amp;!c.isPropagationStopped();k++){q=j[k],c.currentTarget=q.elem;for(l=0;l&lt;q.matches.length&amp;&amp;!c.isImmediatePropagationStopped();l++){s=q.matches[l];if(h||!c.namespace&amp;&amp;!s.namespace||c.namespace_re&amp;&amp;c.namespace_re.test(s.namespace))c.data=s.data,c.handleObj=s,o=((f.event.special[s.origType]||{}).handle||s.handler).apply(q.elem,g),o!==b&amp;&amp;(c.result=o,o===!1&amp;&amp;(c.preventDefault(),c.stopPropagation()))}}i.postDispatch&amp;&amp;i.postDispatch.call(this,c);return c.result}},props:&quot;attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which&quot;.split(&quot; &quot;),fixHooks:{},keyHooks:{props:&quot;char charCode key keyCode&quot;.split(&quot; &quot;),filter:function(a,b){a.which==null&amp;&amp;(a.which=b.charCode!=null?b.charCode:b.keyCode);return a}},mouseHooks:{props:&quot;button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement&quot;.split(&quot; &quot;),filter:function(a,d){var e,f,g,h=d.button,i=d.fromElement;a.pageX==null&amp;&amp;d.clientX!=null&amp;&amp;(e=a.target.ownerDocument||c,f=e.documentElement,g=e.body,a.pageX=d.clientX+(f&amp;&amp;f.scrollLeft||g&amp;&amp;g.scrollLeft||0)-(f&amp;&amp;f.clientLeft||g&amp;&amp;g.clientLeft||0),a.pageY=d.clientY+(f&amp;&amp;f.scrollTop||g&amp;&amp;g.scrollTop||0)-(f&amp;&amp;f.clientTop||g&amp;&amp;g.clientTop||0)),!a.relatedTarget&amp;&amp;i&amp;&amp;(a.relatedTarget=i===a.target?d.toElement:i),!a.which&amp;&amp;h!==b&amp;&amp;(a.which=h&amp;1?1:h&amp;2?3:h&amp;4?2:0);return a}},fix:function(a){if(a[f.expando])return a;var d,e,g=a,h=f.event.fixHooks[a.type]||{},i=h.props?this.props.concat(h.props):this.props;a=f.Event(g);for(d=i.length;d;)e=i[--d],a[e]=g[e];a.target||(a.target=g.srcElement||c),a.target.nodeType===3&amp;&amp;(a.target=a.target.parentNode),a.metaKey===b&amp;&amp;(a.metaKey=a.ctrlKey);return h.filter?h.filter(a,g):a},special:{ready:{setup:f.bindReady},load:{noBubble:!0},focus:{delegateType:&quot;focusin&quot;},blur:{delegateType:&quot;focusout&quot;},beforeunload:{setup:function(a,b,c){f.isWindow(this)&amp;&amp;(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&amp;&amp;(this.onbeforeunload=null)}}},simulate:function(a,b,c,d){var e=f.extend(new f.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?f.event.trigger(e,null,b):f.event.dispatch.call(b,e),e.isDefaultPrevented()&amp;&amp;c.preventDefault()}},f.event.handle=f.event.dispatch,f.removeEvent=c.removeEventListener?function(a,b,c){a.removeEventListener&amp;&amp;a.removeEventListener(b,c,!1)}:function(a,b,c){a.detachEvent&amp;&amp;a.detachEvent(&quot;on&quot;+b,c)},f.Event=function(a,b){if(!(this instanceof f.Event))return new f.Event(a,b);a&amp;&amp;a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&amp;&amp;a.getPreventDefault()?K:J):this.type=a,b&amp;&amp;f.extend(this,b),this.timeStamp=a&amp;&amp;a.timeStamp||f.now(),this[f.expando]=!0},f.Event.prototype={preventDefault:function(){this.isDefaultPrevented=K;var a=this.originalEvent;!a||(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){this.isPropagationStopped=K;var a=this.originalEvent;!a||(a.stopPropagation&amp;&amp;a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=K,this.stopPropagation()},isDefaultPrevented:J,isPropagationStopped:J,isImmediatePropagationStopped:J},f.each({mouseenter:&quot;mouseover&quot;,mouseleave:&quot;mouseout&quot;},function(a,b){f.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c=this,d=a.relatedTarget,e=a.handleObj,g=e.selector,h;if(!d||d!==c&amp;&amp;!f.contains(c,d))a.type=e.origType,h=e.handler.apply(this,arguments),a.type=b;return h}}}),f.support.submitBubbles||(f.event.special.submit={setup:function(){if(f.nodeName(this,&quot;form&quot;))return!1;f.event.add(this,&quot;click._submit keypress._submit&quot;,function(a){var c=a.target,d=f.nodeName(c,&quot;input&quot;)||f.nodeName(c,&quot;button&quot;)?c.form:b;d&amp;&amp;!d._submit_attached&amp;&amp;(f.event.add(d,&quot;submit._submit&quot;,function(a){a._submit_bubble=!0}),d._submit_attached=!0)})},postDispatch:function(a){a._submit_bubble&amp;&amp;(delete a._submit_bubble,this.parentNode&amp;&amp;!a.isTrigger&amp;&amp;f.event.simulate(&quot;submit&quot;,this.parentNode,a,!0))},teardown:function(){if(f.nodeName(this,&quot;form&quot;))return!1;f.event.remove(this,&quot;._submit&quot;)}}),f.support.changeBubbles||(f.event.special.change={setup:function(){if(z.test(this.nodeName)){if(this.type===&quot;checkbox&quot;||this.type===&quot;radio&quot;)f.event.add(this,&quot;propertychange._change&quot;,function(a){a.originalEvent.propertyName===&quot;checked&quot;&amp;&amp;(this._just_changed=!0)}),f.event.add(this,&quot;click._change&quot;,function(a){this._just_changed&amp;&amp;!a.isTrigger&amp;&amp;(this._just_changed=!1,f.event.simulate(&quot;change&quot;,this,a,!0))});return!1}f.event.add(this,&quot;beforeactivate._change&quot;,function(a){var b=a.target;z.test(b.nodeName)&amp;&amp;!b._change_attached&amp;&amp;(f.event.add(b,&quot;change._change&quot;,function(a){this.parentNode&amp;&amp;!a.isSimulated&amp;&amp;!a.isTrigger&amp;&amp;f.event.simulate(&quot;change&quot;,this.parentNode,a,!0)}),b._change_attached=!0)})},handle:function(a){var b=a.target;if(this!==b||a.isSimulated||a.isTrigger||b.type!==&quot;radio&quot;&amp;&amp;b.type!==&quot;checkbox&quot;)return a.handleObj.handler.apply(this,arguments)},teardown:function(){f.event.remove(this,&quot;._change&quot;);return z.test(this.nodeName)}}),f.support.focusinBubbles||f.each({focus:&quot;focusin&quot;,blur:&quot;focusout&quot;},function(a,b){var d=0,e=function(a){f.event.simulate(b,a.target,f.event.fix(a),!0)};f.event.special[b]={setup:function(){d++===0&amp;&amp;c.addEventListener(a,e,!0)},teardown:function(){--d===0&amp;&amp;c.removeEventListener(a,e,!0)}}}),f.fn.extend({on:function(a,c,d,e,g){var h,i;if(typeof a==&quot;object&quot;){typeof c!=&quot;string&quot;&amp;&amp;(d=d||c,c=b);for(i in a)this.on(i,c,d,a[i],g);return this}d==null&amp;&amp;e==null?(e=c,d=c=b):e==null&amp;&amp;(typeof c==&quot;string&quot;?(e=d,d=b):(e=d,d=c,c=b));if(e===!1)e=J;else if(!e)return this;g===1&amp;&amp;(h=e,e=function(a){f().off(a);return h.apply(this,arguments)},e.guid=h.guid||(h.guid=f.guid++));return this.each(function(){f.event.add(this,a,e,d,c)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,c,d){if(a&amp;&amp;a.preventDefault&amp;&amp;a.handleObj){var e=a.handleObj;f(a.delegateTarget).off(e.namespace?e.origType+&quot;.&quot;+e.namespace:e.origType,e.selector,e.handler);return this}if(typeof a==&quot;object&quot;){for(var g in a)this.off(g,c,a[g]);return this}if(c===!1||typeof c==&quot;function&quot;)d=c,c=b;d===!1&amp;&amp;(d=J);return this.each(function(){f.event.remove(this,a,d,c)})},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},live:function(a,b,c){f(this.context).on(a,this.selector,b,c);return this},die:function(a,b){f(this.context).off(a,this.selector||&quot;**&quot;,b);return this},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return arguments.length==1?this.off(a,&quot;**&quot;):this.off(b,a,c)},trigger:function(a,b){return this.each(function(){f.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return f.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||f.guid++,d=0,e=function(c){var e=(f._data(this,&quot;lastToggle&quot;+a.guid)||0)%d;f._data(this,&quot;lastToggle&quot;+a.guid,e+1),c.preventDefault();return b[e].apply(this,arguments)||!1};e.guid=c;while(d&lt;b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),f.each(&quot;blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu&quot;.split(&quot; &quot;),function(a,b){f.fn[b]=function(a,c){c==null&amp;&amp;(c=a,a=null);return arguments.length&gt;0?this.on(b,null,a,c):this.trigger(b)},f.attrFn&amp;&amp;(f.attrFn[b]=!0),C.test(b)&amp;&amp;(f.event.fixHooks[b]=f.event.keyHooks),D.test(b)&amp;&amp;(f.event.fixHooks[b]=f.event.mouseHooks)}),function(){function x(a,b,c,e,f,g){for(var h=0,i=e.length;h&lt;i;h++){var j=e[h];if(j){var k=!1;j=j[a];while(j){if(j[d]===c){k=e[j.sizset];break}if(j.nodeType===1){g||(j[d]=c,j.sizset=h);if(typeof b!=&quot;string&quot;){if(j===b){k=!0;break}}else if(m.filter(b,[j]).length&gt;0){k=j;break}}j=j[a]}e[h]=k}}}function w(a,b,c,e,f,g){for(var h=0,i=e.length;h&lt;i;h++){var j=e[h];if(j){var k=!1;j=j[a];while(j){if(j[d]===c){k=e[j.sizset];break}j.nodeType===1&amp;&amp;!g&amp;&amp;(j[d]=c,j.sizset=h);if(j.nodeName.toLowerCase()===b){k=j;break}j=j[a]}e[h]=k}}}var a=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|[&#39;&quot;][^&#39;&quot;]*[&#39;&quot;]|[^\[\]&#39;&quot;]+)+\]|\\.|[^ &gt;+~,(\[\\]+)+|[&gt;+~])(\s*,\s*)?((?:.|\r|\n)*)/g,d=&quot;sizcache&quot;+(Math.random()+&quot;&quot;).replace(&quot;.&quot;,&quot;&quot;),e=0,g=Object.prototype.toString,h=!1,i=!0,j=/\\/g,k=/\r\n/g,l=/\W/;[0,0].sort(function(){i=!1;return 0});var m=function(b,d,e,f){e=e||[],d=d||c;var h=d;if(d.nodeType!==1&amp;&amp;d.nodeType!==9)return[];if(!b||typeof b!=&quot;string&quot;)return e;var i,j,k,l,n,q,r,t,u=!0,v=m.isXML(d),w=[],x=b;do{a.exec(&quot;&quot;),i=a.exec(x);if(i){x=i[3],w.push(i[1]);if(i[2]){l=i[3];break}}}while(i);if(w.length&gt;1&amp;&amp;p.exec(b))if(w.length===2&amp;&amp;o.relative[w[0]])j=y(w[0]+w[1],d,f);else{j=o.relative[w[0]]?[d]:m(w.shift(),d);while(w.length)b=w.shift(),o.relative[b]&amp;&amp;(b+=w.shift()),j=y(b,j,f)}else{!f&amp;&amp;w.length&gt;1&amp;&amp;d.nodeType===9&amp;&amp;!v&amp;&amp;o.match.ID.test(w[0])&amp;&amp;!o.match.ID.test(w[w.length-1])&amp;&amp;(n=m.find(w.shift(),d,v),d=n.expr?m.filter(n.expr,n.set)[0]:n.set[0]);if(d){n=f?{expr:w.pop(),set:s(f)}:m.find(w.pop(),w.length===1&amp;&amp;(w[0]===&quot;~&quot;||w[0]===&quot;+&quot;)&amp;&amp;d.parentNode?d.parentNode:d,v),j=n.expr?m.filter(n.expr,n.set):n.set,w.length&gt;0?k=s(j):u=!1;while(w.length)q=w.pop(),r=q,o.relative[q]?r=w.pop():q=&quot;&quot;,r==null&amp;&amp;(r=d),o.relative[q](k,r,v)}else k=w=[]}k||(k=j),k||m.error(q||b);if(g.call(k)===&quot;[object Array]&quot;)if(!u)e.push.apply(e,k);else if(d&amp;&amp;d.nodeType===1)for(t=0;k[t]!=null;t++)k[t]&amp;&amp;(k[t]===!0||k[t].nodeType===1&amp;&amp;m.contains(d,k[t]))&amp;&amp;e.push(j[t]);else for(t=0;k[t]!=null;t++)k[t]&amp;&amp;k[t].nodeType===1&amp;&amp;e.push(j[t]);else s(k,e);l&amp;&amp;(m(l,h,e,f),m.uniqueSort(e));return e};m.uniqueSort=function(a){if(u){h=i,a.sort(u);if(h)for(var b=1;b&lt;a.length;b++)a[b]===a[b-1]&amp;&amp;a.splice(b--,1)}return a},m.matches=function(a,b){return m(a,null,null,b)},m.matchesSelector=function(a,b){return m(b,null,null,[a]).length&gt;0},m.find=function(a,b,c){var d,e,f,g,h,i;if(!a)return[];for(e=0,f=o.order.length;e&lt;f;e++){h=o.order[e];if(g=o.leftMatch[h].exec(a)){i=g[1],g.splice(1,1);if(i.substr(i.length-1)!==&quot;\\&quot;){g[1]=(g[1]||&quot;&quot;).replace(j,&quot;&quot;),d=o.find[h](g,b,c);if(d!=null){a=a.replace(o.match[h],&quot;&quot;);break}}}}d||(d=typeof b.getElementsByTagName!=&quot;undefined&quot;?b.getElementsByTagName(&quot;*&quot;):[]);return{set:d,expr:a}},m.filter=function(a,c,d,e){var f,g,h,i,j,k,l,n,p,q=a,r=[],s=c,t=c&amp;&amp;c[0]&amp;&amp;m.isXML(c[0]);while(a&amp;&amp;c.length){for(h in o.filter)if((f=o.leftMatch[h].exec(a))!=null&amp;&amp;f[2]){k=o.filter[h],l=f[1],g=!1,f.splice(1,1);if(l.substr(l.length-1)===&quot;\\&quot;)continue;s===r&amp;&amp;(r=[]);if(o.preFilter[h]){f=o.preFilter[h](f,s,d,r,e,t);if(!f)g=i=!0;else if(f===!0)continue}if(f)for(n=0;(j=s[n])!=null;n++)j&amp;&amp;(i=k(j,f,n,s),p=e^i,d&amp;&amp;i!=null?p?g=!0:s[n]=!1:p&amp;&amp;(r.push(j),g=!0));if(i!==b){d||(s=r),a=a.replace(o.match[h],&quot;&quot;);if(!g)return[];break}}if(a===q)if(g==null)m.error(a);else break;q=a}return s},m.error=function(a){throw new Error(&quot;Syntax error, unrecognized expression: &quot;+a)};var n=m.getText=function(a){var b,c,d=a.nodeType,e=&quot;&quot;;if(d){if(d===1||d===9||d===11){if(typeof a.textContent==&quot;string&quot;)return a.textContent;if(typeof a.innerText==&quot;string&quot;)return a.innerText.replace(k,&quot;&quot;);for(a=a.firstChild;a;a=a.nextSibling)e+=n(a)}else if(d===3||d===4)return a.nodeValue}else for(b=0;c=a[b];b++)c.nodeType!==8&amp;&amp;(e+=n(c));return e},o=m.selectors={order:[&quot;ID&quot;,&quot;NAME&quot;,&quot;TAG&quot;],match:{ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,NAME:/\[name=[&#39;&quot;]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)[&#39;&quot;]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:([&#39;&quot;])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\(([&#39;&quot;]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{&quot;class&quot;:&quot;className&quot;,&quot;for&quot;:&quot;htmlFor&quot;},attrHandle:{href:function(a){return a.getAttribute(&quot;href&quot;)},type:function(a){return a.getAttribute(&quot;type&quot;)}},relative:{&quot;+&quot;:function(a,b){var c=typeof b==&quot;string&quot;,d=c&amp;&amp;!l.test(b),e=c&amp;&amp;!d;d&amp;&amp;(b=b.toLowerCase());for(var f=0,g=a.length,h;f&lt;g;f++)if(h=a[f]){while((h=h.previousSibling)&amp;&amp;h.nodeType!==1);a[f]=e||h&amp;&amp;h.nodeName.toLowerCase()===b?h||!1:h===b}e&amp;&amp;m.filter(b,a,!0)},&quot;&gt;&quot;:function(a,b){var c,d=typeof b==&quot;string&quot;,e=0,f=a.length;if(d&amp;&amp;!l.test(b)){b=b.toLowerCase();for(;e&lt;f;e++){c=a[e];if(c){var g=c.parentNode;a[e]=g.nodeName.toLowerCase()===b?g:!1}}}else{for(;e&lt;f;e++)c=a[e],c&amp;&amp;(a[e]=d?c.parentNode:c.parentNode===b);d&amp;&amp;m.filter(b,a,!0)}},&quot;&quot;:function(a,b,c){var d,f=e++,g=x;typeof b==&quot;string&quot;&amp;&amp;!l.test(b)&amp;&amp;(b=b.toLowerCase(),d=b,g=w),g(&quot;parentNode&quot;,b,f,a,d,c)},&quot;~&quot;:function(a,b,c){var d,f=e++,g=x;typeof b==&quot;string&quot;&amp;&amp;!l.test(b)&amp;&amp;(b=b.toLowerCase(),d=b,g=w),g(&quot;previousSibling&quot;,b,f,a,d,c)}},find:{ID:function(a,b,c){if(typeof b.getElementById!=&quot;undefined&quot;&amp;&amp;!c){var d=b.getElementById(a[1]);return d&amp;&amp;d.parentNode?[d]:[]}},NAME:function(a,b){if(typeof b.getElementsByName!=&quot;undefined&quot;){var c=[],d=b.getElementsByName(a[1]);for(var e=0,f=d.length;e&lt;f;e++)d[e].getAttribute(&quot;name&quot;)===a[1]&amp;&amp;c.push(d[e]);return c.length===0?null:c}},TAG:function(a,b){if(typeof b.getElementsByTagName!=&quot;undefined&quot;)return b.getElementsByTagName(a[1])}},preFilter:{CLASS:function(a,b,c,d,e,f){a=&quot; &quot;+a[1].replace(j,&quot;&quot;)+&quot; &quot;;if(f)return a;for(var g=0,h;(h=b[g])!=null;g++)h&amp;&amp;(e^(h.className&amp;&amp;(&quot; &quot;+h.className+&quot; &quot;).replace(/[\t\n\r]/g,&quot; &quot;).indexOf(a)&gt;=0)?c||d.push(h):c&amp;&amp;(b[g]=!1));return!1},ID:function(a){return a[1].replace(j,&quot;&quot;)},TAG:function(a,b){return a[1].replace(j,&quot;&quot;).toLowerCase()},CHILD:function(a){if(a[1]===&quot;nth&quot;){a[2]||m.error(a[0]),a[2]=a[2].replace(/^\+|\s*/g,&quot;&quot;);var b=/(-?)(\d*)(?:n([+\-]?\d*))?/.exec(a[2]===&quot;even&quot;&amp;&amp;&quot;2n&quot;||a[2]===&quot;odd&quot;&amp;&amp;&quot;2n+1&quot;||!/\D/.test(a[2])&amp;&amp;&quot;0n+&quot;+a[2]||a[2]);a[2]=b[1]+(b[2]||1)-0,a[3]=b[3]-0}else a[2]&amp;&amp;m.error(a[0]);a[0]=e++;return a},ATTR:function(a,b,c,d,e,f){var g=a[1]=a[1].replace(j,&quot;&quot;);!f&amp;&amp;o.attrMap[g]&amp;&amp;(a[1]=o.attrMap[g]),a[4]=(a[4]||a[5]||&quot;&quot;).replace(j,&quot;&quot;),a[2]===&quot;~=&quot;&amp;&amp;(a[4]=&quot; &quot;+a[4]+&quot; &quot;);return a},PSEUDO:function(b,c,d,e,f){if(b[1]===&quot;not&quot;)if((a.exec(b[3])||&quot;&quot;).length&gt;1||/^\w/.test(b[3]))b[3]=m(b[3],null,null,c);else{var g=m.filter(b[3],c,d,!0^f);d||e.push.apply(e,g);return!1}else if(o.match.POS.test(b[0])||o.match.CHILD.test(b[0]))return!0;return b},POS:function(a){a.unshift(!0);return a}},filters:{enabled:function(a){return a.disabled===!1&amp;&amp;a.type!==&quot;hidden&quot;},disabled:function(a){return a.disabled===!0},checked:function(a){return a.checked===!0},selected:function(a){a.parentNode&amp;&amp;a.parentNode.selectedIndex;return a.selected===!0},parent:function(a){return!!a.firstChild},empty:function(a){return!a.firstChild},has:function(a,b,c){return!!m(c[3],a).length},header:function(a){return/h\d/i.test(a.nodeName)},text:function(a){var b=a.getAttribute(&quot;type&quot;),c=a.type;return a.nodeName.toLowerCase()===&quot;input&quot;&amp;&amp;&quot;text&quot;===c&amp;&amp;(b===c||b===null)},radio:function(a){return a.nodeName.toLowerCase()===&quot;input&quot;&amp;&amp;&quot;radio&quot;===a.type},checkbox:function(a){return a.nodeName.toLowerCase()===&quot;input&quot;&amp;&amp;&quot;checkbox&quot;===a.type},file:function(a){return a.nodeName.toLowerCase()===&quot;input&quot;&amp;&amp;&quot;file&quot;===a.type},password:function(a){return a.nodeName.toLowerCase()===&quot;input&quot;&amp;&amp;&quot;password&quot;===a.type},submit:function(a){var b=a.nodeName.toLowerCase();return(b===&quot;input&quot;||b===&quot;button&quot;)&amp;&amp;&quot;submit&quot;===a.type},image:function(a){return a.nodeName.toLowerCase()===&quot;input&quot;&amp;&amp;&quot;image&quot;===a.type},reset:function(a){var b=a.nodeName.toLowerCase();return(b===&quot;input&quot;||b===&quot;button&quot;)&amp;&amp;&quot;reset&quot;===a.type},button:function(a){var b=a.nodeName.toLowerCase();return b===&quot;input&quot;&amp;&amp;&quot;button&quot;===a.type||b===&quot;button&quot;},input:function(a){return/input|select|textarea|button/i.test(a.nodeName)},focus:function(a){return a===a.ownerDocument.activeElement}},setFilters:{first:function(a,b){return b===0},last:function(a,b,c,d){return b===d.length-1},even:function(a,b){return b%2===0},odd:function(a,b){return b%2===1},lt:function(a,b,c){return b&lt;c[3]-0},gt:function(a,b,c){return b&gt;c[3]-0},nth:function(a,b,c){return c[3]-0===b},eq:function(a,b,c){return c[3]-0===b}},filter:{PSEUDO:function(a,b,c,d){var e=b[1],f=o.filters[e];if(f)return f(a,c,b,d);if(e===&quot;contains&quot;)return(a.textContent||a.innerText||n([a])||&quot;&quot;).indexOf(b[3])&gt;=0;if(e===&quot;not&quot;){var g=b[3];for(var h=0,i=g.length;h&lt;i;h++)if(g[h]===a)return!1;return!0}m.error(e)},CHILD:function(a,b){var c,e,f,g,h,i,j,k=b[1],l=a;switch(k){case&quot;only&quot;:case&quot;first&quot;:while(l=l.previousSibling)if(l.nodeType===1)return!1;if(k===&quot;first&quot;)return!0;l=a;case&quot;last&quot;:while(l=l.nextSibling)if(l.nodeType===1)return!1;return!0;case&quot;nth&quot;:c=b[2],e=b[3];if(c===1&amp;&amp;e===0)return!0;f=b[0],g=a.parentNode;if(g&amp;&amp;(g[d]!==f||!a.nodeIndex)){i=0;for(l=g.firstChild;l;l=l.nextSibling)l.nodeType===1&amp;&amp;(l.nodeIndex=++i);g[d]=f}j=a.nodeIndex-e;return c===0?j===0:j%c===0&amp;&amp;j/c&gt;=0}},ID:function(a,b){return a.nodeType===1&amp;&amp;a.getAttribute(&quot;id&quot;)===b},TAG:function(a,b){return b===&quot;*&quot;&amp;&amp;a.nodeType===1||!!a.nodeName&amp;&amp;a.nodeName.toLowerCase()===b},CLASS:function(a,b){return(&quot; &quot;+(a.className||a.getAttribute(&quot;class&quot;))+&quot; &quot;).indexOf(b)&gt;-1},ATTR:function(a,b){var c=b[1],d=m.attr?m.attr(a,c):o.attrHandle[c]?o.attrHandle[c](a):a[c]!=null?a[c]:a.getAttribute(c),e=d+&quot;&quot;,f=b[2],g=b[4];return d==null?f===&quot;!=&quot;:!f&amp;&amp;m.attr?d!=null:f===&quot;=&quot;?e===g:f===&quot;*=&quot;?e.indexOf(g)&gt;=0:f===&quot;~=&quot;?(&quot; &quot;+e+&quot; &quot;).indexOf(g)&gt;=0:g?f===&quot;!=&quot;?e!==g:f===&quot;^=&quot;?e.indexOf(g)===0:f===&quot;$=&quot;?e.substr(e.length-g.length)===g:f===&quot;|=&quot;?e===g||e.substr(0,g.length+1)===g+&quot;-&quot;:!1:e&amp;&amp;d!==!1},POS:function(a,b,c,d){var e=b[2],f=o.setFilters[e];if(f)return f(a,c,b,d)}}},p=o.match.POS,q=function(a,b){return&quot;\\&quot;+(b-0+1)};for(var r in o.match)o.match[r]=new RegExp(o.match[r].source+/(?![^\[]*\])(?![^\(]*\))/.source),o.leftMatch[r]=new RegExp(/(^(?:.|\r|\n)*?)/.source+o.match[r].source.replace(/\\(\d+)/g,q));o.match.globalPOS=p;var s=function(a,b){a=Array.prototype.slice.call(a,0);if(b){b.push.apply(b,a);return b}return a};try{Array.prototype.slice.call(c.documentElement.childNodes,0)[0].nodeType}catch(t){s=function(a,b){var c=0,d=b||[];if(g.call(a)===&quot;[object Array]&quot;)Array.prototype.push.apply(d,a);else if(typeof a.length==&quot;number&quot;)for(var e=a.length;c&lt;e;c++)d.push(a[c]);else for(;a[c];c++)d.push(a[c]);return d}}var u,v;c.documentElement.compareDocumentPosition?u=function(a,b){if(a===b){h=!0;return 0}if(!a.compareDocumentPosition||!b.compareDocumentPosition)return a.compareDocumentPosition?-1:1;return a.compareDocumentPosition(b)&amp;4?-1:1}:(u=function(a,b){if(a===b){h=!0;return 0}if(a.sourceIndex&amp;&amp;b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],g=a.parentNode,i=b.parentNode,j=g;if(g===i)return v(a,b);if(!g)return-1;if(!i)return 1;while(j)e.unshift(j),j=j.parentNode;j=i;while(j)f.unshift(j),j=j.parentNode;c=e.length,d=f.length;for(var k=0;k&lt;c&amp;&amp;k&lt;d;k++)if(e[k]!==f[k])return v(e[k],f[k]);return k===c?v(a,f[k],-1):v(e[k],b,1)},v=function(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}),function(){var a=c.createElement(&quot;div&quot;),d=&quot;script&quot;+(new Date).getTime(),e=c.documentElement;a.innerHTML=&quot;&lt;a name=&#39;&quot;+d+&quot;&#39;/&gt;&quot;,e.insertBefore(a,e.firstChild),c.getElementById(d)&amp;&amp;(o.find.ID=function(a,c,d){if(typeof c.getElementById!=&quot;undefined&quot;&amp;&amp;!d){var e=c.getElementById(a[1]);return e?e.id===a[1]||typeof e.getAttributeNode!=&quot;undefined&quot;&amp;&amp;e.getAttributeNode(&quot;id&quot;).nodeValue===a[1]?[e]:b:[]}},o.filter.ID=function(a,b){var c=typeof a.getAttributeNode!=&quot;undefined&quot;&amp;&amp;a.getAttributeNode(&quot;id&quot;);return a.nodeType===1&amp;&amp;c&amp;&amp;c.nodeValue===b}),e.removeChild(a),e=a=null}(),function(){var a=c.createElement(&quot;div&quot;);a.appendChild(c.createComment(&quot;&quot;)),a.getElementsByTagName(&quot;*&quot;).length&gt;0&amp;&amp;(o.find.TAG=function(a,b){var c=b.getElementsByTagName(a[1]);if(a[1]===&quot;*&quot;){var d=[];for(var e=0;c[e];e++)c[e].nodeType===1&amp;&amp;d.push(c[e]);c=d}return c}),a.innerHTML=&quot;&lt;a href=&#39;#&#39;&gt;&lt;/a&gt;&quot;,a.firstChild&amp;&amp;typeof a.firstChild.getAttribute!=&quot;undefined&quot;&amp;&amp;a.firstChild.getAttribute(&quot;href&quot;)!==&quot;#&quot;&amp;&amp;(o.attrHandle.href=function(a){return a.getAttribute(&quot;href&quot;,2)}),a=null}(),c.querySelectorAll&amp;&amp;function(){var a=m,b=c.createElement(&quot;div&quot;),d=&quot;__sizzle__&quot;;b.innerHTML=&quot;&lt;p class=&#39;TEST&#39;&gt;&lt;/p&gt;&quot;;if(!b.querySelectorAll||b.querySelectorAll(&quot;.TEST&quot;).length!==0){m=function(b,e,f,g){e=e||c;if(!g&amp;&amp;!m.isXML(e)){var h=/^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b);if(h&amp;&amp;(e.nodeType===1||e.nodeType===9)){if(h[1])return s(e.getElementsByTagName(b),f);if(h[2]&amp;&amp;o.find.CLASS&amp;&amp;e.getElementsByClassName)return s(e.getElementsByClassName(h[2]),f)}if(e.nodeType===9){if(b===&quot;body&quot;&amp;&amp;e.body)return s([e.body],f);if(h&amp;&amp;h[3]){var i=e.getElementById(h[3]);if(!i||!i.parentNode)return s([],f);if(i.id===h[3])return s([i],f)}try{return s(e.querySelectorAll(b),f)}catch(j){}}else if(e.nodeType===1&amp;&amp;e.nodeName.toLowerCase()!==&quot;object&quot;){var k=e,l=e.getAttribute(&quot;id&quot;),n=l||d,p=e.parentNode,q=/^\s*[+~]/.test(b);l?n=n.replace(/&#39;/g,&quot;\\$&amp;&quot;):e.setAttribute(&quot;id&quot;,n),q&amp;&amp;p&amp;&amp;(e=e.parentNode);try{if(!q||p)return s(e.querySelectorAll(&quot;[id=&#39;&quot;+n+&quot;&#39;] &quot;+b),f)}catch(r){}finally{l||k.removeAttribute(&quot;id&quot;)}}}return a(b,e,f,g)};for(var e in a)m[e]=a[e];b=null}}(),function(){var a=c.documentElement,b=a.matchesSelector||a.mozMatchesSelector||a.webkitMatchesSelector||a.msMatchesSelector;if(b){var d=!b.call(c.createElement(&quot;div&quot;),&quot;div&quot;),e=!1;try{b.call(c.documentElement,&quot;[test!=&#39;&#39;]:sizzle&quot;)}catch(f){e=!0}m.matchesSelector=function(a,c){c=c.replace(/\=\s*([^&#39;&quot;\]]*)\s*\]/g,&quot;=&#39;$1&#39;]&quot;);if(!m.isXML(a))try{if(e||!o.match.PSEUDO.test(c)&amp;&amp;!/!=/.test(c)){var f=b.call(a,c);if(f||!d||a.document&amp;&amp;a.document.nodeType!==11)return f}}catch(g){}return m(c,null,null,[a]).length&gt;0}}}(),function(){var a=c.createElement(&quot;div&quot;);a.innerHTML=&quot;&lt;div class=&#39;test e&#39;&gt;&lt;/div&gt;&lt;div class=&#39;test&#39;&gt;&lt;/div&gt;&quot;;if(!!a.getElementsByClassName&amp;&amp;a.getElementsByClassName(&quot;e&quot;).length!==0){a.lastChild.className=&quot;e&quot;;if(a.getElementsByClassName(&quot;e&quot;).length===1)return;o.order.splice(1,0,&quot;CLASS&quot;),o.find.CLASS=function(a,b,c){if(typeof b.getElementsByClassName!=&quot;undefined&quot;&amp;&amp;!c)return b.getElementsByClassName(a[1])},a=null}}(),c.documentElement.contains?m.contains=function(a,b){return a!==b&amp;&amp;(a.contains?a.contains(b):!0)}:c.documentElement.compareDocumentPosition?m.contains=function(a,b){return!!(a.compareDocumentPosition(b)&amp;16)}:m.contains=function(){return!1},m.isXML=function(a){var b=(a?a.ownerDocument||a:0).documentElement;return b?b.nodeName!==&quot;HTML&quot;:!1};var y=function(a,b,c){var d,e=[],f=&quot;&quot;,g=b.nodeType?[b]:b;while(d=o.match.PSEUDO.exec(a))f+=d[0],a=a.replace(o.match.PSEUDO,&quot;&quot;);a=o.relative[a]?a+&quot;*&quot;:a;for(var h=0,i=g.length;h&lt;i;h++)m(a,g[h],e,c);return m.filter(f,e)};m.attr=f.attr,m.selectors.attrMap={},f.find=m,f.expr=m.selectors,f.expr[&quot;:&quot;]=f.expr.filters,f.unique=m.uniqueSort,f.text=m.getText,f.isXMLDoc=m.isXML,f.contains=m.contains}();var L=/Until$/,M=/^(?:parents|prevUntil|prevAll)/,N=/,/,O=/^.[^:#\[\.,]*$/,P=Array.prototype.slice,Q=f.expr.match.globalPOS,R={children:!0,contents:!0,next:!0,prev:!0};f.fn.extend({find:function(a){var b=this,c,d;if(typeof a!=&quot;string&quot;)return f(a).filter(function(){for(c=0,d=b.length;c&lt;d;c++)if(f.contains(b[c],this))return!0});var e=this.pushStack(&quot;&quot;,&quot;find&quot;,a),g,h,i;for(c=0,d=this.length;c&lt;d;c++){g=e.length,f.find(a,this[c],e);if(c&gt;0)for(h=g;h&lt;e.length;h++)for(i=0;i&lt;g;i++)if(e[i]===e[h]){e.splice(h--,1);break}}return e},has:function(a){var b=f(a);return this.filter(function(){for(var a=0,c=b.length;a&lt;c;a++)if(f.contains(this,b[a]))return!0})},not:function(a){return this.pushStack(T(this,a,!1),&quot;not&quot;,a)},filter:function(a){return this.pushStack(T(this,a,!0),&quot;filter&quot;,a)},is:function(a){return!!a&amp;&amp;(typeof a==&quot;string&quot;?Q.test(a)?f(a,this.context).index(this[0])&gt;=0:f.filter(a,this).length&gt;0:this.filter(a).length&gt;0)},closest:function(a,b){var c=[],d,e,g=this[0];if(f.isArray(a)){var h=1;while(g&amp;&amp;g.ownerDocument&amp;&amp;g!==b){for(d=0;d&lt;a.length;d++)f(g).is(a[d])&amp;&amp;c.push({selector:a[d],elem:g,level:h});g=g.parentNode,h++}return c}var i=Q.test(a)||typeof a!=&quot;string&quot;?f(a,b||this.context):0;for(d=0,e=this.length;d&lt;e;d++){g=this[d];while(g){if(i?i.index(g)&gt;-1:f.find.matchesSelector(g,a)){c.push(g);break}g=g.parentNode;if(!g||!g.ownerDocument||g===b||g.nodeType===11)break}}c=c.length&gt;1?f.unique(c):c;return this.pushStack(c,&quot;closest&quot;,a)},index:function(a){if(!a)return this[0]&amp;&amp;this[0].parentNode?this.prevAll().length:-1;if(typeof a==&quot;string&quot;)return f.inArray(this[0],f(a));return f.inArray(a.jquery?a[0]:a,this)},add:function(a,b){var c=typeof a==&quot;string&quot;?f(a,b):f.makeArray(a&amp;&amp;a.nodeType?[a]:a),d=f.merge(this.get(),c);return this.pushStack(S(c[0])||S(d[0])?d:f.unique(d))},andSelf:function(){return this.add(this.prevObject)}}),f.each({parent:function(a){var b=a.parentNode;return b&amp;&amp;b.nodeType!==11?b:null},parents:function(a){return f.dir(a,&quot;parentNode&quot;)},parentsUntil:function(a,b,c){return f.dir(a,&quot;parentNode&quot;,c)},next:function(a){return f.nth(a,2,&quot;nextSibling&quot;)},prev:function(a){return f.nth(a,2,&quot;previousSibling&quot;)},nextAll:function(a){return f.dir(a,&quot;nextSibling&quot;)},prevAll:function(a){return f.dir(a,&quot;previousSibling&quot;)},nextUntil:function(a,b,c){return f.dir(a,&quot;nextSibling&quot;,c)},prevUntil:function(a,b,c){return f.dir(a,&quot;previousSibling&quot;,c)},siblings:function(a){return f.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return f.sibling(a.firstChild)},contents:function(a){return f.nodeName(a,&quot;iframe&quot;)?a.contentDocument||a.contentWindow.document:f.makeArray(a.childNodes)}},function(a,b){f.fn[a]=function(c,d){var e=f.map(this,b,c);L.test(a)||(d=c),d&amp;&amp;typeof d==&quot;string&quot;&amp;&amp;(e=f.filter(d,e)),e=this.length&gt;1&amp;&amp;!R[a]?f.unique(e):e,(this.length&gt;1||N.test(d))&amp;&amp;M.test(a)&amp;&amp;(e=e.reverse());return this.pushStack(e,a,P.call(arguments).join(&quot;,&quot;))}}),f.extend({filter:function(a,b,c){c&amp;&amp;(a=&quot;:not(&quot;+a+&quot;)&quot;);return b.length===1?f.find.matchesSelector(b[0],a)?[b[0]]:[]:f.find.matches(a,b)},dir:function(a,c,d){var e=[],g=a[c];while(g&amp;&amp;g.nodeType!==9&amp;&amp;(d===b||g.nodeType!==1||!f(g).is(d)))g.nodeType===1&amp;&amp;e.push(g),g=g[c];return e},nth:function(a,b,c,d){b=b||1;var e=0;for(;a;a=a[c])if(a.nodeType===1&amp;&amp;++e===b)break;return a},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&amp;&amp;a!==b&amp;&amp;c.push(a);return c}});var V=&quot;abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video&quot;,W=/ jQuery\d+=&quot;(?:\d+|null)&quot;/g,X=/^\s+/,Y=/&lt;(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^&gt;]*)\/&gt;/ig,Z=/&lt;([\w:]+)/,$=/&lt;tbody/i,_=/&lt;|&amp;#?\w+;/,ba=/&lt;(?:script|style)/i,bb=/&lt;(?:script|object|embed|option|style)/i,bc=new RegExp(&quot;&lt;(?:&quot;+V+&quot;)[\\s/&gt;]&quot;,&quot;i&quot;),bd=/checked\s*(?:[^=]|=\s*.checked.)/i,be=/\/(java|ecma)script/i,bf=/^\s*&lt;!(?:\[CDATA\[|\-\-)/,bg={option:[1,&quot;&lt;select multiple=&#39;multiple&#39;&gt;&quot;,&quot;&lt;/select&gt;&quot;],legend:[1,&quot;&lt;fieldset&gt;&quot;,&quot;&lt;/fieldset&gt;&quot;],thead:[1,&quot;&lt;table&gt;&quot;,&quot;&lt;/table&gt;&quot;],tr:[2,&quot;&lt;table&gt;&lt;tbody&gt;&quot;,&quot;&lt;/tbody&gt;&lt;/table&gt;&quot;],td:[3,&quot;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&quot;,&quot;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&quot;],col:[2,&quot;&lt;table&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;colgroup&gt;&quot;,&quot;&lt;/colgroup&gt;&lt;/table&gt;&quot;],area:[1,&quot;&lt;map&gt;&quot;,&quot;&lt;/map&gt;&quot;],_default:[0,&quot;&quot;,&quot;&quot;]},bh=U(c);bg.optgroup=bg.option,bg.tbody=bg.tfoot=bg.colgroup=bg.caption=bg.thead,bg.th=bg.td,f.support.htmlSerialize||(bg._default=[1,&quot;div&lt;div&gt;&quot;,&quot;&lt;/div&gt;&quot;]),f.fn.extend({text:function(a){return f.access(this,function(a){return a===b?f.text(this):this.empty().append((this[0]&amp;&amp;this[0].ownerDocument||c).createTextNode(a))},null,a,arguments.length)},wrapAll:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapAll(a.call(this,b))});if(this[0]){var b=f(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&amp;&amp;b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&amp;&amp;a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapInner(a.call(this,b))});return this.each(function(){var b=f(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=f.isFunction(a);return this.each(function(c){f(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){f.nodeName(this,&quot;body&quot;)||f(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&amp;&amp;this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&amp;&amp;this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&amp;&amp;this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=f</div><div class='line' id='LC5'>.clean(arguments);a.push.apply(a,this.toArray());return this.pushStack(a,&quot;before&quot;,arguments)}},after:function(){if(this[0]&amp;&amp;this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=this.pushStack(this,&quot;after&quot;,arguments);a.push.apply(a,f.clean(arguments));return a}},remove:function(a,b){for(var c=0,d;(d=this[c])!=null;c++)if(!a||f.filter(a,[d]).length)!b&amp;&amp;d.nodeType===1&amp;&amp;(f.cleanData(d.getElementsByTagName(&quot;*&quot;)),f.cleanData([d])),d.parentNode&amp;&amp;d.parentNode.removeChild(d);return this},empty:function(){for(var a=0,b;(b=this[a])!=null;a++){b.nodeType===1&amp;&amp;f.cleanData(b.getElementsByTagName(&quot;*&quot;));while(b.firstChild)b.removeChild(b.firstChild)}return this},clone:function(a,b){a=a==null?!1:a,b=b==null?a:b;return this.map(function(){return f.clone(this,a,b)})},html:function(a){return f.access(this,function(a){var c=this[0]||{},d=0,e=this.length;if(a===b)return c.nodeType===1?c.innerHTML.replace(W,&quot;&quot;):null;if(typeof a==&quot;string&quot;&amp;&amp;!ba.test(a)&amp;&amp;(f.support.leadingWhitespace||!X.test(a))&amp;&amp;!bg[(Z.exec(a)||[&quot;&quot;,&quot;&quot;])[1].toLowerCase()]){a=a.replace(Y,&quot;&lt;$1&gt;&lt;/$2&gt;&quot;);try{for(;d&lt;e;d++)c=this[d]||{},c.nodeType===1&amp;&amp;(f.cleanData(c.getElementsByTagName(&quot;*&quot;)),c.innerHTML=a);c=0}catch(g){}}c&amp;&amp;this.empty().append(a)},null,a,arguments.length)},replaceWith:function(a){if(this[0]&amp;&amp;this[0].parentNode){if(f.isFunction(a))return this.each(function(b){var c=f(this),d=c.html();c.replaceWith(a.call(this,b,d))});typeof a!=&quot;string&quot;&amp;&amp;(a=f(a).detach());return this.each(function(){var b=this.nextSibling,c=this.parentNode;f(this).remove(),b?f(b).before(a):f(c).append(a)})}return this.length?this.pushStack(f(f.isFunction(a)?a():a),&quot;replaceWith&quot;,a):this},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){var e,g,h,i,j=a[0],k=[];if(!f.support.checkClone&amp;&amp;arguments.length===3&amp;&amp;typeof j==&quot;string&quot;&amp;&amp;bd.test(j))return this.each(function(){f(this).domManip(a,c,d,!0)});if(f.isFunction(j))return this.each(function(e){var g=f(this);a[0]=j.call(this,e,c?g.html():b),g.domManip(a,c,d)});if(this[0]){i=j&amp;&amp;j.parentNode,f.support.parentNode&amp;&amp;i&amp;&amp;i.nodeType===11&amp;&amp;i.childNodes.length===this.length?e={fragment:i}:e=f.buildFragment(a,this,k),h=e.fragment,h.childNodes.length===1?g=h=h.firstChild:g=h.firstChild;if(g){c=c&amp;&amp;f.nodeName(g,&quot;tr&quot;);for(var l=0,m=this.length,n=m-1;l&lt;m;l++)d.call(c?bi(this[l],g):this[l],e.cacheable||m&gt;1&amp;&amp;l&lt;n?f.clone(h,!0,!0):h)}k.length&amp;&amp;f.each(k,function(a,b){b.src?f.ajax({type:&quot;GET&quot;,global:!1,url:b.src,async:!1,dataType:&quot;script&quot;}):f.globalEval((b.text||b.textContent||b.innerHTML||&quot;&quot;).replace(bf,&quot;/*$0*/&quot;)),b.parentNode&amp;&amp;b.parentNode.removeChild(b)})}return this}}),f.buildFragment=function(a,b,d){var e,g,h,i,j=a[0];b&amp;&amp;b[0]&amp;&amp;(i=b[0].ownerDocument||b[0]),i.createDocumentFragment||(i=c),a.length===1&amp;&amp;typeof j==&quot;string&quot;&amp;&amp;j.length&lt;512&amp;&amp;i===c&amp;&amp;j.charAt(0)===&quot;&lt;&quot;&amp;&amp;!bb.test(j)&amp;&amp;(f.support.checkClone||!bd.test(j))&amp;&amp;(f.support.html5Clone||!bc.test(j))&amp;&amp;(g=!0,h=f.fragments[j],h&amp;&amp;h!==1&amp;&amp;(e=h)),e||(e=i.createDocumentFragment(),f.clean(a,i,e,d)),g&amp;&amp;(f.fragments[j]=h?e:1);return{fragment:e,cacheable:g}},f.fragments={},f.each({appendTo:&quot;append&quot;,prependTo:&quot;prepend&quot;,insertBefore:&quot;before&quot;,insertAfter:&quot;after&quot;,replaceAll:&quot;replaceWith&quot;},function(a,b){f.fn[a]=function(c){var d=[],e=f(c),g=this.length===1&amp;&amp;this[0].parentNode;if(g&amp;&amp;g.nodeType===11&amp;&amp;g.childNodes.length===1&amp;&amp;e.length===1){e[b](this[0]);return this}for(var h=0,i=e.length;h&lt;i;h++){var j=(h&gt;0?this.clone(!0):this).get();f(e[h])[b](j),d=d.concat(j)}return this.pushStack(d,a,e.selector)}}),f.extend({clone:function(a,b,c){var d,e,g,h=f.support.html5Clone||f.isXMLDoc(a)||!bc.test(&quot;&lt;&quot;+a.nodeName+&quot;&gt;&quot;)?a.cloneNode(!0):bo(a);if((!f.support.noCloneEvent||!f.support.noCloneChecked)&amp;&amp;(a.nodeType===1||a.nodeType===11)&amp;&amp;!f.isXMLDoc(a)){bk(a,h),d=bl(a),e=bl(h);for(g=0;d[g];++g)e[g]&amp;&amp;bk(d[g],e[g])}if(b){bj(a,h);if(c){d=bl(a),e=bl(h);for(g=0;d[g];++g)bj(d[g],e[g])}}d=e=null;return h},clean:function(a,b,d,e){var g,h,i,j=[];b=b||c,typeof b.createElement==&quot;undefined&quot;&amp;&amp;(b=b.ownerDocument||b[0]&amp;&amp;b[0].ownerDocument||c);for(var k=0,l;(l=a[k])!=null;k++){typeof l==&quot;number&quot;&amp;&amp;(l+=&quot;&quot;);if(!l)continue;if(typeof l==&quot;string&quot;)if(!_.test(l))l=b.createTextNode(l);else{l=l.replace(Y,&quot;&lt;$1&gt;&lt;/$2&gt;&quot;);var m=(Z.exec(l)||[&quot;&quot;,&quot;&quot;])[1].toLowerCase(),n=bg[m]||bg._default,o=n[0],p=b.createElement(&quot;div&quot;),q=bh.childNodes,r;b===c?bh.appendChild(p):U(b).appendChild(p),p.innerHTML=n[1]+l+n[2];while(o--)p=p.lastChild;if(!f.support.tbody){var s=$.test(l),t=m===&quot;table&quot;&amp;&amp;!s?p.firstChild&amp;&amp;p.firstChild.childNodes:n[1]===&quot;&lt;table&gt;&quot;&amp;&amp;!s?p.childNodes:[];for(i=t.length-1;i&gt;=0;--i)f.nodeName(t[i],&quot;tbody&quot;)&amp;&amp;!t[i].childNodes.length&amp;&amp;t[i].parentNode.removeChild(t[i])}!f.support.leadingWhitespace&amp;&amp;X.test(l)&amp;&amp;p.insertBefore(b.createTextNode(X.exec(l)[0]),p.firstChild),l=p.childNodes,p&amp;&amp;(p.parentNode.removeChild(p),q.length&gt;0&amp;&amp;(r=q[q.length-1],r&amp;&amp;r.parentNode&amp;&amp;r.parentNode.removeChild(r)))}var u;if(!f.support.appendChecked)if(l[0]&amp;&amp;typeof (u=l.length)==&quot;number&quot;)for(i=0;i&lt;u;i++)bn(l[i]);else bn(l);l.nodeType?j.push(l):j=f.merge(j,l)}if(d){g=function(a){return!a.type||be.test(a.type)};for(k=0;j[k];k++){h=j[k];if(e&amp;&amp;f.nodeName(h,&quot;script&quot;)&amp;&amp;(!h.type||be.test(h.type)))e.push(h.parentNode?h.parentNode.removeChild(h):h);else{if(h.nodeType===1){var v=f.grep(h.getElementsByTagName(&quot;script&quot;),g);j.splice.apply(j,[k+1,0].concat(v))}d.appendChild(h)}}}return j},cleanData:function(a){var b,c,d=f.cache,e=f.event.special,g=f.support.deleteExpando;for(var h=0,i;(i=a[h])!=null;h++){if(i.nodeName&amp;&amp;f.noData[i.nodeName.toLowerCase()])continue;c=i[f.expando];if(c){b=d[c];if(b&amp;&amp;b.events){for(var j in b.events)e[j]?f.event.remove(i,j):f.removeEvent(i,j,b.handle);b.handle&amp;&amp;(b.handle.elem=null)}g?delete i[f.expando]:i.removeAttribute&amp;&amp;i.removeAttribute(f.expando),delete d[c]}}}});var bp=/alpha\([^)]*\)/i,bq=/opacity=([^)]*)/,br=/([A-Z]|^ms)/g,bs=/^[\-+]?(?:\d*\.)?\d+$/i,bt=/^-?(?:\d*\.)?\d+(?!px)[^\d\s]+$/i,bu=/^([\-+])=([\-+.\de]+)/,bv=/^margin/,bw={position:&quot;absolute&quot;,visibility:&quot;hidden&quot;,display:&quot;block&quot;},bx=[&quot;Top&quot;,&quot;Right&quot;,&quot;Bottom&quot;,&quot;Left&quot;],by,bz,bA;f.fn.css=function(a,c){return f.access(this,function(a,c,d){return d!==b?f.style(a,c,d):f.css(a,c)},a,c,arguments.length&gt;1)},f.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=by(a,&quot;opacity&quot;);return c===&quot;&quot;?&quot;1&quot;:c}return a.style.opacity}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{&quot;float&quot;:f.support.cssFloat?&quot;cssFloat&quot;:&quot;styleFloat&quot;},style:function(a,c,d,e){if(!!a&amp;&amp;a.nodeType!==3&amp;&amp;a.nodeType!==8&amp;&amp;!!a.style){var g,h,i=f.camelCase(c),j=a.style,k=f.cssHooks[i];c=f.cssProps[i]||i;if(d===b){if(k&amp;&amp;&quot;get&quot;in k&amp;&amp;(g=k.get(a,!1,e))!==b)return g;return j[c]}h=typeof d,h===&quot;string&quot;&amp;&amp;(g=bu.exec(d))&amp;&amp;(d=+(g[1]+1)*+g[2]+parseFloat(f.css(a,c)),h=&quot;number&quot;);if(d==null||h===&quot;number&quot;&amp;&amp;isNaN(d))return;h===&quot;number&quot;&amp;&amp;!f.cssNumber[i]&amp;&amp;(d+=&quot;px&quot;);if(!k||!(&quot;set&quot;in k)||(d=k.set(a,d))!==b)try{j[c]=d}catch(l){}}},css:function(a,c,d){var e,g;c=f.camelCase(c),g=f.cssHooks[c],c=f.cssProps[c]||c,c===&quot;cssFloat&quot;&amp;&amp;(c=&quot;float&quot;);if(g&amp;&amp;&quot;get&quot;in g&amp;&amp;(e=g.get(a,!0,d))!==b)return e;if(by)return by(a,c)},swap:function(a,b,c){var d={},e,f;for(f in b)d[f]=a.style[f],a.style[f]=b[f];e=c.call(a);for(f in b)a.style[f]=d[f];return e}}),f.curCSS=f.css,c.defaultView&amp;&amp;c.defaultView.getComputedStyle&amp;&amp;(bz=function(a,b){var c,d,e,g,h=a.style;b=b.replace(br,&quot;-$1&quot;).toLowerCase(),(d=a.ownerDocument.defaultView)&amp;&amp;(e=d.getComputedStyle(a,null))&amp;&amp;(c=e.getPropertyValue(b),c===&quot;&quot;&amp;&amp;!f.contains(a.ownerDocument.documentElement,a)&amp;&amp;(c=f.style(a,b))),!f.support.pixelMargin&amp;&amp;e&amp;&amp;bv.test(b)&amp;&amp;bt.test(c)&amp;&amp;(g=h.width,h.width=c,c=e.width,h.width=g);return c}),c.documentElement.currentStyle&amp;&amp;(bA=function(a,b){var c,d,e,f=a.currentStyle&amp;&amp;a.currentStyle[b],g=a.style;f==null&amp;&amp;g&amp;&amp;(e=g[b])&amp;&amp;(f=e),bt.test(f)&amp;&amp;(c=g.left,d=a.runtimeStyle&amp;&amp;a.runtimeStyle.left,d&amp;&amp;(a.runtimeStyle.left=a.currentStyle.left),g.left=b===&quot;fontSize&quot;?&quot;1em&quot;:f,f=g.pixelLeft+&quot;px&quot;,g.left=c,d&amp;&amp;(a.runtimeStyle.left=d));return f===&quot;&quot;?&quot;auto&quot;:f}),by=bz||bA,f.each([&quot;height&quot;,&quot;width&quot;],function(a,b){f.cssHooks[b]={get:function(a,c,d){if(c)return a.offsetWidth!==0?bB(a,b,d):f.swap(a,bw,function(){return bB(a,b,d)})},set:function(a,b){return bs.test(b)?b+&quot;px&quot;:b}}}),f.support.opacity||(f.cssHooks.opacity={get:function(a,b){return bq.test((b&amp;&amp;a.currentStyle?a.currentStyle.filter:a.style.filter)||&quot;&quot;)?parseFloat(RegExp.$1)/100+&quot;&quot;:b?&quot;1&quot;:&quot;&quot;},set:function(a,b){var c=a.style,d=a.currentStyle,e=f.isNumeric(b)?&quot;alpha(opacity=&quot;+b*100+&quot;)&quot;:&quot;&quot;,g=d&amp;&amp;d.filter||c.filter||&quot;&quot;;c.zoom=1;if(b&gt;=1&amp;&amp;f.trim(g.replace(bp,&quot;&quot;))===&quot;&quot;){c.removeAttribute(&quot;filter&quot;);if(d&amp;&amp;!d.filter)return}c.filter=bp.test(g)?g.replace(bp,e):g+&quot; &quot;+e}}),f(function(){f.support.reliableMarginRight||(f.cssHooks.marginRight={get:function(a,b){return f.swap(a,{display:&quot;inline-block&quot;},function(){return b?by(a,&quot;margin-right&quot;):a.style.marginRight})}})}),f.expr&amp;&amp;f.expr.filters&amp;&amp;(f.expr.filters.hidden=function(a){var b=a.offsetWidth,c=a.offsetHeight;return b===0&amp;&amp;c===0||!f.support.reliableHiddenOffsets&amp;&amp;(a.style&amp;&amp;a.style.display||f.css(a,&quot;display&quot;))===&quot;none&quot;},f.expr.filters.visible=function(a){return!f.expr.filters.hidden(a)}),f.each({margin:&quot;&quot;,padding:&quot;&quot;,border:&quot;Width&quot;},function(a,b){f.cssHooks[a+b]={expand:function(c){var d,e=typeof c==&quot;string&quot;?c.split(&quot; &quot;):[c],f={};for(d=0;d&lt;4;d++)f[a+bx[d]+b]=e[d]||e[d-2]||e[0];return f}}});var bC=/%20/g,bD=/\[\]$/,bE=/\r?\n/g,bF=/#.*$/,bG=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,bH=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,bI=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,bJ=/^(?:GET|HEAD)$/,bK=/^\/\//,bL=/\?/,bM=/&lt;script\b[^&lt;]*(?:(?!&lt;\/script&gt;)&lt;[^&lt;]*)*&lt;\/script&gt;/gi,bN=/^(?:select|textarea)/i,bO=/\s+/,bP=/([?&amp;])_=[^&amp;]*/,bQ=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,bR=f.fn.load,bS={},bT={},bU,bV,bW=[&quot;*/&quot;]+[&quot;*&quot;];try{bU=e.href}catch(bX){bU=c.createElement(&quot;a&quot;),bU.href=&quot;&quot;,bU=bU.href}bV=bQ.exec(bU.toLowerCase())||[],f.fn.extend({load:function(a,c,d){if(typeof a!=&quot;string&quot;&amp;&amp;bR)return bR.apply(this,arguments);if(!this.length)return this;var e=a.indexOf(&quot; &quot;);if(e&gt;=0){var g=a.slice(e,a.length);a=a.slice(0,e)}var h=&quot;GET&quot;;c&amp;&amp;(f.isFunction(c)?(d=c,c=b):typeof c==&quot;object&quot;&amp;&amp;(c=f.param(c,f.ajaxSettings.traditional),h=&quot;POST&quot;));var i=this;f.ajax({url:a,type:h,dataType:&quot;html&quot;,data:c,complete:function(a,b,c){c=a.responseText,a.isResolved()&amp;&amp;(a.done(function(a){c=a}),i.html(g?f(&quot;&lt;div&gt;&quot;).append(c.replace(bM,&quot;&quot;)).find(g):c)),d&amp;&amp;i.each(d,[c,b,a])}});return this},serialize:function(){return f.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?f.makeArray(this.elements):this}).filter(function(){return this.name&amp;&amp;!this.disabled&amp;&amp;(this.checked||bN.test(this.nodeName)||bH.test(this.type))}).map(function(a,b){var c=f(this).val();return c==null?null:f.isArray(c)?f.map(c,function(a,c){return{name:b.name,value:a.replace(bE,&quot;\r\n&quot;)}}):{name:b.name,value:c.replace(bE,&quot;\r\n&quot;)}}).get()}}),f.each(&quot;ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend&quot;.split(&quot; &quot;),function(a,b){f.fn[b]=function(a){return this.on(b,a)}}),f.each([&quot;get&quot;,&quot;post&quot;],function(a,c){f[c]=function(a,d,e,g){f.isFunction(d)&amp;&amp;(g=g||e,e=d,d=b);return f.ajax({type:c,url:a,data:d,success:e,dataType:g})}}),f.extend({getScript:function(a,c){return f.get(a,b,c,&quot;script&quot;)},getJSON:function(a,b,c){return f.get(a,b,c,&quot;json&quot;)},ajaxSetup:function(a,b){b?b$(a,f.ajaxSettings):(b=a,a=f.ajaxSettings),b$(a,b);return a},ajaxSettings:{url:bU,isLocal:bI.test(bV[1]),global:!0,type:&quot;GET&quot;,contentType:&quot;application/x-www-form-urlencoded; charset=UTF-8&quot;,processData:!0,async:!0,accepts:{xml:&quot;application/xml, text/xml&quot;,html:&quot;text/html&quot;,text:&quot;text/plain&quot;,json:&quot;application/json, text/javascript&quot;,&quot;*&quot;:bW},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:&quot;responseXML&quot;,text:&quot;responseText&quot;},converters:{&quot;* text&quot;:a.String,&quot;text html&quot;:!0,&quot;text json&quot;:f.parseJSON,&quot;text xml&quot;:f.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:bY(bS),ajaxTransport:bY(bT),ajax:function(a,c){function w(a,c,l,m){if(s!==2){s=2,q&amp;&amp;clearTimeout(q),p=b,n=m||&quot;&quot;,v.readyState=a&gt;0?4:0;var o,r,u,w=c,x=l?ca(d,v,l):b,y,z;if(a&gt;=200&amp;&amp;a&lt;300||a===304){if(d.ifModified){if(y=v.getResponseHeader(&quot;Last-Modified&quot;))f.lastModified[k]=y;if(z=v.getResponseHeader(&quot;Etag&quot;))f.etag[k]=z}if(a===304)w=&quot;notmodified&quot;,o=!0;else try{r=cb(d,x),w=&quot;success&quot;,o=!0}catch(A){w=&quot;parsererror&quot;,u=A}}else{u=w;if(!w||a)w=&quot;error&quot;,a&lt;0&amp;&amp;(a=0)}v.status=a,v.statusText=&quot;&quot;+(c||w),o?h.resolveWith(e,[r,w,v]):h.rejectWith(e,[v,w,u]),v.statusCode(j),j=b,t&amp;&amp;g.trigger(&quot;ajax&quot;+(o?&quot;Success&quot;:&quot;Error&quot;),[v,d,o?r:u]),i.fireWith(e,[v,w]),t&amp;&amp;(g.trigger(&quot;ajaxComplete&quot;,[v,d]),--f.active||f.event.trigger(&quot;ajaxStop&quot;))}}typeof a==&quot;object&quot;&amp;&amp;(c=a,a=b),c=c||{};var d=f.ajaxSetup({},c),e=d.context||d,g=e!==d&amp;&amp;(e.nodeType||e instanceof f)?f(e):f.event,h=f.Deferred(),i=f.Callbacks(&quot;once memory&quot;),j=d.statusCode||{},k,l={},m={},n,o,p,q,r,s=0,t,u,v={readyState:0,setRequestHeader:function(a,b){if(!s){var c=a.toLowerCase();a=m[c]=m[c]||a,l[a]=b}return this},getAllResponseHeaders:function(){return s===2?n:null},getResponseHeader:function(a){var c;if(s===2){if(!o){o={};while(c=bG.exec(n))o[c[1].toLowerCase()]=c[2]}c=o[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){s||(d.mimeType=a);return this},abort:function(a){a=a||&quot;abort&quot;,p&amp;&amp;p.abort(a),w(0,a);return this}};h.promise(v),v.success=v.done,v.error=v.fail,v.complete=i.add,v.statusCode=function(a){if(a){var b;if(s&lt;2)for(b in a)j[b]=[j[b],a[b]];else b=a[v.status],v.then(b,b)}return this},d.url=((a||d.url)+&quot;&quot;).replace(bF,&quot;&quot;).replace(bK,bV[1]+&quot;//&quot;),d.dataTypes=f.trim(d.dataType||&quot;*&quot;).toLowerCase().split(bO),d.crossDomain==null&amp;&amp;(r=bQ.exec(d.url.toLowerCase()),d.crossDomain=!(!r||r[1]==bV[1]&amp;&amp;r[2]==bV[2]&amp;&amp;(r[3]||(r[1]===&quot;http:&quot;?80:443))==(bV[3]||(bV[1]===&quot;http:&quot;?80:443)))),d.data&amp;&amp;d.processData&amp;&amp;typeof d.data!=&quot;string&quot;&amp;&amp;(d.data=f.param(d.data,d.traditional)),bZ(bS,d,c,v);if(s===2)return!1;t=d.global,d.type=d.type.toUpperCase(),d.hasContent=!bJ.test(d.type),t&amp;&amp;f.active++===0&amp;&amp;f.event.trigger(&quot;ajaxStart&quot;);if(!d.hasContent){d.data&amp;&amp;(d.url+=(bL.test(d.url)?&quot;&amp;&quot;:&quot;?&quot;)+d.data,delete d.data),k=d.url;if(d.cache===!1){var x=f.now(),y=d.url.replace(bP,&quot;$1_=&quot;+x);d.url=y+(y===d.url?(bL.test(d.url)?&quot;&amp;&quot;:&quot;?&quot;)+&quot;_=&quot;+x:&quot;&quot;)}}(d.data&amp;&amp;d.hasContent&amp;&amp;d.contentType!==!1||c.contentType)&amp;&amp;v.setRequestHeader(&quot;Content-Type&quot;,d.contentType),d.ifModified&amp;&amp;(k=k||d.url,f.lastModified[k]&amp;&amp;v.setRequestHeader(&quot;If-Modified-Since&quot;,f.lastModified[k]),f.etag[k]&amp;&amp;v.setRequestHeader(&quot;If-None-Match&quot;,f.etag[k])),v.setRequestHeader(&quot;Accept&quot;,d.dataTypes[0]&amp;&amp;d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+(d.dataTypes[0]!==&quot;*&quot;?&quot;, &quot;+bW+&quot;; q=0.01&quot;:&quot;&quot;):d.accepts[&quot;*&quot;]);for(u in d.headers)v.setRequestHeader(u,d.headers[u]);if(d.beforeSend&amp;&amp;(d.beforeSend.call(e,v,d)===!1||s===2)){v.abort();return!1}for(u in{success:1,error:1,complete:1})v[u](d[u]);p=bZ(bT,d,c,v);if(!p)w(-1,&quot;No Transport&quot;);else{v.readyState=1,t&amp;&amp;g.trigger(&quot;ajaxSend&quot;,[v,d]),d.async&amp;&amp;d.timeout&gt;0&amp;&amp;(q=setTimeout(function(){v.abort(&quot;timeout&quot;)},d.timeout));try{s=1,p.send(l,w)}catch(z){if(s&lt;2)w(-1,z);else throw z}}return v},param:function(a,c){var d=[],e=function(a,b){b=f.isFunction(b)?b():b,d[d.length]=encodeURIComponent(a)+&quot;=&quot;+encodeURIComponent(b)};c===b&amp;&amp;(c=f.ajaxSettings.traditional);if(f.isArray(a)||a.jquery&amp;&amp;!f.isPlainObject(a))f.each(a,function(){e(this.name,this.value)});else for(var g in a)b_(g,a[g],c,e);return d.join(&quot;&amp;&quot;).replace(bC,&quot;+&quot;)}}),f.extend({active:0,lastModified:{},etag:{}});var cc=f.now(),cd=/(\=)\?(&amp;|$)|\?\?/i;f.ajaxSetup({jsonp:&quot;callback&quot;,jsonpCallback:function(){return f.expando+&quot;_&quot;+cc++}}),f.ajaxPrefilter(&quot;json jsonp&quot;,function(b,c,d){var e=typeof b.data==&quot;string&quot;&amp;&amp;/^application\/x\-www\-form\-urlencoded/.test(b.contentType);if(b.dataTypes[0]===&quot;jsonp&quot;||b.jsonp!==!1&amp;&amp;(cd.test(b.url)||e&amp;&amp;cd.test(b.data))){var g,h=b.jsonpCallback=f.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,i=a[h],j=b.url,k=b.data,l=&quot;$1&quot;+h+&quot;$2&quot;;b.jsonp!==!1&amp;&amp;(j=j.replace(cd,l),b.url===j&amp;&amp;(e&amp;&amp;(k=k.replace(cd,l)),b.data===k&amp;&amp;(j+=(/\?/.test(j)?&quot;&amp;&quot;:&quot;?&quot;)+b.jsonp+&quot;=&quot;+h))),b.url=j,b.data=k,a[h]=function(a){g=[a]},d.always(function(){a[h]=i,g&amp;&amp;f.isFunction(i)&amp;&amp;a[h](g[0])}),b.converters[&quot;script json&quot;]=function(){g||f.error(h+&quot; was not called&quot;);return g[0]},b.dataTypes[0]=&quot;json&quot;;return&quot;script&quot;}}),f.ajaxSetup({accepts:{script:&quot;text/javascript, application/javascript, application/ecmascript, application/x-ecmascript&quot;},contents:{script:/javascript|ecmascript/},converters:{&quot;text script&quot;:function(a){f.globalEval(a);return a}}}),f.ajaxPrefilter(&quot;script&quot;,function(a){a.cache===b&amp;&amp;(a.cache=!1),a.crossDomain&amp;&amp;(a.type=&quot;GET&quot;,a.global=!1)}),f.ajaxTransport(&quot;script&quot;,function(a){if(a.crossDomain){var d,e=c.head||c.getElementsByTagName(&quot;head&quot;)[0]||c.documentElement;return{send:function(f,g){d=c.createElement(&quot;script&quot;),d.async=&quot;async&quot;,a.scriptCharset&amp;&amp;(d.charset=a.scriptCharset),d.src=a.url,d.onload=d.onreadystatechange=function(a,c){if(c||!d.readyState||/loaded|complete/.test(d.readyState))d.onload=d.onreadystatechange=null,e&amp;&amp;d.parentNode&amp;&amp;e.removeChild(d),d=b,c||g(200,&quot;success&quot;)},e.insertBefore(d,e.firstChild)},abort:function(){d&amp;&amp;d.onload(0,1)}}}});var ce=a.ActiveXObject?function(){for(var a in cg)cg[a](0,1)}:!1,cf=0,cg;f.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&amp;&amp;ch()||ci()}:ch,function(a){f.extend(f.support,{ajax:!!a,cors:!!a&amp;&amp;&quot;withCredentials&quot;in a})}(f.ajaxSettings.xhr()),f.support.ajax&amp;&amp;f.ajaxTransport(function(c){if(!c.crossDomain||f.support.cors){var d;return{send:function(e,g){var h=c.xhr(),i,j;c.username?h.open(c.type,c.url,c.async,c.username,c.password):h.open(c.type,c.url,c.async);if(c.xhrFields)for(j in c.xhrFields)h[j]=c.xhrFields[j];c.mimeType&amp;&amp;h.overrideMimeType&amp;&amp;h.overrideMimeType(c.mimeType),!c.crossDomain&amp;&amp;!e[&quot;X-Requested-With&quot;]&amp;&amp;(e[&quot;X-Requested-With&quot;]=&quot;XMLHttpRequest&quot;);try{for(j in e)h.setRequestHeader(j,e[j])}catch(k){}h.send(c.hasContent&amp;&amp;c.data||null),d=function(a,e){var j,k,l,m,n;try{if(d&amp;&amp;(e||h.readyState===4)){d=b,i&amp;&amp;(h.onreadystatechange=f.noop,ce&amp;&amp;delete cg[i]);if(e)h.readyState!==4&amp;&amp;h.abort();else{j=h.status,l=h.getAllResponseHeaders(),m={},n=h.responseXML,n&amp;&amp;n.documentElement&amp;&amp;(m.xml=n);try{m.text=h.responseText}catch(a){}try{k=h.statusText}catch(o){k=&quot;&quot;}!j&amp;&amp;c.isLocal&amp;&amp;!c.crossDomain?j=m.text?200:404:j===1223&amp;&amp;(j=204)}}}catch(p){e||g(-1,p)}m&amp;&amp;g(j,k,m,l)},!c.async||h.readyState===4?d():(i=++cf,ce&amp;&amp;(cg||(cg={},f(a).unload(ce)),cg[i]=d),h.onreadystatechange=d)},abort:function(){d&amp;&amp;d(0,1)}}}});var cj={},ck,cl,cm=/^(?:toggle|show|hide)$/,cn=/^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,co,cp=[[&quot;height&quot;,&quot;marginTop&quot;,&quot;marginBottom&quot;,&quot;paddingTop&quot;,&quot;paddingBottom&quot;],[&quot;width&quot;,&quot;marginLeft&quot;,&quot;marginRight&quot;,&quot;paddingLeft&quot;,&quot;paddingRight&quot;],[&quot;opacity&quot;]],cq;f.fn.extend({show:function(a,b,c){var d,e;if(a||a===0)return this.animate(ct(&quot;show&quot;,3),a,b,c);for(var g=0,h=this.length;g&lt;h;g++)d=this[g],d.style&amp;&amp;(e=d.style.display,!f._data(d,&quot;olddisplay&quot;)&amp;&amp;e===&quot;none&quot;&amp;&amp;(e=d.style.display=&quot;&quot;),(e===&quot;&quot;&amp;&amp;f.css(d,&quot;display&quot;)===&quot;none&quot;||!f.contains(d.ownerDocument.documentElement,d))&amp;&amp;f._data(d,&quot;olddisplay&quot;,cu(d.nodeName)));for(g=0;g&lt;h;g++){d=this[g];if(d.style){e=d.style.display;if(e===&quot;&quot;||e===&quot;none&quot;)d.style.display=f._data(d,&quot;olddisplay&quot;)||&quot;&quot;}}return this},hide:function(a,b,c){if(a||a===0)return this.animate(ct(&quot;hide&quot;,3),a,b,c);var d,e,g=0,h=this.length;for(;g&lt;h;g++)d=this[g],d.style&amp;&amp;(e=f.css(d,&quot;display&quot;),e!==&quot;none&quot;&amp;&amp;!f._data(d,&quot;olddisplay&quot;)&amp;&amp;f._data(d,&quot;olddisplay&quot;,e));for(g=0;g&lt;h;g++)this[g].style&amp;&amp;(this[g].style.display=&quot;none&quot;);return this},_toggle:f.fn.toggle,toggle:function(a,b,c){var d=typeof a==&quot;boolean&quot;;f.isFunction(a)&amp;&amp;f.isFunction(b)?this._toggle.apply(this,arguments):a==null||d?this.each(function(){var b=d?a:f(this).is(&quot;:hidden&quot;);f(this)[b?&quot;show&quot;:&quot;hide&quot;]()}):this.animate(ct(&quot;toggle&quot;,3),a,b,c);return this},fadeTo:function(a,b,c,d){return this.filter(&quot;:hidden&quot;).css(&quot;opacity&quot;,0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){function g(){e.queue===!1&amp;&amp;f._mark(this);var b=f.extend({},e),c=this.nodeType===1,d=c&amp;&amp;f(this).is(&quot;:hidden&quot;),g,h,i,j,k,l,m,n,o,p,q;b.animatedProperties={};for(i in a){g=f.camelCase(i),i!==g&amp;&amp;(a[g]=a[i],delete a[i]);if((k=f.cssHooks[g])&amp;&amp;&quot;expand&quot;in k){l=k.expand(a[g]),delete a[g];for(i in l)i in a||(a[i]=l[i])}}for(g in a){h=a[g],f.isArray(h)?(b.animatedProperties[g]=h[1],h=a[g]=h[0]):b.animatedProperties[g]=b.specialEasing&amp;&amp;b.specialEasing[g]||b.easing||&quot;swing&quot;;if(h===&quot;hide&quot;&amp;&amp;d||h===&quot;show&quot;&amp;&amp;!d)return b.complete.call(this);c&amp;&amp;(g===&quot;height&quot;||g===&quot;width&quot;)&amp;&amp;(b.overflow=[this.style.overflow,this.style.overflowX,this.style.overflowY],f.css(this,&quot;display&quot;)===&quot;inline&quot;&amp;&amp;f.css(this,&quot;float&quot;)===&quot;none&quot;&amp;&amp;(!f.support.inlineBlockNeedsLayout||cu(this.nodeName)===&quot;inline&quot;?this.style.display=&quot;inline-block&quot;:this.style.zoom=1))}b.overflow!=null&amp;&amp;(this.style.overflow=&quot;hidden&quot;);for(i in a)j=new f.fx(this,b,i),h=a[i],cm.test(h)?(q=f._data(this,&quot;toggle&quot;+i)||(h===&quot;toggle&quot;?d?&quot;show&quot;:&quot;hide&quot;:0),q?(f._data(this,&quot;toggle&quot;+i,q===&quot;show&quot;?&quot;hide&quot;:&quot;show&quot;),j[q]()):j[h]()):(m=cn.exec(h),n=j.cur(),m?(o=parseFloat(m[2]),p=m[3]||(f.cssNumber[i]?&quot;&quot;:&quot;px&quot;),p!==&quot;px&quot;&amp;&amp;(f.style(this,i,(o||1)+p),n=(o||1)/j.cur()*n,f.style(this,i,n+p)),m[1]&amp;&amp;(o=(m[1]===&quot;-=&quot;?-1:1)*o+n),j.custom(n,o,p)):j.custom(n,h,&quot;&quot;));return!0}var e=f.speed(b,c,d);if(f.isEmptyObject(a))return this.each(e.complete,[!1]);a=f.extend({},a);return e.queue===!1?this.each(g):this.queue(e.queue,g)},stop:function(a,c,d){typeof a!=&quot;string&quot;&amp;&amp;(d=c,c=a,a=b),c&amp;&amp;a!==!1&amp;&amp;this.queue(a||&quot;fx&quot;,[]);return this.each(function(){function h(a,b,c){var e=b[c];f.removeData(a,c,!0),e.stop(d)}var b,c=!1,e=f.timers,g=f._data(this);d||f._unmark(!0,this);if(a==null)for(b in g)g[b]&amp;&amp;g[b].stop&amp;&amp;b.indexOf(&quot;.run&quot;)===b.length-4&amp;&amp;h(this,g,b);else g[b=a+&quot;.run&quot;]&amp;&amp;g[b].stop&amp;&amp;h(this,g,b);for(b=e.length;b--;)e[b].elem===this&amp;&amp;(a==null||e[b].queue===a)&amp;&amp;(d?e[b](!0):e[b].saveState(),c=!0,e.splice(b,1));(!d||!c)&amp;&amp;f.dequeue(this,a)})}}),f.each({slideDown:ct(&quot;show&quot;,1),slideUp:ct(&quot;hide&quot;,1),slideToggle:ct(&quot;toggle&quot;,1),fadeIn:{opacity:&quot;show&quot;},fadeOut:{opacity:&quot;hide&quot;},fadeToggle:{opacity:&quot;toggle&quot;}},function(a,b){f.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),f.extend({speed:function(a,b,c){var d=a&amp;&amp;typeof a==&quot;object&quot;?f.extend({},a):{complete:c||!c&amp;&amp;b||f.isFunction(a)&amp;&amp;a,duration:a,easing:c&amp;&amp;b||b&amp;&amp;!f.isFunction(b)&amp;&amp;b};d.duration=f.fx.off?0:typeof d.duration==&quot;number&quot;?d.duration:d.duration in f.fx.speeds?f.fx.speeds[d.duration]:f.fx.speeds._default;if(d.queue==null||d.queue===!0)d.queue=&quot;fx&quot;;d.old=d.complete,d.complete=function(a){f.isFunction(d.old)&amp;&amp;d.old.call(this),d.queue?f.dequeue(this,d.queue):a!==!1&amp;&amp;f._unmark(this)};return d},easing:{linear:function(a){return a},swing:function(a){return-Math.cos(a*Math.PI)/2+.5}},timers:[],fx:function(a,b,c){this.options=b,this.elem=a,this.prop=c,b.orig=b.orig||{}}}),f.fx.prototype={update:function(){this.options.step&amp;&amp;this.options.step.call(this.elem,this.now,this),(f.fx.step[this.prop]||f.fx.step._default)(this)},cur:function(){if(this.elem[this.prop]!=null&amp;&amp;(!this.elem.style||this.elem.style[this.prop]==null))return this.elem[this.prop];var a,b=f.css(this.elem,this.prop);return isNaN(a=parseFloat(b))?!b||b===&quot;auto&quot;?0:b:a},custom:function(a,c,d){function h(a){return e.step(a)}var e=this,g=f.fx;this.startTime=cq||cr(),this.end=c,this.now=this.start=a,this.pos=this.state=0,this.unit=d||this.unit||(f.cssNumber[this.prop]?&quot;&quot;:&quot;px&quot;),h.queue=this.options.queue,h.elem=this.elem,h.saveState=function(){f._data(e.elem,&quot;fxshow&quot;+e.prop)===b&amp;&amp;(e.options.hide?f._data(e.elem,&quot;fxshow&quot;+e.prop,e.start):e.options.show&amp;&amp;f._data(e.elem,&quot;fxshow&quot;+e.prop,e.end))},h()&amp;&amp;f.timers.push(h)&amp;&amp;!co&amp;&amp;(co=setInterval(g.tick,g.interval))},show:function(){var a=f._data(this.elem,&quot;fxshow&quot;+this.prop);this.options.orig[this.prop]=a||f.style(this.elem,this.prop),this.options.show=!0,a!==b?this.custom(this.cur(),a):this.custom(this.prop===&quot;width&quot;||this.prop===&quot;height&quot;?1:0,this.cur()),f(this.elem).show()},hide:function(){this.options.orig[this.prop]=f._data(this.elem,&quot;fxshow&quot;+this.prop)||f.style(this.elem,this.prop),this.options.hide=!0,this.custom(this.cur(),0)},step:function(a){var b,c,d,e=cq||cr(),g=!0,h=this.elem,i=this.options;if(a||e&gt;=i.duration+this.startTime){this.now=this.end,this.pos=this.state=1,this.update(),i.animatedProperties[this.prop]=!0;for(b in i.animatedProperties)i.animatedProperties[b]!==!0&amp;&amp;(g=!1);if(g){i.overflow!=null&amp;&amp;!f.support.shrinkWrapBlocks&amp;&amp;f.each([&quot;&quot;,&quot;X&quot;,&quot;Y&quot;],function(a,b){h.style[&quot;overflow&quot;+b]=i.overflow[a]}),i.hide&amp;&amp;f(h).hide();if(i.hide||i.show)for(b in i.animatedProperties)f.style(h,b,i.orig[b]),f.removeData(h,&quot;fxshow&quot;+b,!0),f.removeData(h,&quot;toggle&quot;+b,!0);d=i.complete,d&amp;&amp;(i.complete=!1,d.call(h))}return!1}i.duration==Infinity?this.now=e:(c=e-this.startTime,this.state=c/i.duration,this.pos=f.easing[i.animatedProperties[this.prop]](this.state,c,0,1,i.duration),this.now=this.start+(this.end-this.start)*this.pos),this.update();return!0}},f.extend(f.fx,{tick:function(){var a,b=f.timers,c=0;for(;c&lt;b.length;c++)a=b[c],!a()&amp;&amp;b[c]===a&amp;&amp;b.splice(c--,1);b.length||f.fx.stop()},interval:13,stop:function(){clearInterval(co),co=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){f.style(a.elem,&quot;opacity&quot;,a.now)},_default:function(a){a.elem.style&amp;&amp;a.elem.style[a.prop]!=null?a.elem.style[a.prop]=a.now+a.unit:a.elem[a.prop]=a.now}}}),f.each(cp.concat.apply([],cp),function(a,b){b.indexOf(&quot;margin&quot;)&amp;&amp;(f.fx.step[b]=function(a){f.style(a.elem,b,Math.max(0,a.now)+a.unit)})}),f.expr&amp;&amp;f.expr.filters&amp;&amp;(f.expr.filters.animated=function(a){return f.grep(f.timers,function(b){return a===b.elem}).length});var cv,cw=/^t(?:able|d|h)$/i,cx=/^(?:body|html)$/i;&quot;getBoundingClientRect&quot;in c.documentElement?cv=function(a,b,c,d){try{d=a.getBoundingClientRect()}catch(e){}if(!d||!f.contains(c,a))return d?{top:d.top,left:d.left}:{top:0,left:0};var g=b.body,h=cy(b),i=c.clientTop||g.clientTop||0,j=c.clientLeft||g.clientLeft||0,k=h.pageYOffset||f.support.boxModel&amp;&amp;c.scrollTop||g.scrollTop,l=h.pageXOffset||f.support.boxModel&amp;&amp;c.scrollLeft||g.scrollLeft,m=d.top+k-i,n=d.left+l-j;return{top:m,left:n}}:cv=function(a,b,c){var d,e=a.offsetParent,g=a,h=b.body,i=b.defaultView,j=i?i.getComputedStyle(a,null):a.currentStyle,k=a.offsetTop,l=a.offsetLeft;while((a=a.parentNode)&amp;&amp;a!==h&amp;&amp;a!==c){if(f.support.fixedPosition&amp;&amp;j.position===&quot;fixed&quot;)break;d=i?i.getComputedStyle(a,null):a.currentStyle,k-=a.scrollTop,l-=a.scrollLeft,a===e&amp;&amp;(k+=a.offsetTop,l+=a.offsetLeft,f.support.doesNotAddBorder&amp;&amp;(!f.support.doesAddBorderForTableAndCells||!cw.test(a.nodeName))&amp;&amp;(k+=parseFloat(d.borderTopWidth)||0,l+=parseFloat(d.borderLeftWidth)||0),g=e,e=a.offsetParent),f.support.subtractsBorderForOverflowNotVisible&amp;&amp;d.overflow!==&quot;visible&quot;&amp;&amp;(k+=parseFloat(d.borderTopWidth)||0,l+=parseFloat(d.borderLeftWidth)||0),j=d}if(j.position===&quot;relative&quot;||j.position===&quot;static&quot;)k+=h.offsetTop,l+=h.offsetLeft;f.support.fixedPosition&amp;&amp;j.position===&quot;fixed&quot;&amp;&amp;(k+=Math.max(c.scrollTop,h.scrollTop),l+=Math.max(c.scrollLeft,h.scrollLeft));return{top:k,left:l}},f.fn.offset=function(a){if(arguments.length)return a===b?this:this.each(function(b){f.offset.setOffset(this,a,b)});var c=this[0],d=c&amp;&amp;c.ownerDocument;if(!d)return null;if(c===d.body)return f.offset.bodyOffset(c);return cv(c,d,d.documentElement)},f.offset={bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;f.support.doesNotIncludeMarginInBodyOffset&amp;&amp;(b+=parseFloat(f.css(a,&quot;marginTop&quot;))||0,c+=parseFloat(f.css(a,&quot;marginLeft&quot;))||0);return{top:b,left:c}},setOffset:function(a,b,c){var d=f.css(a,&quot;position&quot;);d===&quot;static&quot;&amp;&amp;(a.style.position=&quot;relative&quot;);var e=f(a),g=e.offset(),h=f.css(a,&quot;top&quot;),i=f.css(a,&quot;left&quot;),j=(d===&quot;absolute&quot;||d===&quot;fixed&quot;)&amp;&amp;f.inArray(&quot;auto&quot;,[h,i])&gt;-1,k={},l={},m,n;j?(l=e.position(),m=l.top,n=l.left):(m=parseFloat(h)||0,n=parseFloat(i)||0),f.isFunction(b)&amp;&amp;(b=b.call(a,c,g)),b.top!=null&amp;&amp;(k.top=b.top-g.top+m),b.left!=null&amp;&amp;(k.left=b.left-g.left+n),&quot;using&quot;in b?b.using.call(a,k):e.css(k)}},f.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),c=this.offset(),d=cx.test(b[0].nodeName)?{top:0,left:0}:b.offset();c.top-=parseFloat(f.css(a,&quot;marginTop&quot;))||0,c.left-=parseFloat(f.css(a,&quot;marginLeft&quot;))||0,d.top+=parseFloat(f.css(b[0],&quot;borderTopWidth&quot;))||0,d.left+=parseFloat(f.css(b[0],&quot;borderLeftWidth&quot;))||0;return{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||c.body;while(a&amp;&amp;!cx.test(a.nodeName)&amp;&amp;f.css(a,&quot;position&quot;)===&quot;static&quot;)a=a.offsetParent;return a})}}),f.each({scrollLeft:&quot;pageXOffset&quot;,scrollTop:&quot;pageYOffset&quot;},function(a,c){var d=/Y/.test(c);f.fn[a]=function(e){return f.access(this,function(a,e,g){var h=cy(a);if(g===b)return h?c in h?h[c]:f.support.boxModel&amp;&amp;h.document.documentElement[e]||h.document.body[e]:a[e];h?h.scrollTo(d?f(h).scrollLeft():g,d?g:f(h).scrollTop()):a[e]=g},a,e,arguments.length,null)}}),f.each({Height:&quot;height&quot;,Width:&quot;width&quot;},function(a,c){var d=&quot;client&quot;+a,e=&quot;scroll&quot;+a,g=&quot;offset&quot;+a;f.fn[&quot;inner&quot;+a]=function(){var a=this[0];return a?a.style?parseFloat(f.css(a,c,&quot;padding&quot;)):this[c]():null},f.fn[&quot;outer&quot;+a]=function(a){var b=this[0];return b?b.style?parseFloat(f.css(b,c,a?&quot;margin&quot;:&quot;border&quot;)):this[c]():null},f.fn[c]=function(a){return f.access(this,function(a,c,h){var i,j,k,l;if(f.isWindow(a)){i=a.document,j=i.documentElement[d];return f.support.boxModel&amp;&amp;j||i.body&amp;&amp;i.body[d]||j}if(a.nodeType===9){i=a.documentElement;if(i[d]&gt;=i[e])return i[d];return Math.max(a.body[e],i[e],a.body[g],i[g])}if(h===b){k=f.css(a,c),l=parseFloat(k);return f.isNumeric(l)?l:k}f(a).css(c,h)},c,a,arguments.length,null)}}),a.jQuery=a.$=f,typeof define==&quot;function&quot;&amp;&amp;define.amd&amp;&amp;define.amd.jQuery&amp;&amp;define(&quot;jquery&quot;,[],function(){return f})})(window);</div><div class='line' id='LC6'>// vim: ts=4 sts=4 sw=4 expandtab</div><div class='line' id='LC7'>// -- kriskowal Kris Kowal Copyright (C) 2009-2011 MIT License</div><div class='line' id='LC8'>// -- tlrobinson Tom Robinson Copyright (C) 2009-2010 MIT License (Narwhal Project)</div><div class='line' id='LC9'>// -- dantman Daniel Friesen Copyright (C) 2010 XXX TODO License or CLA</div><div class='line' id='LC10'>// -- fschaefer Florian SchÃ¤fer Copyright (C) 2010 MIT License</div><div class='line' id='LC11'>// -- Gozala Irakli Gozalishvili Copyright (C) 2010 MIT License</div><div class='line' id='LC12'>// -- kitcambridge Kit Cambridge Copyright (C) 2011 MIT License</div><div class='line' id='LC13'>// -- kossnocorp Sasha Koss XXX TODO License or CLA</div><div class='line' id='LC14'>// -- bryanforbes Bryan Forbes XXX TODO License or CLA</div><div class='line' id='LC15'>// -- killdream Quildreen Motta Copyright (C) 2011 MIT Licence</div><div class='line' id='LC16'>// -- michaelficarra Michael Ficarra Copyright (C) 2011 3-clause BSD License</div><div class='line' id='LC17'>// -- sharkbrainguy Gerard Paapu Copyright (C) 2011 MIT License</div><div class='line' id='LC18'>// -- bbqsrc Brendan Molloy XXX TODO License or CLA</div><div class='line' id='LC19'>// -- iwyg XXX TODO License or CLA</div><div class='line' id='LC20'>// -- DomenicDenicola Domenic Denicola XXX TODO License or CLA</div><div class='line' id='LC21'>// -- xavierm02 Montillet Xavier XXX TODO License or CLA</div><div class='line' id='LC22'>// -- Raynos Raynos XXX TODO License or CLA</div><div class='line' id='LC23'>// -- samsonjs Sami Samhuri XXX TODO License or CLA</div><div class='line' id='LC24'>// -- rwldrn Rick Waldron Copyright (C) 2011 MIT License</div><div class='line' id='LC25'>// -- lexer Alexey Zakharov XXX TODO License or CLA</div><div class='line' id='LC26'><br/></div><div class='line' id='LC27'>/*!</div><div class='line' id='LC28'>&nbsp;&nbsp;&nbsp;&nbsp;Copyright (c) 2009, 280 North Inc. http://280north.com/</div><div class='line' id='LC29'>&nbsp;&nbsp;&nbsp;&nbsp;MIT License. http://github.com/280north/narwhal/blob/master/README.md</div><div class='line' id='LC30'>*/</div><div class='line' id='LC31'><br/></div><div class='line' id='LC32'>// Module systems magic dance</div><div class='line' id='LC33'>(function (definition) {</div><div class='line' id='LC34'>&nbsp;&nbsp;&nbsp;&nbsp;// RequireJS</div><div class='line' id='LC35'>&nbsp;&nbsp;&nbsp;&nbsp;if (typeof define == &quot;function&quot;) {</div><div class='line' id='LC36'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;define(definition);</div><div class='line' id='LC37'>&nbsp;&nbsp;&nbsp;&nbsp;// CommonJS and &lt;script&gt;</div><div class='line' id='LC38'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC39'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;definition();</div><div class='line' id='LC40'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC41'>})(function () {</div><div class='line' id='LC42'><br/></div><div class='line' id='LC43'>/**</div><div class='line' id='LC44'>&nbsp;* Brings an environment as close to ECMAScript 5 compliance</div><div class='line' id='LC45'>&nbsp;* as is possible with the facilities of erstwhile engines.</div><div class='line' id='LC46'>&nbsp;*</div><div class='line' id='LC47'>&nbsp;* ES5 Draft</div><div class='line' id='LC48'>&nbsp;* http://www.ecma-international.org/publications/files/drafts/tc39-2009-050.pdf</div><div class='line' id='LC49'>&nbsp;*</div><div class='line' id='LC50'>&nbsp;* NOTE: this is a draft, and as such, the URL is subject to change.  If the</div><div class='line' id='LC51'>&nbsp;* link is broken, check in the parent directory for the latest TC39 PDF.</div><div class='line' id='LC52'>&nbsp;* http://www.ecma-international.org/publications/files/drafts/</div><div class='line' id='LC53'>&nbsp;*</div><div class='line' id='LC54'>&nbsp;* Previous ES5 Draft</div><div class='line' id='LC55'>&nbsp;* http://www.ecma-international.org/publications/files/drafts/tc39-2009-025.pdf</div><div class='line' id='LC56'>&nbsp;* This is a broken link to the previous draft of ES5 on which most of the</div><div class='line' id='LC57'>&nbsp;* numbered specification references and quotes herein were taken.  Updating</div><div class='line' id='LC58'>&nbsp;* these references and quotes to reflect the new document would be a welcome</div><div class='line' id='LC59'>&nbsp;* volunteer project.</div><div class='line' id='LC60'>&nbsp;*</div><div class='line' id='LC61'>&nbsp;* @module</div><div class='line' id='LC62'>&nbsp;*/</div><div class='line' id='LC63'><br/></div><div class='line' id='LC64'>/*whatsupdoc*/</div><div class='line' id='LC65'><br/></div><div class='line' id='LC66'>//</div><div class='line' id='LC67'>// Function</div><div class='line' id='LC68'>// ========</div><div class='line' id='LC69'>//</div><div class='line' id='LC70'><br/></div><div class='line' id='LC71'>// ES-5 15.3.4.5</div><div class='line' id='LC72'>// http://www.ecma-international.org/publications/files/drafts/tc39-2009-025.pdf</div><div class='line' id='LC73'><br/></div><div class='line' id='LC74'>if (!Function.prototype.bind) {</div><div class='line' id='LC75'>&nbsp;&nbsp;&nbsp;&nbsp;Function.prototype.bind = function bind(that) { // .length is 1</div><div class='line' id='LC76'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 1. Let Target be the this value.</div><div class='line' id='LC77'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var target = this;</div><div class='line' id='LC78'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 2. If IsCallable(Target) is false, throw a TypeError exception.</div><div class='line' id='LC79'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof target != &quot;function&quot;)</div><div class='line' id='LC80'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new TypeError(); // TODO message</div><div class='line' id='LC81'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 3. Let A be a new (possibly empty) internal list of all of the</div><div class='line' id='LC82'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   argument values provided after thisArg (arg1, arg2 etc), in order.</div><div class='line' id='LC83'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// XXX slicedArgs will stand in for &quot;A&quot; if used</div><div class='line' id='LC84'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var args = slice.call(arguments, 1); // for normal call</div><div class='line' id='LC85'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 4. Let F be a new native ECMAScript object.</div><div class='line' id='LC86'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 9. Set the [[Prototype]] internal property of F to the standard</div><div class='line' id='LC87'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   built-in Function prototype object as specified in 15.3.3.1.</div><div class='line' id='LC88'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 10. Set the [[Call]] internal property of F as described in</div><div class='line' id='LC89'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   15.3.4.5.1.</div><div class='line' id='LC90'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 11. Set the [[Construct]] internal property of F as described in</div><div class='line' id='LC91'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   15.3.4.5.2.</div><div class='line' id='LC92'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 12. Set the [[HasInstance]] internal property of F as described in</div><div class='line' id='LC93'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   15.3.4.5.3.</div><div class='line' id='LC94'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 13. The [[Scope]] internal property of F is unused and need not</div><div class='line' id='LC95'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   exist.</div><div class='line' id='LC96'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var bound = function () {</div><div class='line' id='LC97'><br/></div><div class='line' id='LC98'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this instanceof bound) {</div><div class='line' id='LC99'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 15.3.4.5.2 [[Construct]]</div><div class='line' id='LC100'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// When the [[Construct]] internal method of a function object,</div><div class='line' id='LC101'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// F that was created using the bind function is called with a</div><div class='line' id='LC102'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// list of arguments ExtraArgs the following steps are taken:</div><div class='line' id='LC103'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 1. Let target be the value of F&#39;s [[TargetFunction]]</div><div class='line' id='LC104'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   internal property.</div><div class='line' id='LC105'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 2. If target has no [[Construct]] internal method, a</div><div class='line' id='LC106'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   TypeError exception is thrown.</div><div class='line' id='LC107'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 3. Let boundArgs be the value of F&#39;s [[BoundArgs]] internal</div><div class='line' id='LC108'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   property.</div><div class='line' id='LC109'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 4. Let args be a new list containing the same values as the</div><div class='line' id='LC110'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   list boundArgs in the same order followed by the same</div><div class='line' id='LC111'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   values as the list ExtraArgs in the same order.</div><div class='line' id='LC112'><br/></div><div class='line' id='LC113'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var F = function(){};</div><div class='line' id='LC114'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;F.prototype = target.prototype;</div><div class='line' id='LC115'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var self = new F;</div><div class='line' id='LC116'><br/></div><div class='line' id='LC117'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result = target.apply(</div><div class='line' id='LC118'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self,</div><div class='line' id='LC119'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args.concat(slice.call(arguments))</div><div class='line' id='LC120'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC121'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (result !== null &amp;&amp; Object(result) === result)</div><div class='line' id='LC122'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC123'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return self;</div><div class='line' id='LC124'><br/></div><div class='line' id='LC125'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC126'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 15.3.4.5.1 [[Call]]</div><div class='line' id='LC127'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// When the [[Call]] internal method of a function object, F,</div><div class='line' id='LC128'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// which was created using the bind function is called with a</div><div class='line' id='LC129'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// this value and a list of arguments ExtraArgs the following</div><div class='line' id='LC130'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// steps are taken:</div><div class='line' id='LC131'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 1. Let boundArgs be the value of F&#39;s [[BoundArgs]] internal</div><div class='line' id='LC132'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   property.</div><div class='line' id='LC133'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 2. Let boundThis be the value of F&#39;s [[BoundThis]] internal</div><div class='line' id='LC134'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   property.</div><div class='line' id='LC135'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 3. Let target be the value of F&#39;s [[TargetFunction]] internal</div><div class='line' id='LC136'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   property.</div><div class='line' id='LC137'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 4. Let args be a new list containing the same values as the list</div><div class='line' id='LC138'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   boundArgs in the same order followed by the same values as</div><div class='line' id='LC139'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   the list ExtraArgs in the same order. 5.  Return the</div><div class='line' id='LC140'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   result of calling the [[Call]] internal method of target</div><div class='line' id='LC141'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   providing boundThis as the this value and providing args</div><div class='line' id='LC142'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   as the arguments.</div><div class='line' id='LC143'><br/></div><div class='line' id='LC144'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// equiv: target.call(this, ...boundArgs, ...args)</div><div class='line' id='LC145'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return target.apply(</div><div class='line' id='LC146'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;that,</div><div class='line' id='LC147'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args.concat(slice.call(arguments))</div><div class='line' id='LC148'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC149'><br/></div><div class='line' id='LC150'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC151'><br/></div><div class='line' id='LC152'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC153'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// XXX bound.length is never writable, so don&#39;t even try</div><div class='line' id='LC154'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//</div><div class='line' id='LC155'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 16. The length own property of F is given attributes as specified in</div><div class='line' id='LC156'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   15.3.5.1.</div><div class='line' id='LC157'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// TODO</div><div class='line' id='LC158'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 17. Set the [[Extensible]] internal property of F to true.</div><div class='line' id='LC159'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// TODO</div><div class='line' id='LC160'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 18. Call the [[DefineOwnProperty]] internal method of F with</div><div class='line' id='LC161'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   arguments &quot;caller&quot;, PropertyDescriptor {[[Value]]: null,</div><div class='line' id='LC162'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   [[Writable]]: false, [[Enumerable]]: false, [[Configurable]]:</div><div class='line' id='LC163'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   false}, and false.</div><div class='line' id='LC164'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// TODO</div><div class='line' id='LC165'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 19. Call the [[DefineOwnProperty]] internal method of F with</div><div class='line' id='LC166'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   arguments &quot;arguments&quot;, PropertyDescriptor {[[Value]]: null,</div><div class='line' id='LC167'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   [[Writable]]: false, [[Enumerable]]: false, [[Configurable]]:</div><div class='line' id='LC168'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//   false}, and false.</div><div class='line' id='LC169'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// TODO</div><div class='line' id='LC170'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// NOTE Function objects created using Function.prototype.bind do not</div><div class='line' id='LC171'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// have a prototype property.</div><div class='line' id='LC172'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// XXX can&#39;t delete it in pure-js.</div><div class='line' id='LC173'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return bound;</div><div class='line' id='LC174'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC175'>}</div><div class='line' id='LC176'><br/></div><div class='line' id='LC177'>// Shortcut to an often accessed properties, in order to avoid multiple</div><div class='line' id='LC178'>// dereference that costs universally.</div><div class='line' id='LC179'>// _Please note: Shortcuts are defined after `Function.prototype.bind` as we</div><div class='line' id='LC180'>// us it in defining shortcuts.</div><div class='line' id='LC181'>var call = Function.prototype.call;</div><div class='line' id='LC182'>var prototypeOfArray = Array.prototype;</div><div class='line' id='LC183'>var prototypeOfObject = Object.prototype;</div><div class='line' id='LC184'>var slice = prototypeOfArray.slice;</div><div class='line' id='LC185'>var toString = call.bind(prototypeOfObject.toString);</div><div class='line' id='LC186'>var owns = call.bind(prototypeOfObject.hasOwnProperty);</div><div class='line' id='LC187'><br/></div><div class='line' id='LC188'>// If JS engine supports accessors creating shortcuts.</div><div class='line' id='LC189'>var defineGetter;</div><div class='line' id='LC190'>var defineSetter;</div><div class='line' id='LC191'>var lookupGetter;</div><div class='line' id='LC192'>var lookupSetter;</div><div class='line' id='LC193'>var supportsAccessors;</div><div class='line' id='LC194'>if ((supportsAccessors = owns(prototypeOfObject, &quot;__defineGetter__&quot;))) {</div><div class='line' id='LC195'>&nbsp;&nbsp;&nbsp;&nbsp;defineGetter = call.bind(prototypeOfObject.__defineGetter__);</div><div class='line' id='LC196'>&nbsp;&nbsp;&nbsp;&nbsp;defineSetter = call.bind(prototypeOfObject.__defineSetter__);</div><div class='line' id='LC197'>&nbsp;&nbsp;&nbsp;&nbsp;lookupGetter = call.bind(prototypeOfObject.__lookupGetter__);</div><div class='line' id='LC198'>&nbsp;&nbsp;&nbsp;&nbsp;lookupSetter = call.bind(prototypeOfObject.__lookupSetter__);</div><div class='line' id='LC199'>}</div><div class='line' id='LC200'><br/></div><div class='line' id='LC201'>//</div><div class='line' id='LC202'>// Array</div><div class='line' id='LC203'>// =====</div><div class='line' id='LC204'>//</div><div class='line' id='LC205'><br/></div><div class='line' id='LC206'>// ES5 15.4.3.2</div><div class='line' id='LC207'>if (!Array.isArray) {</div><div class='line' id='LC208'>&nbsp;&nbsp;&nbsp;&nbsp;Array.isArray = function isArray(obj) {</div><div class='line' id='LC209'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return toString(obj) == &quot;[object Array]&quot;;</div><div class='line' id='LC210'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC211'>}</div><div class='line' id='LC212'><br/></div><div class='line' id='LC213'>// The IsCallable() check in the Array functions</div><div class='line' id='LC214'>// has been replaced with a strict check on the</div><div class='line' id='LC215'>// internal class of the object to trap cases where</div><div class='line' id='LC216'>// the provided function was actually a regular</div><div class='line' id='LC217'>// expression literal, which in V8 and</div><div class='line' id='LC218'>// JavaScriptCore is a typeof &quot;function&quot;.  Only in</div><div class='line' id='LC219'>// V8 are regular expression literals permitted as</div><div class='line' id='LC220'>// reduce parameters, so it is desirable in the</div><div class='line' id='LC221'>// general case for the shim to match the more</div><div class='line' id='LC222'>// strict and common behavior of rejecting regular</div><div class='line' id='LC223'>// expressions.</div><div class='line' id='LC224'><br/></div><div class='line' id='LC225'>// ES5 15.4.4.18</div><div class='line' id='LC226'>// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/array/foreach</div><div class='line' id='LC227'>if (!Array.prototype.forEach) {</div><div class='line' id='LC228'>&nbsp;&nbsp;&nbsp;&nbsp;Array.prototype.forEach = function forEach(fun /*, thisp*/) {</div><div class='line' id='LC229'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var self = toObject(this),</div><div class='line' id='LC230'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;thisp = arguments[1],</div><div class='line' id='LC231'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 0,</div><div class='line' id='LC232'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length = self.length &gt;&gt;&gt; 0;</div><div class='line' id='LC233'><br/></div><div class='line' id='LC234'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If no callback function or if callback is not a callable function</div><div class='line' id='LC235'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (toString(fun) != &quot;[object Function]&quot;) {</div><div class='line' id='LC236'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new TypeError(); // TODO message</div><div class='line' id='LC237'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC238'><br/></div><div class='line' id='LC239'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (i &lt; length) {</div><div class='line' id='LC240'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (i in self) {</div><div class='line' id='LC241'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Invoke the callback function with call, passing arguments:</div><div class='line' id='LC242'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// context, property value, property key, thisArg object context</div><div class='line' id='LC243'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fun.call(thisp, self[i], i, self);</div><div class='line' id='LC244'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC245'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++;</div><div class='line' id='LC246'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC247'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC248'>}</div><div class='line' id='LC249'><br/></div><div class='line' id='LC250'>// ES5 15.4.4.19</div><div class='line' id='LC251'>// https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/map</div><div class='line' id='LC252'>if (!Array.prototype.map) {</div><div class='line' id='LC253'>&nbsp;&nbsp;&nbsp;&nbsp;Array.prototype.map = function map(fun /*, thisp*/) {</div><div class='line' id='LC254'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var self = toObject(this),</div><div class='line' id='LC255'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length = self.length &gt;&gt;&gt; 0,</div><div class='line' id='LC256'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = Array(length),</div><div class='line' id='LC257'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;thisp = arguments[1];</div><div class='line' id='LC258'><br/></div><div class='line' id='LC259'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If no callback function or if callback is not a callable function</div><div class='line' id='LC260'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (toString(fun) != &quot;[object Function]&quot;) {</div><div class='line' id='LC261'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new TypeError(); // TODO message</div><div class='line' id='LC262'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC263'><br/></div><div class='line' id='LC264'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var i = 0; i &lt; length; i++) {</div><div class='line' id='LC265'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (i in self)</div><div class='line' id='LC266'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result[i] = fun.call(thisp, self[i], i, self);</div><div class='line' id='LC267'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC268'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC269'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC270'>}</div><div class='line' id='LC271'><br/></div><div class='line' id='LC272'>// ES5 15.4.4.20</div><div class='line' id='LC273'>if (!Array.prototype.filter) {</div><div class='line' id='LC274'>&nbsp;&nbsp;&nbsp;&nbsp;Array.prototype.filter = function filter(fun /*, thisp */) {</div><div class='line' id='LC275'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var self = toObject(this),</div><div class='line' id='LC276'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length = self.length &gt;&gt;&gt; 0,</div><div class='line' id='LC277'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = [],</div><div class='line' id='LC278'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;thisp = arguments[1];</div><div class='line' id='LC279'><br/></div><div class='line' id='LC280'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If no callback function or if callback is not a callable function</div><div class='line' id='LC281'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (toString(fun) != &quot;[object Function]&quot;) {</div><div class='line' id='LC282'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new TypeError(); // TODO message</div><div class='line' id='LC283'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC284'><br/></div><div class='line' id='LC285'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var i = 0; i &lt; length; i++) {</div><div class='line' id='LC286'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (i in self &amp;&amp; fun.call(thisp, self[i], i, self))</div><div class='line' id='LC287'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.push(self[i]);</div><div class='line' id='LC288'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC289'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC290'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC291'>}</div><div class='line' id='LC292'><br/></div><div class='line' id='LC293'>// ES5 15.4.4.16</div><div class='line' id='LC294'>if (!Array.prototype.every) {</div><div class='line' id='LC295'>&nbsp;&nbsp;&nbsp;&nbsp;Array.prototype.every = function every(fun /*, thisp */) {</div><div class='line' id='LC296'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var self = toObject(this),</div><div class='line' id='LC297'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length = self.length &gt;&gt;&gt; 0,</div><div class='line' id='LC298'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;thisp = arguments[1];</div><div class='line' id='LC299'><br/></div><div class='line' id='LC300'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If no callback function or if callback is not a callable function</div><div class='line' id='LC301'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (toString(fun) != &quot;[object Function]&quot;) {</div><div class='line' id='LC302'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new TypeError(); // TODO message</div><div class='line' id='LC303'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC304'><br/></div><div class='line' id='LC305'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var i = 0; i &lt; length; i++) {</div><div class='line' id='LC306'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (i in self &amp;&amp; !fun.call(thisp, self[i], i, self))</div><div class='line' id='LC307'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC308'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC309'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC310'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC311'>}</div><div class='line' id='LC312'><br/></div><div class='line' id='LC313'>// ES5 15.4.4.17</div><div class='line' id='LC314'>// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/some</div><div class='line' id='LC315'>if (!Array.prototype.some) {</div><div class='line' id='LC316'>&nbsp;&nbsp;&nbsp;&nbsp;Array.prototype.some = function some(fun /*, thisp */) {</div><div class='line' id='LC317'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var self = toObject(this),</div><div class='line' id='LC318'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length = self.length &gt;&gt;&gt; 0,</div><div class='line' id='LC319'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;thisp = arguments[1];</div><div class='line' id='LC320'><br/></div><div class='line' id='LC321'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If no callback function or if callback is not a callable function</div><div class='line' id='LC322'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (toString(fun) != &quot;[object Function]&quot;) {</div><div class='line' id='LC323'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new TypeError(); // TODO message</div><div class='line' id='LC324'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC325'><br/></div><div class='line' id='LC326'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var i = 0; i &lt; length; i++) {</div><div class='line' id='LC327'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (i in self &amp;&amp; fun.call(thisp, self[i], i, self))</div><div class='line' id='LC328'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC329'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC330'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC331'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC332'>}</div><div class='line' id='LC333'><br/></div><div class='line' id='LC334'>// ES5 15.4.4.21</div><div class='line' id='LC335'>// https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/reduce</div><div class='line' id='LC336'>if (!Array.prototype.reduce) {</div><div class='line' id='LC337'>&nbsp;&nbsp;&nbsp;&nbsp;Array.prototype.reduce = function reduce(fun /*, initial*/) {</div><div class='line' id='LC338'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var self = toObject(this),</div><div class='line' id='LC339'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length = self.length &gt;&gt;&gt; 0;</div><div class='line' id='LC340'><br/></div><div class='line' id='LC341'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If no callback function or if callback is not a callable function</div><div class='line' id='LC342'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (toString(fun) != &quot;[object Function]&quot;) {</div><div class='line' id='LC343'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new TypeError(); // TODO message</div><div class='line' id='LC344'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC345'><br/></div><div class='line' id='LC346'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// no value to return if no initial value and an empty array</div><div class='line' id='LC347'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!length &amp;&amp; arguments.length == 1)</div><div class='line' id='LC348'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new TypeError(); // TODO message</div><div class='line' id='LC349'><br/></div><div class='line' id='LC350'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var i = 0;</div><div class='line' id='LC351'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result;</div><div class='line' id='LC352'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (arguments.length &gt;= 2) {</div><div class='line' id='LC353'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = arguments[1];</div><div class='line' id='LC354'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC355'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do {</div><div class='line' id='LC356'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (i in self) {</div><div class='line' id='LC357'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = self[i++];</div><div class='line' id='LC358'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC359'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC360'><br/></div><div class='line' id='LC361'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// if array contains no values, no initial value to return</div><div class='line' id='LC362'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (++i &gt;= length)</div><div class='line' id='LC363'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new TypeError(); // TODO message</div><div class='line' id='LC364'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} while (true);</div><div class='line' id='LC365'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC366'><br/></div><div class='line' id='LC367'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (; i &lt; length; i++) {</div><div class='line' id='LC368'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (i in self)</div><div class='line' id='LC369'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = fun.call(void 0, result, self[i], i, self);</div><div class='line' id='LC370'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC371'><br/></div><div class='line' id='LC372'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC373'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC374'>}</div><div class='line' id='LC375'><br/></div><div class='line' id='LC376'>// ES5 15.4.4.22</div><div class='line' id='LC377'>// https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/reduceRight</div><div class='line' id='LC378'>if (!Array.prototype.reduceRight) {</div><div class='line' id='LC379'>&nbsp;&nbsp;&nbsp;&nbsp;Array.prototype.reduceRight = function reduceRight(fun /*, initial*/) {</div><div class='line' id='LC380'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var self = toObject(this),</div><div class='line' id='LC381'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length = self.length &gt;&gt;&gt; 0;</div><div class='line' id='LC382'><br/></div><div class='line' id='LC383'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If no callback function or if callback is not a callable function</div><div class='line' id='LC384'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (toString(fun) != &quot;[object Function]&quot;) {</div><div class='line' id='LC385'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new TypeError(); // TODO message</div><div class='line' id='LC386'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC387'><br/></div><div class='line' id='LC388'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// no value to return if no initial value, empty array</div><div class='line' id='LC389'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!length &amp;&amp; arguments.length == 1)</div><div class='line' id='LC390'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new TypeError(); // TODO message</div><div class='line' id='LC391'><br/></div><div class='line' id='LC392'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result, i = length - 1;</div><div class='line' id='LC393'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (arguments.length &gt;= 2) {</div><div class='line' id='LC394'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = arguments[1];</div><div class='line' id='LC395'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC396'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do {</div><div class='line' id='LC397'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (i in self) {</div><div class='line' id='LC398'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = self[i--];</div><div class='line' id='LC399'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC400'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC401'><br/></div><div class='line' id='LC402'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// if array contains no values, no initial value to return</div><div class='line' id='LC403'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (--i &lt; 0)</div><div class='line' id='LC404'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new TypeError(); // TODO message</div><div class='line' id='LC405'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} while (true);</div><div class='line' id='LC406'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC407'><br/></div><div class='line' id='LC408'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do {</div><div class='line' id='LC409'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (i in this)</div><div class='line' id='LC410'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = fun.call(void 0, result, self[i], i, self);</div><div class='line' id='LC411'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} while (i--);</div><div class='line' id='LC412'><br/></div><div class='line' id='LC413'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC414'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC415'>}</div><div class='line' id='LC416'><br/></div><div class='line' id='LC417'>// ES5 15.4.4.14</div><div class='line' id='LC418'>// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf</div><div class='line' id='LC419'>if (!Array.prototype.indexOf) {</div><div class='line' id='LC420'>&nbsp;&nbsp;&nbsp;&nbsp;Array.prototype.indexOf = function indexOf(sought /*, fromIndex */ ) {</div><div class='line' id='LC421'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var self = toObject(this),</div><div class='line' id='LC422'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length = self.length &gt;&gt;&gt; 0;</div><div class='line' id='LC423'><br/></div><div class='line' id='LC424'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!length)</div><div class='line' id='LC425'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;</div><div class='line' id='LC426'><br/></div><div class='line' id='LC427'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var i = 0;</div><div class='line' id='LC428'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (arguments.length &gt; 1)</div><div class='line' id='LC429'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = toInteger(arguments[1]);</div><div class='line' id='LC430'><br/></div><div class='line' id='LC431'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// handle negative indices</div><div class='line' id='LC432'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = i &gt;= 0 ? i : length - Math.abs(i);</div><div class='line' id='LC433'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (; i &lt; length; i++) {</div><div class='line' id='LC434'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (i in self &amp;&amp; self[i] === sought) {</div><div class='line' id='LC435'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return i;</div><div class='line' id='LC436'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC437'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC438'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;</div><div class='line' id='LC439'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC440'>}</div><div class='line' id='LC441'><br/></div><div class='line' id='LC442'>// ES5 15.4.4.15</div><div class='line' id='LC443'>if (!Array.prototype.lastIndexOf) {</div><div class='line' id='LC444'>&nbsp;&nbsp;&nbsp;&nbsp;Array.prototype.lastIndexOf = function lastIndexOf(sought /*, fromIndex */) {</div><div class='line' id='LC445'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var self = toObject(this),</div><div class='line' id='LC446'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length = self.length &gt;&gt;&gt; 0;</div><div class='line' id='LC447'><br/></div><div class='line' id='LC448'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!length)</div><div class='line' id='LC449'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;</div><div class='line' id='LC450'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var i = length - 1;</div><div class='line' id='LC451'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (arguments.length &gt; 1)</div><div class='line' id='LC452'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = toInteger(arguments[1]);</div><div class='line' id='LC453'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// handle negative indices</div><div class='line' id='LC454'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = i &gt;= 0 ? i : length - Math.abs(i);</div><div class='line' id='LC455'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (; i &gt;= 0; i--) {</div><div class='line' id='LC456'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (i in self &amp;&amp; sought === self[i])</div><div class='line' id='LC457'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return i;</div><div class='line' id='LC458'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC459'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;</div><div class='line' id='LC460'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC461'>}</div><div class='line' id='LC462'><br/></div><div class='line' id='LC463'>//</div><div class='line' id='LC464'>// Object</div><div class='line' id='LC465'>// ======</div><div class='line' id='LC466'>//</div><div class='line' id='LC467'><br/></div><div class='line' id='LC468'>// ES5 15.2.3.2</div><div class='line' id='LC469'>if (!Object.getPrototypeOf) {</div><div class='line' id='LC470'>&nbsp;&nbsp;&nbsp;&nbsp;// https://github.com/kriskowal/es5-shim/issues#issue/2</div><div class='line' id='LC471'>&nbsp;&nbsp;&nbsp;&nbsp;// http://ejohn.org/blog/objectgetprototypeof/</div><div class='line' id='LC472'>&nbsp;&nbsp;&nbsp;&nbsp;// recommended by fschaefer on github</div><div class='line' id='LC473'>&nbsp;&nbsp;&nbsp;&nbsp;Object.getPrototypeOf = function getPrototypeOf(object) {</div><div class='line' id='LC474'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return object.__proto__ || (</div><div class='line' id='LC475'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object.constructor ?</div><div class='line' id='LC476'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object.constructor.prototype :</div><div class='line' id='LC477'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;prototypeOfObject</div><div class='line' id='LC478'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC479'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC480'>}</div><div class='line' id='LC481'><br/></div><div class='line' id='LC482'>// ES5 15.2.3.3</div><div class='line' id='LC483'>if (!Object.getOwnPropertyDescriptor) {</div><div class='line' id='LC484'>&nbsp;&nbsp;&nbsp;&nbsp;var ERR_NON_OBJECT = &quot;Object.getOwnPropertyDescriptor called on a &quot; +</div><div class='line' id='LC485'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;non-object: &quot;;</div><div class='line' id='LC486'>&nbsp;&nbsp;&nbsp;&nbsp;Object.getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {</div><div class='line' id='LC487'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((typeof object != &quot;object&quot; &amp;&amp; typeof object != &quot;function&quot;) || object === null)</div><div class='line' id='LC488'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new TypeError(ERR_NON_OBJECT + object);</div><div class='line' id='LC489'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If object does not owns property return undefined immediately.</div><div class='line' id='LC490'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!owns(object, property))</div><div class='line' id='LC491'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC492'><br/></div><div class='line' id='LC493'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var descriptor, getter, setter;</div><div class='line' id='LC494'><br/></div><div class='line' id='LC495'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If object has a property then it&#39;s for sure both `enumerable` and</div><div class='line' id='LC496'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// `configurable`.</div><div class='line' id='LC497'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;descriptor =  { enumerable: true, configurable: true };</div><div class='line' id='LC498'><br/></div><div class='line' id='LC499'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If JS engine supports accessor properties then property may be a</div><div class='line' id='LC500'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// getter or setter.</div><div class='line' id='LC501'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (supportsAccessors) {</div><div class='line' id='LC502'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Unfortunately `__lookupGetter__` will return a getter even</div><div class='line' id='LC503'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// if object has own non getter property along with a same named</div><div class='line' id='LC504'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// inherited getter. To avoid misbehavior we temporary remove</div><div class='line' id='LC505'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// `__proto__` so that `__lookupGetter__` will return getter only</div><div class='line' id='LC506'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// if it&#39;s owned by an object.</div><div class='line' id='LC507'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var prototype = object.__proto__;</div><div class='line' id='LC508'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object.__proto__ = prototypeOfObject;</div><div class='line' id='LC509'><br/></div><div class='line' id='LC510'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var getter = lookupGetter(object, property);</div><div class='line' id='LC511'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var setter = lookupSetter(object, property);</div><div class='line' id='LC512'><br/></div><div class='line' id='LC513'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Once we have getter and setter we can put values back.</div><div class='line' id='LC514'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object.__proto__ = prototype;</div><div class='line' id='LC515'><br/></div><div class='line' id='LC516'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (getter || setter) {</div><div class='line' id='LC517'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (getter) descriptor.get = getter;</div><div class='line' id='LC518'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (setter) descriptor.set = setter;</div><div class='line' id='LC519'><br/></div><div class='line' id='LC520'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If it was accessor property we&#39;re done and return here</div><div class='line' id='LC521'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// in order to avoid adding `value` to the descriptor.</div><div class='line' id='LC522'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return descriptor;</div><div class='line' id='LC523'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC524'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC525'><br/></div><div class='line' id='LC526'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If we got this far we know that object has an own property that is</div><div class='line' id='LC527'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// not an accessor so we set it as a value and return descriptor.</div><div class='line' id='LC528'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;descriptor.value = object[property];</div><div class='line' id='LC529'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return descriptor;</div><div class='line' id='LC530'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC531'>}</div><div class='line' id='LC532'><br/></div><div class='line' id='LC533'>// ES5 15.2.3.4</div><div class='line' id='LC534'>if (!Object.getOwnPropertyNames) {</div><div class='line' id='LC535'>&nbsp;&nbsp;&nbsp;&nbsp;Object.getOwnPropertyNames = function getOwnPropertyNames(object) {</div><div class='line' id='LC536'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Object.keys(object);</div><div class='line' id='LC537'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC538'>}</div><div class='line' id='LC539'><br/></div><div class='line' id='LC540'>// ES5 15.2.3.5</div><div class='line' id='LC541'>if (!Object.create) {</div><div class='line' id='LC542'>&nbsp;&nbsp;&nbsp;&nbsp;Object.create = function create(prototype, properties) {</div><div class='line' id='LC543'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var object;</div><div class='line' id='LC544'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (prototype === null) {</div><div class='line' id='LC545'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object = { &quot;__proto__&quot;: null };</div><div class='line' id='LC546'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC547'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof prototype != &quot;object&quot;)</div><div class='line' id='LC548'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new TypeError(&quot;typeof prototype[&quot;+(typeof prototype)+&quot;] != &#39;object&#39;&quot;);</div><div class='line' id='LC549'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var Type = function () {};</div><div class='line' id='LC550'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Type.prototype = prototype;</div><div class='line' id='LC551'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object = new Type();</div><div class='line' id='LC552'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// IE has no built-in implementation of `Object.getPrototypeOf`</div><div class='line' id='LC553'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// neither `__proto__`, but this manually setting `__proto__` will</div><div class='line' id='LC554'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// guarantee that `Object.getPrototypeOf` will work as expected with</div><div class='line' id='LC555'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// objects created using `Object.create`</div><div class='line' id='LC556'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object.__proto__ = prototype;</div><div class='line' id='LC557'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC558'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (properties !== void 0)</div><div class='line' id='LC559'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Object.defineProperties(object, properties);</div><div class='line' id='LC560'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return object;</div><div class='line' id='LC561'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC562'>}</div><div class='line' id='LC563'><br/></div><div class='line' id='LC564'>// ES5 15.2.3.6</div><div class='line' id='LC565'><br/></div><div class='line' id='LC566'>// Patch for WebKit and IE8 standard mode</div><div class='line' id='LC567'>// Designed by hax &lt;hax.github.com&gt;</div><div class='line' id='LC568'>// related issue: https://github.com/kriskowal/es5-shim/issues#issue/5</div><div class='line' id='LC569'>// IE8 Reference:</div><div class='line' id='LC570'>//     http://msdn.microsoft.com/en-us/library/dd282900.aspx</div><div class='line' id='LC571'>//     http://msdn.microsoft.com/en-us/library/dd229916.aspx</div><div class='line' id='LC572'>// WebKit Bugs:</div><div class='line' id='LC573'>//     https://bugs.webkit.org/show_bug.cgi?id=36423</div><div class='line' id='LC574'><br/></div><div class='line' id='LC575'>function doesDefinePropertyWork(object) {</div><div class='line' id='LC576'>&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC577'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Object.defineProperty(object, &quot;sentinel&quot;, {});</div><div class='line' id='LC578'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;sentinel&quot; in object;</div><div class='line' id='LC579'>&nbsp;&nbsp;&nbsp;&nbsp;} catch (exception) {</div><div class='line' id='LC580'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// returns falsy</div><div class='line' id='LC581'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC582'>}</div><div class='line' id='LC583'><br/></div><div class='line' id='LC584'>// check whether defineProperty works if it&#39;s given. Otherwise,</div><div class='line' id='LC585'>// shim partially.</div><div class='line' id='LC586'>if (Object.defineProperty) {</div><div class='line' id='LC587'>&nbsp;&nbsp;&nbsp;&nbsp;var definePropertyWorksOnObject = doesDefinePropertyWork({});</div><div class='line' id='LC588'>&nbsp;&nbsp;&nbsp;&nbsp;var definePropertyWorksOnDom = typeof document == &quot;undefined&quot; ||</div><div class='line' id='LC589'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;doesDefinePropertyWork(document.createElement(&quot;div&quot;));</div><div class='line' id='LC590'>&nbsp;&nbsp;&nbsp;&nbsp;if (!definePropertyWorksOnObject || !definePropertyWorksOnDom) {</div><div class='line' id='LC591'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var definePropertyFallback = Object.defineProperty;</div><div class='line' id='LC592'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC593'>}</div><div class='line' id='LC594'><br/></div><div class='line' id='LC595'>if (!Object.defineProperty || definePropertyFallback) {</div><div class='line' id='LC596'>&nbsp;&nbsp;&nbsp;&nbsp;var ERR_NON_OBJECT_DESCRIPTOR = &quot;Property description must be an object: &quot;;</div><div class='line' id='LC597'>&nbsp;&nbsp;&nbsp;&nbsp;var ERR_NON_OBJECT_TARGET = &quot;Object.defineProperty called on non-object: &quot;</div><div class='line' id='LC598'>&nbsp;&nbsp;&nbsp;&nbsp;var ERR_ACCESSORS_NOT_SUPPORTED = &quot;getters &amp; setters can not be defined &quot; +</div><div class='line' id='LC599'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;on this javascript engine&quot;;</div><div class='line' id='LC600'><br/></div><div class='line' id='LC601'>&nbsp;&nbsp;&nbsp;&nbsp;Object.defineProperty = function defineProperty(object, property, descriptor) {</div><div class='line' id='LC602'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((typeof object != &quot;object&quot; &amp;&amp; typeof object != &quot;function&quot;) || object === null)</div><div class='line' id='LC603'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new TypeError(ERR_NON_OBJECT_TARGET + object);</div><div class='line' id='LC604'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((typeof descriptor != &quot;object&quot; &amp;&amp; typeof descriptor != &quot;function&quot;) || descriptor === null)</div><div class='line' id='LC605'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new TypeError(ERR_NON_OBJECT_DESCRIPTOR + descriptor);</div><div class='line' id='LC606'><br/></div><div class='line' id='LC607'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// make a valiant attempt to use the real defineProperty</div><div class='line' id='LC608'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// for I8&#39;s DOM elements.</div><div class='line' id='LC609'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (definePropertyFallback) {</div><div class='line' id='LC610'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC611'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return definePropertyFallback.call(Object, object, property, descriptor);</div><div class='line' id='LC612'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (exception) {</div><div class='line' id='LC613'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// try the shim if the real one doesn&#39;t work</div><div class='line' id='LC614'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC615'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC616'><br/></div><div class='line' id='LC617'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If it&#39;s a data property.</div><div class='line' id='LC618'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (owns(descriptor, &quot;value&quot;)) {</div><div class='line' id='LC619'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// fail silently if &quot;writable&quot;, &quot;enumerable&quot;, or &quot;configurable&quot;</div><div class='line' id='LC620'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// are requested but not supported</div><div class='line' id='LC621'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*</div><div class='line' id='LC622'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// alternate approach:</div><div class='line' id='LC623'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( // can&#39;t implement these features; allow false but not true</div><div class='line' id='LC624'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;!(owns(descriptor, &quot;writable&quot;) ? descriptor.writable : true) ||</div><div class='line' id='LC625'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;!(owns(descriptor, &quot;enumerable&quot;) ? descriptor.enumerable : true) ||</div><div class='line' id='LC626'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;!(owns(descriptor, &quot;configurable&quot;) ? descriptor.configurable : true)</div><div class='line' id='LC627'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</div><div class='line' id='LC628'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new RangeError(</div><div class='line' id='LC629'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;This implementation of Object.defineProperty does not &quot; +</div><div class='line' id='LC630'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;support configurable, enumerable, or writable.&quot;</div><div class='line' id='LC631'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC632'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC633'><br/></div><div class='line' id='LC634'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (supportsAccessors &amp;&amp; (lookupGetter(object, property) ||</div><div class='line' id='LC635'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lookupSetter(object, property)))</div><div class='line' id='LC636'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</div><div class='line' id='LC637'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// As accessors are supported only on engines implementing</div><div class='line' id='LC638'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// `__proto__` we can safely override `__proto__` while defining</div><div class='line' id='LC639'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// a property to make sure that we don&#39;t hit an inherited</div><div class='line' id='LC640'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// accessor.</div><div class='line' id='LC641'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var prototype = object.__proto__;</div><div class='line' id='LC642'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object.__proto__ = prototypeOfObject;</div><div class='line' id='LC643'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Deleting a property anyway since getter / setter may be</div><div class='line' id='LC644'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// defined on object itself.</div><div class='line' id='LC645'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete object[property];</div><div class='line' id='LC646'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object[property] = descriptor.value;</div><div class='line' id='LC647'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Setting original `__proto__` back now.</div><div class='line' id='LC648'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object.__proto__ = prototype;</div><div class='line' id='LC649'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC650'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object[property] = descriptor.value;</div><div class='line' id='LC651'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC652'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC653'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!supportsAccessors)</div><div class='line' id='LC654'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);</div><div class='line' id='LC655'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If we got that far then getters and setters can be defined !!</div><div class='line' id='LC656'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (owns(descriptor, &quot;get&quot;))</div><div class='line' id='LC657'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;defineGetter(object, property, descriptor.get);</div><div class='line' id='LC658'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (owns(descriptor, &quot;set&quot;))</div><div class='line' id='LC659'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;defineSetter(object, property, descriptor.set);</div><div class='line' id='LC660'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC661'><br/></div><div class='line' id='LC662'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return object;</div><div class='line' id='LC663'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC664'>}</div><div class='line' id='LC665'><br/></div><div class='line' id='LC666'>// ES5 15.2.3.7</div><div class='line' id='LC667'>if (!Object.defineProperties) {</div><div class='line' id='LC668'>&nbsp;&nbsp;&nbsp;&nbsp;Object.defineProperties = function defineProperties(object, properties) {</div><div class='line' id='LC669'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var property in properties) {</div><div class='line' id='LC670'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (owns(properties, property))</div><div class='line' id='LC671'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Object.defineProperty(object, property, properties[property]);</div><div class='line' id='LC672'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC673'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return object;</div><div class='line' id='LC674'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC675'>}</div><div class='line' id='LC676'><br/></div><div class='line' id='LC677'>// ES5 15.2.3.8</div><div class='line' id='LC678'>if (!Object.seal) {</div><div class='line' id='LC679'>&nbsp;&nbsp;&nbsp;&nbsp;Object.seal = function seal(object) {</div><div class='line' id='LC680'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// this is misleading and breaks feature-detection, but</div><div class='line' id='LC681'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// allows &quot;securable&quot; code to &quot;gracefully&quot; degrade to working</div><div class='line' id='LC682'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// but insecure code.</div><div class='line' id='LC683'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return object;</div><div class='line' id='LC684'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC685'>}</div><div class='line' id='LC686'><br/></div><div class='line' id='LC687'>// ES5 15.2.3.9</div><div class='line' id='LC688'>if (!Object.freeze) {</div><div class='line' id='LC689'>&nbsp;&nbsp;&nbsp;&nbsp;Object.freeze = function freeze(object) {</div><div class='line' id='LC690'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// this is misleading and breaks feature-detection, but</div><div class='line' id='LC691'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// allows &quot;securable&quot; code to &quot;gracefully&quot; degrade to working</div><div class='line' id='LC692'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// but insecure code.</div><div class='line' id='LC693'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return object;</div><div class='line' id='LC694'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC695'>}</div><div class='line' id='LC696'><br/></div><div class='line' id='LC697'>// detect a Rhino bug and patch it</div><div class='line' id='LC698'>try {</div><div class='line' id='LC699'>&nbsp;&nbsp;&nbsp;&nbsp;Object.freeze(function () {});</div><div class='line' id='LC700'>} catch (exception) {</div><div class='line' id='LC701'>&nbsp;&nbsp;&nbsp;&nbsp;Object.freeze = (function freeze(freezeObject) {</div><div class='line' id='LC702'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function freeze(object) {</div><div class='line' id='LC703'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof object == &quot;function&quot;) {</div><div class='line' id='LC704'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return object;</div><div class='line' id='LC705'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC706'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return freezeObject(object);</div><div class='line' id='LC707'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC708'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC709'>&nbsp;&nbsp;&nbsp;&nbsp;})(Object.freeze);</div><div class='line' id='LC710'>}</div><div class='line' id='LC711'><br/></div><div class='line' id='LC712'>// ES5 15.2.3.10</div><div class='line' id='LC713'>if (!Object.preventExtensions) {</div><div class='line' id='LC714'>&nbsp;&nbsp;&nbsp;&nbsp;Object.preventExtensions = function preventExtensions(object) {</div><div class='line' id='LC715'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// this is misleading and breaks feature-detection, but</div><div class='line' id='LC716'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// allows &quot;securable&quot; code to &quot;gracefully&quot; degrade to working</div><div class='line' id='LC717'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// but insecure code.</div><div class='line' id='LC718'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return object;</div><div class='line' id='LC719'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC720'>}</div><div class='line' id='LC721'><br/></div><div class='line' id='LC722'>// ES5 15.2.3.11</div><div class='line' id='LC723'>if (!Object.isSealed) {</div><div class='line' id='LC724'>&nbsp;&nbsp;&nbsp;&nbsp;Object.isSealed = function isSealed(object) {</div><div class='line' id='LC725'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC726'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC727'>}</div><div class='line' id='LC728'><br/></div><div class='line' id='LC729'>// ES5 15.2.3.12</div><div class='line' id='LC730'>if (!Object.isFrozen) {</div><div class='line' id='LC731'>&nbsp;&nbsp;&nbsp;&nbsp;Object.isFrozen = function isFrozen(object) {</div><div class='line' id='LC732'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC733'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC734'>}</div><div class='line' id='LC735'><br/></div><div class='line' id='LC736'>// ES5 15.2.3.13</div><div class='line' id='LC737'>if (!Object.isExtensible) {</div><div class='line' id='LC738'>&nbsp;&nbsp;&nbsp;&nbsp;Object.isExtensible = function isExtensible(object) {</div><div class='line' id='LC739'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 1. If Type(O) is not Object throw a TypeError exception.</div><div class='line' id='LC740'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Object(object) === object) {</div><div class='line' id='LC741'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new TypeError(); // TODO message</div><div class='line' id='LC742'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC743'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 2. Return the Boolean value of the [[Extensible]] internal property of O.</div><div class='line' id='LC744'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var name = &#39;&#39;;</div><div class='line' id='LC745'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (owns(object, name)) {</div><div class='line' id='LC746'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name += &#39;?&#39;;</div><div class='line' id='LC747'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC748'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object[name] = true;</div><div class='line' id='LC749'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var returnValue = owns(object, name);</div><div class='line' id='LC750'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete object[name];</div><div class='line' id='LC751'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return returnValue;</div><div class='line' id='LC752'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC753'>}</div><div class='line' id='LC754'><br/></div><div class='line' id='LC755'>// ES5 15.2.3.14</div><div class='line' id='LC756'>// http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation</div><div class='line' id='LC757'>if (!Object.keys) {</div><div class='line' id='LC758'><br/></div><div class='line' id='LC759'>&nbsp;&nbsp;&nbsp;&nbsp;var hasDontEnumBug = true,</div><div class='line' id='LC760'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dontEnums = [</div><div class='line' id='LC761'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;toString&quot;,</div><div class='line' id='LC762'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;toLocaleString&quot;,</div><div class='line' id='LC763'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;valueOf&quot;,</div><div class='line' id='LC764'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;hasOwnProperty&quot;,</div><div class='line' id='LC765'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;isPrototypeOf&quot;,</div><div class='line' id='LC766'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;propertyIsEnumerable&quot;,</div><div class='line' id='LC767'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;constructor&quot;</div><div class='line' id='LC768'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;],</div><div class='line' id='LC769'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dontEnumsLength = dontEnums.length;</div><div class='line' id='LC770'><br/></div><div class='line' id='LC771'>&nbsp;&nbsp;&nbsp;&nbsp;for (var key in {&quot;toString&quot;: null})</div><div class='line' id='LC772'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hasDontEnumBug = false;</div><div class='line' id='LC773'><br/></div><div class='line' id='LC774'>&nbsp;&nbsp;&nbsp;&nbsp;Object.keys = function keys(object) {</div><div class='line' id='LC775'><br/></div><div class='line' id='LC776'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((typeof object != &quot;object&quot; &amp;&amp; typeof object != &quot;function&quot;) || object === null)</div><div class='line' id='LC777'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new TypeError(&quot;Object.keys called on a non-object&quot;);</div><div class='line' id='LC778'><br/></div><div class='line' id='LC779'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var keys = [];</div><div class='line' id='LC780'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var name in object) {</div><div class='line' id='LC781'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (owns(object, name)) {</div><div class='line' id='LC782'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keys.push(name);</div><div class='line' id='LC783'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC784'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC785'><br/></div><div class='line' id='LC786'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (hasDontEnumBug) {</div><div class='line' id='LC787'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var i = 0, ii = dontEnumsLength; i &lt; ii; i++) {</div><div class='line' id='LC788'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var dontEnum = dontEnums[i];</div><div class='line' id='LC789'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (owns(object, dontEnum)) {</div><div class='line' id='LC790'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keys.push(dontEnum);</div><div class='line' id='LC791'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC792'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC793'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC794'><br/></div><div class='line' id='LC795'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return keys;</div><div class='line' id='LC796'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC797'><br/></div><div class='line' id='LC798'>}</div><div class='line' id='LC799'><br/></div><div class='line' id='LC800'>//</div><div class='line' id='LC801'>// Date</div><div class='line' id='LC802'>// ====</div><div class='line' id='LC803'>//</div><div class='line' id='LC804'><br/></div><div class='line' id='LC805'>// ES5 15.9.5.43</div><div class='line' id='LC806'>// Format a Date object as a string according to a simplified subset of the ISO 8601</div><div class='line' id='LC807'>// standard as defined in 15.9.1.15.</div><div class='line' id='LC808'>if (!Date.prototype.toISOString) {</div><div class='line' id='LC809'>&nbsp;&nbsp;&nbsp;&nbsp;Date.prototype.toISOString = function toISOString() {</div><div class='line' id='LC810'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result, length, value;</div><div class='line' id='LC811'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!isFinite(this))</div><div class='line' id='LC812'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new RangeError;</div><div class='line' id='LC813'><br/></div><div class='line' id='LC814'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// the date time string format is specified in 15.9.1.15.</div><div class='line' id='LC815'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = [this.getUTCFullYear(), this.getUTCMonth() + 1, this.getUTCDate(),</div><div class='line' id='LC816'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.getUTCHours(), this.getUTCMinutes(), this.getUTCSeconds()];</div><div class='line' id='LC817'><br/></div><div class='line' id='LC818'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length = result.length;</div><div class='line' id='LC819'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (length--) {</div><div class='line' id='LC820'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = result[length];</div><div class='line' id='LC821'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// pad months, days, hours, minutes, and seconds to have two digits.</div><div class='line' id='LC822'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value &lt; 10)</div><div class='line' id='LC823'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result[length] = &quot;0&quot; + value;</div><div class='line' id='LC824'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC825'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// pad milliseconds to have three digits.</div><div class='line' id='LC826'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result.slice(0, 3).join(&quot;-&quot;) + &quot;T&quot; + result.slice(3).join(&quot;:&quot;) + &quot;.&quot; +</div><div class='line' id='LC827'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(&quot;000&quot; + this.getUTCMilliseconds()).slice(-3) + &quot;Z&quot;;</div><div class='line' id='LC828'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC829'>}</div><div class='line' id='LC830'><br/></div><div class='line' id='LC831'>// ES5 15.9.4.4</div><div class='line' id='LC832'>if (!Date.now) {</div><div class='line' id='LC833'>&nbsp;&nbsp;&nbsp;&nbsp;Date.now = function now() {</div><div class='line' id='LC834'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Date().getTime();</div><div class='line' id='LC835'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC836'>}</div><div class='line' id='LC837'><br/></div><div class='line' id='LC838'>// ES5 15.9.5.44</div><div class='line' id='LC839'>if (!Date.prototype.toJSON) {</div><div class='line' id='LC840'>&nbsp;&nbsp;&nbsp;&nbsp;Date.prototype.toJSON = function toJSON(key) {</div><div class='line' id='LC841'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// This function provides a String representation of a Date object for</div><div class='line' id='LC842'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// use by JSON.stringify (15.12.3). When the toJSON method is called</div><div class='line' id='LC843'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// with argument key, the following steps are taken:</div><div class='line' id='LC844'><br/></div><div class='line' id='LC845'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 1.  Let O be the result of calling ToObject, giving it the this</div><div class='line' id='LC846'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// value as its argument.</div><div class='line' id='LC847'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 2. Let tv be ToPrimitive(O, hint Number).</div><div class='line' id='LC848'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 3. If tv is a Number and is not finite, return null.</div><div class='line' id='LC849'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// XXX</div><div class='line' id='LC850'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 4. Let toISO be the result of calling the [[Get]] internal method of</div><div class='line' id='LC851'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// O with argument &quot;toISOString&quot;.</div><div class='line' id='LC852'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 5. If IsCallable(toISO) is false, throw a TypeError exception.</div><div class='line' id='LC853'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof this.toISOString != &quot;function&quot;)</div><div class='line' id='LC854'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new TypeError(); // TODO message</div><div class='line' id='LC855'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 6. Return the result of calling the [[Call]] internal method of</div><div class='line' id='LC856'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// toISO with O as the this value and an empty argument list.</div><div class='line' id='LC857'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.toISOString();</div><div class='line' id='LC858'><br/></div><div class='line' id='LC859'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// NOTE 1 The argument is ignored.</div><div class='line' id='LC860'><br/></div><div class='line' id='LC861'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// NOTE 2 The toJSON function is intentionally generic; it does not</div><div class='line' id='LC862'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// require that its this value be a Date object. Therefore, it can be</div><div class='line' id='LC863'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// transferred to other kinds of objects for use as a method. However,</div><div class='line' id='LC864'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// it does require that any such object have a toISOString method. An</div><div class='line' id='LC865'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// object is free to use the argument key to filter its</div><div class='line' id='LC866'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// stringification.</div><div class='line' id='LC867'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC868'>}</div><div class='line' id='LC869'><br/></div><div class='line' id='LC870'>// 15.9.4.2 Date.parse (string)</div><div class='line' id='LC871'>// 15.9.1.15 Date Time String Format</div><div class='line' id='LC872'>// Date.parse</div><div class='line' id='LC873'>// based on work shared by Daniel Friesen (dantman)</div><div class='line' id='LC874'>// http://gist.github.com/303249</div><div class='line' id='LC875'>if (isNaN(Date.parse(&quot;2011-06-15T21:40:05+06:00&quot;))) {</div><div class='line' id='LC876'>&nbsp;&nbsp;&nbsp;&nbsp;// XXX global assignment won&#39;t work in embeddings that use</div><div class='line' id='LC877'>&nbsp;&nbsp;&nbsp;&nbsp;// an alternate object for the context.</div><div class='line' id='LC878'>&nbsp;&nbsp;&nbsp;&nbsp;Date = (function(NativeDate) {</div><div class='line' id='LC879'><br/></div><div class='line' id='LC880'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Date.length === 7</div><div class='line' id='LC881'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var Date = function Date(Y, M, D, h, m, s, ms) {</div><div class='line' id='LC882'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var length = arguments.length;</div><div class='line' id='LC883'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this instanceof NativeDate) {</div><div class='line' id='LC884'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var date = length == 1 &amp;&amp; String(Y) === Y ? // isString(Y)</div><div class='line' id='LC885'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// We explicitly pass it through parse:</div><div class='line' id='LC886'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new NativeDate(Date.parse(Y)) :</div><div class='line' id='LC887'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// We have to manually make calls depending on argument</div><div class='line' id='LC888'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// length here</div><div class='line' id='LC889'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length &gt;= 7 ? new NativeDate(Y, M, D, h, m, s, ms) :</div><div class='line' id='LC890'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length &gt;= 6 ? new NativeDate(Y, M, D, h, m, s) :</div><div class='line' id='LC891'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length &gt;= 5 ? new NativeDate(Y, M, D, h, m) :</div><div class='line' id='LC892'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length &gt;= 4 ? new NativeDate(Y, M, D, h) :</div><div class='line' id='LC893'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length &gt;= 3 ? new NativeDate(Y, M, D) :</div><div class='line' id='LC894'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length &gt;= 2 ? new NativeDate(Y, M) :</div><div class='line' id='LC895'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length &gt;= 1 ? new NativeDate(Y) :</div><div class='line' id='LC896'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new NativeDate();</div><div class='line' id='LC897'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Prevent mixups with unfixed Date object</div><div class='line' id='LC898'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;date.constructor = Date;</div><div class='line' id='LC899'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return date;</div><div class='line' id='LC900'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC901'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return NativeDate.apply(this, arguments);</div><div class='line' id='LC902'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC903'><br/></div><div class='line' id='LC904'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 15.9.1.15 Date Time String Format. This pattern does not implement</div><div class='line' id='LC905'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// extended years (15.9.1.15.1), as `Date.UTC` cannot parse them.</div><div class='line' id='LC906'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var isoDateExpression = new RegExp(&quot;^&quot; +</div><div class='line' id='LC907'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;(\\d{4})&quot; + // four-digit year capture</div><div class='line' id='LC908'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;(?:-(\\d{2})&quot; + // optional month capture</div><div class='line' id='LC909'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;(?:-(\\d{2})&quot; + // optional day capture</div><div class='line' id='LC910'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;(?:&quot; + // capture hours:minutes:seconds.milliseconds</div><div class='line' id='LC911'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;T(\\d{2})&quot; + // hours capture</div><div class='line' id='LC912'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;:(\\d{2})&quot; + // minutes capture</div><div class='line' id='LC913'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;(?:&quot; + // optional :seconds.milliseconds</div><div class='line' id='LC914'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;:(\\d{2})&quot; + // seconds capture</div><div class='line' id='LC915'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;(?:\\.(\\d{3}))?&quot; + // milliseconds capture</div><div class='line' id='LC916'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;)?&quot; +</div><div class='line' id='LC917'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;(?:&quot; + // capture UTC offset component</div><div class='line' id='LC918'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Z|&quot; + // UTC capture</div><div class='line' id='LC919'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;(?:&quot; + // offset specifier +/-hours:minutes</div><div class='line' id='LC920'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;([-+])&quot; + // sign capture</div><div class='line' id='LC921'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;(\\d{2})&quot; + // hours offset capture</div><div class='line' id='LC922'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;:(\\d{2})&quot; + // minutes offset capture</div><div class='line' id='LC923'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;)&quot; +</div><div class='line' id='LC924'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;)?)?)?)?&quot; +</div><div class='line' id='LC925'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;$&quot;);</div><div class='line' id='LC926'><br/></div><div class='line' id='LC927'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Copy any custom methods a 3rd party library may have added</div><div class='line' id='LC928'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in NativeDate)</div><div class='line' id='LC929'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Date[key] = NativeDate[key];</div><div class='line' id='LC930'><br/></div><div class='line' id='LC931'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Copy &quot;native&quot; methods explicitly; they may be non-enumerable</div><div class='line' id='LC932'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Date.now = NativeDate.now;</div><div class='line' id='LC933'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Date.UTC = NativeDate.UTC;</div><div class='line' id='LC934'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Date.prototype = NativeDate.prototype;</div><div class='line' id='LC935'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Date.prototype.constructor = Date;</div><div class='line' id='LC936'><br/></div><div class='line' id='LC937'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Upgrade Date.parse to handle simplified ISO 8601 strings</div><div class='line' id='LC938'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Date.parse = function parse(string) {</div><div class='line' id='LC939'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var match = isoDateExpression.exec(string);</div><div class='line' id='LC940'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (match) {</div><div class='line' id='LC941'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;match.shift(); // kill match[0], the full match</div><div class='line' id='LC942'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// parse months, days, hours, minutes, seconds, and milliseconds</div><div class='line' id='LC943'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var i = 1; i &lt; 7; i++) {</div><div class='line' id='LC944'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// provide default values if necessary</div><div class='line' id='LC945'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;match[i] = +(match[i] || (i &lt; 3 ? 1 : 0));</div><div class='line' id='LC946'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// match[1] is the month. Months are 0-11 in JavaScript</div><div class='line' id='LC947'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// `Date` objects, but 1-12 in ISO notation, so we</div><div class='line' id='LC948'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// decrement.</div><div class='line' id='LC949'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (i == 1)</div><div class='line' id='LC950'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;match[i]--;</div><div class='line' id='LC951'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC952'><br/></div><div class='line' id='LC953'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// parse the UTC offset component</div><div class='line' id='LC954'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var minuteOffset = +match.pop(), hourOffset = +match.pop(), sign = match.pop();</div><div class='line' id='LC955'><br/></div><div class='line' id='LC956'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// compute the explicit time zone offset if specified</div><div class='line' id='LC957'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var offset = 0;</div><div class='line' id='LC958'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (sign) {</div><div class='line' id='LC959'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// detect invalid offsets and return early</div><div class='line' id='LC960'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (hourOffset &gt; 23 || minuteOffset &gt; 59)</div><div class='line' id='LC961'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return NaN;</div><div class='line' id='LC962'><br/></div><div class='line' id='LC963'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// express the provided time zone offset in minutes. The offset is</div><div class='line' id='LC964'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// negative for time zones west of UTC; positive otherwise.</div><div class='line' id='LC965'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;offset = (hourOffset * 60 + minuteOffset) * 6e4 * (sign == &quot;+&quot; ? -1 : 1);</div><div class='line' id='LC966'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC967'><br/></div><div class='line' id='LC968'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// compute a new UTC date value, accounting for the optional offset</div><div class='line' id='LC969'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return NativeDate.UTC.apply(this, match) + offset;</div><div class='line' id='LC970'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC971'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return NativeDate.parse.apply(this, arguments);</div><div class='line' id='LC972'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC973'><br/></div><div class='line' id='LC974'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Date;</div><div class='line' id='LC975'>&nbsp;&nbsp;&nbsp;&nbsp;})(Date);</div><div class='line' id='LC976'>}</div><div class='line' id='LC977'><br/></div><div class='line' id='LC978'>//</div><div class='line' id='LC979'>// String</div><div class='line' id='LC980'>// ======</div><div class='line' id='LC981'>//</div><div class='line' id='LC982'><br/></div><div class='line' id='LC983'>// ES5 15.5.4.20</div><div class='line' id='LC984'>var ws = &quot;\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003&quot; +</div><div class='line' id='LC985'>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028&quot; +</div><div class='line' id='LC986'>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\u2029\uFEFF&quot;;</div><div class='line' id='LC987'>if (!String.prototype.trim || ws.trim()) {</div><div class='line' id='LC988'>&nbsp;&nbsp;&nbsp;&nbsp;// http://blog.stevenlevithan.com/archives/faster-trim-javascript</div><div class='line' id='LC989'>&nbsp;&nbsp;&nbsp;&nbsp;// http://perfectionkills.com/whitespace-deviations/</div><div class='line' id='LC990'>&nbsp;&nbsp;&nbsp;&nbsp;ws = &quot;[&quot; + ws + &quot;]&quot;;</div><div class='line' id='LC991'>&nbsp;&nbsp;&nbsp;&nbsp;var trimBeginRegexp = new RegExp(&quot;^&quot; + ws + ws + &quot;*&quot;),</div><div class='line' id='LC992'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;trimEndRegexp = new RegExp(ws + ws + &quot;*$&quot;);</div><div class='line' id='LC993'>&nbsp;&nbsp;&nbsp;&nbsp;String.prototype.trim = function trim() {</div><div class='line' id='LC994'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return String(this).replace(trimBeginRegexp, &quot;&quot;).replace(trimEndRegexp, &quot;&quot;);</div><div class='line' id='LC995'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC996'>}</div><div class='line' id='LC997'><br/></div><div class='line' id='LC998'>//</div><div class='line' id='LC999'>// Util</div><div class='line' id='LC1000'>// ======</div><div class='line' id='LC1001'>//</div><div class='line' id='LC1002'><br/></div><div class='line' id='LC1003'>// http://jsperf.com/to-integer</div><div class='line' id='LC1004'>var toInteger = function (n) {</div><div class='line' id='LC1005'>&nbsp;&nbsp;&nbsp;&nbsp;n = +n;</div><div class='line' id='LC1006'>&nbsp;&nbsp;&nbsp;&nbsp;if (n !== n) // isNaN</div><div class='line' id='LC1007'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n = -1;</div><div class='line' id='LC1008'>&nbsp;&nbsp;&nbsp;&nbsp;else if (n !== 0 &amp;&amp; n !== (1/0) &amp;&amp; n !== -(1/0))</div><div class='line' id='LC1009'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n = (n &gt; 0 || -1) * Math.floor(Math.abs(n));</div><div class='line' id='LC1010'>&nbsp;&nbsp;&nbsp;&nbsp;return n;</div><div class='line' id='LC1011'>};</div><div class='line' id='LC1012'><br/></div><div class='line' id='LC1013'>var prepareString = &quot;a&quot;[0] != &quot;a&quot;,</div><div class='line' id='LC1014'>&nbsp;&nbsp;&nbsp;&nbsp;// ES5 9.9</div><div class='line' id='LC1015'>&nbsp;&nbsp;&nbsp;&nbsp;toObject = function (o) {</div><div class='line' id='LC1016'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (o == null) { // this matches both null and undefined</div><div class='line' id='LC1017'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new TypeError(); // TODO message</div><div class='line' id='LC1018'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1019'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If the implementation doesn&#39;t support by-index access of</div><div class='line' id='LC1020'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// string characters (ex. IE &lt; 7), split the string</div><div class='line' id='LC1021'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (prepareString &amp;&amp; typeof o == &quot;string&quot; &amp;&amp; o) {</div><div class='line' id='LC1022'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return o.split(&quot;&quot;);</div><div class='line' id='LC1023'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1024'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Object(o);</div><div class='line' id='LC1025'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1026'>});</div><div class='line' id='LC1027'>(function() {</div><div class='line' id='LC1028'>&nbsp;&nbsp;var Batman, __slice = [].slice;</div><div class='line' id='LC1029'><br/></div><div class='line' id='LC1030'>&nbsp;&nbsp;Batman = function() {</div><div class='line' id='LC1031'>&nbsp;&nbsp;&nbsp;&nbsp;var mixins;</div><div class='line' id='LC1032'>&nbsp;&nbsp;&nbsp;&nbsp;mixins = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC1033'>&nbsp;&nbsp;&nbsp;&nbsp;return (function(func, args, ctor) {</div><div class='line' id='LC1034'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = func.prototype;</div><div class='line' id='LC1035'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var child = new ctor,</div><div class='line' id='LC1036'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = func.apply(child, args),</div><div class='line' id='LC1037'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t = typeof result;</div><div class='line' id='LC1038'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return t == &quot;object&quot; || t == &quot;function&quot; ? result || child : child;</div><div class='line' id='LC1039'>&nbsp;&nbsp;&nbsp;&nbsp;})(Batman.Object, mixins, function() {});</div><div class='line' id='LC1040'>&nbsp;&nbsp;};</div><div class='line' id='LC1041'><br/></div><div class='line' id='LC1042'>&nbsp;&nbsp;Batman.version = &#39;0.14.1&#39;;</div><div class='line' id='LC1043'><br/></div><div class='line' id='LC1044'>&nbsp;&nbsp;Batman.config = {</div><div class='line' id='LC1045'>&nbsp;&nbsp;&nbsp;&nbsp;pathPrefix: &#39;/&#39;,</div><div class='line' id='LC1046'>&nbsp;&nbsp;&nbsp;&nbsp;viewPrefix: &#39;views&#39;,</div><div class='line' id='LC1047'>&nbsp;&nbsp;&nbsp;&nbsp;fetchRemoteViews: true,</div><div class='line' id='LC1048'>&nbsp;&nbsp;&nbsp;&nbsp;usePushState: false,</div><div class='line' id='LC1049'>&nbsp;&nbsp;&nbsp;&nbsp;minificationErrors: true</div><div class='line' id='LC1050'>&nbsp;&nbsp;};</div><div class='line' id='LC1051'><br/></div><div class='line' id='LC1052'>&nbsp;&nbsp;(Batman.container = (function() {</div><div class='line' id='LC1053'>&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC1054'>&nbsp;&nbsp;})()).Batman = Batman;</div><div class='line' id='LC1055'><br/></div><div class='line' id='LC1056'>&nbsp;&nbsp;if (typeof define === &#39;function&#39;) {</div><div class='line' id='LC1057'>&nbsp;&nbsp;&nbsp;&nbsp;define(&#39;batman&#39;, [], function() {</div><div class='line' id='LC1058'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman;</div><div class='line' id='LC1059'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC1060'>&nbsp;&nbsp;}</div><div class='line' id='LC1061'><br/></div><div class='line' id='LC1062'>&nbsp;&nbsp;Batman.exportHelpers = function(onto) {</div><div class='line' id='LC1063'>&nbsp;&nbsp;&nbsp;&nbsp;var k, _i, _len, _ref;</div><div class='line' id='LC1064'>&nbsp;&nbsp;&nbsp;&nbsp;_ref = [&#39;mixin&#39;, &#39;extend&#39;, &#39;unmixin&#39;, &#39;redirect&#39;, &#39;typeOf&#39;, &#39;redirect&#39;, &#39;setImmediate&#39;, &#39;clearImmediate&#39;];</div><div class='line' id='LC1065'>&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC1066'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k = _ref[_i];</div><div class='line' id='LC1067'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onto[&quot;$&quot; + k] = Batman[k];</div><div class='line' id='LC1068'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1069'>&nbsp;&nbsp;&nbsp;&nbsp;return onto;</div><div class='line' id='LC1070'>&nbsp;&nbsp;};</div><div class='line' id='LC1071'><br/></div><div class='line' id='LC1072'>&nbsp;&nbsp;Batman.exportGlobals = function() {</div><div class='line' id='LC1073'>&nbsp;&nbsp;&nbsp;&nbsp;return Batman.exportHelpers(Batman.container);</div><div class='line' id='LC1074'>&nbsp;&nbsp;};</div><div class='line' id='LC1075'><br/></div><div class='line' id='LC1076'>}).call(this);</div><div class='line' id='LC1077'><br/></div><div class='line' id='LC1078'>(function() {</div><div class='line' id='LC1079'>&nbsp;&nbsp;var _Batman;</div><div class='line' id='LC1080'><br/></div><div class='line' id='LC1081'>&nbsp;&nbsp;Batman._Batman = _Batman = (function() {</div><div class='line' id='LC1082'><br/></div><div class='line' id='LC1083'>&nbsp;&nbsp;&nbsp;&nbsp;function _Batman(object) {</div><div class='line' id='LC1084'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.object = object;</div><div class='line' id='LC1085'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1086'><br/></div><div class='line' id='LC1087'>&nbsp;&nbsp;&nbsp;&nbsp;_Batman.prototype.check = function(object) {</div><div class='line' id='LC1088'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (object !== this.object) {</div><div class='line' id='LC1089'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object._batman = new Batman._Batman(object);</div><div class='line' id='LC1090'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC1091'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1092'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC1093'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1094'><br/></div><div class='line' id='LC1095'>&nbsp;&nbsp;&nbsp;&nbsp;_Batman.prototype.get = function(key) {</div><div class='line' id='LC1096'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var reduction, results;</div><div class='line' id='LC1097'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;results = this.getAll(key);</div><div class='line' id='LC1098'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (results.length) {</div><div class='line' id='LC1099'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 0:</div><div class='line' id='LC1100'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return void 0;</div><div class='line' id='LC1101'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 1:</div><div class='line' id='LC1102'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return results[0];</div><div class='line' id='LC1103'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:</div><div class='line' id='LC1104'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reduction = results[0].concat != null ?</div><div class='line' id='LC1105'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function(a, b) {</div><div class='line' id='LC1106'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return a.concat(b);</div><div class='line' id='LC1107'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} : results[0].merge != null ?</div><div class='line' id='LC1108'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function(a, b) {</div><div class='line' id='LC1109'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return a.merge(b);</div><div class='line' id='LC1110'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} : results.every(function(x) {</div><div class='line' id='LC1111'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return typeof x === &#39;object&#39;;</div><div class='line' id='LC1112'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}) ? (results.unshift({}), function(a, b) {</div><div class='line' id='LC1113'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.extend(a, b);</div><div class='line' id='LC1114'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}) : void 0;</div><div class='line' id='LC1115'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (reduction) {</div><div class='line' id='LC1116'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return results.reduceRight(reduction);</div><div class='line' id='LC1117'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC1118'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return results;</div><div class='line' id='LC1119'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1120'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1121'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1122'><br/></div><div class='line' id='LC1123'>&nbsp;&nbsp;&nbsp;&nbsp;_Batman.prototype.getFirst = function(key) {</div><div class='line' id='LC1124'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var results;</div><div class='line' id='LC1125'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;results = this.getAll(key);</div><div class='line' id='LC1126'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return results[0];</div><div class='line' id='LC1127'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1128'><br/></div><div class='line' id='LC1129'>&nbsp;&nbsp;&nbsp;&nbsp;_Batman.prototype.getAll = function(keyOrGetter) {</div><div class='line' id='LC1130'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var getter, results, val;</div><div class='line' id='LC1131'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof keyOrGetter === &#39;function&#39;) {</div><div class='line' id='LC1132'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getter = keyOrGetter;</div><div class='line' id='LC1133'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC1134'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getter = function(ancestor) {</div><div class='line' id='LC1135'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC1136'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = ancestor._batman) != null ? _ref[keyOrGetter] : void 0;</div><div class='line' id='LC1137'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1138'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1139'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;results = this.ancestors(getter);</div><div class='line' id='LC1140'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (val = getter(this.object)) {</div><div class='line' id='LC1141'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;results.unshift(val);</div><div class='line' id='LC1142'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1143'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return results;</div><div class='line' id='LC1144'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1145'><br/></div><div class='line' id='LC1146'>&nbsp;&nbsp;&nbsp;&nbsp;_Batman.prototype.ancestors = function(getter) {</div><div class='line' id='LC1147'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var ancestor, results, val, _i, _len, _ref;</div><div class='line' id='LC1148'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._allAncestors || (this._allAncestors = this.allAncestors());</div><div class='line' id='LC1149'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (getter) {</div><div class='line' id='LC1150'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;results = [];</div><div class='line' id='LC1151'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this._allAncestors;</div><div class='line' id='LC1152'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC1153'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ancestor = _ref[_i];</div><div class='line' id='LC1154'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;val = getter(ancestor);</div><div class='line' id='LC1155'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (val != null) {</div><div class='line' id='LC1156'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;results.push(val);</div><div class='line' id='LC1157'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1158'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1159'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return results;</div><div class='line' id='LC1160'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC1161'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._allAncestors;</div><div class='line' id='LC1162'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1163'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1164'><br/></div><div class='line' id='LC1165'>&nbsp;&nbsp;&nbsp;&nbsp;_Batman.prototype.allAncestors = function() {</div><div class='line' id='LC1166'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var isClass, parent, proto, results, _ref, _ref1;</div><div class='line' id='LC1167'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;results = [];</div><div class='line' id='LC1168'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isClass = !! this.object.prototype;</div><div class='line' id='LC1169'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parent = isClass ? (_ref = this.object.__super__) != null ? _ref.constructor : void 0 : (proto = Object.getPrototypeOf(this.object)) === this.object ? this.object.constructor.__super__ : proto;</div><div class='line' id='LC1170'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (parent != null) {</div><div class='line' id='LC1171'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref1 = parent._batman) != null) {</div><div class='line' id='LC1172'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1.check(parent);</div><div class='line' id='LC1173'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1174'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;results.push(parent);</div><div class='line' id='LC1175'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (parent._batman != null) {</div><div class='line' id='LC1176'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;results = results.concat(parent._batman.allAncestors());</div><div class='line' id='LC1177'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1178'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1179'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return results;</div><div class='line' id='LC1180'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1181'><br/></div><div class='line' id='LC1182'>&nbsp;&nbsp;&nbsp;&nbsp;_Batman.prototype.set = function(key, value) {</div><div class='line' id='LC1183'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this[key] = value;</div><div class='line' id='LC1184'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1185'><br/></div><div class='line' id='LC1186'>&nbsp;&nbsp;&nbsp;&nbsp;return _Batman;</div><div class='line' id='LC1187'><br/></div><div class='line' id='LC1188'>&nbsp;&nbsp;})();</div><div class='line' id='LC1189'><br/></div><div class='line' id='LC1190'>}).call(this);</div><div class='line' id='LC1191'><br/></div><div class='line' id='LC1192'>(function() {</div><div class='line' id='LC1193'>&nbsp;&nbsp;var chr, _encodedChars, _encodedCharsPattern, _entityMap, _implementImmediates, _objectToString, _unsafeChars, _unsafeCharsPattern, __slice = [].slice,</div><div class='line' id='LC1194'>&nbsp;&nbsp;&nbsp;&nbsp;__hasProp = {}.hasOwnProperty,</div><div class='line' id='LC1195'>&nbsp;&nbsp;&nbsp;&nbsp;__indexOf = [].indexOf ||</div><div class='line' id='LC1196'>&nbsp;&nbsp;function(item) {</div><div class='line' id='LC1197'>&nbsp;&nbsp;&nbsp;&nbsp;for (var i = 0, l = this.length; i &lt; l; i++) {</div><div class='line' id='LC1198'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (i in this &amp;&amp; this[i] === item) return i;</div><div class='line' id='LC1199'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1200'>&nbsp;&nbsp;&nbsp;&nbsp;return -1;</div><div class='line' id='LC1201'>&nbsp;&nbsp;};</div><div class='line' id='LC1202'><br/></div><div class='line' id='LC1203'>&nbsp;&nbsp;Batman.typeOf = function(object) {</div><div class='line' id='LC1204'>&nbsp;&nbsp;&nbsp;&nbsp;if (typeof object === &#39;undefined&#39;) {</div><div class='line' id='LC1205'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;Undefined&quot;;</div><div class='line' id='LC1206'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1207'>&nbsp;&nbsp;&nbsp;&nbsp;return _objectToString.call(object).slice(8, -1);</div><div class='line' id='LC1208'>&nbsp;&nbsp;};</div><div class='line' id='LC1209'><br/></div><div class='line' id='LC1210'>&nbsp;&nbsp;_objectToString = Object.prototype.toString;</div><div class='line' id='LC1211'><br/></div><div class='line' id='LC1212'>&nbsp;&nbsp;Batman.extend = function() {</div><div class='line' id='LC1213'>&nbsp;&nbsp;&nbsp;&nbsp;var key, object, objects, to, value, _i, _len;</div><div class='line' id='LC1214'>&nbsp;&nbsp;&nbsp;&nbsp;to = arguments[0], objects = 2 &lt;= arguments.length ? __slice.call(arguments, 1) : [];</div><div class='line' id='LC1215'>&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = objects.length; _i &lt; _len; _i++) {</div><div class='line' id='LC1216'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object = objects[_i];</div><div class='line' id='LC1217'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (key in object) {</div><div class='line' id='LC1218'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = object[key];</div><div class='line' id='LC1219'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to[key] = value;</div><div class='line' id='LC1220'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1221'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1222'>&nbsp;&nbsp;&nbsp;&nbsp;return to;</div><div class='line' id='LC1223'>&nbsp;&nbsp;};</div><div class='line' id='LC1224'><br/></div><div class='line' id='LC1225'>&nbsp;&nbsp;Batman.mixin = function() {</div><div class='line' id='LC1226'>&nbsp;&nbsp;&nbsp;&nbsp;var hasSet, key, mixin, mixins, to, value, _i, _len;</div><div class='line' id='LC1227'>&nbsp;&nbsp;&nbsp;&nbsp;to = arguments[0], mixins = 2 &lt;= arguments.length ? __slice.call(arguments, 1) : [];</div><div class='line' id='LC1228'>&nbsp;&nbsp;&nbsp;&nbsp;hasSet = typeof to.set === &#39;function&#39;;</div><div class='line' id='LC1229'>&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = mixins.length; _i &lt; _len; _i++) {</div><div class='line' id='LC1230'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mixin = mixins[_i];</div><div class='line' id='LC1231'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Batman.typeOf(mixin) !== &#39;Object&#39;) {</div><div class='line' id='LC1232'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;</div><div class='line' id='LC1233'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1234'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (key in mixin) {</div><div class='line' id='LC1235'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!__hasProp.call(mixin, key)) continue;</div><div class='line' id='LC1236'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = mixin[key];</div><div class='line' id='LC1237'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (key === &#39;initialize&#39; || key === &#39;uninitialize&#39; || key === &#39;prototype&#39;) {</div><div class='line' id='LC1238'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;</div><div class='line' id='LC1239'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1240'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (hasSet) {</div><div class='line' id='LC1241'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to.set(key, value);</div><div class='line' id='LC1242'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (to.nodeName != null) {</div><div class='line' id='LC1243'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.data(to, key, value);</div><div class='line' id='LC1244'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC1245'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to[key] = value;</div><div class='line' id='LC1246'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1247'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1248'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof mixin.initialize === &#39;function&#39;) {</div><div class='line' id='LC1249'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mixin.initialize.call(to);</div><div class='line' id='LC1250'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1251'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1252'>&nbsp;&nbsp;&nbsp;&nbsp;return to;</div><div class='line' id='LC1253'>&nbsp;&nbsp;};</div><div class='line' id='LC1254'><br/></div><div class='line' id='LC1255'>&nbsp;&nbsp;Batman.unmixin = function() {</div><div class='line' id='LC1256'>&nbsp;&nbsp;&nbsp;&nbsp;var from, key, mixin, mixins, _i, _len;</div><div class='line' id='LC1257'>&nbsp;&nbsp;&nbsp;&nbsp;from = arguments[0], mixins = 2 &lt;= arguments.length ? __slice.call(arguments, 1) : [];</div><div class='line' id='LC1258'>&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = mixins.length; _i &lt; _len; _i++) {</div><div class='line' id='LC1259'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mixin = mixins[_i];</div><div class='line' id='LC1260'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (key in mixin) {</div><div class='line' id='LC1261'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (key === &#39;initialize&#39; || key === &#39;uninitialize&#39;) {</div><div class='line' id='LC1262'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;</div><div class='line' id='LC1263'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1264'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete from[key];</div><div class='line' id='LC1265'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1266'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof mixin.uninitialize === &#39;function&#39;) {</div><div class='line' id='LC1267'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mixin.uninitialize.call(from);</div><div class='line' id='LC1268'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1269'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1270'>&nbsp;&nbsp;&nbsp;&nbsp;return from;</div><div class='line' id='LC1271'>&nbsp;&nbsp;};</div><div class='line' id='LC1272'><br/></div><div class='line' id='LC1273'>&nbsp;&nbsp;Batman._functionName = Batman.functionName = function(f) {</div><div class='line' id='LC1274'>&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC1275'>&nbsp;&nbsp;&nbsp;&nbsp;if (f.__name__) {</div><div class='line' id='LC1276'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return f.__name__;</div><div class='line' id='LC1277'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1278'>&nbsp;&nbsp;&nbsp;&nbsp;if (f.name) {</div><div class='line' id='LC1279'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return f.name;</div><div class='line' id='LC1280'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1281'>&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = f.toString().match(/\W*function\s+([\w\$]+)\(/)) != null ? _ref[1] : void 0;</div><div class='line' id='LC1282'>&nbsp;&nbsp;};</div><div class='line' id='LC1283'><br/></div><div class='line' id='LC1284'>&nbsp;&nbsp;Batman._isChildOf = Batman.isChildOf = function(parentNode, childNode) {</div><div class='line' id='LC1285'>&nbsp;&nbsp;&nbsp;&nbsp;var node;</div><div class='line' id='LC1286'>&nbsp;&nbsp;&nbsp;&nbsp;node = childNode.parentNode;</div><div class='line' id='LC1287'>&nbsp;&nbsp;&nbsp;&nbsp;while (node) {</div><div class='line' id='LC1288'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (node === parentNode) {</div><div class='line' id='LC1289'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC1290'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1291'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node = node.parentNode;</div><div class='line' id='LC1292'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1293'>&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC1294'>&nbsp;&nbsp;};</div><div class='line' id='LC1295'><br/></div><div class='line' id='LC1296'>&nbsp;&nbsp;_implementImmediates = function(container) {</div><div class='line' id='LC1297'>&nbsp;&nbsp;&nbsp;&nbsp;var canUsePostMessage, count, functions, getHandle, handler, prefix, tasks;</div><div class='line' id='LC1298'>&nbsp;&nbsp;&nbsp;&nbsp;canUsePostMessage = function() {</div><div class='line' id='LC1299'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var async, oldMessage;</div><div class='line' id='LC1300'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!container.postMessage) {</div><div class='line' id='LC1301'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC1302'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1303'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;async = true;</div><div class='line' id='LC1304'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;oldMessage = container.onmessage;</div><div class='line' id='LC1305'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;container.onmessage = function() {</div><div class='line' id='LC1306'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return async = false;</div><div class='line' id='LC1307'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1308'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;container.postMessage(&quot;&quot;, &quot;*&quot;);</div><div class='line' id='LC1309'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;container.onmessage = oldMessage;</div><div class='line' id='LC1310'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return async;</div><div class='line' id='LC1311'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1312'>&nbsp;&nbsp;&nbsp;&nbsp;tasks = new Batman.SimpleHash;</div><div class='line' id='LC1313'>&nbsp;&nbsp;&nbsp;&nbsp;count = 0;</div><div class='line' id='LC1314'>&nbsp;&nbsp;&nbsp;&nbsp;getHandle = function() {</div><div class='line' id='LC1315'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;go&quot; + (++count);</div><div class='line' id='LC1316'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1317'>&nbsp;&nbsp;&nbsp;&nbsp;if (container.setImmediate &amp;&amp; container.clearImmediate) {</div><div class='line' id='LC1318'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.setImmediate = container.setImmediate;</div><div class='line' id='LC1319'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.clearImmediate = container.clearImmediate;</div><div class='line' id='LC1320'>&nbsp;&nbsp;&nbsp;&nbsp;} else if (canUsePostMessage()) {</div><div class='line' id='LC1321'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;prefix = &#39;com.batman.&#39;;</div><div class='line' id='LC1322'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;functions = new Batman.SimpleHash;</div><div class='line' id='LC1323'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handler = function(e) {</div><div class='line' id='LC1324'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var handle, _base;</div><div class='line' id='LC1325'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!~e.data.search(prefix)) {</div><div class='line' id='LC1326'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC1327'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1328'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handle = e.data.substring(prefix.length);</div><div class='line' id='LC1329'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return typeof(_base = tasks.unset(handle)) === &quot;function&quot; ? _base() : void 0;</div><div class='line' id='LC1330'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1331'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (container.addEventListener) {</div><div class='line' id='LC1332'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;container.addEventListener(&#39;message&#39;, handler, false);</div><div class='line' id='LC1333'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC1334'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;container.attachEvent(&#39;onmessage&#39;, handler);</div><div class='line' id='LC1335'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1336'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.setImmediate = function(f) {</div><div class='line' id='LC1337'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var handle;</div><div class='line' id='LC1338'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tasks.set(handle = getHandle(), f);</div><div class='line' id='LC1339'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;container.postMessage(prefix + handle, &quot;*&quot;);</div><div class='line' id='LC1340'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return handle;</div><div class='line' id='LC1341'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1342'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.clearImmediate = function(handle) {</div><div class='line' id='LC1343'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return tasks.unset(handle);</div><div class='line' id='LC1344'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1345'>&nbsp;&nbsp;&nbsp;&nbsp;} else if (typeof document !== &#39;undefined&#39; &amp;&amp; __indexOf.call(document.createElement(&quot;script&quot;), &quot;onreadystatechange&quot;) &gt;= 0) {</div><div class='line' id='LC1346'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.setImmediate = function(f) {</div><div class='line' id='LC1347'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var handle, script;</div><div class='line' id='LC1348'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handle = getHandle();</div><div class='line' id='LC1349'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;script = document.createElement(&quot;script&quot;);</div><div class='line' id='LC1350'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;script.onreadystatechange = function() {</div><div class='line' id='LC1351'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _base;</div><div class='line' id='LC1352'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof(_base = tasks.get(handle)) === &quot;function&quot;) {</div><div class='line' id='LC1353'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_base();</div><div class='line' id='LC1354'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1355'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;script.onreadystatechange = null;</div><div class='line' id='LC1356'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;script.parentNode.removeChild(script);</div><div class='line' id='LC1357'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return script = null;</div><div class='line' id='LC1358'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1359'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;document.documentElement.appendChild(script);</div><div class='line' id='LC1360'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return handle;</div><div class='line' id='LC1361'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1362'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.clearImmediate = function(handle) {</div><div class='line' id='LC1363'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return tasks.unset(handle);</div><div class='line' id='LC1364'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1365'>&nbsp;&nbsp;&nbsp;&nbsp;} else if (typeof process !== &quot;undefined&quot; &amp;&amp; process !== null ? process.nextTick : void 0) {</div><div class='line' id='LC1366'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;functions = {};</div><div class='line' id='LC1367'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.setImmediate = function(f) {</div><div class='line' id='LC1368'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var handle;</div><div class='line' id='LC1369'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handle = getHandle();</div><div class='line' id='LC1370'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;functions[handle] = f;</div><div class='line' id='LC1371'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;process.nextTick(function() {</div><div class='line' id='LC1372'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof functions[handle] === &quot;function&quot;) {</div><div class='line' id='LC1373'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;functions[handle]();</div><div class='line' id='LC1374'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1375'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return delete functions[handle];</div><div class='line' id='LC1376'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC1377'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return handle;</div><div class='line' id='LC1378'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1379'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.clearImmediate = function(handle) {</div><div class='line' id='LC1380'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return delete functions[handle];</div><div class='line' id='LC1381'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1382'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC1383'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.setImmediate = function(f) {</div><div class='line' id='LC1384'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return setTimeout(f, 0);</div><div class='line' id='LC1385'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1386'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.clearImmediate = function(handle) {</div><div class='line' id='LC1387'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return clearTimeout(handle);</div><div class='line' id='LC1388'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1389'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1390'>&nbsp;&nbsp;};</div><div class='line' id='LC1391'><br/></div><div class='line' id='LC1392'>&nbsp;&nbsp;Batman.setImmediate = function() {</div><div class='line' id='LC1393'>&nbsp;&nbsp;&nbsp;&nbsp;_implementImmediates(Batman.container);</div><div class='line' id='LC1394'>&nbsp;&nbsp;&nbsp;&nbsp;return Batman.setImmediate.apply(this, arguments);</div><div class='line' id='LC1395'>&nbsp;&nbsp;};</div><div class='line' id='LC1396'><br/></div><div class='line' id='LC1397'>&nbsp;&nbsp;Batman.clearImmediate = function() {</div><div class='line' id='LC1398'>&nbsp;&nbsp;&nbsp;&nbsp;_implementImmediates(Batman.container);</div><div class='line' id='LC1399'>&nbsp;&nbsp;&nbsp;&nbsp;return Batman.clearImmediate.apply(this, arguments);</div><div class='line' id='LC1400'>&nbsp;&nbsp;};</div><div class='line' id='LC1401'><br/></div><div class='line' id='LC1402'>&nbsp;&nbsp;Batman.forEach = function(container, iterator, ctx) {</div><div class='line' id='LC1403'>&nbsp;&nbsp;&nbsp;&nbsp;var e, i, k, v, _i, _len, _results, _results1;</div><div class='line' id='LC1404'>&nbsp;&nbsp;&nbsp;&nbsp;if (container.forEach) {</div><div class='line' id='LC1405'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return container.forEach(iterator, ctx);</div><div class='line' id='LC1406'>&nbsp;&nbsp;&nbsp;&nbsp;} else if (container.indexOf) {</div><div class='line' id='LC1407'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC1408'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (i = _i = 0, _len = container.length; _i &lt; _len; i = ++_i) {</div><div class='line' id='LC1409'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e = container[i];</div><div class='line' id='LC1410'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(iterator.call(ctx, e, i, container));</div><div class='line' id='LC1411'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1412'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC1413'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC1414'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results1 = [];</div><div class='line' id='LC1415'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (k in container) {</div><div class='line' id='LC1416'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v = container[k];</div><div class='line' id='LC1417'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results1.push(iterator.call(ctx, k, v, container));</div><div class='line' id='LC1418'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1419'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results1;</div><div class='line' id='LC1420'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1421'>&nbsp;&nbsp;};</div><div class='line' id='LC1422'><br/></div><div class='line' id='LC1423'>&nbsp;&nbsp;Batman.objectHasKey = function(object, key) {</div><div class='line' id='LC1424'>&nbsp;&nbsp;&nbsp;&nbsp;if (typeof object.hasKey === &#39;function&#39;) {</div><div class='line' id='LC1425'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return object.hasKey(key);</div><div class='line' id='LC1426'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC1427'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return key in object;</div><div class='line' id='LC1428'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1429'>&nbsp;&nbsp;};</div><div class='line' id='LC1430'><br/></div><div class='line' id='LC1431'>&nbsp;&nbsp;Batman.contains = function(container, item) {</div><div class='line' id='LC1432'>&nbsp;&nbsp;&nbsp;&nbsp;if (container.indexOf) {</div><div class='line' id='LC1433'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return __indexOf.call(container, item) &gt;= 0;</div><div class='line' id='LC1434'>&nbsp;&nbsp;&nbsp;&nbsp;} else if (typeof container.has === &#39;function&#39;) {</div><div class='line' id='LC1435'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return container.has(item);</div><div class='line' id='LC1436'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC1437'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.objectHasKey(container, item);</div><div class='line' id='LC1438'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1439'>&nbsp;&nbsp;};</div><div class='line' id='LC1440'><br/></div><div class='line' id='LC1441'>&nbsp;&nbsp;Batman.get = function(base, key) {</div><div class='line' id='LC1442'>&nbsp;&nbsp;&nbsp;&nbsp;if (typeof base.get === &#39;function&#39;) {</div><div class='line' id='LC1443'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return base.get(key);</div><div class='line' id='LC1444'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC1445'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.Property.forBaseAndKey(base, key).getValue();</div><div class='line' id='LC1446'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1447'>&nbsp;&nbsp;};</div><div class='line' id='LC1448'><br/></div><div class='line' id='LC1449'>&nbsp;&nbsp;Batman.getPath = function(base, segments) {</div><div class='line' id='LC1450'>&nbsp;&nbsp;&nbsp;&nbsp;var segment, _i, _len;</div><div class='line' id='LC1451'>&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = segments.length; _i &lt; _len; _i++) {</div><div class='line' id='LC1452'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;segment = segments[_i];</div><div class='line' id='LC1453'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (base != null) {</div><div class='line' id='LC1454'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;base = Batman.get(base, segment);</div><div class='line' id='LC1455'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (base == null) {</div><div class='line' id='LC1456'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return base;</div><div class='line' id='LC1457'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1458'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC1459'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return void 0;</div><div class='line' id='LC1460'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1461'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1462'>&nbsp;&nbsp;&nbsp;&nbsp;return base;</div><div class='line' id='LC1463'>&nbsp;&nbsp;};</div><div class='line' id='LC1464'><br/></div><div class='line' id='LC1465'>&nbsp;&nbsp;_entityMap = {</div><div class='line' id='LC1466'>&nbsp;&nbsp;&nbsp;&nbsp;&quot;&amp;&quot;: &quot;&amp;amp;&quot;,</div><div class='line' id='LC1467'>&nbsp;&nbsp;&nbsp;&nbsp;&quot;&lt;&quot;: &quot;&amp;lt;&quot;,</div><div class='line' id='LC1468'>&nbsp;&nbsp;&nbsp;&nbsp;&quot;&gt;&quot;: &quot;&amp;gt;&quot;,</div><div class='line' id='LC1469'>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\&quot;&quot;: &quot;&amp;#34;&quot;,</div><div class='line' id='LC1470'>&nbsp;&nbsp;&nbsp;&nbsp;&quot;&#39;&quot;: &quot;&amp;#39;&quot;</div><div class='line' id='LC1471'>&nbsp;&nbsp;};</div><div class='line' id='LC1472'><br/></div><div class='line' id='LC1473'>&nbsp;&nbsp;_unsafeChars = [];</div><div class='line' id='LC1474'><br/></div><div class='line' id='LC1475'>&nbsp;&nbsp;_encodedChars = [];</div><div class='line' id='LC1476'><br/></div><div class='line' id='LC1477'>&nbsp;&nbsp;for (chr in _entityMap) {</div><div class='line' id='LC1478'>&nbsp;&nbsp;&nbsp;&nbsp;_unsafeChars.push(chr);</div><div class='line' id='LC1479'>&nbsp;&nbsp;&nbsp;&nbsp;_encodedChars.push(_entityMap[chr]);</div><div class='line' id='LC1480'>&nbsp;&nbsp;}</div><div class='line' id='LC1481'><br/></div><div class='line' id='LC1482'>&nbsp;&nbsp;_unsafeCharsPattern = new RegExp(&quot;[&quot; + (_unsafeChars.join(&#39;&#39;)) + &quot;]&quot;, &quot;g&quot;);</div><div class='line' id='LC1483'><br/></div><div class='line' id='LC1484'>&nbsp;&nbsp;_encodedCharsPattern = new RegExp(&quot;(&quot; + (_encodedChars.join(&#39;|&#39;)) + &quot;)&quot;, &quot;g&quot;);</div><div class='line' id='LC1485'><br/></div><div class='line' id='LC1486'>&nbsp;&nbsp;Batman.escapeHTML = (function() {</div><div class='line' id='LC1487'>&nbsp;&nbsp;&nbsp;&nbsp;return function(s) {</div><div class='line' id='LC1488'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (&quot;&quot; + s).replace(_unsafeCharsPattern, function(c) {</div><div class='line' id='LC1489'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _entityMap[c];</div><div class='line' id='LC1490'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC1491'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1492'>&nbsp;&nbsp;})();</div><div class='line' id='LC1493'><br/></div><div class='line' id='LC1494'>&nbsp;&nbsp;Batman.unescapeHTML = (function() {</div><div class='line' id='LC1495'>&nbsp;&nbsp;&nbsp;&nbsp;return function(s) {</div><div class='line' id='LC1496'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var node;</div><div class='line' id='LC1497'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (s == null) {</div><div class='line' id='LC1498'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC1499'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1500'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node = Batman._unescapeHTMLNode || (Batman._unescapeHTMLNode = document.createElement(&#39;DIV&#39;));</div><div class='line' id='LC1501'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node.innerHTML = s;</div><div class='line' id='LC1502'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.innerText(node);</div><div class='line' id='LC1503'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1504'>&nbsp;&nbsp;})();</div><div class='line' id='LC1505'><br/></div><div class='line' id='LC1506'>&nbsp;&nbsp;Batman.translate = function(x, values) {</div><div class='line' id='LC1507'>&nbsp;&nbsp;&nbsp;&nbsp;if (values == null) {</div><div class='line' id='LC1508'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values = {};</div><div class='line' id='LC1509'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1510'>&nbsp;&nbsp;&nbsp;&nbsp;return Batman.helpers.interpolate(Batman.get(Batman.translate.messages, x), values);</div><div class='line' id='LC1511'>&nbsp;&nbsp;};</div><div class='line' id='LC1512'><br/></div><div class='line' id='LC1513'>&nbsp;&nbsp;Batman.translate.messages = {};</div><div class='line' id='LC1514'><br/></div><div class='line' id='LC1515'>&nbsp;&nbsp;Batman.t = function() {</div><div class='line' id='LC1516'>&nbsp;&nbsp;&nbsp;&nbsp;return Batman.translate.apply(Batman, arguments);</div><div class='line' id='LC1517'>&nbsp;&nbsp;};</div><div class='line' id='LC1518'><br/></div><div class='line' id='LC1519'>&nbsp;&nbsp;Batman.redirect = function(url) {</div><div class='line' id='LC1520'>&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC1521'>&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = Batman.navigator) != null ? _ref.redirect(url) : void 0;</div><div class='line' id='LC1522'>&nbsp;&nbsp;};</div><div class='line' id='LC1523'><br/></div><div class='line' id='LC1524'>&nbsp;&nbsp;Batman.initializeObject = function(object) {</div><div class='line' id='LC1525'>&nbsp;&nbsp;&nbsp;&nbsp;if (object._batman != null) {</div><div class='line' id='LC1526'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return object._batman.check(object);</div><div class='line' id='LC1527'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC1528'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return object._batman = new Batman._Batman(object);</div><div class='line' id='LC1529'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1530'>&nbsp;&nbsp;};</div><div class='line' id='LC1531'><br/></div><div class='line' id='LC1532'>}).call(this);</div><div class='line' id='LC1533'><br/></div><div class='line' id='LC1534'>(function() {</div><div class='line' id='LC1535'>&nbsp;&nbsp;var __slice = [].slice,</div><div class='line' id='LC1536'>&nbsp;&nbsp;&nbsp;&nbsp;__indexOf = [].indexOf ||</div><div class='line' id='LC1537'>&nbsp;&nbsp;function(item) {</div><div class='line' id='LC1538'>&nbsp;&nbsp;&nbsp;&nbsp;for (var i = 0, l = this.length; i &lt; l; i++) {</div><div class='line' id='LC1539'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (i in this &amp;&amp; this[i] === item) return i;</div><div class='line' id='LC1540'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1541'>&nbsp;&nbsp;&nbsp;&nbsp;return -1;</div><div class='line' id='LC1542'>&nbsp;&nbsp;};</div><div class='line' id='LC1543'><br/></div><div class='line' id='LC1544'>&nbsp;&nbsp;Batman.Inflector = (function() {</div><div class='line' id='LC1545'><br/></div><div class='line' id='LC1546'>&nbsp;&nbsp;&nbsp;&nbsp;Inflector.prototype.plural = function(regex, replacement) {</div><div class='line' id='LC1547'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._plural.unshift([regex, replacement]);</div><div class='line' id='LC1548'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1549'><br/></div><div class='line' id='LC1550'>&nbsp;&nbsp;&nbsp;&nbsp;Inflector.prototype.singular = function(regex, replacement) {</div><div class='line' id='LC1551'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._singular.unshift([regex, replacement]);</div><div class='line' id='LC1552'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1553'><br/></div><div class='line' id='LC1554'>&nbsp;&nbsp;&nbsp;&nbsp;Inflector.prototype.human = function(regex, replacement) {</div><div class='line' id='LC1555'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._human.unshift([regex, replacement]);</div><div class='line' id='LC1556'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1557'><br/></div><div class='line' id='LC1558'>&nbsp;&nbsp;&nbsp;&nbsp;Inflector.prototype.uncountable = function() {</div><div class='line' id='LC1559'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var strings;</div><div class='line' id='LC1560'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strings = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC1561'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._uncountable = this._uncountable.concat(strings.map(function(x) {</div><div class='line' id='LC1562'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new RegExp(&quot;&quot; + x + &quot;$&quot;, &#39;i&#39;);</div><div class='line' id='LC1563'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC1564'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1565'><br/></div><div class='line' id='LC1566'>&nbsp;&nbsp;&nbsp;&nbsp;Inflector.prototype.irregular = function(singular, plural) {</div><div class='line' id='LC1567'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (singular.charAt(0) === plural.charAt(0)) {</div><div class='line' id='LC1568'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.plural(new RegExp(&quot;(&quot; + (singular.charAt(0)) + &quot;)&quot; + (singular.slice(1)) + &quot;$&quot;, &quot;i&quot;), &quot;$1&quot; + plural.slice(1));</div><div class='line' id='LC1569'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.plural(new RegExp(&quot;(&quot; + (singular.charAt(0)) + &quot;)&quot; + (plural.slice(1)) + &quot;$&quot;, &quot;i&quot;), &quot;$1&quot; + plural.slice(1));</div><div class='line' id='LC1570'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.singular(new RegExp(&quot;(&quot; + (plural.charAt(0)) + &quot;)&quot; + (plural.slice(1)) + &quot;$&quot;, &quot;i&quot;), &quot;$1&quot; + singular.slice(1));</div><div class='line' id='LC1571'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC1572'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.plural(new RegExp(&quot;&quot; + singular + &quot;$&quot;, &#39;i&#39;), plural);</div><div class='line' id='LC1573'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.plural(new RegExp(&quot;&quot; + plural + &quot;$&quot;, &#39;i&#39;), plural);</div><div class='line' id='LC1574'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.singular(new RegExp(&quot;&quot; + plural + &quot;$&quot;, &#39;i&#39;), singular);</div><div class='line' id='LC1575'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1576'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1577'><br/></div><div class='line' id='LC1578'>&nbsp;&nbsp;&nbsp;&nbsp;function Inflector() {</div><div class='line' id='LC1579'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._plural = [];</div><div class='line' id='LC1580'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._singular = [];</div><div class='line' id='LC1581'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._uncountable = [];</div><div class='line' id='LC1582'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._human = [];</div><div class='line' id='LC1583'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1584'><br/></div><div class='line' id='LC1585'>&nbsp;&nbsp;&nbsp;&nbsp;Inflector.prototype.ordinalize = function(number) {</div><div class='line' id='LC1586'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var absNumber, _ref;</div><div class='line' id='LC1587'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;absNumber = Math.abs(parseInt(number));</div><div class='line' id='LC1588'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (_ref = absNumber % 100, __indexOf.call([11, 12, 13], _ref) &gt;= 0) {</div><div class='line' id='LC1589'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return number + &quot;th&quot;;</div><div class='line' id='LC1590'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC1591'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (absNumber % 10) {</div><div class='line' id='LC1592'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 1:</div><div class='line' id='LC1593'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return number + &quot;st&quot;;</div><div class='line' id='LC1594'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 2:</div><div class='line' id='LC1595'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return number + &quot;nd&quot;;</div><div class='line' id='LC1596'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 3:</div><div class='line' id='LC1597'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return number + &quot;rd&quot;;</div><div class='line' id='LC1598'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:</div><div class='line' id='LC1599'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return number + &quot;th&quot;;</div><div class='line' id='LC1600'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1601'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1602'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1603'><br/></div><div class='line' id='LC1604'>&nbsp;&nbsp;&nbsp;&nbsp;Inflector.prototype.pluralize = function(word) {</div><div class='line' id='LC1605'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var regex, replace_string, uncountableRegex, _i, _j, _len, _len1, _ref, _ref1, _ref2;</div><div class='line' id='LC1606'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this._uncountable;</div><div class='line' id='LC1607'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC1608'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uncountableRegex = _ref[_i];</div><div class='line' id='LC1609'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (uncountableRegex.test(word)) {</div><div class='line' id='LC1610'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return word;</div><div class='line' id='LC1611'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1612'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1613'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1 = this._plural;</div><div class='line' id='LC1614'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_j = 0, _len1 = _ref1.length; _j &lt; _len1; _j++) {</div><div class='line' id='LC1615'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref2 = _ref1[_j], regex = _ref2[0], replace_string = _ref2[1];</div><div class='line' id='LC1616'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (regex.test(word)) {</div><div class='line' id='LC1617'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return word.replace(regex, replace_string);</div><div class='line' id='LC1618'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1619'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1620'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return word;</div><div class='line' id='LC1621'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1622'><br/></div><div class='line' id='LC1623'>&nbsp;&nbsp;&nbsp;&nbsp;Inflector.prototype.singularize = function(word) {</div><div class='line' id='LC1624'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var regex, replace_string, uncountableRegex, _i, _j, _len, _len1, _ref, _ref1, _ref2;</div><div class='line' id='LC1625'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this._uncountable;</div><div class='line' id='LC1626'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC1627'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uncountableRegex = _ref[_i];</div><div class='line' id='LC1628'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (uncountableRegex.test(word)) {</div><div class='line' id='LC1629'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return word;</div><div class='line' id='LC1630'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1631'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1632'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1 = this._singular;</div><div class='line' id='LC1633'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_j = 0, _len1 = _ref1.length; _j &lt; _len1; _j++) {</div><div class='line' id='LC1634'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref2 = _ref1[_j], regex = _ref2[0], replace_string = _ref2[1];</div><div class='line' id='LC1635'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (regex.test(word)) {</div><div class='line' id='LC1636'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return word.replace(regex, replace_string);</div><div class='line' id='LC1637'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1638'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1639'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return word;</div><div class='line' id='LC1640'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1641'><br/></div><div class='line' id='LC1642'>&nbsp;&nbsp;&nbsp;&nbsp;Inflector.prototype.humanize = function(word) {</div><div class='line' id='LC1643'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var regex, replace_string, _i, _len, _ref, _ref1;</div><div class='line' id='LC1644'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this._human;</div><div class='line' id='LC1645'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC1646'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1 = _ref[_i], regex = _ref1[0], replace_string = _ref1[1];</div><div class='line' id='LC1647'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (regex.test(word)) {</div><div class='line' id='LC1648'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return word.replace(regex, replace_string);</div><div class='line' id='LC1649'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1650'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1651'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return word;</div><div class='line' id='LC1652'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1653'><br/></div><div class='line' id='LC1654'>&nbsp;&nbsp;&nbsp;&nbsp;return Inflector;</div><div class='line' id='LC1655'><br/></div><div class='line' id='LC1656'>&nbsp;&nbsp;})();</div><div class='line' id='LC1657'><br/></div><div class='line' id='LC1658'>}).call(this);</div><div class='line' id='LC1659'><br/></div><div class='line' id='LC1660'>(function() {</div><div class='line' id='LC1661'>&nbsp;&nbsp;var Inflector, camelize_rx, capitalize_rx, humanize_rx1, humanize_rx2, humanize_rx3, underscore_rx1, underscore_rx2;</div><div class='line' id='LC1662'><br/></div><div class='line' id='LC1663'>&nbsp;&nbsp;camelize_rx = /(?:^|_|\-)(.)/g;</div><div class='line' id='LC1664'><br/></div><div class='line' id='LC1665'>&nbsp;&nbsp;capitalize_rx = /(^|\s)([a-z])/g;</div><div class='line' id='LC1666'><br/></div><div class='line' id='LC1667'>&nbsp;&nbsp;underscore_rx1 = /([A-Z]+)([A-Z][a-z])/g;</div><div class='line' id='LC1668'><br/></div><div class='line' id='LC1669'>&nbsp;&nbsp;underscore_rx2 = /([a-z\d])([A-Z])/g;</div><div class='line' id='LC1670'><br/></div><div class='line' id='LC1671'>&nbsp;&nbsp;humanize_rx1 = /_id$/;</div><div class='line' id='LC1672'><br/></div><div class='line' id='LC1673'>&nbsp;&nbsp;humanize_rx2 = /_|-/g;</div><div class='line' id='LC1674'><br/></div><div class='line' id='LC1675'>&nbsp;&nbsp;humanize_rx3 = /^\w/g;</div><div class='line' id='LC1676'><br/></div><div class='line' id='LC1677'>&nbsp;&nbsp;Batman.helpers = {</div><div class='line' id='LC1678'>&nbsp;&nbsp;&nbsp;&nbsp;ordinalize: function() {</div><div class='line' id='LC1679'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.helpers.inflector.ordinalize.apply(Batman.helpers.inflector, arguments);</div><div class='line' id='LC1680'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC1681'>&nbsp;&nbsp;&nbsp;&nbsp;singularize: function() {</div><div class='line' id='LC1682'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.helpers.inflector.singularize.apply(Batman.helpers.inflector, arguments);</div><div class='line' id='LC1683'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC1684'>&nbsp;&nbsp;&nbsp;&nbsp;pluralize: function(count, singular, plural, includeCount) {</div><div class='line' id='LC1685'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result;</div><div class='line' id='LC1686'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (includeCount == null) {</div><div class='line' id='LC1687'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;includeCount = true;</div><div class='line' id='LC1688'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1689'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (arguments.length &lt; 2) {</div><div class='line' id='LC1690'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.helpers.inflector.pluralize(count);</div><div class='line' id='LC1691'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC1692'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = +count === 1 ? singular : plural || Batman.helpers.inflector.pluralize(singular);</div><div class='line' id='LC1693'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (includeCount) {</div><div class='line' id='LC1694'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = (&quot;&quot; + (count || 0) + &quot; &quot;) + result;</div><div class='line' id='LC1695'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1696'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC1697'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1698'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC1699'>&nbsp;&nbsp;&nbsp;&nbsp;camelize: function(string, firstLetterLower) {</div><div class='line' id='LC1700'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string = string.replace(camelize_rx, function(str, p1) {</div><div class='line' id='LC1701'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return p1.toUpperCase();</div><div class='line' id='LC1702'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC1703'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (firstLetterLower) {</div><div class='line' id='LC1704'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return string.substr(0, 1).toLowerCase() + string.substr(1);</div><div class='line' id='LC1705'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC1706'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return string;</div><div class='line' id='LC1707'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1708'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC1709'>&nbsp;&nbsp;&nbsp;&nbsp;underscore: function(string) {</div><div class='line' id='LC1710'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return string.replace(underscore_rx1, &#39;$1_$2&#39;).replace(underscore_rx2, &#39;$1_$2&#39;).replace(&#39;-&#39;, &#39;_&#39;).toLowerCase();</div><div class='line' id='LC1711'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC1712'>&nbsp;&nbsp;&nbsp;&nbsp;capitalize: function(string) {</div><div class='line' id='LC1713'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return string.replace(capitalize_rx, function(m, p1, p2) {</div><div class='line' id='LC1714'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return p1 + p2.toUpperCase();</div><div class='line' id='LC1715'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC1716'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC1717'>&nbsp;&nbsp;&nbsp;&nbsp;trim: function(string) {</div><div class='line' id='LC1718'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (string) {</div><div class='line' id='LC1719'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return string.trim();</div><div class='line' id='LC1720'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC1721'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;&quot;;</div><div class='line' id='LC1722'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1723'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC1724'>&nbsp;&nbsp;&nbsp;&nbsp;interpolate: function(stringOrObject, keys) {</div><div class='line' id='LC1725'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var key, string, value;</div><div class='line' id='LC1726'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof stringOrObject === &#39;object&#39;) {</div><div class='line' id='LC1727'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string = stringOrObject[keys.count];</div><div class='line' id='LC1728'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!string) {</div><div class='line' id='LC1729'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string = stringOrObject[&#39;other&#39;];</div><div class='line' id='LC1730'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1731'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC1732'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string = stringOrObject;</div><div class='line' id='LC1733'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1734'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (key in keys) {</div><div class='line' id='LC1735'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = keys[key];</div><div class='line' id='LC1736'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string = string.replace(new RegExp(&quot;%\\{&quot; + key + &quot;\\}&quot;, &quot;g&quot;), value);</div><div class='line' id='LC1737'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1738'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return string;</div><div class='line' id='LC1739'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC1740'>&nbsp;&nbsp;&nbsp;&nbsp;humanize: function(string) {</div><div class='line' id='LC1741'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string = Batman.helpers.underscore(string);</div><div class='line' id='LC1742'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string = Batman.helpers.inflector.humanize(string);</div><div class='line' id='LC1743'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return string.replace(humanize_rx1, &#39;&#39;).replace(humanize_rx2, &#39; &#39;).replace(humanize_rx3, function(match) {</div><div class='line' id='LC1744'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return match.toUpperCase();</div><div class='line' id='LC1745'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC1746'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1747'>&nbsp;&nbsp;};</div><div class='line' id='LC1748'><br/></div><div class='line' id='LC1749'>&nbsp;&nbsp;Inflector = new Batman.Inflector;</div><div class='line' id='LC1750'><br/></div><div class='line' id='LC1751'>&nbsp;&nbsp;Batman.helpers.inflector = Inflector;</div><div class='line' id='LC1752'><br/></div><div class='line' id='LC1753'>&nbsp;&nbsp;Inflector.plural(/$/, &#39;s&#39;);</div><div class='line' id='LC1754'><br/></div><div class='line' id='LC1755'>&nbsp;&nbsp;Inflector.plural(/s$/i, &#39;s&#39;);</div><div class='line' id='LC1756'><br/></div><div class='line' id='LC1757'>&nbsp;&nbsp;Inflector.plural(/(ax|test)is$/i, &#39;$1es&#39;);</div><div class='line' id='LC1758'><br/></div><div class='line' id='LC1759'>&nbsp;&nbsp;Inflector.plural(/(octop|vir)us$/i, &#39;$1i&#39;);</div><div class='line' id='LC1760'><br/></div><div class='line' id='LC1761'>&nbsp;&nbsp;Inflector.plural(/(octop|vir)i$/i, &#39;$1i&#39;);</div><div class='line' id='LC1762'><br/></div><div class='line' id='LC1763'>&nbsp;&nbsp;Inflector.plural(/(alias|status)$/i, &#39;$1es&#39;);</div><div class='line' id='LC1764'><br/></div><div class='line' id='LC1765'>&nbsp;&nbsp;Inflector.plural(/(bu)s$/i, &#39;$1ses&#39;);</div><div class='line' id='LC1766'><br/></div><div class='line' id='LC1767'>&nbsp;&nbsp;Inflector.plural(/(buffal|tomat)o$/i, &#39;$1oes&#39;);</div><div class='line' id='LC1768'><br/></div><div class='line' id='LC1769'>&nbsp;&nbsp;Inflector.plural(/([ti])um$/i, &#39;$1a&#39;);</div><div class='line' id='LC1770'><br/></div><div class='line' id='LC1771'>&nbsp;&nbsp;Inflector.plural(/([ti])a$/i, &#39;$1a&#39;);</div><div class='line' id='LC1772'><br/></div><div class='line' id='LC1773'>&nbsp;&nbsp;Inflector.plural(/sis$/i, &#39;ses&#39;);</div><div class='line' id='LC1774'><br/></div><div class='line' id='LC1775'>&nbsp;&nbsp;Inflector.plural(/(?:([^f])fe|([lr])f)$/i, &#39;$1$2ves&#39;);</div><div class='line' id='LC1776'><br/></div><div class='line' id='LC1777'>&nbsp;&nbsp;Inflector.plural(/(hive)$/i, &#39;$1s&#39;);</div><div class='line' id='LC1778'><br/></div><div class='line' id='LC1779'>&nbsp;&nbsp;Inflector.plural(/([^aeiouy]|qu)y$/i, &#39;$1ies&#39;);</div><div class='line' id='LC1780'><br/></div><div class='line' id='LC1781'>&nbsp;&nbsp;Inflector.plural(/(x|ch|ss|sh)$/i, &#39;$1es&#39;);</div><div class='line' id='LC1782'><br/></div><div class='line' id='LC1783'>&nbsp;&nbsp;Inflector.plural(/(matr|vert|ind)(?:ix|ex)$/i, &#39;$1ices&#39;);</div><div class='line' id='LC1784'><br/></div><div class='line' id='LC1785'>&nbsp;&nbsp;Inflector.plural(/([m|l])ouse$/i, &#39;$1ice&#39;);</div><div class='line' id='LC1786'><br/></div><div class='line' id='LC1787'>&nbsp;&nbsp;Inflector.plural(/([m|l])ice$/i, &#39;$1ice&#39;);</div><div class='line' id='LC1788'><br/></div><div class='line' id='LC1789'>&nbsp;&nbsp;Inflector.plural(/^(ox)$/i, &#39;$1en&#39;);</div><div class='line' id='LC1790'><br/></div><div class='line' id='LC1791'>&nbsp;&nbsp;Inflector.plural(/^(oxen)$/i, &#39;$1&#39;);</div><div class='line' id='LC1792'><br/></div><div class='line' id='LC1793'>&nbsp;&nbsp;Inflector.plural(/(quiz)$/i, &#39;$1zes&#39;);</div><div class='line' id='LC1794'><br/></div><div class='line' id='LC1795'>&nbsp;&nbsp;Inflector.singular(/s$/i, &#39;&#39;);</div><div class='line' id='LC1796'><br/></div><div class='line' id='LC1797'>&nbsp;&nbsp;Inflector.singular(/(n)ews$/i, &#39;$1ews&#39;);</div><div class='line' id='LC1798'><br/></div><div class='line' id='LC1799'>&nbsp;&nbsp;Inflector.singular(/([ti])a$/i, &#39;$1um&#39;);</div><div class='line' id='LC1800'><br/></div><div class='line' id='LC1801'>&nbsp;&nbsp;Inflector.singular(/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/i, &#39;$1$2sis&#39;);</div><div class='line' id='LC1802'><br/></div><div class='line' id='LC1803'>&nbsp;&nbsp;Inflector.singular(/(^analy)ses$/i, &#39;$1sis&#39;);</div><div class='line' id='LC1804'><br/></div><div class='line' id='LC1805'>&nbsp;&nbsp;Inflector.singular(/([^f])ves$/i, &#39;$1fe&#39;);</div><div class='line' id='LC1806'><br/></div><div class='line' id='LC1807'>&nbsp;&nbsp;Inflector.singular(/(hive)s$/i, &#39;$1&#39;);</div><div class='line' id='LC1808'><br/></div><div class='line' id='LC1809'>&nbsp;&nbsp;Inflector.singular(/(tive)s$/i, &#39;$1&#39;);</div><div class='line' id='LC1810'><br/></div><div class='line' id='LC1811'>&nbsp;&nbsp;Inflector.singular(/([lr])ves$/i, &#39;$1f&#39;);</div><div class='line' id='LC1812'><br/></div><div class='line' id='LC1813'>&nbsp;&nbsp;Inflector.singular(/([^aeiouy]|qu)ies$/i, &#39;$1y&#39;);</div><div class='line' id='LC1814'><br/></div><div class='line' id='LC1815'>&nbsp;&nbsp;Inflector.singular(/(s)eries$/i, &#39;$1eries&#39;);</div><div class='line' id='LC1816'><br/></div><div class='line' id='LC1817'>&nbsp;&nbsp;Inflector.singular(/(m)ovies$/i, &#39;$1ovie&#39;);</div><div class='line' id='LC1818'><br/></div><div class='line' id='LC1819'>&nbsp;&nbsp;Inflector.singular(/(x|ch|ss|sh)es$/i, &#39;$1&#39;);</div><div class='line' id='LC1820'><br/></div><div class='line' id='LC1821'>&nbsp;&nbsp;Inflector.singular(/([m|l])ice$/i, &#39;$1ouse&#39;);</div><div class='line' id='LC1822'><br/></div><div class='line' id='LC1823'>&nbsp;&nbsp;Inflector.singular(/(bus)es$/i, &#39;$1&#39;);</div><div class='line' id='LC1824'><br/></div><div class='line' id='LC1825'>&nbsp;&nbsp;Inflector.singular(/(o)es$/i, &#39;$1&#39;);</div><div class='line' id='LC1826'><br/></div><div class='line' id='LC1827'>&nbsp;&nbsp;Inflector.singular(/(shoe)s$/i, &#39;$1&#39;);</div><div class='line' id='LC1828'><br/></div><div class='line' id='LC1829'>&nbsp;&nbsp;Inflector.singular(/(cris|ax|test)es$/i, &#39;$1is&#39;);</div><div class='line' id='LC1830'><br/></div><div class='line' id='LC1831'>&nbsp;&nbsp;Inflector.singular(/(octop|vir)i$/i, &#39;$1us&#39;);</div><div class='line' id='LC1832'><br/></div><div class='line' id='LC1833'>&nbsp;&nbsp;Inflector.singular(/(alias|status)es$/i, &#39;$1&#39;);</div><div class='line' id='LC1834'><br/></div><div class='line' id='LC1835'>&nbsp;&nbsp;Inflector.singular(/^(ox)en/i, &#39;$1&#39;);</div><div class='line' id='LC1836'><br/></div><div class='line' id='LC1837'>&nbsp;&nbsp;Inflector.singular(/(vert|ind)ices$/i, &#39;$1ex&#39;);</div><div class='line' id='LC1838'><br/></div><div class='line' id='LC1839'>&nbsp;&nbsp;Inflector.singular(/(matr)ices$/i, &#39;$1ix&#39;);</div><div class='line' id='LC1840'><br/></div><div class='line' id='LC1841'>&nbsp;&nbsp;Inflector.singular(/(quiz)zes$/i, &#39;$1&#39;);</div><div class='line' id='LC1842'><br/></div><div class='line' id='LC1843'>&nbsp;&nbsp;Inflector.singular(/(database)s$/i, &#39;$1&#39;);</div><div class='line' id='LC1844'><br/></div><div class='line' id='LC1845'>&nbsp;&nbsp;Inflector.irregular(&#39;person&#39;, &#39;people&#39;);</div><div class='line' id='LC1846'><br/></div><div class='line' id='LC1847'>&nbsp;&nbsp;Inflector.irregular(&#39;man&#39;, &#39;men&#39;);</div><div class='line' id='LC1848'><br/></div><div class='line' id='LC1849'>&nbsp;&nbsp;Inflector.irregular(&#39;child&#39;, &#39;children&#39;);</div><div class='line' id='LC1850'><br/></div><div class='line' id='LC1851'>&nbsp;&nbsp;Inflector.irregular(&#39;sex&#39;, &#39;sexes&#39;);</div><div class='line' id='LC1852'><br/></div><div class='line' id='LC1853'>&nbsp;&nbsp;Inflector.irregular(&#39;move&#39;, &#39;moves&#39;);</div><div class='line' id='LC1854'><br/></div><div class='line' id='LC1855'>&nbsp;&nbsp;Inflector.irregular(&#39;cow&#39;, &#39;kine&#39;);</div><div class='line' id='LC1856'><br/></div><div class='line' id='LC1857'>&nbsp;&nbsp;Inflector.irregular(&#39;zombie&#39;, &#39;zombies&#39;);</div><div class='line' id='LC1858'><br/></div><div class='line' id='LC1859'>&nbsp;&nbsp;Inflector.uncountable(&#39;equipment&#39;, &#39;information&#39;, &#39;rice&#39;, &#39;money&#39;, &#39;species&#39;, &#39;series&#39;, &#39;fish&#39;, &#39;sheep&#39;, &#39;jeans&#39;);</div><div class='line' id='LC1860'><br/></div><div class='line' id='LC1861'>}).call(this);</div><div class='line' id='LC1862'><br/></div><div class='line' id='LC1863'>(function() {</div><div class='line' id='LC1864'>&nbsp;&nbsp;var developer;</div><div class='line' id='LC1865'><br/></div><div class='line' id='LC1866'>&nbsp;&nbsp;Batman.developer = {</div><div class='line' id='LC1867'>&nbsp;&nbsp;&nbsp;&nbsp;suppressed: false,</div><div class='line' id='LC1868'>&nbsp;&nbsp;&nbsp;&nbsp;DevelopmentError: (function() {</div><div class='line' id='LC1869'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var DevelopmentError;</div><div class='line' id='LC1870'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DevelopmentError = function(message) {</div><div class='line' id='LC1871'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.message = message;</div><div class='line' id='LC1872'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.name = &quot;DevelopmentError&quot;;</div><div class='line' id='LC1873'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1874'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DevelopmentError.prototype = Error.prototype;</div><div class='line' id='LC1875'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return DevelopmentError;</div><div class='line' id='LC1876'>&nbsp;&nbsp;&nbsp;&nbsp;})(),</div><div class='line' id='LC1877'>&nbsp;&nbsp;&nbsp;&nbsp;_ie_console: function(f, args) {</div><div class='line' id='LC1878'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var arg, _i, _len, _results;</div><div class='line' id='LC1879'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (args.length !== 1) {</div><div class='line' id='LC1880'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof console !== &quot;undefined&quot; &amp;&amp; console !== null) {</div><div class='line' id='LC1881'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console[f](&quot;...&quot; + f + &quot; of &quot; + args.length + &quot; items...&quot;);</div><div class='line' id='LC1882'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1883'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1884'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC1885'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = args.length; _i &lt; _len; _i++) {</div><div class='line' id='LC1886'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arg = args[_i];</div><div class='line' id='LC1887'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(typeof console !== &quot;undefined&quot; &amp;&amp; console !== null ? console[f](arg) : void 0);</div><div class='line' id='LC1888'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1889'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC1890'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC1891'>&nbsp;&nbsp;&nbsp;&nbsp;suppress: function(f) {</div><div class='line' id='LC1892'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;developer.suppressed = true;</div><div class='line' id='LC1893'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (f) {</div><div class='line' id='LC1894'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f();</div><div class='line' id='LC1895'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return developer.suppressed = false;</div><div class='line' id='LC1896'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1897'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC1898'>&nbsp;&nbsp;&nbsp;&nbsp;unsuppress: function() {</div><div class='line' id='LC1899'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return developer.suppressed = false;</div><div class='line' id='LC1900'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC1901'>&nbsp;&nbsp;&nbsp;&nbsp;log: function() {</div><div class='line' id='LC1902'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (developer.suppressed || !((typeof console !== &quot;undefined&quot; &amp;&amp; console !== null ? console.log : void 0) != null)) {</div><div class='line' id='LC1903'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC1904'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1905'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (console.log.apply) {</div><div class='line' id='LC1906'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return console.log.apply(console, arguments);</div><div class='line' id='LC1907'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC1908'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return developer._ie_console(&quot;log&quot;, arguments);</div><div class='line' id='LC1909'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1910'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC1911'>&nbsp;&nbsp;&nbsp;&nbsp;warn: function() {</div><div class='line' id='LC1912'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (developer.suppressed || !((typeof console !== &quot;undefined&quot; &amp;&amp; console !== null ? console.warn : void 0) != null)) {</div><div class='line' id='LC1913'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC1914'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1915'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (console.warn.apply) {</div><div class='line' id='LC1916'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return console.warn.apply(console, arguments);</div><div class='line' id='LC1917'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC1918'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return developer._ie_console(&quot;warn&quot;, arguments);</div><div class='line' id='LC1919'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1920'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC1921'>&nbsp;&nbsp;&nbsp;&nbsp;error: function(message) {</div><div class='line' id='LC1922'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new developer.DevelopmentError(message);</div><div class='line' id='LC1923'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC1924'>&nbsp;&nbsp;&nbsp;&nbsp;assert: function(result, message) {</div><div class='line' id='LC1925'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!result) {</div><div class='line' id='LC1926'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return developer.error(message);</div><div class='line' id='LC1927'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1928'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC1929'>&nbsp;&nbsp;&nbsp;&nbsp;&quot;do&quot;: function(f) {</div><div class='line' id='LC1930'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!developer.suppressed) {</div><div class='line' id='LC1931'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return f();</div><div class='line' id='LC1932'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1933'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC1934'>&nbsp;&nbsp;&nbsp;&nbsp;addFilters: function() {</div><div class='line' id='LC1935'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.extend(Batman.Filters, {</div><div class='line' id='LC1936'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log: function(value, key) {</div><div class='line' id='LC1937'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof console !== &quot;undefined&quot; &amp;&amp; console !== null) {</div><div class='line' id='LC1938'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof console.log === &quot;function&quot;) {</div><div class='line' id='LC1939'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(arguments);</div><div class='line' id='LC1940'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1941'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1942'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value;</div><div class='line' id='LC1943'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC1944'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;logStack: function(value) {</div><div class='line' id='LC1945'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof console !== &quot;undefined&quot; &amp;&amp; console !== null) {</div><div class='line' id='LC1946'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof console.log === &quot;function&quot;) {</div><div class='line' id='LC1947'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(developer.currentFilterStack);</div><div class='line' id='LC1948'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1949'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1950'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value;</div><div class='line' id='LC1951'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1952'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC1953'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC1954'>&nbsp;&nbsp;&nbsp;&nbsp;deprecated: function(deprecatedName, upgradeString) {</div><div class='line' id='LC1955'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.developer.warn(&quot;&quot; + deprecatedName + &quot; has been deprecated.&quot;, upgradeString || &#39;&#39;);</div><div class='line' id='LC1956'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1957'>&nbsp;&nbsp;};</div><div class='line' id='LC1958'><br/></div><div class='line' id='LC1959'>&nbsp;&nbsp;developer = Batman.developer;</div><div class='line' id='LC1960'><br/></div><div class='line' id='LC1961'>&nbsp;&nbsp;Batman.developer.assert((function() {}).bind, &quot;Error! Batman needs Function.bind to work! Please shim it using something like es5-shim or augmentjs!&quot;);</div><div class='line' id='LC1962'><br/></div><div class='line' id='LC1963'>}).call(this);</div><div class='line' id='LC1964'><br/></div><div class='line' id='LC1965'>(function() {</div><div class='line' id='LC1966'><br/></div><div class='line' id='LC1967'>&nbsp;&nbsp;Batman.Event = (function() {</div><div class='line' id='LC1968'><br/></div><div class='line' id='LC1969'>&nbsp;&nbsp;&nbsp;&nbsp;Event.forBaseAndKey = function(base, key) {</div><div class='line' id='LC1970'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (base.isEventEmitter) {</div><div class='line' id='LC1971'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return base.event(key);</div><div class='line' id='LC1972'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC1973'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.Event(base, key);</div><div class='line' id='LC1974'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1975'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1976'><br/></div><div class='line' id='LC1977'>&nbsp;&nbsp;&nbsp;&nbsp;function Event(base, key) {</div><div class='line' id='LC1978'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.base = base;</div><div class='line' id='LC1979'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.key = key;</div><div class='line' id='LC1980'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._preventCount = 0;</div><div class='line' id='LC1981'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC1982'><br/></div><div class='line' id='LC1983'>&nbsp;&nbsp;&nbsp;&nbsp;Event.prototype.isEvent = true;</div><div class='line' id='LC1984'><br/></div><div class='line' id='LC1985'>&nbsp;&nbsp;&nbsp;&nbsp;Event.prototype.isEqual = function(other) {</div><div class='line' id='LC1986'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.constructor === other.constructor &amp;&amp; this.base === other.base &amp;&amp; this.key === other.key;</div><div class='line' id='LC1987'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1988'><br/></div><div class='line' id='LC1989'>&nbsp;&nbsp;&nbsp;&nbsp;Event.prototype.hashKey = function() {</div><div class='line' id='LC1990'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var key;</div><div class='line' id='LC1991'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.hashKey = function() {</div><div class='line' id='LC1992'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return key;</div><div class='line' id='LC1993'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1994'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return key = &quot;&lt;Batman.Event base: &quot; + (Batman.Hash.prototype.hashKeyFor(this.base)) + &quot;, key: \&quot;&quot; + (Batman.Hash.prototype.hashKeyFor(this.key)) + &quot;\&quot;&gt;&quot;;</div><div class='line' id='LC1995'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC1996'><br/></div><div class='line' id='LC1997'>&nbsp;&nbsp;&nbsp;&nbsp;Event.prototype.addHandler = function(handler) {</div><div class='line' id='LC1998'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.handlers || (this.handlers = []);</div><div class='line' id='LC1999'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.handlers.indexOf(handler) === -1) {</div><div class='line' id='LC2000'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.handlers.push(handler);</div><div class='line' id='LC2001'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2002'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.oneShot) {</div><div class='line' id='LC2003'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.autofireHandler(handler);</div><div class='line' id='LC2004'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2005'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC2006'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2007'><br/></div><div class='line' id='LC2008'>&nbsp;&nbsp;&nbsp;&nbsp;Event.prototype.removeHandler = function(handler) {</div><div class='line' id='LC2009'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var index;</div><div class='line' id='LC2010'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.handlers &amp;&amp; (index = this.handlers.indexOf(handler)) !== -1) {</div><div class='line' id='LC2011'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.handlers.splice(index, 1);</div><div class='line' id='LC2012'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2013'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC2014'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2015'><br/></div><div class='line' id='LC2016'>&nbsp;&nbsp;&nbsp;&nbsp;Event.prototype.eachHandler = function(iterator) {</div><div class='line' id='LC2017'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var ancestor, key, _i, _len, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _results;</div><div class='line' id='LC2018'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = this.handlers) != null) {</div><div class='line' id='LC2019'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref.slice().forEach(iterator);</div><div class='line' id='LC2020'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2021'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref1 = this.base) != null ? _ref1.isEventEmitter : void 0) {</div><div class='line' id='LC2022'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = this.key;</div><div class='line' id='LC2023'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref3 = (_ref2 = this.base._batman) != null ? _ref2.ancestors() : void 0;</div><div class='line' id='LC2024'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC2025'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref3.length; _i &lt; _len; _i++) {</div><div class='line' id='LC2026'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ancestor = _ref3[_i];</div><div class='line' id='LC2027'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (ancestor.isEventEmitter &amp;&amp; ((_ref4 = ancestor._batman) != null ? (_ref5 = _ref4.events) != null ? _ref5.hasOwnProperty(key) : void 0 : void 0)) {</div><div class='line' id='LC2028'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push((_ref6 = ancestor.event(key, false)) != null ? (_ref7 = _ref6.handlers) != null ? _ref7.slice().forEach(iterator) : void 0 : void 0);</div><div class='line' id='LC2029'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC2030'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(void 0);</div><div class='line' id='LC2031'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2032'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2033'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC2034'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2035'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2036'><br/></div><div class='line' id='LC2037'>&nbsp;&nbsp;&nbsp;&nbsp;Event.prototype.clearHandlers = function() {</div><div class='line' id='LC2038'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.handlers = void 0;</div><div class='line' id='LC2039'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2040'><br/></div><div class='line' id='LC2041'>&nbsp;&nbsp;&nbsp;&nbsp;Event.prototype.handlerContext = function() {</div><div class='line' id='LC2042'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.base;</div><div class='line' id='LC2043'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2044'><br/></div><div class='line' id='LC2045'>&nbsp;&nbsp;&nbsp;&nbsp;Event.prototype.prevent = function() {</div><div class='line' id='LC2046'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ++this._preventCount;</div><div class='line' id='LC2047'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2048'><br/></div><div class='line' id='LC2049'>&nbsp;&nbsp;&nbsp;&nbsp;Event.prototype.allow = function() {</div><div class='line' id='LC2050'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this._preventCount) {</div><div class='line' id='LC2051'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--this._preventCount;</div><div class='line' id='LC2052'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2053'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._preventCount;</div><div class='line' id='LC2054'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2055'><br/></div><div class='line' id='LC2056'>&nbsp;&nbsp;&nbsp;&nbsp;Event.prototype.isPrevented = function() {</div><div class='line' id='LC2057'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._preventCount &gt; 0;</div><div class='line' id='LC2058'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2059'><br/></div><div class='line' id='LC2060'>&nbsp;&nbsp;&nbsp;&nbsp;Event.prototype.autofireHandler = function(handler) {</div><div class='line' id='LC2061'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this._oneShotFired &amp;&amp; (this._oneShotArgs != null)) {</div><div class='line' id='LC2062'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return handler.apply(this.handlerContext(), this._oneShotArgs);</div><div class='line' id='LC2063'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2064'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2065'><br/></div><div class='line' id='LC2066'>&nbsp;&nbsp;&nbsp;&nbsp;Event.prototype.resetOneShot = function() {</div><div class='line' id='LC2067'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._oneShotFired = false;</div><div class='line' id='LC2068'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._oneShotArgs = null;</div><div class='line' id='LC2069'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2070'><br/></div><div class='line' id='LC2071'>&nbsp;&nbsp;&nbsp;&nbsp;Event.prototype.fire = function() {</div><div class='line' id='LC2072'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.fireWithContext(this.handlerContext(), arguments);</div><div class='line' id='LC2073'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2074'><br/></div><div class='line' id='LC2075'>&nbsp;&nbsp;&nbsp;&nbsp;Event.prototype.fireWithContext = function(context, args) {</div><div class='line' id='LC2076'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.isPrevented() || this._oneShotFired) {</div><div class='line' id='LC2077'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC2078'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2079'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.oneShot) {</div><div class='line' id='LC2080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._oneShotFired = true;</div><div class='line' id='LC2081'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._oneShotArgs = args;</div><div class='line' id='LC2082'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2083'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.eachHandler(function(handler) {</div><div class='line' id='LC2084'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return handler.apply(context, args);</div><div class='line' id='LC2085'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC2086'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2087'><br/></div><div class='line' id='LC2088'>&nbsp;&nbsp;&nbsp;&nbsp;Event.prototype.allowAndFire = function() {</div><div class='line' id='LC2089'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.allowAndFireWithContext(this.handlerContext, arguments);</div><div class='line' id='LC2090'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2091'><br/></div><div class='line' id='LC2092'>&nbsp;&nbsp;&nbsp;&nbsp;Event.prototype.allowAndFireWithContext = function(context, args) {</div><div class='line' id='LC2093'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.allow();</div><div class='line' id='LC2094'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.fireWithContext(context, args);</div><div class='line' id='LC2095'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2096'><br/></div><div class='line' id='LC2097'>&nbsp;&nbsp;&nbsp;&nbsp;return Event;</div><div class='line' id='LC2098'><br/></div><div class='line' id='LC2099'>&nbsp;&nbsp;})();</div><div class='line' id='LC2100'><br/></div><div class='line' id='LC2101'>}).call(this);</div><div class='line' id='LC2102'><br/></div><div class='line' id='LC2103'>(function() {</div><div class='line' id='LC2104'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC2105'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC2106'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC2107'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC2108'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2109'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC2110'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC2111'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2112'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC2113'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC2114'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC2115'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC2116'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2117'><br/></div><div class='line' id='LC2118'>&nbsp;&nbsp;Batman.PropertyEvent = (function(_super) {</div><div class='line' id='LC2119'><br/></div><div class='line' id='LC2120'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(PropertyEvent, _super);</div><div class='line' id='LC2121'><br/></div><div class='line' id='LC2122'>&nbsp;&nbsp;&nbsp;&nbsp;function PropertyEvent() {</div><div class='line' id='LC2123'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return PropertyEvent.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC2124'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2125'><br/></div><div class='line' id='LC2126'>&nbsp;&nbsp;&nbsp;&nbsp;PropertyEvent.prototype.eachHandler = function(iterator) {</div><div class='line' id='LC2127'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.base.eachObserver(iterator);</div><div class='line' id='LC2128'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2129'><br/></div><div class='line' id='LC2130'>&nbsp;&nbsp;&nbsp;&nbsp;PropertyEvent.prototype.handlerContext = function() {</div><div class='line' id='LC2131'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.base.base;</div><div class='line' id='LC2132'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2133'><br/></div><div class='line' id='LC2134'>&nbsp;&nbsp;&nbsp;&nbsp;return PropertyEvent;</div><div class='line' id='LC2135'><br/></div><div class='line' id='LC2136'>&nbsp;&nbsp;})(Batman.Event);</div><div class='line' id='LC2137'><br/></div><div class='line' id='LC2138'>}).call(this);</div><div class='line' id='LC2139'><br/></div><div class='line' id='LC2140'>(function() {</div><div class='line' id='LC2141'>&nbsp;&nbsp;var __slice = [].slice;</div><div class='line' id='LC2142'><br/></div><div class='line' id='LC2143'>&nbsp;&nbsp;Batman.EventEmitter = {</div><div class='line' id='LC2144'>&nbsp;&nbsp;&nbsp;&nbsp;isEventEmitter: true,</div><div class='line' id='LC2145'>&nbsp;&nbsp;&nbsp;&nbsp;hasEvent: function(key) {</div><div class='line' id='LC2146'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref, _ref1;</div><div class='line' id='LC2147'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = this._batman) != null ? typeof _ref.get === &quot;function&quot; ? (_ref1 = _ref.get(&#39;events&#39;)) != null ? _ref1.hasOwnProperty(key) : void 0 : void 0 : void 0;</div><div class='line' id='LC2148'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC2149'>&nbsp;&nbsp;&nbsp;&nbsp;event: function(key, createEvent) {</div><div class='line' id='LC2150'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var ancestor, eventClass, events, existingEvent, newEvent, _base, _i, _len, _ref, _ref1, _ref2, _ref3;</div><div class='line' id='LC2151'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (createEvent == null) {</div><div class='line' id='LC2152'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;createEvent = true;</div><div class='line' id='LC2153'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2154'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.initializeObject(this);</div><div class='line' id='LC2155'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eventClass = this.eventClass || Batman.Event;</div><div class='line' id='LC2156'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = this._batman.events) != null ? _ref.hasOwnProperty(key) : void 0) {</div><div class='line' id='LC2157'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return existingEvent = this._batman.events[key];</div><div class='line' id='LC2158'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC2159'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1 = this._batman.ancestors();</div><div class='line' id='LC2160'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref1.length; _i &lt; _len; _i++) {</div><div class='line' id='LC2161'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ancestor = _ref1[_i];</div><div class='line' id='LC2162'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;existingEvent = (_ref2 = ancestor._batman) != null ? (_ref3 = _ref2.events) != null ? _ref3[key] : void 0 : void 0;</div><div class='line' id='LC2163'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (existingEvent) {</div><div class='line' id='LC2164'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC2165'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2166'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2167'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (createEvent || (existingEvent != null ? existingEvent.oneShot : void 0)) {</div><div class='line' id='LC2168'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;events = (_base = this._batman).events || (_base.events = {});</div><div class='line' id='LC2169'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newEvent = events[key] = new eventClass(this, key);</div><div class='line' id='LC2170'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newEvent.oneShot = existingEvent != null ? existingEvent.oneShot : void 0;</div><div class='line' id='LC2171'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return newEvent;</div><div class='line' id='LC2172'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC2173'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return existingEvent;</div><div class='line' id='LC2174'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2175'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2176'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC2177'>&nbsp;&nbsp;&nbsp;&nbsp;on: function() {</div><div class='line' id='LC2178'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var handler, key, keys, _i, _j, _len, _results;</div><div class='line' id='LC2179'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keys = 2 &lt;= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), handler = arguments[_i++];</div><div class='line' id='LC2180'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC2181'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_j = 0, _len = keys.length; _j &lt; _len; _j++) {</div><div class='line' id='LC2182'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = keys[_j];</div><div class='line' id='LC2183'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(this.event(key).addHandler(handler));</div><div class='line' id='LC2184'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2185'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC2186'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC2187'>&nbsp;&nbsp;&nbsp;&nbsp;once: function(key, handler) {</div><div class='line' id='LC2188'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var event, handlerWrapper;</div><div class='line' id='LC2189'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event = this.event(key);</div><div class='line' id='LC2190'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handlerWrapper = function() {</div><div class='line' id='LC2191'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handler.apply(this, arguments);</div><div class='line' id='LC2192'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return event.removeHandler(handlerWrapper);</div><div class='line' id='LC2193'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2194'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return event.addHandler(handlerWrapper);</div><div class='line' id='LC2195'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC2196'>&nbsp;&nbsp;&nbsp;&nbsp;registerAsMutableSource: function() {</div><div class='line' id='LC2197'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.Property.registerSource(this);</div><div class='line' id='LC2198'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC2199'>&nbsp;&nbsp;&nbsp;&nbsp;mutation: function(wrappedFunction) {</div><div class='line' id='LC2200'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function() {</div><div class='line' id='LC2201'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result, _ref;</div><div class='line' id='LC2202'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = wrappedFunction.apply(this, arguments);</div><div class='line' id='LC2203'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = this.event(&#39;change&#39;, false)) != null) {</div><div class='line' id='LC2204'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref.fire(this, this);</div><div class='line' id='LC2205'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2206'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC2207'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2208'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC2209'>&nbsp;&nbsp;&nbsp;&nbsp;prevent: function(key) {</div><div class='line' id='LC2210'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.event(key).prevent();</div><div class='line' id='LC2211'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC2212'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC2213'>&nbsp;&nbsp;&nbsp;&nbsp;allow: function(key) {</div><div class='line' id='LC2214'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.event(key).allow();</div><div class='line' id='LC2215'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC2216'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC2217'>&nbsp;&nbsp;&nbsp;&nbsp;isPrevented: function(key) {</div><div class='line' id='LC2218'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC2219'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = this.event(key, false)) != null ? _ref.isPrevented() : void 0;</div><div class='line' id='LC2220'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC2221'>&nbsp;&nbsp;&nbsp;&nbsp;fire: function() {</div><div class='line' id='LC2222'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var args, key, _ref;</div><div class='line' id='LC2223'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = arguments[0], args = 2 &lt;= arguments.length ? __slice.call(arguments, 1) : [];</div><div class='line' id='LC2224'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = this.event(key, false)) != null ? _ref.fireWithContext(this, args) : void 0;</div><div class='line' id='LC2225'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC2226'>&nbsp;&nbsp;&nbsp;&nbsp;allowAndFire: function() {</div><div class='line' id='LC2227'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var args, key, _ref;</div><div class='line' id='LC2228'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = arguments[0], args = 2 &lt;= arguments.length ? __slice.call(arguments, 1) : [];</div><div class='line' id='LC2229'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = this.event(key, false)) != null ? _ref.allowAndFireWithContext(this, args) : void 0;</div><div class='line' id='LC2230'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2231'>&nbsp;&nbsp;};</div><div class='line' id='LC2232'><br/></div><div class='line' id='LC2233'>}).call(this);</div><div class='line' id='LC2234'><br/></div><div class='line' id='LC2235'>(function() {</div><div class='line' id='LC2236'>&nbsp;&nbsp;var __slice = [].slice;</div><div class='line' id='LC2237'><br/></div><div class='line' id='LC2238'>&nbsp;&nbsp;Batman.Enumerable = {</div><div class='line' id='LC2239'>&nbsp;&nbsp;&nbsp;&nbsp;isEnumerable: true,</div><div class='line' id='LC2240'>&nbsp;&nbsp;&nbsp;&nbsp;map: function(f, ctx) {</div><div class='line' id='LC2241'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result;</div><div class='line' id='LC2242'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (ctx == null) {</div><div class='line' id='LC2243'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctx = Batman.container;</div><div class='line' id='LC2244'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2245'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = [];</div><div class='line' id='LC2246'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.forEach(function() {</div><div class='line' id='LC2247'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result.push(f.apply(ctx, arguments));</div><div class='line' id='LC2248'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC2249'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC2250'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC2251'>&nbsp;&nbsp;&nbsp;&nbsp;mapToProperty: function(key) {</div><div class='line' id='LC2252'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result;</div><div class='line' id='LC2253'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = [];</div><div class='line' id='LC2254'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.forEach(function(item) {</div><div class='line' id='LC2255'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result.push(item.get(key));</div><div class='line' id='LC2256'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC2257'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC2258'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC2259'>&nbsp;&nbsp;&nbsp;&nbsp;every: function(f, ctx) {</div><div class='line' id='LC2260'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result;</div><div class='line' id='LC2261'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (ctx == null) {</div><div class='line' id='LC2262'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctx = Batman.container;</div><div class='line' id='LC2263'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2264'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = true;</div><div class='line' id='LC2265'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.forEach(function() {</div><div class='line' id='LC2266'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result = result &amp;&amp; f.apply(ctx, arguments);</div><div class='line' id='LC2267'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC2268'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC2269'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC2270'>&nbsp;&nbsp;&nbsp;&nbsp;some: function(f, ctx) {</div><div class='line' id='LC2271'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result;</div><div class='line' id='LC2272'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (ctx == null) {</div><div class='line' id='LC2273'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctx = Batman.container;</div><div class='line' id='LC2274'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2275'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = false;</div><div class='line' id='LC2276'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.forEach(function() {</div><div class='line' id='LC2277'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result = result || f.apply(ctx, arguments);</div><div class='line' id='LC2278'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC2279'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC2280'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC2281'>&nbsp;&nbsp;&nbsp;&nbsp;reduce: function(f, accumulator) {</div><div class='line' id='LC2282'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var count, initialValuePassed, self;</div><div class='line' id='LC2283'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count = 0;</div><div class='line' id='LC2284'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self = this;</div><div class='line' id='LC2285'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (accumulator != null) {</div><div class='line' id='LC2286'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;initialValuePassed = true;</div><div class='line' id='LC2287'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC2288'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;initialValuePassed = false;</div><div class='line' id='LC2289'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2290'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.forEach(function() {</div><div class='line' id='LC2291'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!initialValuePassed) {</div><div class='line' id='LC2292'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;accumulator = arguments[0];</div><div class='line' id='LC2293'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;initialValuePassed = true;</div><div class='line' id='LC2294'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC2295'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2296'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return accumulator = f.apply(null, [accumulator].concat(__slice.call(arguments), [count], [self]));</div><div class='line' id='LC2297'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC2298'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return accumulator;</div><div class='line' id='LC2299'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC2300'>&nbsp;&nbsp;&nbsp;&nbsp;filter: function(f) {</div><div class='line' id='LC2301'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result, wrap;</div><div class='line' id='LC2302'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = new this.constructor;</div><div class='line' id='LC2303'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (result.add) {</div><div class='line' id='LC2304'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wrap = function(result, element) {</div><div class='line' id='LC2305'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (f(element)) {</div><div class='line' id='LC2306'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.add(element);</div><div class='line' id='LC2307'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2308'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC2309'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2310'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (result.set) {</div><div class='line' id='LC2311'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wrap = function(result, key, value) {</div><div class='line' id='LC2312'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (f(key, value)) {</div><div class='line' id='LC2313'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.set(key, value);</div><div class='line' id='LC2314'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2315'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC2316'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2317'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC2318'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!result.push) {</div><div class='line' id='LC2319'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = [];</div><div class='line' id='LC2320'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2321'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wrap = function(result, element) {</div><div class='line' id='LC2322'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (f(element)) {</div><div class='line' id='LC2323'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.push(element);</div><div class='line' id='LC2324'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2325'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC2326'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2327'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2328'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.reduce(wrap, result);</div><div class='line' id='LC2329'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC2330'>&nbsp;&nbsp;&nbsp;&nbsp;inGroupsOf: function(groupSize) {</div><div class='line' id='LC2331'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var current, i, result;</div><div class='line' id='LC2332'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = [];</div><div class='line' id='LC2333'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;current = false;</div><div class='line' id='LC2334'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 0;</div><div class='line' id='LC2335'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.forEach(function(element) {</div><div class='line' id='LC2336'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (i++ % groupSize === 0) {</div><div class='line' id='LC2337'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;current = [];</div><div class='line' id='LC2338'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.push(current);</div><div class='line' id='LC2339'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2340'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return current.push(element);</div><div class='line' id='LC2341'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC2342'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC2343'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2344'>&nbsp;&nbsp;};</div><div class='line' id='LC2345'><br/></div><div class='line' id='LC2346'>}).call(this);</div><div class='line' id='LC2347'><br/></div><div class='line' id='LC2348'>(function() {</div><div class='line' id='LC2349'>&nbsp;&nbsp;var _objectToString, __slice = [].slice;</div><div class='line' id='LC2350'><br/></div><div class='line' id='LC2351'>&nbsp;&nbsp;_objectToString = Object.prototype.toString;</div><div class='line' id='LC2352'><br/></div><div class='line' id='LC2353'>&nbsp;&nbsp;Batman.SimpleHash = (function() {</div><div class='line' id='LC2354'><br/></div><div class='line' id='LC2355'>&nbsp;&nbsp;&nbsp;&nbsp;function SimpleHash(obj) {</div><div class='line' id='LC2356'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._storage = {};</div><div class='line' id='LC2357'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.length = 0;</div><div class='line' id='LC2358'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (obj != null) {</div><div class='line' id='LC2359'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.update(obj);</div><div class='line' id='LC2360'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2361'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2362'><br/></div><div class='line' id='LC2363'>&nbsp;&nbsp;&nbsp;&nbsp;Batman.extend(SimpleHash.prototype, Batman.Enumerable);</div><div class='line' id='LC2364'><br/></div><div class='line' id='LC2365'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleHash.prototype.hasKey = function(key) {</div><div class='line' id='LC2366'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var pair, pairs, _i, _len;</div><div class='line' id='LC2367'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.objectKey(key)) {</div><div class='line' id='LC2368'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this._objectStorage) {</div><div class='line' id='LC2369'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC2370'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2371'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (pairs = this._objectStorage[this.hashKeyFor(key)]) {</div><div class='line' id='LC2372'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = pairs.length; _i &lt; _len; _i++) {</div><div class='line' id='LC2373'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pair = pairs[_i];</div><div class='line' id='LC2374'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.equality(pair[0], key)) {</div><div class='line' id='LC2375'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC2376'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2377'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2378'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2379'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC2380'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC2381'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = this.prefixedKey(key);</div><div class='line' id='LC2382'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._storage.hasOwnProperty(key);</div><div class='line' id='LC2383'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2384'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2385'><br/></div><div class='line' id='LC2386'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleHash.prototype.get = function(key) {</div><div class='line' id='LC2387'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var pair, pairs, _i, _len;</div><div class='line' id='LC2388'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.objectKey(key)) {</div><div class='line' id='LC2389'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this._objectStorage) {</div><div class='line' id='LC2390'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return void 0;</div><div class='line' id='LC2391'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2392'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (pairs = this._objectStorage[this.hashKeyFor(key)]) {</div><div class='line' id='LC2393'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = pairs.length; _i &lt; _len; _i++) {</div><div class='line' id='LC2394'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pair = pairs[_i];</div><div class='line' id='LC2395'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.equality(pair[0], key)) {</div><div class='line' id='LC2396'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return pair[1];</div><div class='line' id='LC2397'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2398'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2399'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2400'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC2401'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._storage[this.prefixedKey(key)];</div><div class='line' id='LC2402'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2403'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2404'><br/></div><div class='line' id='LC2405'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleHash.prototype.set = function(key, val) {</div><div class='line' id='LC2406'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var pair, pairs, _base, _i, _len, _name;</div><div class='line' id='LC2407'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.objectKey(key)) {</div><div class='line' id='LC2408'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._objectStorage || (this._objectStorage = {});</div><div class='line' id='LC2409'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pairs = (_base = this._objectStorage)[_name = this.hashKeyFor(key)] || (_base[_name] = []);</div><div class='line' id='LC2410'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = pairs.length; _i &lt; _len; _i++) {</div><div class='line' id='LC2411'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pair = pairs[_i];</div><div class='line' id='LC2412'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.equality(pair[0], key)) {</div><div class='line' id='LC2413'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return pair[1] = val;</div><div class='line' id='LC2414'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2415'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2416'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.length++;</div><div class='line' id='LC2417'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pairs.push([key, val]);</div><div class='line' id='LC2418'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return val;</div><div class='line' id='LC2419'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC2420'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = this.prefixedKey(key);</div><div class='line' id='LC2421'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this._storage[key] == null) {</div><div class='line' id='LC2422'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.length++;</div><div class='line' id='LC2423'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2424'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._storage[key] = val;</div><div class='line' id='LC2425'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2426'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2427'><br/></div><div class='line' id='LC2428'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleHash.prototype.unset = function(key) {</div><div class='line' id='LC2429'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var hashKey, index, obj, pair, pairs, val, value, _i, _len, _ref;</div><div class='line' id='LC2430'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.objectKey(key)) {</div><div class='line' id='LC2431'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this._objectStorage) {</div><div class='line' id='LC2432'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return void 0;</div><div class='line' id='LC2433'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2434'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hashKey = this.hashKeyFor(key);</div><div class='line' id='LC2435'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (pairs = this._objectStorage[hashKey]) {</div><div class='line' id='LC2436'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (index = _i = 0, _len = pairs.length; _i &lt; _len; index = ++_i) {</div><div class='line' id='LC2437'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = pairs[index], obj = _ref[0], value = _ref[1];</div><div class='line' id='LC2438'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.equality(obj, key)) {</div><div class='line' id='LC2439'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pair = pairs.splice(index, 1);</div><div class='line' id='LC2440'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!pairs.length) {</div><div class='line' id='LC2441'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete this._objectStorage[hashKey];</div><div class='line' id='LC2442'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2443'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.length--;</div><div class='line' id='LC2444'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return pair[0][1];</div><div class='line' id='LC2445'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2446'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2447'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2448'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC2449'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = this.prefixedKey(key);</div><div class='line' id='LC2450'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;val = this._storage[key];</div><div class='line' id='LC2451'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this._storage[key] != null) {</div><div class='line' id='LC2452'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.length--;</div><div class='line' id='LC2453'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete this._storage[key];</div><div class='line' id='LC2454'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2455'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return val;</div><div class='line' id='LC2456'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2457'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2458'><br/></div><div class='line' id='LC2459'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleHash.prototype.getOrSet = function(key, valueFunction) {</div><div class='line' id='LC2460'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var currentValue;</div><div class='line' id='LC2461'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;currentValue = this.get(key);</div><div class='line' id='LC2462'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!currentValue) {</div><div class='line' id='LC2463'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;currentValue = valueFunction();</div><div class='line' id='LC2464'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set(key, currentValue);</div><div class='line' id='LC2465'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2466'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return currentValue;</div><div class='line' id='LC2467'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2468'><br/></div><div class='line' id='LC2469'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleHash.prototype.prefixedKey = function(key) {</div><div class='line' id='LC2470'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;_&quot; + key;</div><div class='line' id='LC2471'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2472'><br/></div><div class='line' id='LC2473'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleHash.prototype.unprefixedKey = function(key) {</div><div class='line' id='LC2474'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return key.slice(1);</div><div class='line' id='LC2475'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2476'><br/></div><div class='line' id='LC2477'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleHash.prototype.hashKeyFor = function(obj) {</div><div class='line' id='LC2478'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var hashKey, typeString;</div><div class='line' id='LC2479'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (hashKey = obj != null ? typeof obj.hashKey === &quot;function&quot; ? obj.hashKey() : void 0 : void 0) {</div><div class='line' id='LC2480'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return hashKey;</div><div class='line' id='LC2481'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC2482'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;typeString = _objectToString.call(obj);</div><div class='line' id='LC2483'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeString === &quot;[object Array]&quot;) {</div><div class='line' id='LC2484'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return typeString;</div><div class='line' id='LC2485'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC2486'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return obj;</div><div class='line' id='LC2487'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2488'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2489'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2490'><br/></div><div class='line' id='LC2491'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleHash.prototype.equality = function(lhs, rhs) {</div><div class='line' id='LC2492'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (lhs === rhs) {</div><div class='line' id='LC2493'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC2494'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2495'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (lhs !== lhs &amp;&amp; rhs !== rhs) {</div><div class='line' id='LC2496'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC2497'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2498'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((lhs != null ? typeof lhs.isEqual === &quot;function&quot; ? lhs.isEqual(rhs) : void 0 : void 0) &amp;&amp; (rhs != null ? typeof rhs.isEqual === &quot;function&quot; ? rhs.isEqual(lhs) : void 0 : void 0)) {</div><div class='line' id='LC2499'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC2500'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2501'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC2502'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2503'><br/></div><div class='line' id='LC2504'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleHash.prototype.objectKey = function(key) {</div><div class='line' id='LC2505'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return typeof key !== &#39;string&#39;;</div><div class='line' id='LC2506'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2507'><br/></div><div class='line' id='LC2508'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleHash.prototype.forEach = function(iterator, ctx) {</div><div class='line' id='LC2509'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var key, obj, results, value, values, _i, _len, _ref, _ref1, _ref2, _ref3;</div><div class='line' id='LC2510'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;results = [];</div><div class='line' id='LC2511'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this._objectStorage) {</div><div class='line' id='LC2512'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this._objectStorage;</div><div class='line' id='LC2513'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (key in _ref) {</div><div class='line' id='LC2514'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values = _ref[key];</div><div class='line' id='LC2515'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1 = values.slice();</div><div class='line' id='LC2516'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref1.length; _i &lt; _len; _i++) {</div><div class='line' id='LC2517'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref2 = _ref1[_i], obj = _ref2[0], value = _ref2[1];</div><div class='line' id='LC2518'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;results.push(iterator.call(ctx, obj, value, this));</div><div class='line' id='LC2519'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2520'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2521'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2522'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref3 = this._storage;</div><div class='line' id='LC2523'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (key in _ref3) {</div><div class='line' id='LC2524'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = _ref3[key];</div><div class='line' id='LC2525'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;results.push(iterator.call(ctx, this.unprefixedKey(key), value, this));</div><div class='line' id='LC2526'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2527'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return results;</div><div class='line' id='LC2528'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2529'><br/></div><div class='line' id='LC2530'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleHash.prototype.keys = function() {</div><div class='line' id='LC2531'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result;</div><div class='line' id='LC2532'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = [];</div><div class='line' id='LC2533'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.SimpleHash.prototype.forEach.call(this, function(key) {</div><div class='line' id='LC2534'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result.push(key);</div><div class='line' id='LC2535'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC2536'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC2537'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2538'><br/></div><div class='line' id='LC2539'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleHash.prototype.toArray = SimpleHash.prototype.keys;</div><div class='line' id='LC2540'><br/></div><div class='line' id='LC2541'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleHash.prototype.clear = function() {</div><div class='line' id='LC2542'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._storage = {};</div><div class='line' id='LC2543'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete this._objectStorage;</div><div class='line' id='LC2544'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.length = 0;</div><div class='line' id='LC2545'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2546'><br/></div><div class='line' id='LC2547'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleHash.prototype.isEmpty = function() {</div><div class='line' id='LC2548'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.length === 0;</div><div class='line' id='LC2549'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2550'><br/></div><div class='line' id='LC2551'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleHash.prototype.merge = function() {</div><div class='line' id='LC2552'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var hash, merged, others, _i, _len;</div><div class='line' id='LC2553'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;others = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC2554'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;merged = new this.constructor;</div><div class='line' id='LC2555'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;others.unshift(this);</div><div class='line' id='LC2556'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = others.length; _i &lt; _len; _i++) {</div><div class='line' id='LC2557'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hash = others[_i];</div><div class='line' id='LC2558'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hash.forEach(function(obj, value) {</div><div class='line' id='LC2559'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return merged.set(obj, value);</div><div class='line' id='LC2560'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC2561'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2562'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return merged;</div><div class='line' id='LC2563'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2564'><br/></div><div class='line' id='LC2565'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleHash.prototype.update = function(object) {</div><div class='line' id='LC2566'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var k, v, _results;</div><div class='line' id='LC2567'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC2568'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (k in object) {</div><div class='line' id='LC2569'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v = object[k];</div><div class='line' id='LC2570'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(this.set(k, v));</div><div class='line' id='LC2571'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2572'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC2573'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2574'><br/></div><div class='line' id='LC2575'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleHash.prototype.replace = function(object) {</div><div class='line' id='LC2576'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC2577'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.forEach(function(key, value) {</div><div class='line' id='LC2578'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(key in object)) {</div><div class='line' id='LC2579'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.unset(key);</div><div class='line' id='LC2580'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2581'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC2582'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.update(object);</div><div class='line' id='LC2583'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2584'><br/></div><div class='line' id='LC2585'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleHash.prototype.toObject = function() {</div><div class='line' id='LC2586'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var key, obj, pair, value, _ref, _ref1;</div><div class='line' id='LC2587'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj = {};</div><div class='line' id='LC2588'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this._storage;</div><div class='line' id='LC2589'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (key in _ref) {</div><div class='line' id='LC2590'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = _ref[key];</div><div class='line' id='LC2591'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj[this.unprefixedKey(key)] = value;</div><div class='line' id='LC2592'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2593'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this._objectStorage) {</div><div class='line' id='LC2594'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1 = this._objectStorage;</div><div class='line' id='LC2595'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (key in _ref1) {</div><div class='line' id='LC2596'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pair = _ref1[key];</div><div class='line' id='LC2597'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj[key] = pair[0][1];</div><div class='line' id='LC2598'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2599'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2600'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return obj;</div><div class='line' id='LC2601'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2602'><br/></div><div class='line' id='LC2603'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleHash.prototype.toJSON = SimpleHash.prototype.toObject;</div><div class='line' id='LC2604'><br/></div><div class='line' id='LC2605'>&nbsp;&nbsp;&nbsp;&nbsp;return SimpleHash;</div><div class='line' id='LC2606'><br/></div><div class='line' id='LC2607'>&nbsp;&nbsp;})();</div><div class='line' id='LC2608'><br/></div><div class='line' id='LC2609'>}).call(this);</div><div class='line' id='LC2610'><br/></div><div class='line' id='LC2611'>(function() {</div><div class='line' id='LC2612'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC2613'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC2614'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC2615'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC2616'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2617'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC2618'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC2619'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2620'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC2621'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC2622'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC2623'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC2624'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC2625'>&nbsp;&nbsp;&nbsp;&nbsp;__slice = [].slice;</div><div class='line' id='LC2626'><br/></div><div class='line' id='LC2627'>&nbsp;&nbsp;Batman.AssociationCurator = (function(_super) {</div><div class='line' id='LC2628'><br/></div><div class='line' id='LC2629'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(AssociationCurator, _super);</div><div class='line' id='LC2630'><br/></div><div class='line' id='LC2631'>&nbsp;&nbsp;&nbsp;&nbsp;AssociationCurator.availableAssociations = [&#39;belongsTo&#39;, &#39;hasOne&#39;, &#39;hasMany&#39;];</div><div class='line' id='LC2632'><br/></div><div class='line' id='LC2633'>&nbsp;&nbsp;&nbsp;&nbsp;function AssociationCurator(model) {</div><div class='line' id='LC2634'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.model = model;</div><div class='line' id='LC2635'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AssociationCurator.__super__.constructor.call(this);</div><div class='line' id='LC2636'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._byTypeStorage = new Batman.SimpleHash;</div><div class='line' id='LC2637'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2638'><br/></div><div class='line' id='LC2639'>&nbsp;&nbsp;&nbsp;&nbsp;AssociationCurator.prototype.add = function(association) {</div><div class='line' id='LC2640'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var associationTypeSet;</div><div class='line' id='LC2641'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set(association.label, association);</div><div class='line' id='LC2642'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(associationTypeSet = this._byTypeStorage.get(association.associationType))) {</div><div class='line' id='LC2643'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;associationTypeSet = new Batman.SimpleSet;</div><div class='line' id='LC2644'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._byTypeStorage.set(association.associationType, associationTypeSet);</div><div class='line' id='LC2645'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2646'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return associationTypeSet.add(association);</div><div class='line' id='LC2647'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2648'><br/></div><div class='line' id='LC2649'>&nbsp;&nbsp;&nbsp;&nbsp;AssociationCurator.prototype.getByType = function(type) {</div><div class='line' id='LC2650'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._byTypeStorage.get(type);</div><div class='line' id='LC2651'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2652'><br/></div><div class='line' id='LC2653'>&nbsp;&nbsp;&nbsp;&nbsp;AssociationCurator.prototype.getByLabel = function(label) {</div><div class='line' id='LC2654'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(label);</div><div class='line' id='LC2655'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2656'><br/></div><div class='line' id='LC2657'>&nbsp;&nbsp;&nbsp;&nbsp;AssociationCurator.prototype.reset = function() {</div><div class='line' id='LC2658'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.forEach(function(label, association) {</div><div class='line' id='LC2659'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return association.reset();</div><div class='line' id='LC2660'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC2661'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC2662'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2663'><br/></div><div class='line' id='LC2664'>&nbsp;&nbsp;&nbsp;&nbsp;AssociationCurator.prototype.merge = function() {</div><div class='line' id='LC2665'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var others, result;</div><div class='line' id='LC2666'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;others = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC2667'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = AssociationCurator.__super__.merge.apply(this, arguments);</div><div class='line' id='LC2668'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result._byTypeStorage = this._byTypeStorage.merge(others.map(function(other) {</div><div class='line' id='LC2669'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return other._byTypeStorage;</div><div class='line' id='LC2670'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC2671'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC2672'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2673'><br/></div><div class='line' id='LC2674'>&nbsp;&nbsp;&nbsp;&nbsp;AssociationCurator.prototype._markDirtyAttribute = function(key, oldValue) {</div><div class='line' id='LC2675'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC2676'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = this.lifecycle.get(&#39;state&#39;)) !== &#39;loading&#39; &amp;&amp; _ref !== &#39;creating&#39; &amp;&amp; _ref !== &#39;saving&#39; &amp;&amp; _ref !== &#39;saved&#39;) {</div><div class='line' id='LC2677'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.lifecycle.startTransition(&#39;set&#39;)) {</div><div class='line' id='LC2678'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.dirtyKeys.set(key, oldValue);</div><div class='line' id='LC2679'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC2680'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new Batman.StateMachine.InvalidTransitionError(&quot;Can&#39;t set while in state &quot; + (this.lifecycle.get(&#39;state&#39;)));</div><div class='line' id='LC2681'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2682'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2683'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2684'><br/></div><div class='line' id='LC2685'>&nbsp;&nbsp;&nbsp;&nbsp;return AssociationCurator;</div><div class='line' id='LC2686'><br/></div><div class='line' id='LC2687'>&nbsp;&nbsp;})(Batman.SimpleHash);</div><div class='line' id='LC2688'><br/></div><div class='line' id='LC2689'>}).call(this);</div><div class='line' id='LC2690'><br/></div><div class='line' id='LC2691'>(function() {</div><div class='line' id='LC2692'>&nbsp;&nbsp;var __slice = [].slice;</div><div class='line' id='LC2693'><br/></div><div class='line' id='LC2694'>&nbsp;&nbsp;Batman.SimpleSet = (function() {</div><div class='line' id='LC2695'><br/></div><div class='line' id='LC2696'>&nbsp;&nbsp;&nbsp;&nbsp;function SimpleSet() {</div><div class='line' id='LC2697'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var item, itemsToAdd;</div><div class='line' id='LC2698'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._storage = [];</div><div class='line' id='LC2699'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.length = 0;</div><div class='line' id='LC2700'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;itemsToAdd = (function() {</div><div class='line' id='LC2701'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _i, _len, _results;</div><div class='line' id='LC2702'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC2703'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = arguments.length; _i &lt; _len; _i++) {</div><div class='line' id='LC2704'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item = arguments[_i];</div><div class='line' id='LC2705'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (item != null) {</div><div class='line' id='LC2706'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(item);</div><div class='line' id='LC2707'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2708'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2709'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC2710'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}).apply(this, arguments);</div><div class='line' id='LC2711'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (itemsToAdd.length &gt; 0) {</div><div class='line' id='LC2712'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.add.apply(this, itemsToAdd);</div><div class='line' id='LC2713'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2714'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2715'><br/></div><div class='line' id='LC2716'>&nbsp;&nbsp;&nbsp;&nbsp;Batman.extend(SimpleSet.prototype, Batman.Enumerable);</div><div class='line' id='LC2717'><br/></div><div class='line' id='LC2718'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleSet.prototype.has = function(item) {</div><div class='line' id='LC2719'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return !!(~this._indexOfItem(item));</div><div class='line' id='LC2720'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2721'><br/></div><div class='line' id='LC2722'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleSet.prototype.add = function() {</div><div class='line' id='LC2723'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var addedItems, item, items, _i, _len;</div><div class='line' id='LC2724'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;items = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC2725'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addedItems = [];</div><div class='line' id='LC2726'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = items.length; _i &lt; _len; _i++) {</div><div class='line' id='LC2727'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item = items[_i];</div><div class='line' id='LC2728'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(!~this._indexOfItem(item))) {</div><div class='line' id='LC2729'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;</div><div class='line' id='LC2730'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2731'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._storage.push(item);</div><div class='line' id='LC2732'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addedItems.push(item);</div><div class='line' id='LC2733'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2734'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.length = this._storage.length;</div><div class='line' id='LC2735'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.fire &amp;&amp; addedItems.length !== 0) {</div><div class='line' id='LC2736'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fire(&#39;change&#39;, this, this);</div><div class='line' id='LC2737'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fire.apply(this, [&#39;itemsWereAdded&#39;].concat(__slice.call(addedItems)));</div><div class='line' id='LC2738'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2739'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return addedItems;</div><div class='line' id='LC2740'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2741'><br/></div><div class='line' id='LC2742'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleSet.prototype.remove = function() {</div><div class='line' id='LC2743'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var index, item, items, removedItems, _i, _len;</div><div class='line' id='LC2744'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;items = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC2745'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removedItems = [];</div><div class='line' id='LC2746'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = items.length; _i &lt; _len; _i++) {</div><div class='line' id='LC2747'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item = items[_i];</div><div class='line' id='LC2748'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(~ (index = this._indexOfItem(item)))) {</div><div class='line' id='LC2749'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;</div><div class='line' id='LC2750'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2751'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._storage.splice(index, 1);</div><div class='line' id='LC2752'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removedItems.push(item);</div><div class='line' id='LC2753'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2754'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.length = this._storage.length;</div><div class='line' id='LC2755'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.fire &amp;&amp; removedItems.length !== 0) {</div><div class='line' id='LC2756'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fire(&#39;change&#39;, this, this);</div><div class='line' id='LC2757'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fire.apply(this, [&#39;itemsWereRemoved&#39;].concat(__slice.call(removedItems)));</div><div class='line' id='LC2758'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2759'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return removedItems;</div><div class='line' id='LC2760'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2761'><br/></div><div class='line' id='LC2762'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleSet.prototype.find = function(f) {</div><div class='line' id='LC2763'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var item, _i, _len, _ref;</div><div class='line' id='LC2764'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this._storage;</div><div class='line' id='LC2765'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC2766'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item = _ref[_i];</div><div class='line' id='LC2767'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (f(item)) {</div><div class='line' id='LC2768'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return item;</div><div class='line' id='LC2769'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2770'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2771'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2772'><br/></div><div class='line' id='LC2773'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleSet.prototype.forEach = function(iterator, ctx) {</div><div class='line' id='LC2774'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var key, _i, _len, _ref, _results;</div><div class='line' id='LC2775'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this._storage;</div><div class='line' id='LC2776'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC2777'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC2778'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = _ref[_i];</div><div class='line' id='LC2779'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(iterator.call(ctx, key, null, this));</div><div class='line' id='LC2780'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2781'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC2782'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2783'><br/></div><div class='line' id='LC2784'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleSet.prototype.isEmpty = function() {</div><div class='line' id='LC2785'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.length === 0;</div><div class='line' id='LC2786'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2787'><br/></div><div class='line' id='LC2788'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleSet.prototype.clear = function() {</div><div class='line' id='LC2789'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var items;</div><div class='line' id='LC2790'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;items = this._storage;</div><div class='line' id='LC2791'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._storage = [];</div><div class='line' id='LC2792'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.length = 0;</div><div class='line' id='LC2793'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.fire &amp;&amp; items.length !== 0) {</div><div class='line' id='LC2794'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fire(&#39;change&#39;, this, this);</div><div class='line' id='LC2795'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fire.apply(this, [&#39;itemsWereRemoved&#39;].concat(__slice.call(items)));</div><div class='line' id='LC2796'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2797'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return items;</div><div class='line' id='LC2798'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2799'><br/></div><div class='line' id='LC2800'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleSet.prototype.replace = function(other) {</div><div class='line' id='LC2801'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC2802'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof this.prevent === &quot;function&quot;) {</div><div class='line' id='LC2803'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.prevent(&#39;change&#39;);</div><div class='line' id='LC2804'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2805'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.clear();</div><div class='line' id='LC2806'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.add.apply(this, other.toArray());</div><div class='line' id='LC2807'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} finally {</div><div class='line' id='LC2808'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof this.allowAndFire === &quot;function&quot;) {</div><div class='line' id='LC2809'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.allowAndFire(&#39;change&#39;, this, this);</div><div class='line' id='LC2810'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2811'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2812'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2813'><br/></div><div class='line' id='LC2814'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleSet.prototype.toArray = function() {</div><div class='line' id='LC2815'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._storage.slice();</div><div class='line' id='LC2816'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2817'><br/></div><div class='line' id='LC2818'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleSet.prototype.merge = function() {</div><div class='line' id='LC2819'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var merged, others, set, _i, _len;</div><div class='line' id='LC2820'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;others = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC2821'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;merged = new this.constructor;</div><div class='line' id='LC2822'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;others.unshift(this);</div><div class='line' id='LC2823'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = others.length; _i &lt; _len; _i++) {</div><div class='line' id='LC2824'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set = others[_i];</div><div class='line' id='LC2825'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set.forEach(function(v) {</div><div class='line' id='LC2826'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return merged.add(v);</div><div class='line' id='LC2827'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC2828'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2829'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return merged;</div><div class='line' id='LC2830'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2831'><br/></div><div class='line' id='LC2832'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleSet.prototype.indexedBy = function(key) {</div><div class='line' id='LC2833'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._indexes || (this._indexes = new Batman.SimpleHash);</div><div class='line' id='LC2834'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._indexes.get(key) || this._indexes.set(key, new Batman.SetIndex(this, key));</div><div class='line' id='LC2835'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2836'><br/></div><div class='line' id='LC2837'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleSet.prototype.indexedByUnique = function(key) {</div><div class='line' id='LC2838'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._uniqueIndexes || (this._uniqueIndexes = new Batman.SimpleHash);</div><div class='line' id='LC2839'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._uniqueIndexes.get(key) || this._uniqueIndexes.set(key, new Batman.UniqueSetIndex(this, key));</div><div class='line' id='LC2840'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2841'><br/></div><div class='line' id='LC2842'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleSet.prototype.sortedBy = function(key, order) {</div><div class='line' id='LC2843'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var sortsForKey;</div><div class='line' id='LC2844'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (order == null) {</div><div class='line' id='LC2845'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;order = &quot;asc&quot;;</div><div class='line' id='LC2846'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2847'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;order = order.toLowerCase() === &quot;desc&quot; ? &quot;desc&quot; : &quot;asc&quot;;</div><div class='line' id='LC2848'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._sorts || (this._sorts = new Batman.SimpleHash);</div><div class='line' id='LC2849'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sortsForKey = this._sorts.get(key) || this._sorts.set(key, new Batman.Object);</div><div class='line' id='LC2850'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return sortsForKey.get(order) || sortsForKey.set(order, new Batman.SetSort(this, key, order));</div><div class='line' id='LC2851'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2852'><br/></div><div class='line' id='LC2853'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleSet.prototype.equality = Batman.SimpleHash.prototype.equality;</div><div class='line' id='LC2854'><br/></div><div class='line' id='LC2855'>&nbsp;&nbsp;&nbsp;&nbsp;SimpleSet.prototype._indexOfItem = function(givenItem) {</div><div class='line' id='LC2856'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var index, item, _i, _len, _ref;</div><div class='line' id='LC2857'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this._storage;</div><div class='line' id='LC2858'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (index = _i = 0, _len = _ref.length; _i &lt; _len; index = ++_i) {</div><div class='line' id='LC2859'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item = _ref[index];</div><div class='line' id='LC2860'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.equality(givenItem, item)) {</div><div class='line' id='LC2861'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return index;</div><div class='line' id='LC2862'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2863'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2864'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;</div><div class='line' id='LC2865'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2866'><br/></div><div class='line' id='LC2867'>&nbsp;&nbsp;&nbsp;&nbsp;return SimpleSet;</div><div class='line' id='LC2868'><br/></div><div class='line' id='LC2869'>&nbsp;&nbsp;})();</div><div class='line' id='LC2870'><br/></div><div class='line' id='LC2871'>}).call(this);</div><div class='line' id='LC2872'><br/></div><div class='line' id='LC2873'>(function() {</div><div class='line' id='LC2874'>&nbsp;&nbsp;var SOURCE_TRACKER_STACK, SOURCE_TRACKER_STACK_VALID, __slice = [].slice;</div><div class='line' id='LC2875'><br/></div><div class='line' id='LC2876'>&nbsp;&nbsp;SOURCE_TRACKER_STACK = [];</div><div class='line' id='LC2877'><br/></div><div class='line' id='LC2878'>&nbsp;&nbsp;SOURCE_TRACKER_STACK_VALID = true;</div><div class='line' id='LC2879'><br/></div><div class='line' id='LC2880'>&nbsp;&nbsp;Batman.Property = (function() {</div><div class='line' id='LC2881'><br/></div><div class='line' id='LC2882'>&nbsp;&nbsp;&nbsp;&nbsp;Batman.mixin(Property.prototype, Batman.EventEmitter);</div><div class='line' id='LC2883'><br/></div><div class='line' id='LC2884'>&nbsp;&nbsp;&nbsp;&nbsp;Property._sourceTrackerStack = SOURCE_TRACKER_STACK;</div><div class='line' id='LC2885'><br/></div><div class='line' id='LC2886'>&nbsp;&nbsp;&nbsp;&nbsp;Property._sourceTrackerStackValid = SOURCE_TRACKER_STACK_VALID;</div><div class='line' id='LC2887'><br/></div><div class='line' id='LC2888'>&nbsp;&nbsp;&nbsp;&nbsp;Property.defaultAccessor = {</div><div class='line' id='LC2889'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function(key) {</div><div class='line' id='LC2890'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this[key];</div><div class='line' id='LC2891'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC2892'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set: function(key, val) {</div><div class='line' id='LC2893'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this[key] = val;</div><div class='line' id='LC2894'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC2895'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unset: function(key) {</div><div class='line' id='LC2896'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var x;</div><div class='line' id='LC2897'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = this[key];</div><div class='line' id='LC2898'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete this[key];</div><div class='line' id='LC2899'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return x;</div><div class='line' id='LC2900'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC2901'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache: false</div><div class='line' id='LC2902'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2903'><br/></div><div class='line' id='LC2904'>&nbsp;&nbsp;&nbsp;&nbsp;Property.defaultAccessorForBase = function(base) {</div><div class='line' id='LC2905'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC2906'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ((_ref = base._batman) != null ? _ref.getFirst(&#39;defaultAccessor&#39;) : void 0) || Batman.Property.defaultAccessor;</div><div class='line' id='LC2907'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2908'><br/></div><div class='line' id='LC2909'>&nbsp;&nbsp;&nbsp;&nbsp;Property.accessorForBaseAndKey = function(base, key) {</div><div class='line' id='LC2910'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var accessor, ancestor, _bm, _i, _len, _ref, _ref1, _ref2, _ref3;</div><div class='line' id='LC2911'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_bm = base._batman) != null) {</div><div class='line' id='LC2912'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;accessor = (_ref = _bm.keyAccessors) != null ? _ref.get(key) : void 0;</div><div class='line' id='LC2913'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!accessor) {</div><div class='line' id='LC2914'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1 = _bm.ancestors();</div><div class='line' id='LC2915'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref1.length; _i &lt; _len; _i++) {</div><div class='line' id='LC2916'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ancestor = _ref1[_i];</div><div class='line' id='LC2917'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;accessor = (_ref2 = ancestor._batman) != null ? (_ref3 = _ref2.keyAccessors) != null ? _ref3.get(key) : void 0 : void 0;</div><div class='line' id='LC2918'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (accessor) {</div><div class='line' id='LC2919'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC2920'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2921'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2922'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2923'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2924'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return accessor || this.defaultAccessorForBase(base);</div><div class='line' id='LC2925'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2926'><br/></div><div class='line' id='LC2927'>&nbsp;&nbsp;&nbsp;&nbsp;Property.forBaseAndKey = function(base, key) {</div><div class='line' id='LC2928'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (base.isObservable) {</div><div class='line' id='LC2929'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return base.property(key);</div><div class='line' id='LC2930'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC2931'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.Keypath(base, key);</div><div class='line' id='LC2932'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2933'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2934'><br/></div><div class='line' id='LC2935'>&nbsp;&nbsp;&nbsp;&nbsp;Property.withoutTracking = function(block) {</div><div class='line' id='LC2936'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.wrapTrackingPrevention(block)();</div><div class='line' id='LC2937'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2938'><br/></div><div class='line' id='LC2939'>&nbsp;&nbsp;&nbsp;&nbsp;Property.wrapTrackingPrevention = function(block) {</div><div class='line' id='LC2940'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function() {</div><div class='line' id='LC2941'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.Property.pushDummySourceTracker();</div><div class='line' id='LC2942'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC2943'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return block.apply(this, arguments);</div><div class='line' id='LC2944'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} finally {</div><div class='line' id='LC2945'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.Property.popSourceTracker();</div><div class='line' id='LC2946'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2947'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2948'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2949'><br/></div><div class='line' id='LC2950'>&nbsp;&nbsp;&nbsp;&nbsp;Property.registerSource = function(obj) {</div><div class='line' id='LC2951'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var set;</div><div class='line' id='LC2952'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!obj.isEventEmitter) {</div><div class='line' id='LC2953'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC2954'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2955'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (SOURCE_TRACKER_STACK_VALID) {</div><div class='line' id='LC2956'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set = SOURCE_TRACKER_STACK[SOURCE_TRACKER_STACK.length - 1];</div><div class='line' id='LC2957'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC2958'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set = [];</div><div class='line' id='LC2959'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SOURCE_TRACKER_STACK.push(set);</div><div class='line' id='LC2960'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SOURCE_TRACKER_STACK_VALID = true;</div><div class='line' id='LC2961'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2962'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (set != null) {</div><div class='line' id='LC2963'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set.push(obj);</div><div class='line' id='LC2964'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2965'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return void 0;</div><div class='line' id='LC2966'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2967'><br/></div><div class='line' id='LC2968'>&nbsp;&nbsp;&nbsp;&nbsp;Property.pushSourceTracker = function() {</div><div class='line' id='LC2969'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (SOURCE_TRACKER_STACK_VALID) {</div><div class='line' id='LC2970'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return SOURCE_TRACKER_STACK_VALID = false;</div><div class='line' id='LC2971'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC2972'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return SOURCE_TRACKER_STACK.push([]);</div><div class='line' id='LC2973'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2974'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2975'><br/></div><div class='line' id='LC2976'>&nbsp;&nbsp;&nbsp;&nbsp;Property.popSourceTracker = function() {</div><div class='line' id='LC2977'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (SOURCE_TRACKER_STACK_VALID) {</div><div class='line' id='LC2978'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return SOURCE_TRACKER_STACK.pop();</div><div class='line' id='LC2979'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC2980'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SOURCE_TRACKER_STACK_VALID = true;</div><div class='line' id='LC2981'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return void 0;</div><div class='line' id='LC2982'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2983'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2984'><br/></div><div class='line' id='LC2985'>&nbsp;&nbsp;&nbsp;&nbsp;Property.pushDummySourceTracker = function() {</div><div class='line' id='LC2986'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!SOURCE_TRACKER_STACK_VALID) {</div><div class='line' id='LC2987'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SOURCE_TRACKER_STACK.push([]);</div><div class='line' id='LC2988'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SOURCE_TRACKER_STACK_VALID = true;</div><div class='line' id='LC2989'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2990'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return SOURCE_TRACKER_STACK.push(null);</div><div class='line' id='LC2991'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC2992'><br/></div><div class='line' id='LC2993'>&nbsp;&nbsp;&nbsp;&nbsp;function Property(base, key) {</div><div class='line' id='LC2994'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.base = base;</div><div class='line' id='LC2995'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.key = key;</div><div class='line' id='LC2996'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC2997'><br/></div><div class='line' id='LC2998'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype._isolationCount = 0;</div><div class='line' id='LC2999'><br/></div><div class='line' id='LC3000'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.cached = false;</div><div class='line' id='LC3001'><br/></div><div class='line' id='LC3002'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.value = null;</div><div class='line' id='LC3003'><br/></div><div class='line' id='LC3004'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.sources = null;</div><div class='line' id='LC3005'><br/></div><div class='line' id='LC3006'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.isProperty = true;</div><div class='line' id='LC3007'><br/></div><div class='line' id='LC3008'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.isDead = false;</div><div class='line' id='LC3009'><br/></div><div class='line' id='LC3010'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.eventClass = Batman.PropertyEvent;</div><div class='line' id='LC3011'><br/></div><div class='line' id='LC3012'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.isEqual = function(other) {</div><div class='line' id='LC3013'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.constructor === other.constructor &amp;&amp; this.base === other.base &amp;&amp; this.key === other.key;</div><div class='line' id='LC3014'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3015'><br/></div><div class='line' id='LC3016'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.hashKey = function() {</div><div class='line' id='LC3017'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._hashKey || (this._hashKey = &quot;&lt;Batman.Property base: &quot; + (Batman.Hash.prototype.hashKeyFor(this.base)) + &quot;, key: \&quot;&quot; + (Batman.Hash.prototype.hashKeyFor(this.key)) + &quot;\&quot;&gt;&quot;);</div><div class='line' id='LC3018'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3019'><br/></div><div class='line' id='LC3020'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.event = function(key) {</div><div class='line' id='LC3021'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var eventClass, _base;</div><div class='line' id='LC3022'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eventClass = this.eventClass || Batman.Event;</div><div class='line' id='LC3023'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.events || (this.events = {});</div><div class='line' id='LC3024'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(_base = this.events)[key] || (_base[key] = new eventClass(this, key));</div><div class='line' id='LC3025'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.events[key];</div><div class='line' id='LC3026'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3027'><br/></div><div class='line' id='LC3028'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.changeEvent = function() {</div><div class='line' id='LC3029'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._changeEvent || (this._changeEvent = this.event(&#39;change&#39;));</div><div class='line' id='LC3030'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3031'><br/></div><div class='line' id='LC3032'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.accessor = function() {</div><div class='line' id='LC3033'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._accessor || (this._accessor = this.constructor.accessorForBaseAndKey(this.base, this.key));</div><div class='line' id='LC3034'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3035'><br/></div><div class='line' id='LC3036'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.eachObserver = function(iterator) {</div><div class='line' id='LC3037'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var ancestor, handlers, key, object, property, _i, _j, _len, _len1, _ref, _ref1, _ref2, _results;</div><div class='line' id='LC3038'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = this.key;</div><div class='line' id='LC3039'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handlers = (_ref = this.changeEvent().handlers) != null ? _ref.slice() : void 0;</div><div class='line' id='LC3040'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (handlers) {</div><div class='line' id='LC3041'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = handlers.length; _i &lt; _len; _i++) {</div><div class='line' id='LC3042'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object = handlers[_i];</div><div class='line' id='LC3043'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;iterator(object);</div><div class='line' id='LC3044'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3045'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3046'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.base.isObservable) {</div><div class='line' id='LC3047'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1 = this.base._batman.ancestors();</div><div class='line' id='LC3048'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC3049'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_j = 0, _len1 = _ref1.length; _j &lt; _len1; _j++) {</div><div class='line' id='LC3050'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ancestor = _ref1[_j];</div><div class='line' id='LC3051'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (ancestor.isObservable &amp;&amp; ancestor.hasProperty(key)) {</div><div class='line' id='LC3052'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;property = ancestor.property(key);</div><div class='line' id='LC3053'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handlers = (_ref2 = property.changeEvent().handlers) != null ? _ref2.slice() : void 0;</div><div class='line' id='LC3054'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (handlers) {</div><div class='line' id='LC3055'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push((function() {</div><div class='line' id='LC3056'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _k, _len2, _results1;</div><div class='line' id='LC3057'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results1 = [];</div><div class='line' id='LC3058'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_k = 0, _len2 = handlers.length; _k &lt; _len2; _k++) {</div><div class='line' id='LC3059'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object = handlers[_k];</div><div class='line' id='LC3060'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results1.push(iterator(object));</div><div class='line' id='LC3061'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3062'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results1;</div><div class='line' id='LC3063'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})());</div><div class='line' id='LC3064'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC3065'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(void 0);</div><div class='line' id='LC3066'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3067'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC3068'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(void 0);</div><div class='line' id='LC3069'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3070'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3071'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC3072'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3073'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3074'><br/></div><div class='line' id='LC3075'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.observers = function() {</div><div class='line' id='LC3076'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var results;</div><div class='line' id='LC3077'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;results = [];</div><div class='line' id='LC3078'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.eachObserver(function(observer) {</div><div class='line' id='LC3079'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return results.push(observer);</div><div class='line' id='LC3080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC3081'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return results;</div><div class='line' id='LC3082'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3083'><br/></div><div class='line' id='LC3084'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.hasObservers = function() {</div><div class='line' id='LC3085'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.observers().length &gt; 0;</div><div class='line' id='LC3086'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3087'><br/></div><div class='line' id='LC3088'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.updateSourcesFromTracker = function() {</div><div class='line' id='LC3089'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var handler, newSources, source, _i, _j, _len, _len1, _ref, _ref1, _results;</div><div class='line' id='LC3090'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newSources = this.constructor.popSourceTracker();</div><div class='line' id='LC3091'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handler = this.sourceChangeHandler();</div><div class='line' id='LC3092'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.sources) {</div><div class='line' id='LC3093'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this.sources;</div><div class='line' id='LC3094'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC3095'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;source = _ref[_i];</div><div class='line' id='LC3096'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (source != null) {</div><div class='line' id='LC3097'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;source.event(&#39;change&#39;).removeHandler(handler);</div><div class='line' id='LC3098'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3099'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3100'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3101'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.sources = newSources;</div><div class='line' id='LC3102'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.sources) {</div><div class='line' id='LC3103'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1 = this.sources;</div><div class='line' id='LC3104'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC3105'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_j = 0, _len1 = _ref1.length; _j &lt; _len1; _j++) {</div><div class='line' id='LC3106'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;source = _ref1[_j];</div><div class='line' id='LC3107'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(source != null ? source.event(&#39;change&#39;).addHandler(handler) : void 0);</div><div class='line' id='LC3108'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3109'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC3110'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3111'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3112'><br/></div><div class='line' id='LC3113'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.getValue = function() {</div><div class='line' id='LC3114'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.registerAsMutableSource();</div><div class='line' id='LC3115'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this.isCached()) {</div><div class='line' id='LC3116'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor.pushSourceTracker();</div><div class='line' id='LC3117'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC3118'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.value = this.valueFromAccessor();</div><div class='line' id='LC3119'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cached = true;</div><div class='line' id='LC3120'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} finally {</div><div class='line' id='LC3121'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.updateSourcesFromTracker();</div><div class='line' id='LC3122'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3123'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3124'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.value;</div><div class='line' id='LC3125'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3126'><br/></div><div class='line' id='LC3127'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.isCachable = function() {</div><div class='line' id='LC3128'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var cacheable;</div><div class='line' id='LC3129'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.isFinal()) {</div><div class='line' id='LC3130'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC3131'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3132'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cacheable = this.accessor().cache;</div><div class='line' id='LC3133'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (cacheable != null) {</div><div class='line' id='LC3134'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return !!cacheable;</div><div class='line' id='LC3135'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC3136'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC3137'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3138'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3139'><br/></div><div class='line' id='LC3140'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.isCached = function() {</div><div class='line' id='LC3141'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.isCachable() &amp;&amp; this.cached;</div><div class='line' id='LC3142'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3143'><br/></div><div class='line' id='LC3144'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.isFinal = function() {</div><div class='line' id='LC3145'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return !!this.accessor()[&#39;final&#39;];</div><div class='line' id='LC3146'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3147'><br/></div><div class='line' id='LC3148'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.refresh = function() {</div><div class='line' id='LC3149'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var previousValue, value;</div><div class='line' id='LC3150'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cached = false;</div><div class='line' id='LC3151'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;previousValue = this.value;</div><div class='line' id='LC3152'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = this.getValue();</div><div class='line' id='LC3153'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value !== previousValue &amp;&amp; !this.isIsolated()) {</div><div class='line' id='LC3154'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fire(value, previousValue);</div><div class='line' id='LC3155'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3156'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.value !== void 0 &amp;&amp; this.isFinal()) {</div><div class='line' id='LC3157'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.lockValue();</div><div class='line' id='LC3158'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3159'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3160'><br/></div><div class='line' id='LC3161'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.sourceChangeHandler = function() {</div><div class='line' id='LC3162'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC3163'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._sourceChangeHandler || (this._sourceChangeHandler = this._handleSourceChange.bind(this));</div><div class='line' id='LC3164'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer[&quot;do&quot;](function() {</div><div class='line' id='LC3165'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this._sourceChangeHandler.property = _this;</div><div class='line' id='LC3166'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC3167'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._sourceChangeHandler;</div><div class='line' id='LC3168'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3169'><br/></div><div class='line' id='LC3170'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype._handleSourceChange = function() {</div><div class='line' id='LC3171'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.isIsolated()) {</div><div class='line' id='LC3172'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._needsRefresh = true;</div><div class='line' id='LC3173'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (!this.isFinal() &amp;&amp; !this.hasObservers()) {</div><div class='line' id='LC3174'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.cached = false;</div><div class='line' id='LC3175'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC3176'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.refresh();</div><div class='line' id='LC3177'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3178'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3179'><br/></div><div class='line' id='LC3180'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.valueFromAccessor = function() {</div><div class='line' id='LC3181'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC3182'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = this.accessor().get) != null ? _ref.call(this.base, this.key) : void 0;</div><div class='line' id='LC3183'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3184'><br/></div><div class='line' id='LC3185'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.setValue = function(val) {</div><div class='line' id='LC3186'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var set;</div><div class='line' id='LC3187'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(set = this.accessor().set)) {</div><div class='line' id='LC3188'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC3189'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3190'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._changeValue(function() {</div><div class='line' id='LC3191'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return set.call(this.base, this.key, val);</div><div class='line' id='LC3192'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC3193'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3194'><br/></div><div class='line' id='LC3195'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.unsetValue = function() {</div><div class='line' id='LC3196'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var unset;</div><div class='line' id='LC3197'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(unset = this.accessor().unset)) {</div><div class='line' id='LC3198'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC3199'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3200'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._changeValue(function() {</div><div class='line' id='LC3201'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return unset.call(this.base, this.key);</div><div class='line' id='LC3202'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC3203'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3204'><br/></div><div class='line' id='LC3205'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype._changeValue = function(block) {</div><div class='line' id='LC3206'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result;</div><div class='line' id='LC3207'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cached = false;</div><div class='line' id='LC3208'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor.pushDummySourceTracker();</div><div class='line' id='LC3209'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC3210'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = block.apply(this);</div><div class='line' id='LC3211'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.refresh();</div><div class='line' id='LC3212'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} finally {</div><div class='line' id='LC3213'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor.popSourceTracker();</div><div class='line' id='LC3214'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3215'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(this.isCached() || this.hasObservers())) {</div><div class='line' id='LC3216'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.die();</div><div class='line' id='LC3217'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3218'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC3219'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3220'><br/></div><div class='line' id='LC3221'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.forget = function(handler) {</div><div class='line' id='LC3222'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (handler != null) {</div><div class='line' id='LC3223'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.changeEvent().removeHandler(handler);</div><div class='line' id='LC3224'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC3225'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.changeEvent().clearHandlers();</div><div class='line' id='LC3226'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3227'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3228'><br/></div><div class='line' id='LC3229'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.observeAndFire = function(handler) {</div><div class='line' id='LC3230'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.observe(handler);</div><div class='line' id='LC3231'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return handler.call(this.base, this.value, this.value, this.key);</div><div class='line' id='LC3232'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3233'><br/></div><div class='line' id='LC3234'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.observe = function(handler) {</div><div class='line' id='LC3235'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.changeEvent().addHandler(handler);</div><div class='line' id='LC3236'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.sources == null) {</div><div class='line' id='LC3237'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.getValue();</div><div class='line' id='LC3238'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3239'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC3240'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3241'><br/></div><div class='line' id='LC3242'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.observeOnce = function(originalHandler) {</div><div class='line' id='LC3243'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var event, handler;</div><div class='line' id='LC3244'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event = this.changeEvent();</div><div class='line' id='LC3245'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handler = function() {</div><div class='line' id='LC3246'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;originalHandler.apply(this, arguments);</div><div class='line' id='LC3247'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return event.removeHandler(handler);</div><div class='line' id='LC3248'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3249'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.addHandler(handler);</div><div class='line' id='LC3250'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.sources == null) {</div><div class='line' id='LC3251'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.getValue();</div><div class='line' id='LC3252'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3253'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC3254'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3255'><br/></div><div class='line' id='LC3256'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype._removeHandlers = function() {</div><div class='line' id='LC3257'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var handler, source, _i, _len, _ref;</div><div class='line' id='LC3258'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handler = this.sourceChangeHandler();</div><div class='line' id='LC3259'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.sources) {</div><div class='line' id='LC3260'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this.sources;</div><div class='line' id='LC3261'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC3262'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;source = _ref[_i];</div><div class='line' id='LC3263'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;source.event(&#39;change&#39;).removeHandler(handler);</div><div class='line' id='LC3264'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3265'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3266'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete this.sources;</div><div class='line' id='LC3267'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.changeEvent().clearHandlers();</div><div class='line' id='LC3268'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3269'><br/></div><div class='line' id='LC3270'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.lockValue = function() {</div><div class='line' id='LC3271'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._removeHandlers();</div><div class='line' id='LC3272'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.getValue = function() {</div><div class='line' id='LC3273'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.value;</div><div class='line' id='LC3274'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3275'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.setValue = this.unsetValue = this.refresh = this.observe = function() {};</div><div class='line' id='LC3276'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3277'><br/></div><div class='line' id='LC3278'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.die = function() {</div><div class='line' id='LC3279'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref, _ref1;</div><div class='line' id='LC3280'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._removeHandlers();</div><div class='line' id='LC3281'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = this.base._batman) != null) {</div><div class='line' id='LC3282'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref1 = _ref.properties) != null) {</div><div class='line' id='LC3283'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1.unset(this.key);</div><div class='line' id='LC3284'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3285'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3286'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.isDead = true;</div><div class='line' id='LC3287'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3288'><br/></div><div class='line' id='LC3289'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.fire = function() {</div><div class='line' id='LC3290'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC3291'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = this.changeEvent()).fire.apply(_ref, __slice.call(arguments).concat([this.key]));</div><div class='line' id='LC3292'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3293'><br/></div><div class='line' id='LC3294'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.isolate = function() {</div><div class='line' id='LC3295'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this._isolationCount === 0) {</div><div class='line' id='LC3296'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._preIsolationValue = this.getValue();</div><div class='line' id='LC3297'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3298'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._isolationCount++;</div><div class='line' id='LC3299'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3300'><br/></div><div class='line' id='LC3301'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.expose = function() {</div><div class='line' id='LC3302'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this._isolationCount === 1) {</div><div class='line' id='LC3303'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._isolationCount--;</div><div class='line' id='LC3304'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this._needsRefresh) {</div><div class='line' id='LC3305'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.value = this._preIsolationValue;</div><div class='line' id='LC3306'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.refresh();</div><div class='line' id='LC3307'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (this.value !== this._preIsolationValue) {</div><div class='line' id='LC3308'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fire(this.value, this._preIsolationValue);</div><div class='line' id='LC3309'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3310'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._preIsolationValue = null;</div><div class='line' id='LC3311'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (this._isolationCount &gt; 0) {</div><div class='line' id='LC3312'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._isolationCount--;</div><div class='line' id='LC3313'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3314'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3315'><br/></div><div class='line' id='LC3316'>&nbsp;&nbsp;&nbsp;&nbsp;Property.prototype.isIsolated = function() {</div><div class='line' id='LC3317'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._isolationCount &gt; 0;</div><div class='line' id='LC3318'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3319'><br/></div><div class='line' id='LC3320'>&nbsp;&nbsp;&nbsp;&nbsp;return Property;</div><div class='line' id='LC3321'><br/></div><div class='line' id='LC3322'>&nbsp;&nbsp;})();</div><div class='line' id='LC3323'><br/></div><div class='line' id='LC3324'>}).call(this);</div><div class='line' id='LC3325'><br/></div><div class='line' id='LC3326'>(function() {</div><div class='line' id='LC3327'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC3328'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC3329'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC3330'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC3331'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3332'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC3333'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC3334'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3335'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC3336'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC3337'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC3338'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC3339'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3340'><br/></div><div class='line' id='LC3341'>&nbsp;&nbsp;Batman.Keypath = (function(_super) {</div><div class='line' id='LC3342'><br/></div><div class='line' id='LC3343'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(Keypath, _super);</div><div class='line' id='LC3344'><br/></div><div class='line' id='LC3345'>&nbsp;&nbsp;&nbsp;&nbsp;function Keypath(base, key) {</div><div class='line' id='LC3346'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof key === &#39;string&#39;) {</div><div class='line' id='LC3347'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.segments = key.split(&#39;.&#39;);</div><div class='line' id='LC3348'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.depth = this.segments.length;</div><div class='line' id='LC3349'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC3350'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.segments = [key];</div><div class='line' id='LC3351'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.depth = 1;</div><div class='line' id='LC3352'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3353'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Keypath.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC3354'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3355'><br/></div><div class='line' id='LC3356'>&nbsp;&nbsp;&nbsp;&nbsp;Keypath.prototype.isCachable = function() {</div><div class='line' id='LC3357'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.depth === 1) {</div><div class='line' id='LC3358'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Keypath.__super__.isCachable.apply(this, arguments);</div><div class='line' id='LC3359'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC3360'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC3361'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3362'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3363'><br/></div><div class='line' id='LC3364'>&nbsp;&nbsp;&nbsp;&nbsp;Keypath.prototype.terminalProperty = function() {</div><div class='line' id='LC3365'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var base;</div><div class='line' id='LC3366'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;base = Batman.getPath(this.base, this.segments.slice(0, -1));</div><div class='line' id='LC3367'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (base == null) {</div><div class='line' id='LC3368'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC3369'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3370'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.Keypath.forBaseAndKey(base, this.segments[this.depth - 1]);</div><div class='line' id='LC3371'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3372'><br/></div><div class='line' id='LC3373'>&nbsp;&nbsp;&nbsp;&nbsp;Keypath.prototype.valueFromAccessor = function() {</div><div class='line' id='LC3374'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.depth === 1) {</div><div class='line' id='LC3375'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Keypath.__super__.valueFromAccessor.apply(this, arguments);</div><div class='line' id='LC3376'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC3377'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.getPath(this.base, this.segments);</div><div class='line' id='LC3378'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3379'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3380'><br/></div><div class='line' id='LC3381'>&nbsp;&nbsp;&nbsp;&nbsp;Keypath.prototype.setValue = function(val) {</div><div class='line' id='LC3382'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC3383'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.depth === 1) {</div><div class='line' id='LC3384'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Keypath.__super__.setValue.apply(this, arguments);</div><div class='line' id='LC3385'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC3386'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = this.terminalProperty()) != null ? _ref.setValue(val) : void 0;</div><div class='line' id='LC3387'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3388'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3389'><br/></div><div class='line' id='LC3390'>&nbsp;&nbsp;&nbsp;&nbsp;Keypath.prototype.unsetValue = function() {</div><div class='line' id='LC3391'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC3392'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.depth === 1) {</div><div class='line' id='LC3393'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Keypath.__super__.unsetValue.apply(this, arguments);</div><div class='line' id='LC3394'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC3395'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = this.terminalProperty()) != null ? _ref.unsetValue() : void 0;</div><div class='line' id='LC3396'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3397'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3398'><br/></div><div class='line' id='LC3399'>&nbsp;&nbsp;&nbsp;&nbsp;return Keypath;</div><div class='line' id='LC3400'><br/></div><div class='line' id='LC3401'>&nbsp;&nbsp;})(Batman.Property);</div><div class='line' id='LC3402'><br/></div><div class='line' id='LC3403'>}).call(this);</div><div class='line' id='LC3404'><br/></div><div class='line' id='LC3405'>(function() {</div><div class='line' id='LC3406'>&nbsp;&nbsp;var __slice = [].slice;</div><div class='line' id='LC3407'><br/></div><div class='line' id='LC3408'>&nbsp;&nbsp;Batman.Observable = {</div><div class='line' id='LC3409'>&nbsp;&nbsp;&nbsp;&nbsp;isObservable: true,</div><div class='line' id='LC3410'>&nbsp;&nbsp;&nbsp;&nbsp;hasProperty: function(key) {</div><div class='line' id='LC3411'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref, _ref1;</div><div class='line' id='LC3412'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = this._batman) != null ? (_ref1 = _ref.properties) != null ? typeof _ref1.hasKey === &quot;function&quot; ? _ref1.hasKey(key) : void 0 : void 0 : void 0;</div><div class='line' id='LC3413'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3414'>&nbsp;&nbsp;&nbsp;&nbsp;property: function(key) {</div><div class='line' id='LC3415'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var properties, propertyClass, _base;</div><div class='line' id='LC3416'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.initializeObject(this);</div><div class='line' id='LC3417'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;propertyClass = this.propertyClass || Batman.Keypath;</div><div class='line' id='LC3418'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;properties = (_base = this._batman).properties || (_base.properties = new Batman.SimpleHash);</div><div class='line' id='LC3419'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return properties.get(key) || properties.set(key, new propertyClass(this, key));</div><div class='line' id='LC3420'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3421'>&nbsp;&nbsp;&nbsp;&nbsp;get: function(key) {</div><div class='line' id='LC3422'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.property(key).getValue();</div><div class='line' id='LC3423'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3424'>&nbsp;&nbsp;&nbsp;&nbsp;set: function(key, val) {</div><div class='line' id='LC3425'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.property(key).setValue(val);</div><div class='line' id='LC3426'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3427'>&nbsp;&nbsp;&nbsp;&nbsp;unset: function(key) {</div><div class='line' id='LC3428'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.property(key).unsetValue();</div><div class='line' id='LC3429'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3430'>&nbsp;&nbsp;&nbsp;&nbsp;getOrSet: Batman.SimpleHash.prototype.getOrSet,</div><div class='line' id='LC3431'>&nbsp;&nbsp;&nbsp;&nbsp;forget: function(key, observer) {</div><div class='line' id='LC3432'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC3433'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (key) {</div><div class='line' id='LC3434'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.property(key).forget(observer);</div><div class='line' id='LC3435'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC3436'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = this._batman.properties) != null) {</div><div class='line' id='LC3437'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref.forEach(function(key, property) {</div><div class='line' id='LC3438'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return property.forget();</div><div class='line' id='LC3439'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC3440'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3441'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3442'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC3443'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3444'>&nbsp;&nbsp;&nbsp;&nbsp;observe: function() {</div><div class='line' id='LC3445'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var args, key, _ref;</div><div class='line' id='LC3446'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = arguments[0], args = 2 &lt;= arguments.length ? __slice.call(arguments, 1) : [];</div><div class='line' id='LC3447'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(_ref = this.property(key)).observe.apply(_ref, args);</div><div class='line' id='LC3448'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC3449'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3450'>&nbsp;&nbsp;&nbsp;&nbsp;observeAndFire: function() {</div><div class='line' id='LC3451'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var args, key, _ref;</div><div class='line' id='LC3452'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = arguments[0], args = 2 &lt;= arguments.length ? __slice.call(arguments, 1) : [];</div><div class='line' id='LC3453'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(_ref = this.property(key)).observeAndFire.apply(_ref, args);</div><div class='line' id='LC3454'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC3455'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3456'>&nbsp;&nbsp;&nbsp;&nbsp;observeOnce: function() {</div><div class='line' id='LC3457'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var args, key, _ref;</div><div class='line' id='LC3458'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = arguments[0], args = 2 &lt;= arguments.length ? __slice.call(arguments, 1) : [];</div><div class='line' id='LC3459'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(_ref = this.property(key)).observeOnce.apply(_ref, args);</div><div class='line' id='LC3460'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC3461'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3462'>&nbsp;&nbsp;};</div><div class='line' id='LC3463'><br/></div><div class='line' id='LC3464'>}).call(this);</div><div class='line' id='LC3465'><br/></div><div class='line' id='LC3466'>(function() {</div><div class='line' id='LC3467'><br/></div><div class='line' id='LC3468'>&nbsp;&nbsp;Batman.DOM = {</div><div class='line' id='LC3469'>&nbsp;&nbsp;&nbsp;&nbsp;textInputTypes: [&#39;text&#39;, &#39;search&#39;, &#39;tel&#39;, &#39;url&#39;, &#39;email&#39;, &#39;password&#39;],</div><div class='line' id='LC3470'>&nbsp;&nbsp;&nbsp;&nbsp;scrollIntoView: function(elementID) {</div><div class='line' id='LC3471'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC3472'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = document.getElementById(elementID)) != null ? typeof _ref.scrollIntoView === &quot;function&quot; ? _ref.scrollIntoView() : void 0 : void 0;</div><div class='line' id='LC3473'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3474'>&nbsp;&nbsp;&nbsp;&nbsp;partial: function(container, path, context, renderer) {</div><div class='line' id='LC3475'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var view;</div><div class='line' id='LC3476'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;renderer.prevent(&#39;rendered&#39;);</div><div class='line' id='LC3477'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;view = new Batman.View({</div><div class='line' id='LC3478'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;source: path,</div><div class='line' id='LC3479'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;context: context</div><div class='line' id='LC3480'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC3481'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return view.on(&#39;ready&#39;, function() {</div><div class='line' id='LC3482'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.setInnerHTML(container, &#39;&#39;);</div><div class='line' id='LC3483'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.appendChild(container, view.get(&#39;node&#39;));</div><div class='line' id='LC3484'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return renderer.allowAndFire(&#39;rendered&#39;);</div><div class='line' id='LC3485'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC3486'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3487'>&nbsp;&nbsp;&nbsp;&nbsp;propagateBindingEvent: function(binding, node) {</div><div class='line' id='LC3488'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var current, parentBinding, parentBindings, _i, _len;</div><div class='line' id='LC3489'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while ((current = (current || node).parentNode)) {</div><div class='line' id='LC3490'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parentBindings = Batman._data(current, &#39;bindings&#39;);</div><div class='line' id='LC3491'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (parentBindings != null) {</div><div class='line' id='LC3492'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = parentBindings.length; _i &lt; _len; _i++) {</div><div class='line' id='LC3493'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parentBinding = parentBindings[_i];</div><div class='line' id='LC3494'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof parentBinding.childBindingAdded === &quot;function&quot;) {</div><div class='line' id='LC3495'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parentBinding.childBindingAdded(binding);</div><div class='line' id='LC3496'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3497'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3498'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3499'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3500'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3501'>&nbsp;&nbsp;&nbsp;&nbsp;propagateBindingEvents: function(newNode) {</div><div class='line' id='LC3502'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var binding, bindings, child, _i, _j, _len, _len1, _ref;</div><div class='line' id='LC3503'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = newNode.childNodes;</div><div class='line' id='LC3504'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC3505'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child = _ref[_i];</div><div class='line' id='LC3506'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.propagateBindingEvents(child);</div><div class='line' id='LC3507'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3508'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (bindings = Batman._data(newNode, &#39;bindings&#39;)) {</div><div class='line' id='LC3509'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_j = 0, _len1 = bindings.length; _j &lt; _len1; _j++) {</div><div class='line' id='LC3510'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binding = bindings[_j];</div><div class='line' id='LC3511'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.propagateBindingEvent(binding, newNode);</div><div class='line' id='LC3512'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3513'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3514'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3515'>&nbsp;&nbsp;&nbsp;&nbsp;trackBinding: function(binding, node) {</div><div class='line' id='LC3516'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var bindings;</div><div class='line' id='LC3517'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (bindings = Batman._data(node, &#39;bindings&#39;)) {</div><div class='line' id='LC3518'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bindings.push(binding);</div><div class='line' id='LC3519'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC3520'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman._data(node, &#39;bindings&#39;, [binding]);</div><div class='line' id='LC3521'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3522'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.fire(&#39;bindingAdded&#39;, binding);</div><div class='line' id='LC3523'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.propagateBindingEvent(binding, node);</div><div class='line' id='LC3524'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC3525'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3526'>&nbsp;&nbsp;&nbsp;&nbsp;onParseExit: function(node, callback) {</div><div class='line' id='LC3527'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var set;</div><div class='line' id='LC3528'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set = Batman._data(node, &#39;onParseExit&#39;) || Batman._data(node, &#39;onParseExit&#39;, new Batman.SimpleSet);</div><div class='line' id='LC3529'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (callback != null) {</div><div class='line' id='LC3530'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set.add(callback);</div><div class='line' id='LC3531'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3532'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return set;</div><div class='line' id='LC3533'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3534'>&nbsp;&nbsp;&nbsp;&nbsp;forgetParseExit: function(node, callback) {</div><div class='line' id='LC3535'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.removeData(node, &#39;onParseExit&#39;, true);</div><div class='line' id='LC3536'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3537'>&nbsp;&nbsp;&nbsp;&nbsp;defineView: function(name, node) {</div><div class='line' id='LC3538'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var contents;</div><div class='line' id='LC3539'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;contents = node.innerHTML;</div><div class='line' id='LC3540'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.View.store.set(Batman.Navigator.normalizePath(name), contents);</div><div class='line' id='LC3541'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return contents;</div><div class='line' id='LC3542'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3543'>&nbsp;&nbsp;&nbsp;&nbsp;setStyleProperty: function(node, property, value, importance) {</div><div class='line' id='LC3544'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (node.style.setProperty) {</div><div class='line' id='LC3545'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return node.style.setProperty(property, value, importance);</div><div class='line' id='LC3546'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC3547'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return node.style.setAttribute(property, value, importance);</div><div class='line' id='LC3548'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3549'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3550'>&nbsp;&nbsp;&nbsp;&nbsp;removeOrDestroyNode: function(node) {</div><div class='line' id='LC3551'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var view;</div><div class='line' id='LC3552'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;view = Batman._data(node, &#39;view&#39;);</div><div class='line' id='LC3553'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;view || (view = Batman._data(node, &#39;yielder&#39;));</div><div class='line' id='LC3554'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((view != null) &amp;&amp; view.get(&#39;cached&#39;)) {</div><div class='line' id='LC3555'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.removeNode(node);</div><div class='line' id='LC3556'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC3557'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.destroyNode(node);</div><div class='line' id='LC3558'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3559'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3560'>&nbsp;&nbsp;&nbsp;&nbsp;insertBefore: function(parentNode, newNode, referenceNode) {</div><div class='line' id='LC3561'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (referenceNode == null) {</div><div class='line' id='LC3562'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;referenceNode = null;</div><div class='line' id='LC3563'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3564'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!referenceNode || parentNode.childNodes.length &lt;= 0) {</div><div class='line' id='LC3565'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.appendChild(parentNode, newNode);</div><div class='line' id='LC3566'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC3567'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.willInsertNode(newNode);</div><div class='line' id='LC3568'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parentNode.insertBefore(newNode, referenceNode);</div><div class='line' id='LC3569'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.didInsertNode(newNode);</div><div class='line' id='LC3570'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3571'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3572'>&nbsp;&nbsp;&nbsp;&nbsp;valueForNode: function(node, value, escapeValue) {</div><div class='line' id='LC3573'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var isSetting;</div><div class='line' id='LC3574'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value == null) {</div><div class='line' id='LC3575'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = &#39;&#39;;</div><div class='line' id='LC3576'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3577'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (escapeValue == null) {</div><div class='line' id='LC3578'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;escapeValue = true;</div><div class='line' id='LC3579'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3580'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isSetting = arguments.length &gt; 1;</div><div class='line' id='LC3581'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (node.nodeName.toUpperCase()) {</div><div class='line' id='LC3582'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;INPUT&#39;:</div><div class='line' id='LC3583'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;TEXTAREA&#39;:</div><div class='line' id='LC3584'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isSetting) {</div><div class='line' id='LC3585'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return node.value = value;</div><div class='line' id='LC3586'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC3587'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return node.value;</div><div class='line' id='LC3588'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3589'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC3590'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;SELECT&#39;:</div><div class='line' id='LC3591'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isSetting) {</div><div class='line' id='LC3592'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return node.value = value;</div><div class='line' id='LC3593'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3594'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC3595'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:</div><div class='line' id='LC3596'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isSetting) {</div><div class='line' id='LC3597'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.setInnerHTML(node, escapeValue ? Batman.escapeHTML(value) : value);</div><div class='line' id='LC3598'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC3599'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return node.innerHTML;</div><div class='line' id='LC3600'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3601'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3602'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3603'>&nbsp;&nbsp;&nbsp;&nbsp;nodeIsEditable: function(node) {</div><div class='line' id='LC3604'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC3605'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = node.nodeName.toUpperCase()) === &#39;INPUT&#39; || _ref === &#39;TEXTAREA&#39; || _ref === &#39;SELECT&#39;;</div><div class='line' id='LC3606'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3607'>&nbsp;&nbsp;&nbsp;&nbsp;addEventListener: function(node, eventName, callback) {</div><div class='line' id='LC3608'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var listeners;</div><div class='line' id='LC3609'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(listeners = Batman._data(node, &#39;listeners&#39;))) {</div><div class='line' id='LC3610'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listeners = Batman._data(node, &#39;listeners&#39;, {});</div><div class='line' id='LC3611'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3612'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!listeners[eventName]) {</div><div class='line' id='LC3613'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listeners[eventName] = [];</div><div class='line' id='LC3614'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3615'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listeners[eventName].push(callback);</div><div class='line' id='LC3616'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Batman.DOM.hasAddEventListener) {</div><div class='line' id='LC3617'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return node.addEventListener(eventName, callback, false);</div><div class='line' id='LC3618'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC3619'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return node.attachEvent(&quot;on&quot; + eventName, callback);</div><div class='line' id='LC3620'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3621'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3622'>&nbsp;&nbsp;&nbsp;&nbsp;removeEventListener: function(node, eventName, callback) {</div><div class='line' id='LC3623'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var eventListeners, index, listeners;</div><div class='line' id='LC3624'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (listeners = Batman._data(node, &#39;listeners&#39;)) {</div><div class='line' id='LC3625'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (eventListeners = listeners[eventName]) {</div><div class='line' id='LC3626'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index = eventListeners.indexOf(callback);</div><div class='line' id='LC3627'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (index !== -1) {</div><div class='line' id='LC3628'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eventListeners.splice(index, 1);</div><div class='line' id='LC3629'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3630'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3631'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3632'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Batman.DOM.hasAddEventListener) {</div><div class='line' id='LC3633'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return node.removeEventListener(eventName, callback, false);</div><div class='line' id='LC3634'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC3635'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return node.detachEvent(&#39;on&#39; + eventName, callback);</div><div class='line' id='LC3636'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3637'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3638'>&nbsp;&nbsp;&nbsp;&nbsp;hasAddEventListener: !! (typeof window !== &quot;undefined&quot; &amp;&amp; window !== null ? window.addEventListener : void 0),</div><div class='line' id='LC3639'>&nbsp;&nbsp;&nbsp;&nbsp;preventDefault: function(e) {</div><div class='line' id='LC3640'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof e.preventDefault === &quot;function&quot;) {</div><div class='line' id='LC3641'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return e.preventDefault();</div><div class='line' id='LC3642'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC3643'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return e.returnValue = false;</div><div class='line' id='LC3644'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3645'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3646'>&nbsp;&nbsp;&nbsp;&nbsp;stopPropagation: function(e) {</div><div class='line' id='LC3647'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (e.stopPropagation) {</div><div class='line' id='LC3648'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return e.stopPropagation();</div><div class='line' id='LC3649'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC3650'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return e.cancelBubble = true;</div><div class='line' id='LC3651'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3652'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3653'>&nbsp;&nbsp;&nbsp;&nbsp;willInsertNode: function(node) {</div><div class='line' id='LC3654'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var child, view, _i, _len, _ref, _ref1;</div><div class='line' id='LC3655'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;view = Batman._data(node, &#39;view&#39;);</div><div class='line' id='LC3656'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (view != null) {</div><div class='line' id='LC3657'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;view.fire(&#39;beforeAppear&#39;, node);</div><div class='line' id='LC3658'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3659'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = Batman.data(node, &#39;show&#39;)) != null) {</div><div class='line' id='LC3660'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref.call(node);</div><div class='line' id='LC3661'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3662'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1 = node.childNodes;</div><div class='line' id='LC3663'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref1.length; _i &lt; _len; _i++) {</div><div class='line' id='LC3664'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child = _ref1[_i];</div><div class='line' id='LC3665'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.willInsertNode(child);</div><div class='line' id='LC3666'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3667'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC3668'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3669'>&nbsp;&nbsp;&nbsp;&nbsp;didInsertNode: function(node) {</div><div class='line' id='LC3670'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var child, view, _i, _len, _ref;</div><div class='line' id='LC3671'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;view = Batman._data(node, &#39;view&#39;);</div><div class='line' id='LC3672'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (view) {</div><div class='line' id='LC3673'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;view.fire(&#39;appear&#39;, node);</div><div class='line' id='LC3674'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;view.applyYields();</div><div class='line' id='LC3675'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3676'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = node.childNodes;</div><div class='line' id='LC3677'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC3678'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child = _ref[_i];</div><div class='line' id='LC3679'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.didInsertNode(child);</div><div class='line' id='LC3680'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3681'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC3682'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3683'>&nbsp;&nbsp;&nbsp;&nbsp;willRemoveNode: function(node) {</div><div class='line' id='LC3684'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var child, view, _i, _len, _ref, _ref1;</div><div class='line' id='LC3685'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;view = Batman._data(node, &#39;view&#39;);</div><div class='line' id='LC3686'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (view) {</div><div class='line' id='LC3687'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;view.fire(&#39;beforeDisappear&#39;, node);</div><div class='line' id='LC3688'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3689'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = Batman.data(node, &#39;hide&#39;)) != null) {</div><div class='line' id='LC3690'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref.call(node);</div><div class='line' id='LC3691'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3692'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1 = node.childNodes;</div><div class='line' id='LC3693'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref1.length; _i &lt; _len; _i++) {</div><div class='line' id='LC3694'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child = _ref1[_i];</div><div class='line' id='LC3695'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.willRemoveNode(child);</div><div class='line' id='LC3696'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3697'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC3698'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3699'>&nbsp;&nbsp;&nbsp;&nbsp;didRemoveNode: function(node) {</div><div class='line' id='LC3700'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var child, view, _i, _len, _ref;</div><div class='line' id='LC3701'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;view = Batman._data(node, &#39;view&#39;);</div><div class='line' id='LC3702'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (view) {</div><div class='line' id='LC3703'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;view.retractYields();</div><div class='line' id='LC3704'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;view.fire(&#39;disappear&#39;, node);</div><div class='line' id='LC3705'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3706'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = node.childNodes;</div><div class='line' id='LC3707'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC3708'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child = _ref[_i];</div><div class='line' id='LC3709'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.didRemoveNode(child);</div><div class='line' id='LC3710'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3711'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC3712'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3713'>&nbsp;&nbsp;&nbsp;&nbsp;willDestroyNode: function(node) {</div><div class='line' id='LC3714'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var child, view, _i, _len, _ref;</div><div class='line' id='LC3715'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;view = Batman._data(node, &#39;view&#39;);</div><div class='line' id='LC3716'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (view) {</div><div class='line' id='LC3717'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;view.fire(&#39;beforeDestroy&#39;, node);</div><div class='line' id='LC3718'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;view.get(&#39;yields&#39;).forEach(function(name, actions) {</div><div class='line' id='LC3719'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _i, _len, _results;</div><div class='line' id='LC3720'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC3721'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = actions.length; _i &lt; _len; _i++) {</div><div class='line' id='LC3722'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node = actions[_i].node;</div><div class='line' id='LC3723'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(Batman.DOM.willDestroyNode(node));</div><div class='line' id='LC3724'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3725'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC3726'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC3727'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3728'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = node.childNodes;</div><div class='line' id='LC3729'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC3730'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child = _ref[_i];</div><div class='line' id='LC3731'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.willDestroyNode(child);</div><div class='line' id='LC3732'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3733'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC3734'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3735'>&nbsp;&nbsp;&nbsp;&nbsp;didDestroyNode: function(node) {</div><div class='line' id='LC3736'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var bindings, child, eventListeners, eventName, listeners, view, _i, _len, _ref;</div><div class='line' id='LC3737'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;view = Batman._data(node, &#39;view&#39;);</div><div class='line' id='LC3738'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (view) {</div><div class='line' id='LC3739'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;view.die();</div><div class='line' id='LC3740'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3741'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (bindings = Batman._data(node, &#39;bindings&#39;)) {</div><div class='line' id='LC3742'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bindings.forEach(function(binding) {</div><div class='line' id='LC3743'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return binding.die();</div><div class='line' id='LC3744'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC3745'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3746'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (listeners = Batman._data(node, &#39;listeners&#39;)) {</div><div class='line' id='LC3747'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (eventName in listeners) {</div><div class='line' id='LC3748'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eventListeners = listeners[eventName];</div><div class='line' id='LC3749'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eventListeners.forEach(function(listener) {</div><div class='line' id='LC3750'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.removeEventListener(node, eventName, listener);</div><div class='line' id='LC3751'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC3752'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3753'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3754'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.removeData(node);</div><div class='line' id='LC3755'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.removeData(node, void 0, true);</div><div class='line' id='LC3756'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = node.childNodes;</div><div class='line' id='LC3757'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC3758'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child = _ref[_i];</div><div class='line' id='LC3759'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.didDestroyNode(child);</div><div class='line' id='LC3760'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3761'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC3762'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3763'>&nbsp;&nbsp;};</div><div class='line' id='LC3764'><br/></div><div class='line' id='LC3765'>&nbsp;&nbsp;Batman.mixin(Batman.DOM, Batman.EventEmitter, Batman.Observable);</div><div class='line' id='LC3766'><br/></div><div class='line' id='LC3767'>&nbsp;&nbsp;Batman.DOM.event(&#39;bindingAdded&#39;);</div><div class='line' id='LC3768'><br/></div><div class='line' id='LC3769'>}).call(this);</div><div class='line' id='LC3770'><br/></div><div class='line' id='LC3771'>(function() {</div><div class='line' id='LC3772'><br/></div><div class='line' id='LC3773'>&nbsp;&nbsp;Batman.DOM.ReaderBindingDefinition = (function() {</div><div class='line' id='LC3774'><br/></div><div class='line' id='LC3775'>&nbsp;&nbsp;&nbsp;&nbsp;function ReaderBindingDefinition(node, keyPath, context, renderer) {</div><div class='line' id='LC3776'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.node = node;</div><div class='line' id='LC3777'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.keyPath = keyPath;</div><div class='line' id='LC3778'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.context = context;</div><div class='line' id='LC3779'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.renderer = renderer;</div><div class='line' id='LC3780'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3781'><br/></div><div class='line' id='LC3782'>&nbsp;&nbsp;&nbsp;&nbsp;return ReaderBindingDefinition;</div><div class='line' id='LC3783'><br/></div><div class='line' id='LC3784'>&nbsp;&nbsp;})();</div><div class='line' id='LC3785'><br/></div><div class='line' id='LC3786'>&nbsp;&nbsp;Batman.BindingDefinitionOnlyObserve = {</div><div class='line' id='LC3787'>&nbsp;&nbsp;&nbsp;&nbsp;Data: &#39;data&#39;,</div><div class='line' id='LC3788'>&nbsp;&nbsp;&nbsp;&nbsp;Node: &#39;node&#39;,</div><div class='line' id='LC3789'>&nbsp;&nbsp;&nbsp;&nbsp;All: &#39;all&#39;,</div><div class='line' id='LC3790'>&nbsp;&nbsp;&nbsp;&nbsp;None: &#39;none&#39;</div><div class='line' id='LC3791'>&nbsp;&nbsp;};</div><div class='line' id='LC3792'><br/></div><div class='line' id='LC3793'>&nbsp;&nbsp;Batman.DOM.readers = {</div><div class='line' id='LC3794'>&nbsp;&nbsp;&nbsp;&nbsp;target: function(definition) {</div><div class='line' id='LC3795'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;definition.onlyObserve = Batman.BindingDefinitionOnlyObserve.Node;</div><div class='line' id='LC3796'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.readers.bind(definition);</div><div class='line' id='LC3797'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3798'>&nbsp;&nbsp;&nbsp;&nbsp;source: function(definition) {</div><div class='line' id='LC3799'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;definition.onlyObserve = Batman.BindingDefinitionOnlyObserve.Data;</div><div class='line' id='LC3800'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.readers.bind(definition);</div><div class='line' id='LC3801'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3802'>&nbsp;&nbsp;&nbsp;&nbsp;bind: function(definition) {</div><div class='line' id='LC3803'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var bindingClass, node;</div><div class='line' id='LC3804'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node = definition.node;</div><div class='line' id='LC3805'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (node.nodeName.toLowerCase()) {</div><div class='line' id='LC3806'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;input&#39;:</div><div class='line' id='LC3807'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (node.getAttribute(&#39;type&#39;)) {</div><div class='line' id='LC3808'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;checkbox&#39;:</div><div class='line' id='LC3809'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;definition.attr = &#39;checked&#39;;</div><div class='line' id='LC3810'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.attrReaders.bind(definition);</div><div class='line' id='LC3811'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC3812'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;radio&#39;:</div><div class='line' id='LC3813'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bindingClass = Batman.DOM.RadioBinding;</div><div class='line' id='LC3814'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC3815'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;file&#39;:</div><div class='line' id='LC3816'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bindingClass = Batman.DOM.FileBinding;</div><div class='line' id='LC3817'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3818'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC3819'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;select&#39;:</div><div class='line' id='LC3820'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bindingClass = Batman.DOM.SelectBinding;</div><div class='line' id='LC3821'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3822'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bindingClass || (bindingClass = Batman.DOM.ValueBinding);</div><div class='line' id='LC3823'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new bindingClass(definition);</div><div class='line' id='LC3824'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3825'>&nbsp;&nbsp;&nbsp;&nbsp;context: function(definition) {</div><div class='line' id='LC3826'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return definition.context.descendWithDefinition(definition);</div><div class='line' id='LC3827'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3828'>&nbsp;&nbsp;&nbsp;&nbsp;mixin: function(definition) {</div><div class='line' id='LC3829'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;definition.context = definition.context.descend(Batman.mixins);</div><div class='line' id='LC3830'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.DOM.MixinBinding(definition);</div><div class='line' id='LC3831'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3832'>&nbsp;&nbsp;&nbsp;&nbsp;showif: function(definition) {</div><div class='line' id='LC3833'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.DOM.ShowHideBinding(definition);</div><div class='line' id='LC3834'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3835'>&nbsp;&nbsp;&nbsp;&nbsp;hideif: function(definition) {</div><div class='line' id='LC3836'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;definition.invert = true;</div><div class='line' id='LC3837'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.DOM.ShowHideBinding(definition);</div><div class='line' id='LC3838'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3839'>&nbsp;&nbsp;&nbsp;&nbsp;insertif: function(definition) {</div><div class='line' id='LC3840'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.DOM.InsertionBinding(definition);</div><div class='line' id='LC3841'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3842'>&nbsp;&nbsp;&nbsp;&nbsp;removeif: function(definition) {</div><div class='line' id='LC3843'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;definition.invert = true;</div><div class='line' id='LC3844'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.DOM.InsertionBinding(definition);</div><div class='line' id='LC3845'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3846'>&nbsp;&nbsp;&nbsp;&nbsp;route: function(definition) {</div><div class='line' id='LC3847'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.DOM.RouteBinding(definition);</div><div class='line' id='LC3848'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3849'>&nbsp;&nbsp;&nbsp;&nbsp;view: function(definition) {</div><div class='line' id='LC3850'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.DOM.ViewBinding(definition);</div><div class='line' id='LC3851'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3852'>&nbsp;&nbsp;&nbsp;&nbsp;partial: function(definition) {</div><div class='line' id='LC3853'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.partial(definition.node, definition.keyPath, definition.context, definition.renderer);</div><div class='line' id='LC3854'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3855'>&nbsp;&nbsp;&nbsp;&nbsp;defineview: function(definition) {</div><div class='line' id='LC3856'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var node;</div><div class='line' id='LC3857'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node = definition.node;</div><div class='line' id='LC3858'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.onParseExit(node, function() {</div><div class='line' id='LC3859'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC3860'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = node.parentNode) != null ? _ref.removeChild(node) : void 0;</div><div class='line' id='LC3861'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC3862'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.defineView(definition.keyPath, node);</div><div class='line' id='LC3863'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return {</div><div class='line' id='LC3864'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;skipChildren: true</div><div class='line' id='LC3865'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3866'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3867'>&nbsp;&nbsp;&nbsp;&nbsp;renderif: function(definition) {</div><div class='line' id='LC3868'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.DOM.DeferredRenderingBinding(definition);</div><div class='line' id='LC3869'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3870'>&nbsp;&nbsp;&nbsp;&nbsp;&quot;yield&quot;: function(definition) {</div><div class='line' id='LC3871'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var keyPath, node;</div><div class='line' id='LC3872'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node = definition.node, keyPath = definition.keyPath;</div><div class='line' id='LC3873'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.onParseExit(node, function() {</div><div class='line' id='LC3874'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.Yield.withName(keyPath).set(&#39;containerNode&#39;, node);</div><div class='line' id='LC3875'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC3876'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3877'>&nbsp;&nbsp;&nbsp;&nbsp;contentfor: function(definition) {</div><div class='line' id='LC3878'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var keyPath, node, renderer, swapMethod, value;</div><div class='line' id='LC3879'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node = definition.node, value = definition.value, swapMethod = definition.swapMethod, renderer = definition.renderer, keyPath = definition.keyPath;</div><div class='line' id='LC3880'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swapMethod || (swapMethod = &#39;append&#39;);</div><div class='line' id='LC3881'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.onParseExit(node, function() {</div><div class='line' id='LC3882'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC3883'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = node.parentNode) != null) {</div><div class='line' id='LC3884'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref.removeChild(node);</div><div class='line' id='LC3885'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3886'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return renderer.view.pushYieldAction(keyPath, swapMethod, node);</div><div class='line' id='LC3887'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC3888'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3889'>&nbsp;&nbsp;&nbsp;&nbsp;replace: function(definition) {</div><div class='line' id='LC3890'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;definition.swapMethod = &#39;replace&#39;;</div><div class='line' id='LC3891'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.readers.contentfor(definition);</div><div class='line' id='LC3892'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3893'>&nbsp;&nbsp;};</div><div class='line' id='LC3894'><br/></div><div class='line' id='LC3895'>}).call(this);</div><div class='line' id='LC3896'><br/></div><div class='line' id='LC3897'>(function() {</div><div class='line' id='LC3898'>&nbsp;&nbsp;var __slice = [].slice,</div><div class='line' id='LC3899'>&nbsp;&nbsp;&nbsp;&nbsp;__indexOf = [].indexOf ||</div><div class='line' id='LC3900'>&nbsp;&nbsp;function(item) {</div><div class='line' id='LC3901'>&nbsp;&nbsp;&nbsp;&nbsp;for (var i = 0, l = this.length; i &lt; l; i++) {</div><div class='line' id='LC3902'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (i in this &amp;&amp; this[i] === item) return i;</div><div class='line' id='LC3903'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3904'>&nbsp;&nbsp;&nbsp;&nbsp;return -1;</div><div class='line' id='LC3905'>&nbsp;&nbsp;};</div><div class='line' id='LC3906'><br/></div><div class='line' id='LC3907'>&nbsp;&nbsp;Batman.DOM.events = {</div><div class='line' id='LC3908'>&nbsp;&nbsp;&nbsp;&nbsp;click: function(node, callback, context, eventName) {</div><div class='line' id='LC3909'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (eventName == null) {</div><div class='line' id='LC3910'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eventName = &#39;click&#39;;</div><div class='line' id='LC3911'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3912'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.addEventListener(node, eventName, function() {</div><div class='line' id='LC3913'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var args, event;</div><div class='line' id='LC3914'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event = arguments[0], args = 2 &lt;= arguments.length ? __slice.call(arguments, 1) : [];</div><div class='line' id='LC3915'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (event.metaKey || event.ctrlKey || event.button === 1) {</div><div class='line' id='LC3916'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC3917'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3918'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.preventDefault(event);</div><div class='line' id='LC3919'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!Batman.DOM.eventIsAllowed(eventName, event)) {</div><div class='line' id='LC3920'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC3921'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3922'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return callback.apply(null, [node, event].concat(__slice.call(args), [context]));</div><div class='line' id='LC3923'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC3924'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (node.nodeName.toUpperCase() === &#39;A&#39; &amp;&amp; !node.href) {</div><div class='line' id='LC3925'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node.href = &#39;#&#39;;</div><div class='line' id='LC3926'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3927'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return node;</div><div class='line' id='LC3928'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3929'>&nbsp;&nbsp;&nbsp;&nbsp;doubleclick: function(node, callback, context) {</div><div class='line' id='LC3930'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.events.click(node, callback, context, &#39;dblclick&#39;);</div><div class='line' id='LC3931'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3932'>&nbsp;&nbsp;&nbsp;&nbsp;change: function(node, callback, context) {</div><div class='line' id='LC3933'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var eventName, eventNames, oldCallback, _i, _len, _results;</div><div class='line' id='LC3934'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eventNames = (function() {</div><div class='line' id='LC3935'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC3936'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (node.nodeName.toUpperCase()) {</div><div class='line' id='LC3937'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;TEXTAREA&#39;:</div><div class='line' id='LC3938'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return [&#39;input&#39;, &#39;keyup&#39;, &#39;change&#39;];</div><div class='line' id='LC3939'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;INPUT&#39;:</div><div class='line' id='LC3940'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (_ref = node.type.toLowerCase(), __indexOf.call(Batman.DOM.textInputTypes, _ref) &gt;= 0) {</div><div class='line' id='LC3941'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;oldCallback = callback;</div><div class='line' id='LC3942'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback = function(node, event) {</div><div class='line' id='LC3943'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (event.type === &#39;keyup&#39; &amp;&amp; Batman.DOM.events.isEnter(event)) {</div><div class='line' id='LC3944'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC3945'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3946'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return oldCallback(node, event);</div><div class='line' id='LC3947'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC3948'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return [&#39;input&#39;, &#39;keyup&#39;, &#39;change&#39;];</div><div class='line' id='LC3949'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC3950'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return [&#39;input&#39;, &#39;change&#39;];</div><div class='line' id='LC3951'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3952'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC3953'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:</div><div class='line' id='LC3954'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return [&#39;change&#39;];</div><div class='line' id='LC3955'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3956'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})();</div><div class='line' id='LC3957'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC3958'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = eventNames.length; _i &lt; _len; _i++) {</div><div class='line' id='LC3959'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eventName = eventNames[_i];</div><div class='line' id='LC3960'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(Batman.DOM.addEventListener(node, eventName, function() {</div><div class='line' id='LC3961'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var args;</div><div class='line' id='LC3962'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC3963'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return callback.apply(null, [node].concat(__slice.call(args), [context]));</div><div class='line' id='LC3964'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC3965'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3966'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC3967'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3968'>&nbsp;&nbsp;&nbsp;&nbsp;isEnter: function(ev) {</div><div class='line' id='LC3969'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref, _ref1;</div><div class='line' id='LC3970'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ((13 &lt;= (_ref = ev.keyCode) &amp;&amp; _ref &lt;= 14)) || ((13 &lt;= (_ref1 = ev.which) &amp;&amp; _ref1 &lt;= 14)) || ev.keyIdentifier === &#39;Enter&#39; || ev.key === &#39;Enter&#39;;</div><div class='line' id='LC3971'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC3972'>&nbsp;&nbsp;&nbsp;&nbsp;submit: function(node, callback, context) {</div><div class='line' id='LC3973'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Batman.DOM.nodeIsEditable(node)) {</div><div class='line' id='LC3974'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.addEventListener(node, &#39;keydown&#39;, function() {</div><div class='line' id='LC3975'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var args;</div><div class='line' id='LC3976'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC3977'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Batman.DOM.events.isEnter(args[0])) {</div><div class='line' id='LC3978'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM._keyCapturingNode = node;</div><div class='line' id='LC3979'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3980'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC3981'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.addEventListener(node, &#39;keyup&#39;, function() {</div><div class='line' id='LC3982'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var args;</div><div class='line' id='LC3983'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC3984'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Batman.DOM.events.isEnter(args[0])) {</div><div class='line' id='LC3985'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Batman.DOM._keyCapturingNode === node) {</div><div class='line' id='LC3986'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.preventDefault(args[0]);</div><div class='line' id='LC3987'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback.apply(null, [node].concat(__slice.call(args), [context]));</div><div class='line' id='LC3988'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3989'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM._keyCapturingNode = null;</div><div class='line' id='LC3990'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC3991'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC3992'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC3993'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.addEventListener(node, &#39;submit&#39;, function() {</div><div class='line' id='LC3994'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var args;</div><div class='line' id='LC3995'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC3996'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.preventDefault(args[0]);</div><div class='line' id='LC3997'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return callback.apply(null, [node].concat(__slice.call(args), [context]));</div><div class='line' id='LC3998'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC3999'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4000'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return node;</div><div class='line' id='LC4001'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC4002'>&nbsp;&nbsp;&nbsp;&nbsp;other: function(node, eventName, callback, context) {</div><div class='line' id='LC4003'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.addEventListener(node, eventName, function() {</div><div class='line' id='LC4004'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var args;</div><div class='line' id='LC4005'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC4006'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return callback.apply(null, [node].concat(__slice.call(args), [context]));</div><div class='line' id='LC4007'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC4008'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4009'>&nbsp;&nbsp;};</div><div class='line' id='LC4010'><br/></div><div class='line' id='LC4011'>&nbsp;&nbsp;Batman.DOM.eventIsAllowed = function(eventName, event) {</div><div class='line' id='LC4012'>&nbsp;&nbsp;&nbsp;&nbsp;var delegate, _ref, _ref1;</div><div class='line' id='LC4013'>&nbsp;&nbsp;&nbsp;&nbsp;if (delegate = (_ref = Batman.currentApp) != null ? (_ref1 = _ref.shouldAllowEvent) != null ? _ref1[eventName] : void 0 : void 0) {</div><div class='line' id='LC4014'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (delegate(event) === false) {</div><div class='line' id='LC4015'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC4016'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4017'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4018'>&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC4019'>&nbsp;&nbsp;};</div><div class='line' id='LC4020'><br/></div><div class='line' id='LC4021'>}).call(this);</div><div class='line' id='LC4022'><br/></div><div class='line' id='LC4023'>(function() {</div><div class='line' id='LC4024'><br/></div><div class='line' id='LC4025'>&nbsp;&nbsp;Batman.DOM.AttrReaderBindingDefinition = (function() {</div><div class='line' id='LC4026'><br/></div><div class='line' id='LC4027'>&nbsp;&nbsp;&nbsp;&nbsp;function AttrReaderBindingDefinition(node, attr, keyPath, context, renderer) {</div><div class='line' id='LC4028'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.node = node;</div><div class='line' id='LC4029'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.attr = attr;</div><div class='line' id='LC4030'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.keyPath = keyPath;</div><div class='line' id='LC4031'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.context = context;</div><div class='line' id='LC4032'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.renderer = renderer;</div><div class='line' id='LC4033'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4034'><br/></div><div class='line' id='LC4035'>&nbsp;&nbsp;&nbsp;&nbsp;return AttrReaderBindingDefinition;</div><div class='line' id='LC4036'><br/></div><div class='line' id='LC4037'>&nbsp;&nbsp;})();</div><div class='line' id='LC4038'><br/></div><div class='line' id='LC4039'>&nbsp;&nbsp;Batman.DOM.attrReaders = {</div><div class='line' id='LC4040'>&nbsp;&nbsp;&nbsp;&nbsp;_parseAttribute: function(value) {</div><div class='line' id='LC4041'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value === &#39;false&#39;) {</div><div class='line' id='LC4042'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = false;</div><div class='line' id='LC4043'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4044'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value === &#39;true&#39;) {</div><div class='line' id='LC4045'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = true;</div><div class='line' id='LC4046'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4047'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value;</div><div class='line' id='LC4048'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC4049'>&nbsp;&nbsp;&nbsp;&nbsp;source: function(definition) {</div><div class='line' id='LC4050'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;definition.onlyObserve = Batman.BindingDefinitionOnlyObserve.Data;</div><div class='line' id='LC4051'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.attrReaders.bind(definition);</div><div class='line' id='LC4052'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC4053'>&nbsp;&nbsp;&nbsp;&nbsp;bind: function(definition) {</div><div class='line' id='LC4054'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var bindingClass;</div><div class='line' id='LC4055'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bindingClass = (function() {</div><div class='line' id='LC4056'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (definition.attr) {</div><div class='line' id='LC4057'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;checked&#39;:</div><div class='line' id='LC4058'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;disabled&#39;:</div><div class='line' id='LC4059'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;selected&#39;:</div><div class='line' id='LC4060'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.CheckedBinding;</div><div class='line' id='LC4061'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;value&#39;:</div><div class='line' id='LC4062'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;href&#39;:</div><div class='line' id='LC4063'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;src&#39;:</div><div class='line' id='LC4064'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;size&#39;:</div><div class='line' id='LC4065'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.NodeAttributeBinding;</div><div class='line' id='LC4066'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;class&#39;:</div><div class='line' id='LC4067'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.ClassBinding;</div><div class='line' id='LC4068'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;style&#39;:</div><div class='line' id='LC4069'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.StyleBinding;</div><div class='line' id='LC4070'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:</div><div class='line' id='LC4071'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.AttributeBinding;</div><div class='line' id='LC4072'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4073'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})();</div><div class='line' id='LC4074'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new bindingClass(definition);</div><div class='line' id='LC4075'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC4076'>&nbsp;&nbsp;&nbsp;&nbsp;context: function(definition) {</div><div class='line' id='LC4077'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return definition.context.descendWithDefinition(definition);</div><div class='line' id='LC4078'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC4079'>&nbsp;&nbsp;&nbsp;&nbsp;event: function(definition) {</div><div class='line' id='LC4080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.DOM.EventBinding(definition);</div><div class='line' id='LC4081'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC4082'>&nbsp;&nbsp;&nbsp;&nbsp;addclass: function(definition) {</div><div class='line' id='LC4083'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.DOM.AddClassBinding(definition);</div><div class='line' id='LC4084'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC4085'>&nbsp;&nbsp;&nbsp;&nbsp;removeclass: function(definition) {</div><div class='line' id='LC4086'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;definition.invert = true;</div><div class='line' id='LC4087'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.DOM.AddClassBinding(definition);</div><div class='line' id='LC4088'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC4089'>&nbsp;&nbsp;&nbsp;&nbsp;foreach: function(definition) {</div><div class='line' id='LC4090'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.DOM.IteratorBinding(definition);</div><div class='line' id='LC4091'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC4092'>&nbsp;&nbsp;&nbsp;&nbsp;formfor: function(definition) {</div><div class='line' id='LC4093'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new Batman.DOM.FormBinding(definition);</div><div class='line' id='LC4094'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return definition.context.descendWithDefinition(definition);</div><div class='line' id='LC4095'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4096'>&nbsp;&nbsp;};</div><div class='line' id='LC4097'><br/></div><div class='line' id='LC4098'>}).call(this);</div><div class='line' id='LC4099'><br/></div><div class='line' id='LC4100'>(function() {</div><div class='line' id='LC4101'>&nbsp;&nbsp;var BatmanObject, ObjectFunctions, getAccessorObject, promiseWrapper, wrapSingleAccessor, __slice = [].slice,</div><div class='line' id='LC4102'>&nbsp;&nbsp;&nbsp;&nbsp;__hasProp = {}.hasOwnProperty,</div><div class='line' id='LC4103'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC4104'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC4105'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC4106'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4107'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC4108'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC4109'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4110'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC4111'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC4112'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC4113'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC4114'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4115'><br/></div><div class='line' id='LC4116'>&nbsp;&nbsp;getAccessorObject = function(base, accessor) {</div><div class='line' id='LC4117'>&nbsp;&nbsp;&nbsp;&nbsp;var deprecated, _i, _len, _ref;</div><div class='line' id='LC4118'>&nbsp;&nbsp;&nbsp;&nbsp;if (typeof accessor === &#39;function&#39;) {</div><div class='line' id='LC4119'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;accessor = {</div><div class='line' id='LC4120'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: accessor</div><div class='line' id='LC4121'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4122'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4123'>&nbsp;&nbsp;&nbsp;&nbsp;_ref = [&#39;cachable&#39;, &#39;cacheable&#39;];</div><div class='line' id='LC4124'>&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC4125'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deprecated = _ref[_i];</div><div class='line' id='LC4126'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (deprecated in accessor) {</div><div class='line' id='LC4127'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer.warn(&quot;Property accessor option \&quot;&quot; + deprecated + &quot;\&quot; is deprecated. Use \&quot;cache\&quot; instead.&quot;);</div><div class='line' id='LC4128'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(&#39;cache&#39; in accessor)) {</div><div class='line' id='LC4129'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;accessor.cache = accessor[deprecated];</div><div class='line' id='LC4130'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4131'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4132'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4133'>&nbsp;&nbsp;&nbsp;&nbsp;return accessor;</div><div class='line' id='LC4134'>&nbsp;&nbsp;};</div><div class='line' id='LC4135'><br/></div><div class='line' id='LC4136'>&nbsp;&nbsp;promiseWrapper = function(fetcher) {</div><div class='line' id='LC4137'>&nbsp;&nbsp;&nbsp;&nbsp;return function(defaultAccessor) {</div><div class='line' id='LC4138'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return {</div><div class='line' id='LC4139'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function(key) {</div><div class='line' id='LC4140'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var asyncDeliver, existingValue, newValue, _base, _base1, _ref, _ref1, _this = this;</div><div class='line' id='LC4141'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((existingValue = defaultAccessor.get.apply(this, arguments)) != null) {</div><div class='line' id='LC4142'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return existingValue;</div><div class='line' id='LC4143'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4144'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;asyncDeliver = false;</div><div class='line' id='LC4145'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newValue = void 0;</div><div class='line' id='LC4146'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = (_base = this._batman).promises) == null) {</div><div class='line' id='LC4147'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_base.promises = {};</div><div class='line' id='LC4148'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4149'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref1 = (_base1 = this._batman.promises)[key]) == null) {</div><div class='line' id='LC4150'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_base1[key] = (function() {</div><div class='line' id='LC4151'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var deliver, returnValue;</div><div class='line' id='LC4152'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deliver = function(err, result) {</div><div class='line' id='LC4153'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (asyncDeliver) {</div><div class='line' id='LC4154'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.set(key, result);</div><div class='line' id='LC4155'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4156'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return newValue = result;</div><div class='line' id='LC4157'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4158'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;returnValue = fetcher.call(_this, deliver, key);</div><div class='line' id='LC4159'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (newValue == null) {</div><div class='line' id='LC4160'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newValue = returnValue;</div><div class='line' id='LC4161'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4162'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC4163'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})();</div><div class='line' id='LC4164'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4165'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;asyncDeliver = true;</div><div class='line' id='LC4166'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return newValue;</div><div class='line' id='LC4167'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC4168'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache: true</div><div class='line' id='LC4169'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4170'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4171'>&nbsp;&nbsp;};</div><div class='line' id='LC4172'><br/></div><div class='line' id='LC4173'>&nbsp;&nbsp;wrapSingleAccessor = function(core, wrapper) {</div><div class='line' id='LC4174'>&nbsp;&nbsp;&nbsp;&nbsp;var k, v;</div><div class='line' id='LC4175'>&nbsp;&nbsp;&nbsp;&nbsp;wrapper = (typeof wrapper === &quot;function&quot; ? wrapper(core) : void 0) || wrapper;</div><div class='line' id='LC4176'>&nbsp;&nbsp;&nbsp;&nbsp;for (k in core) {</div><div class='line' id='LC4177'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v = core[k];</div><div class='line' id='LC4178'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(k in wrapper)) {</div><div class='line' id='LC4179'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wrapper[k] = v;</div><div class='line' id='LC4180'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4181'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4182'>&nbsp;&nbsp;&nbsp;&nbsp;return wrapper;</div><div class='line' id='LC4183'>&nbsp;&nbsp;};</div><div class='line' id='LC4184'><br/></div><div class='line' id='LC4185'>&nbsp;&nbsp;ObjectFunctions = {</div><div class='line' id='LC4186'>&nbsp;&nbsp;&nbsp;&nbsp;_defineAccessor: function() {</div><div class='line' id='LC4187'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var accessor, key, keys, _base, _i, _j, _len, _ref, _results;</div><div class='line' id='LC4188'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keys = 2 &lt;= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), accessor = arguments[_i++];</div><div class='line' id='LC4189'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(accessor != null)) {</div><div class='line' id='LC4190'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.Property.defaultAccessorForBase(this);</div><div class='line' id='LC4191'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (keys.length === 0 &amp;&amp; ((_ref = Batman.typeOf(accessor)) !== &#39;Object&#39; &amp;&amp; _ref !== &#39;Function&#39;)) {</div><div class='line' id='LC4192'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.Property.accessorForBaseAndKey(this, accessor);</div><div class='line' id='LC4193'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (typeof accessor.promise === &#39;function&#39;) {</div><div class='line' id='LC4194'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._defineWrapAccessor.apply(this, __slice.call(keys).concat([promiseWrapper(accessor.promise)]));</div><div class='line' id='LC4195'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4196'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.initializeObject(this);</div><div class='line' id='LC4197'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (keys.length === 0) {</div><div class='line' id='LC4198'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._batman.defaultAccessor = getAccessorObject(this, accessor);</div><div class='line' id='LC4199'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC4200'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(_base = this._batman).keyAccessors || (_base.keyAccessors = new Batman.SimpleHash);</div><div class='line' id='LC4201'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC4202'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_j = 0, _len = keys.length; _j &lt; _len; _j++) {</div><div class='line' id='LC4203'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = keys[_j];</div><div class='line' id='LC4204'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(this._batman.keyAccessors.set(key, getAccessorObject(this, accessor)));</div><div class='line' id='LC4205'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4206'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC4207'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4208'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC4209'>&nbsp;&nbsp;&nbsp;&nbsp;_defineWrapAccessor: function() {</div><div class='line' id='LC4210'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var key, keys, wrapper, _i, _j, _len, _results;</div><div class='line' id='LC4211'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keys = 2 &lt;= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), wrapper = arguments[_i++];</div><div class='line' id='LC4212'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.initializeObject(this);</div><div class='line' id='LC4213'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (keys.length === 0) {</div><div class='line' id='LC4214'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._defineAccessor(wrapSingleAccessor(this._defineAccessor(), wrapper));</div><div class='line' id='LC4215'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC4216'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC4217'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_j = 0, _len = keys.length; _j &lt; _len; _j++) {</div><div class='line' id='LC4218'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = keys[_j];</div><div class='line' id='LC4219'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(this._defineAccessor(key, wrapSingleAccessor(this._defineAccessor(key), wrapper)));</div><div class='line' id='LC4220'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4221'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC4222'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4223'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC4224'>&nbsp;&nbsp;&nbsp;&nbsp;_resetPromises: function() {</div><div class='line' id='LC4225'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var key;</div><div class='line' id='LC4226'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this._batman.promises == null) {</div><div class='line' id='LC4227'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC4228'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4229'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (key in this._batman.promises) {</div><div class='line' id='LC4230'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._resetPromise(key);</div><div class='line' id='LC4231'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4232'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC4233'>&nbsp;&nbsp;&nbsp;&nbsp;_resetPromise: function(key) {</div><div class='line' id='LC4234'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.unset(key);</div><div class='line' id='LC4235'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.property(key).cached = false;</div><div class='line' id='LC4236'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete this._batman.promises[key];</div><div class='line' id='LC4237'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4238'>&nbsp;&nbsp;};</div><div class='line' id='LC4239'><br/></div><div class='line' id='LC4240'>&nbsp;&nbsp;BatmanObject = (function(_super) {</div><div class='line' id='LC4241'>&nbsp;&nbsp;&nbsp;&nbsp;var counter;</div><div class='line' id='LC4242'><br/></div><div class='line' id='LC4243'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(BatmanObject, _super);</div><div class='line' id='LC4244'><br/></div><div class='line' id='LC4245'>&nbsp;&nbsp;&nbsp;&nbsp;Batman.initializeObject(BatmanObject);</div><div class='line' id='LC4246'><br/></div><div class='line' id='LC4247'>&nbsp;&nbsp;&nbsp;&nbsp;Batman.initializeObject(BatmanObject.prototype);</div><div class='line' id='LC4248'><br/></div><div class='line' id='LC4249'>&nbsp;&nbsp;&nbsp;&nbsp;Batman.mixin(BatmanObject.prototype, ObjectFunctions, Batman.EventEmitter, Batman.Observable);</div><div class='line' id='LC4250'><br/></div><div class='line' id='LC4251'>&nbsp;&nbsp;&nbsp;&nbsp;Batman.mixin(BatmanObject, ObjectFunctions, Batman.EventEmitter, Batman.Observable);</div><div class='line' id='LC4252'><br/></div><div class='line' id='LC4253'>&nbsp;&nbsp;&nbsp;&nbsp;BatmanObject.classMixin = function() {</div><div class='line' id='LC4254'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.mixin.apply(Batman, [this].concat(__slice.call(arguments)));</div><div class='line' id='LC4255'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4256'><br/></div><div class='line' id='LC4257'>&nbsp;&nbsp;&nbsp;&nbsp;BatmanObject.mixin = function() {</div><div class='line' id='LC4258'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.classMixin.apply(this.prototype, arguments);</div><div class='line' id='LC4259'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4260'><br/></div><div class='line' id='LC4261'>&nbsp;&nbsp;&nbsp;&nbsp;BatmanObject.prototype.mixin = BatmanObject.classMixin;</div><div class='line' id='LC4262'><br/></div><div class='line' id='LC4263'>&nbsp;&nbsp;&nbsp;&nbsp;BatmanObject.classAccessor = BatmanObject._defineAccessor;</div><div class='line' id='LC4264'><br/></div><div class='line' id='LC4265'>&nbsp;&nbsp;&nbsp;&nbsp;BatmanObject.accessor = function() {</div><div class='line' id='LC4266'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC4267'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = this.prototype)._defineAccessor.apply(_ref, arguments);</div><div class='line' id='LC4268'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4269'><br/></div><div class='line' id='LC4270'>&nbsp;&nbsp;&nbsp;&nbsp;BatmanObject.prototype.accessor = BatmanObject._defineAccessor;</div><div class='line' id='LC4271'><br/></div><div class='line' id='LC4272'>&nbsp;&nbsp;&nbsp;&nbsp;BatmanObject.wrapClassAccessor = BatmanObject._defineWrapAccessor;</div><div class='line' id='LC4273'><br/></div><div class='line' id='LC4274'>&nbsp;&nbsp;&nbsp;&nbsp;BatmanObject.wrapAccessor = function() {</div><div class='line' id='LC4275'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC4276'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = this.prototype)._defineWrapAccessor.apply(_ref, arguments);</div><div class='line' id='LC4277'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4278'><br/></div><div class='line' id='LC4279'>&nbsp;&nbsp;&nbsp;&nbsp;BatmanObject.prototype.wrapAccessor = BatmanObject._defineWrapAccessor;</div><div class='line' id='LC4280'><br/></div><div class='line' id='LC4281'>&nbsp;&nbsp;&nbsp;&nbsp;BatmanObject.observeAll = function() {</div><div class='line' id='LC4282'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.prototype.observe.apply(this.prototype, arguments);</div><div class='line' id='LC4283'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4284'><br/></div><div class='line' id='LC4285'>&nbsp;&nbsp;&nbsp;&nbsp;BatmanObject.singleton = function(singletonMethodName) {</div><div class='line' id='LC4286'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (singletonMethodName == null) {</div><div class='line' id='LC4287'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;singletonMethodName = &quot;sharedInstance&quot;;</div><div class='line' id='LC4288'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4289'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.classAccessor(singletonMethodName, {</div><div class='line' id='LC4290'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function() {</div><div class='line' id='LC4291'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _name;</div><div class='line' id='LC4292'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this[_name = &quot;_&quot; + singletonMethodName] || (this[_name] = new this);</div><div class='line' id='LC4293'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4294'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC4295'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4296'><br/></div><div class='line' id='LC4297'>&nbsp;&nbsp;&nbsp;&nbsp;BatmanObject.accessor(&#39;_batmanID&#39;, function() {</div><div class='line' id='LC4298'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._batmanID();</div><div class='line' id='LC4299'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC4300'><br/></div><div class='line' id='LC4301'>&nbsp;&nbsp;&nbsp;&nbsp;function BatmanObject() {</div><div class='line' id='LC4302'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var mixins;</div><div class='line' id='LC4303'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mixins = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC4304'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._batman = new Batman._Batman(this);</div><div class='line' id='LC4305'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.mixin.apply(this, mixins);</div><div class='line' id='LC4306'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4307'><br/></div><div class='line' id='LC4308'>&nbsp;&nbsp;&nbsp;&nbsp;counter = 0;</div><div class='line' id='LC4309'><br/></div><div class='line' id='LC4310'>&nbsp;&nbsp;&nbsp;&nbsp;BatmanObject.prototype._batmanID = function() {</div><div class='line' id='LC4311'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _base, _ref;</div><div class='line' id='LC4312'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._batman.check(this);</div><div class='line' id='LC4313'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = (_base = this._batman).id) == null) {</div><div class='line' id='LC4314'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_base.id = counter++;</div><div class='line' id='LC4315'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4316'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._batman.id;</div><div class='line' id='LC4317'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4318'><br/></div><div class='line' id='LC4319'>&nbsp;&nbsp;&nbsp;&nbsp;BatmanObject.prototype.hashKey = function() {</div><div class='line' id='LC4320'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _base;</div><div class='line' id='LC4321'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof this.isEqual === &#39;function&#39;) {</div><div class='line' id='LC4322'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC4323'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4324'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_base = this._batman).hashKey || (_base.hashKey = &quot;&lt;Batman.Object &quot; + (this._batmanID()) + &quot;&gt;&quot;);</div><div class='line' id='LC4325'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4326'><br/></div><div class='line' id='LC4327'>&nbsp;&nbsp;&nbsp;&nbsp;BatmanObject.prototype.toJSON = function() {</div><div class='line' id='LC4328'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var key, obj, value;</div><div class='line' id='LC4329'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj = {};</div><div class='line' id='LC4330'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (key in this) {</div><div class='line' id='LC4331'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!__hasProp.call(this, key)) continue;</div><div class='line' id='LC4332'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = this[key];</div><div class='line' id='LC4333'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (key !== &quot;_batman&quot; &amp;&amp; key !== &quot;hashKey&quot; &amp;&amp; key !== &quot;_batmanID&quot;) {</div><div class='line' id='LC4334'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj[key] = (value != null ? value.toJSON : void 0) ? value.toJSON() : value;</div><div class='line' id='LC4335'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4336'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4337'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return obj;</div><div class='line' id='LC4338'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4339'><br/></div><div class='line' id='LC4340'>&nbsp;&nbsp;&nbsp;&nbsp;return BatmanObject;</div><div class='line' id='LC4341'><br/></div><div class='line' id='LC4342'>&nbsp;&nbsp;})(Object);</div><div class='line' id='LC4343'><br/></div><div class='line' id='LC4344'>&nbsp;&nbsp;Batman.Object = BatmanObject;</div><div class='line' id='LC4345'><br/></div><div class='line' id='LC4346'>}).call(this);</div><div class='line' id='LC4347'><br/></div><div class='line' id='LC4348'>(function() {</div><div class='line' id='LC4349'>&nbsp;&nbsp;var __bind = function(fn, me) {</div><div class='line' id='LC4350'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function() {</div><div class='line' id='LC4351'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return fn.apply(me, arguments);</div><div class='line' id='LC4352'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4353'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC4354'>&nbsp;&nbsp;&nbsp;&nbsp;__hasProp = {}.hasOwnProperty,</div><div class='line' id='LC4355'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC4356'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC4357'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC4358'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4359'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC4360'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC4361'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4362'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC4363'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC4364'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC4365'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC4366'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4367'><br/></div><div class='line' id='LC4368'>&nbsp;&nbsp;Batman.Renderer = (function(_super) {</div><div class='line' id='LC4369'>&nbsp;&nbsp;&nbsp;&nbsp;var bindingRegexp, bindingSortOrder, bindingSortPositions, k, name, pos, _i, _j, _len, _len1, _ref;</div><div class='line' id='LC4370'><br/></div><div class='line' id='LC4371'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(Renderer, _super);</div><div class='line' id='LC4372'><br/></div><div class='line' id='LC4373'>&nbsp;&nbsp;&nbsp;&nbsp;Renderer.prototype.deferEvery = 50;</div><div class='line' id='LC4374'><br/></div><div class='line' id='LC4375'>&nbsp;&nbsp;&nbsp;&nbsp;function Renderer(node, context, view) {</div><div class='line' id='LC4376'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.node = node;</div><div class='line' id='LC4377'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.context = context;</div><div class='line' id='LC4378'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.view = view;</div><div class='line' id='LC4379'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.resume = __bind(this.resume, this);</div><div class='line' id='LC4380'><br/></div><div class='line' id='LC4381'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.start = __bind(this.start, this);</div><div class='line' id='LC4382'><br/></div><div class='line' id='LC4383'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Renderer.__super__.constructor.call(this);</div><div class='line' id='LC4384'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(this.context instanceof Batman.RenderContext)) {</div><div class='line' id='LC4385'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer.error(&quot;Must pass a RenderContext to a renderer for rendering&quot;);</div><div class='line' id='LC4386'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4387'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.immediate = Batman.setImmediate(this.start);</div><div class='line' id='LC4388'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4389'><br/></div><div class='line' id='LC4390'>&nbsp;&nbsp;&nbsp;&nbsp;Renderer.prototype.start = function() {</div><div class='line' id='LC4391'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.startTime = new Date;</div><div class='line' id='LC4392'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.prevent(&#39;parsed&#39;);</div><div class='line' id='LC4393'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.prevent(&#39;rendered&#39;);</div><div class='line' id='LC4394'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.parseNode(this.node);</div><div class='line' id='LC4395'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4396'><br/></div><div class='line' id='LC4397'>&nbsp;&nbsp;&nbsp;&nbsp;Renderer.prototype.resume = function() {</div><div class='line' id='LC4398'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.startTime = new Date;</div><div class='line' id='LC4399'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.parseNode(this.resumeNode);</div><div class='line' id='LC4400'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4401'><br/></div><div class='line' id='LC4402'>&nbsp;&nbsp;&nbsp;&nbsp;Renderer.prototype.finish = function() {</div><div class='line' id='LC4403'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.startTime = null;</div><div class='line' id='LC4404'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.prevent(&#39;stopped&#39;);</div><div class='line' id='LC4405'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.allowAndFire(&#39;parsed&#39;);</div><div class='line' id='LC4406'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.allowAndFire(&#39;rendered&#39;);</div><div class='line' id='LC4407'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4408'><br/></div><div class='line' id='LC4409'>&nbsp;&nbsp;&nbsp;&nbsp;Renderer.prototype.stop = function() {</div><div class='line' id='LC4410'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.clearImmediate(this.immediate);</div><div class='line' id='LC4411'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.fire(&#39;stopped&#39;);</div><div class='line' id='LC4412'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4413'><br/></div><div class='line' id='LC4414'>&nbsp;&nbsp;&nbsp;&nbsp;_ref = [&#39;parsed&#39;, &#39;rendered&#39;, &#39;stopped&#39;];</div><div class='line' id='LC4415'>&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC4416'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k = _ref[_i];</div><div class='line' id='LC4417'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Renderer.prototype.event(k).oneShot = true;</div><div class='line' id='LC4418'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4419'><br/></div><div class='line' id='LC4420'>&nbsp;&nbsp;&nbsp;&nbsp;bindingRegexp = /^data\-(.*)/;</div><div class='line' id='LC4421'><br/></div><div class='line' id='LC4422'>&nbsp;&nbsp;&nbsp;&nbsp;bindingSortOrder = [&quot;view&quot;, &quot;renderif&quot;, &quot;foreach&quot;, &quot;formfor&quot;, &quot;context&quot;, &quot;bind&quot;, &quot;source&quot;, &quot;target&quot;];</div><div class='line' id='LC4423'><br/></div><div class='line' id='LC4424'>&nbsp;&nbsp;&nbsp;&nbsp;bindingSortPositions = {};</div><div class='line' id='LC4425'><br/></div><div class='line' id='LC4426'>&nbsp;&nbsp;&nbsp;&nbsp;for (pos = _j = 0, _len1 = bindingSortOrder.length; _j &lt; _len1; pos = ++_j) {</div><div class='line' id='LC4427'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name = bindingSortOrder[pos];</div><div class='line' id='LC4428'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bindingSortPositions[name] = pos;</div><div class='line' id='LC4429'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4430'><br/></div><div class='line' id='LC4431'>&nbsp;&nbsp;&nbsp;&nbsp;Renderer.prototype._sortBindings = function(a, b) {</div><div class='line' id='LC4432'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var aindex, bindex;</div><div class='line' id='LC4433'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;aindex = bindingSortPositions[a[0]];</div><div class='line' id='LC4434'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bindex = bindingSortPositions[b[0]];</div><div class='line' id='LC4435'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (aindex == null) {</div><div class='line' id='LC4436'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;aindex = bindingSortOrder.length;</div><div class='line' id='LC4437'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4438'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (bindex == null) {</div><div class='line' id='LC4439'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bindex = bindingSortOrder.length;</div><div class='line' id='LC4440'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4441'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (aindex &gt; bindex) {</div><div class='line' id='LC4442'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 1;</div><div class='line' id='LC4443'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (bindex &gt; aindex) {</div><div class='line' id='LC4444'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;</div><div class='line' id='LC4445'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (a[0] &gt; b[0]) {</div><div class='line' id='LC4446'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 1;</div><div class='line' id='LC4447'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (b[0] &gt; a[0]) {</div><div class='line' id='LC4448'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;</div><div class='line' id='LC4449'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC4450'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 0;</div><div class='line' id='LC4451'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4452'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4453'><br/></div><div class='line' id='LC4454'>&nbsp;&nbsp;&nbsp;&nbsp;Renderer.prototype.parseNode = function(node) {</div><div class='line' id='LC4455'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var attr, attribute, binding, bindingDefinition, bindings, names, nextNode, oldContext, reader, skipChildren, value, _k, _l, _len2, _len3, _ref1, _ref2, _ref3, _ref4, _this = this;</div><div class='line' id='LC4456'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.deferEvery &amp;&amp; (new Date - this.startTime) &gt; this.deferEvery) {</div><div class='line' id='LC4457'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.resumeNode = node;</div><div class='line' id='LC4458'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.timeout = Batman.setImmediate(this.resume);</div><div class='line' id='LC4459'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC4460'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4461'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (node.getAttribute &amp;&amp; node.attributes) {</div><div class='line' id='LC4462'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bindings = [];</div><div class='line' id='LC4463'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1 = node.attributes;</div><div class='line' id='LC4464'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_k = 0, _len2 = _ref1.length; _k &lt; _len2; _k++) {</div><div class='line' id='LC4465'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attribute = _ref1[_k];</div><div class='line' id='LC4466'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name = (_ref2 = attribute.nodeName.match(bindingRegexp)) != null ? _ref2[1] : void 0;</div><div class='line' id='LC4467'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!name) {</div><div class='line' id='LC4468'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;</div><div class='line' id='LC4469'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4470'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bindings.push((names = name.split(&#39;-&#39;)).length &gt; 1 ? [names[0], names.slice(1, names.length + 1 || 9e9).join(&#39;-&#39;), attribute.value] : [name, void 0, attribute.value]);</div><div class='line' id='LC4471'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4472'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref3 = bindings.sort(this._sortBindings);</div><div class='line' id='LC4473'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_l = 0, _len3 = _ref3.length; _l &lt; _len3; _l++) {</div><div class='line' id='LC4474'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref4 = _ref3[_l], name = _ref4[0], attr = _ref4[1], value = _ref4[2];</div><div class='line' id='LC4475'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binding = attr ? (reader = Batman.DOM.attrReaders[name]) ? (bindingDefinition = new Batman.DOM.AttrReaderBindingDefinition(node, attr, value, this.context, this), reader(bindingDefinition)) : void 0 : (reader = Batman.DOM.readers[name]) ? (bindingDefinition = new Batman.DOM.ReaderBindingDefinition(node, value, this.context, this), reader(bindingDefinition)) : void 0;</div><div class='line' id='LC4476'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (binding instanceof Batman.RenderContext) {</div><div class='line' id='LC4477'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;oldContext = this.context;</div><div class='line' id='LC4478'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.context = binding;</div><div class='line' id='LC4479'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.onParseExit(node, function() {</div><div class='line' id='LC4480'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.context = oldContext;</div><div class='line' id='LC4481'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC4482'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (binding != null ? binding.skipChildren : void 0) {</div><div class='line' id='LC4483'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;skipChildren = true;</div><div class='line' id='LC4484'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC4485'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4486'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4487'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4488'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((nextNode = this.nextNode(node, skipChildren))) {</div><div class='line' id='LC4489'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.parseNode(nextNode);</div><div class='line' id='LC4490'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC4491'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.finish();</div><div class='line' id='LC4492'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4493'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4494'><br/></div><div class='line' id='LC4495'>&nbsp;&nbsp;&nbsp;&nbsp;Renderer.prototype.nextNode = function(node, skipChildren) {</div><div class='line' id='LC4496'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var children, nextParent, parentSibling, sibling, _ref1, _ref2;</div><div class='line' id='LC4497'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!skipChildren) {</div><div class='line' id='LC4498'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;children = node.childNodes;</div><div class='line' id='LC4499'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (children != null ? children.length : void 0) {</div><div class='line' id='LC4500'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return children[0];</div><div class='line' id='LC4501'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4502'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4503'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sibling = node.nextSibling;</div><div class='line' id='LC4504'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref1 = Batman.DOM.onParseExit(node)) != null) {</div><div class='line' id='LC4505'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1.forEach(function(callback) {</div><div class='line' id='LC4506'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return callback();</div><div class='line' id='LC4507'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC4508'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4509'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.forgetParseExit(node);</div><div class='line' id='LC4510'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.node === node) {</div><div class='line' id='LC4511'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC4512'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4513'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (sibling) {</div><div class='line' id='LC4514'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return sibling;</div><div class='line' id='LC4515'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4516'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nextParent = node;</div><div class='line' id='LC4517'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (nextParent = nextParent.parentNode) {</div><div class='line' id='LC4518'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parentSibling = nextParent.nextSibling;</div><div class='line' id='LC4519'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref2 = Batman.DOM.onParseExit(nextParent)) != null) {</div><div class='line' id='LC4520'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref2.forEach(function(callback) {</div><div class='line' id='LC4521'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return callback();</div><div class='line' id='LC4522'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC4523'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4524'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.forgetParseExit(nextParent);</div><div class='line' id='LC4525'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.node === nextParent) {</div><div class='line' id='LC4526'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC4527'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4528'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (parentSibling) {</div><div class='line' id='LC4529'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return parentSibling;</div><div class='line' id='LC4530'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4531'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4532'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4533'><br/></div><div class='line' id='LC4534'>&nbsp;&nbsp;&nbsp;&nbsp;return Renderer;</div><div class='line' id='LC4535'><br/></div><div class='line' id='LC4536'>&nbsp;&nbsp;})(Batman.Object);</div><div class='line' id='LC4537'><br/></div><div class='line' id='LC4538'>}).call(this);</div><div class='line' id='LC4539'><br/></div><div class='line' id='LC4540'>(function() {</div><div class='line' id='LC4541'>&nbsp;&nbsp;var __bind = function(fn, me) {</div><div class='line' id='LC4542'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function() {</div><div class='line' id='LC4543'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return fn.apply(me, arguments);</div><div class='line' id='LC4544'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4545'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC4546'>&nbsp;&nbsp;&nbsp;&nbsp;__hasProp = {}.hasOwnProperty,</div><div class='line' id='LC4547'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC4548'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC4549'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC4550'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4551'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC4552'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC4553'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4554'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC4555'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC4556'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC4557'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC4558'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4559'><br/></div><div class='line' id='LC4560'>&nbsp;&nbsp;Batman.DOM.AbstractBinding = (function(_super) {</div><div class='line' id='LC4561'>&nbsp;&nbsp;&nbsp;&nbsp;var get_dot_rx, get_rx, keypath_rx, onlyAll, onlyData, onlyNode;</div><div class='line' id='LC4562'><br/></div><div class='line' id='LC4563'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(AbstractBinding, _super);</div><div class='line' id='LC4564'><br/></div><div class='line' id='LC4565'>&nbsp;&nbsp;&nbsp;&nbsp;keypath_rx = /(^|,)\s*(?:(true|false)|(&quot;[^&quot;]*&quot;)|(\{[^\}]*\})|(([0-9]+[a-zA-Z\_]|[a-zA-Z])[\w\-\.]*[\?\!]?))\s*(?=$|,)/g;</div><div class='line' id='LC4566'><br/></div><div class='line' id='LC4567'>&nbsp;&nbsp;&nbsp;&nbsp;get_dot_rx = /(?:\]\.)(.+?)(?=[\[\.]|\s*\||$)/;</div><div class='line' id='LC4568'><br/></div><div class='line' id='LC4569'>&nbsp;&nbsp;&nbsp;&nbsp;get_rx = /(?!^\s*)\[(.*?)\]/g;</div><div class='line' id='LC4570'><br/></div><div class='line' id='LC4571'>&nbsp;&nbsp;&nbsp;&nbsp;AbstractBinding.accessor(&#39;filteredValue&#39;, {</div><div class='line' id='LC4572'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function() {</div><div class='line' id='LC4573'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var renderContext, result, self, unfilteredValue;</div><div class='line' id='LC4574'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unfilteredValue = this.get(&#39;unfilteredValue&#39;);</div><div class='line' id='LC4575'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self = this;</div><div class='line' id='LC4576'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;renderContext = this.get(&#39;renderContext&#39;);</div><div class='line' id='LC4577'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.filterFunctions.length &gt; 0) {</div><div class='line' id='LC4578'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer.currentFilterStack = renderContext;</div><div class='line' id='LC4579'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = this.filterFunctions.reduce(function(value, fn, i) {</div><div class='line' id='LC4580'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var args;</div><div class='line' id='LC4581'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args = self.filterArguments[i].map(function(argument) {</div><div class='line' id='LC4582'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (argument._keypath) {</div><div class='line' id='LC4583'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return self.renderContext.get(argument._keypath);</div><div class='line' id='LC4584'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC4585'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return argument;</div><div class='line' id='LC4586'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4587'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC4588'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args.unshift(value);</div><div class='line' id='LC4589'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (args.length &lt; (fn.length - 1)) {</div><div class='line' id='LC4590'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args.push(void 0);</div><div class='line' id='LC4591'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4592'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args.push(self);</div><div class='line' id='LC4593'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return fn.apply(renderContext, args);</div><div class='line' id='LC4594'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, unfilteredValue);</div><div class='line' id='LC4595'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer.currentFilterStack = null;</div><div class='line' id='LC4596'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC4597'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC4598'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return unfilteredValue;</div><div class='line' id='LC4599'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4600'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC4601'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set: function(_, newValue) {</div><div class='line' id='LC4602'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.set(&#39;unfilteredValue&#39;, newValue);</div><div class='line' id='LC4603'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4604'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC4605'><br/></div><div class='line' id='LC4606'>&nbsp;&nbsp;&nbsp;&nbsp;AbstractBinding.accessor(&#39;unfilteredValue&#39;, {</div><div class='line' id='LC4607'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function() {</div><div class='line' id='LC4608'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var k;</div><div class='line' id='LC4609'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (k = this.get(&#39;key&#39;)) {</div><div class='line' id='LC4610'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.RenderContext.deProxy(Batman.getPath(this, [&#39;keyContext&#39;, k]));</div><div class='line' id='LC4611'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC4612'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&#39;value&#39;);</div><div class='line' id='LC4613'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4614'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC4615'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set: function(_, value) {</div><div class='line' id='LC4616'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var k, keyContext, prop;</div><div class='line' id='LC4617'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (k = this.get(&#39;key&#39;)) {</div><div class='line' id='LC4618'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keyContext = this.get(&#39;keyContext&#39;);</div><div class='line' id='LC4619'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (keyContext &amp;&amp; keyContext !== Batman.container) {</div><div class='line' id='LC4620'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;prop = Batman.Property.forBaseAndKey(keyContext, k);</div><div class='line' id='LC4621'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return prop.setValue(value);</div><div class='line' id='LC4622'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4623'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC4624'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.set(&#39;value&#39;, value);</div><div class='line' id='LC4625'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4626'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4627'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC4628'><br/></div><div class='line' id='LC4629'>&nbsp;&nbsp;&nbsp;&nbsp;AbstractBinding.accessor(&#39;keyContext&#39;, function() {</div><div class='line' id='LC4630'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.renderContext.contextForKey(this.key);</div><div class='line' id='LC4631'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC4632'><br/></div><div class='line' id='LC4633'>&nbsp;&nbsp;&nbsp;&nbsp;onlyAll = Batman.BindingDefinitionOnlyObserve.All;</div><div class='line' id='LC4634'><br/></div><div class='line' id='LC4635'>&nbsp;&nbsp;&nbsp;&nbsp;onlyData = Batman.BindingDefinitionOnlyObserve.Data;</div><div class='line' id='LC4636'><br/></div><div class='line' id='LC4637'>&nbsp;&nbsp;&nbsp;&nbsp;onlyNode = Batman.BindingDefinitionOnlyObserve.Node;</div><div class='line' id='LC4638'><br/></div><div class='line' id='LC4639'>&nbsp;&nbsp;&nbsp;&nbsp;AbstractBinding.prototype.bindImmediately = true;</div><div class='line' id='LC4640'><br/></div><div class='line' id='LC4641'>&nbsp;&nbsp;&nbsp;&nbsp;AbstractBinding.prototype.shouldSet = true;</div><div class='line' id='LC4642'><br/></div><div class='line' id='LC4643'>&nbsp;&nbsp;&nbsp;&nbsp;AbstractBinding.prototype.isInputBinding = false;</div><div class='line' id='LC4644'><br/></div><div class='line' id='LC4645'>&nbsp;&nbsp;&nbsp;&nbsp;AbstractBinding.prototype.escapeValue = true;</div><div class='line' id='LC4646'><br/></div><div class='line' id='LC4647'>&nbsp;&nbsp;&nbsp;&nbsp;AbstractBinding.prototype.onlyObserve = onlyAll;</div><div class='line' id='LC4648'><br/></div><div class='line' id='LC4649'>&nbsp;&nbsp;&nbsp;&nbsp;AbstractBinding.prototype.skipParseFilter = false;</div><div class='line' id='LC4650'><br/></div><div class='line' id='LC4651'>&nbsp;&nbsp;&nbsp;&nbsp;function AbstractBinding(definition) {</div><div class='line' id='LC4652'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._fireDataChange = __bind(this._fireDataChange, this);</div><div class='line' id='LC4653'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.node = definition.node, this.keyPath = definition.keyPath, this.renderContext = definition.context, this.renderer = definition.renderer;</div><div class='line' id='LC4654'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (definition.onlyObserve) {</div><div class='line' id='LC4655'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.onlyObserve = definition.onlyObserve;</div><div class='line' id='LC4656'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4657'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (definition.skipParseFilter != null) {</div><div class='line' id='LC4658'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.skipParseFilter = definition.skipParseFilter;</div><div class='line' id='LC4659'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4660'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this.skipParseFilter) {</div><div class='line' id='LC4661'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.parseFilter();</div><div class='line' id='LC4662'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4663'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.bindImmediately) {</div><div class='line' id='LC4664'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.bind();</div><div class='line' id='LC4665'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4666'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4667'><br/></div><div class='line' id='LC4668'>&nbsp;&nbsp;&nbsp;&nbsp;AbstractBinding.prototype.isTwoWay = function() {</div><div class='line' id='LC4669'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (this.key != null) &amp;&amp; this.filterFunctions.length === 0;</div><div class='line' id='LC4670'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4671'><br/></div><div class='line' id='LC4672'>&nbsp;&nbsp;&nbsp;&nbsp;AbstractBinding.prototype.bind = function() {</div><div class='line' id='LC4673'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref, _ref1;</div><div class='line' id='LC4674'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.node &amp;&amp; ((_ref = this.onlyObserve) === onlyAll || _ref === onlyNode) &amp;&amp; Batman.DOM.nodeIsEditable(this.node)) {</div><div class='line' id='LC4675'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.events.change(this.node, this._fireNodeChange.bind(this));</div><div class='line' id='LC4676'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.onlyObserve === onlyNode) {</div><div class='line' id='LC4677'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._fireNodeChange();</div><div class='line' id='LC4678'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4679'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4680'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref1 = this.onlyObserve) === onlyAll || _ref1 === onlyData) {</div><div class='line' id='LC4681'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.observeAndFire(&#39;filteredValue&#39;, this._fireDataChange);</div><div class='line' id='LC4682'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4683'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.node) {</div><div class='line' id='LC4684'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.trackBinding(this, this.node);</div><div class='line' id='LC4685'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4686'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4687'><br/></div><div class='line' id='LC4688'>&nbsp;&nbsp;&nbsp;&nbsp;AbstractBinding.prototype._fireNodeChange = function(event) {</div><div class='line' id='LC4689'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var val;</div><div class='line' id='LC4690'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.shouldSet = false;</div><div class='line' id='LC4691'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;val = this.value || this.get(&#39;keyContext&#39;);</div><div class='line' id='LC4692'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof this.nodeChange === &quot;function&quot;) {</div><div class='line' id='LC4693'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.nodeChange(this.node, val, event);</div><div class='line' id='LC4694'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4695'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fire(&#39;nodeChange&#39;, this.node, val);</div><div class='line' id='LC4696'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.shouldSet = true;</div><div class='line' id='LC4697'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4698'><br/></div><div class='line' id='LC4699'>&nbsp;&nbsp;&nbsp;&nbsp;AbstractBinding.prototype._fireDataChange = function(value) {</div><div class='line' id='LC4700'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.shouldSet) {</div><div class='line' id='LC4701'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof this.dataChange === &quot;function&quot;) {</div><div class='line' id='LC4702'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.dataChange(value, this.node);</div><div class='line' id='LC4703'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4704'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.fire(&#39;dataChange&#39;, value, this.node);</div><div class='line' id='LC4705'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4706'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4707'><br/></div><div class='line' id='LC4708'>&nbsp;&nbsp;&nbsp;&nbsp;AbstractBinding.prototype.die = function() {</div><div class='line' id='LC4709'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC4710'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.forget();</div><div class='line' id='LC4711'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = this._batman.properties) != null) {</div><div class='line' id='LC4712'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref.forEach(function(key, property) {</div><div class='line' id='LC4713'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return property.die();</div><div class='line' id='LC4714'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC4715'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4716'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fire(&#39;die&#39;);</div><div class='line' id='LC4717'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.node = null;</div><div class='line' id='LC4718'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.keyPath = null;</div><div class='line' id='LC4719'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.renderContext = null;</div><div class='line' id='LC4720'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.renderer = null;</div><div class='line' id='LC4721'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.dead = true;</div><div class='line' id='LC4722'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC4723'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4724'><br/></div><div class='line' id='LC4725'>&nbsp;&nbsp;&nbsp;&nbsp;AbstractBinding.prototype.parseFilter = function() {</div><div class='line' id='LC4726'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var args, filter, filterName, filterString, filters, key, keyPath, orig, split;</div><div class='line' id='LC4727'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.filterFunctions = [];</div><div class='line' id='LC4728'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.filterArguments = [];</div><div class='line' id='LC4729'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keyPath = this.keyPath;</div><div class='line' id='LC4730'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (get_dot_rx.test(keyPath)) {</div><div class='line' id='LC4731'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keyPath = keyPath.replace(get_dot_rx, &quot;][&#39;$1&#39;]&quot;);</div><div class='line' id='LC4732'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4733'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filters = keyPath.replace(get_rx, &quot; | get $1 &quot;).replace(/&#39;/g, &#39;&quot;&#39;).split(/(?!&quot;)\s+\|\s+(?!&quot;)/);</div><div class='line' id='LC4734'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC4735'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = this.parseSegment(orig = filters.shift())[0];</div><div class='line' id='LC4736'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC4737'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer.warn(e);</div><div class='line' id='LC4738'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer.error(&quot;Error! Couldn&#39;t parse keypath in \&quot;&quot; + orig + &quot;\&quot;. Parsing error above.&quot;);</div><div class='line' id='LC4739'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4740'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (key &amp;&amp; key._keypath) {</div><div class='line' id='LC4741'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.key = key._keypath;</div><div class='line' id='LC4742'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC4743'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.value = key;</div><div class='line' id='LC4744'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4745'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (filters.length) {</div><div class='line' id='LC4746'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (filterString = filters.shift()) {</div><div class='line' id='LC4747'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;split = filterString.indexOf(&#39; &#39;);</div><div class='line' id='LC4748'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (split === -1) {</div><div class='line' id='LC4749'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;split = filterString.length;</div><div class='line' id='LC4750'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4751'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filterName = filterString.substr(0, split);</div><div class='line' id='LC4752'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args = filterString.substr(split);</div><div class='line' id='LC4753'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(filter = Batman.Filters[filterName])) {</div><div class='line' id='LC4754'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.developer.error(&quot;Unrecognized filter &#39;&quot; + filterName + &quot;&#39; in key \&quot;&quot; + this.keyPath + &quot;\&quot;!&quot;);</div><div class='line' id='LC4755'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4756'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.filterFunctions.push(filter);</div><div class='line' id='LC4757'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC4758'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.filterArguments.push(this.parseSegment(args));</div><div class='line' id='LC4759'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC4760'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer.error(&quot;Bad filter arguments \&quot;&quot; + args + &quot;\&quot;!&quot;);</div><div class='line' id='LC4761'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4762'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4763'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC4764'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4765'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4766'><br/></div><div class='line' id='LC4767'>&nbsp;&nbsp;&nbsp;&nbsp;AbstractBinding.prototype.parseSegment = function(segment) {</div><div class='line' id='LC4768'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;segment = segment.replace(keypath_rx, function(match, start, bool, string, object, keypath, offset) {</div><div class='line' id='LC4769'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var replacement;</div><div class='line' id='LC4770'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (start == null) {</div><div class='line' id='LC4771'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start = &#39;&#39;;</div><div class='line' id='LC4772'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4773'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;replacement = keypath ? &#39;{&quot;_keypath&quot;: &quot;&#39; + keypath + &#39;&quot;}&#39; : bool || string || object;</div><div class='line' id='LC4774'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return start + replacement;</div><div class='line' id='LC4775'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC4776'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return JSON.parse(&quot;[&quot; + segment + &quot;]&quot;);</div><div class='line' id='LC4777'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4778'><br/></div><div class='line' id='LC4779'>&nbsp;&nbsp;&nbsp;&nbsp;return AbstractBinding;</div><div class='line' id='LC4780'><br/></div><div class='line' id='LC4781'>&nbsp;&nbsp;})(Batman.Object);</div><div class='line' id='LC4782'><br/></div><div class='line' id='LC4783'>}).call(this);</div><div class='line' id='LC4784'><br/></div><div class='line' id='LC4785'>(function() {</div><div class='line' id='LC4786'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC4787'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC4788'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC4789'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC4790'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4791'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC4792'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC4793'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4794'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC4795'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC4796'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC4797'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC4798'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4799'><br/></div><div class='line' id='LC4800'>&nbsp;&nbsp;Batman.DOM.ViewBinding = (function(_super) {</div><div class='line' id='LC4801'><br/></div><div class='line' id='LC4802'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(ViewBinding, _super);</div><div class='line' id='LC4803'><br/></div><div class='line' id='LC4804'>&nbsp;&nbsp;&nbsp;&nbsp;ViewBinding.prototype.skipChildren = true;</div><div class='line' id='LC4805'><br/></div><div class='line' id='LC4806'>&nbsp;&nbsp;&nbsp;&nbsp;ViewBinding.prototype.onlyObserve = Batman.BindingDefinitionOnlyObserve.Data;</div><div class='line' id='LC4807'><br/></div><div class='line' id='LC4808'>&nbsp;&nbsp;&nbsp;&nbsp;function ViewBinding() {</div><div class='line' id='LC4809'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ViewBinding.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC4810'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.renderer.prevent(&#39;rendered&#39;);</div><div class='line' id='LC4811'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.node.removeAttribute(&#39;data-view&#39;);</div><div class='line' id='LC4812'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4813'><br/></div><div class='line' id='LC4814'>&nbsp;&nbsp;&nbsp;&nbsp;ViewBinding.prototype.dataChange = function(viewClassOrInstance) {</div><div class='line' id='LC4815'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref, _this = this;</div><div class='line' id='LC4816'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (viewClassOrInstance == null) {</div><div class='line' id='LC4817'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC4818'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4819'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (viewClassOrInstance.isView) {</div><div class='line' id='LC4820'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.view = viewClassOrInstance;</div><div class='line' id='LC4821'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.view.set(&#39;context&#39;, this.renderContext);</div><div class='line' id='LC4822'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.view.set(&#39;node&#39;, this.node);</div><div class='line' id='LC4823'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC4824'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.view = new viewClassOrInstance({</div><div class='line' id='LC4825'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node: this.node,</div><div class='line' id='LC4826'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;context: this.renderContext,</div><div class='line' id='LC4827'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parentView: this.renderer.view</div><div class='line' id='LC4828'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC4829'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4830'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.view.on(&#39;ready&#39;, function() {</div><div class='line' id='LC4831'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.renderer.allowAndFire(&#39;rendered&#39;);</div><div class='line' id='LC4832'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC4833'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.forget();</div><div class='line' id='LC4834'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = this._batman.properties) != null ? _ref.forEach(function(key, property) {</div><div class='line' id='LC4835'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return property.die();</div><div class='line' id='LC4836'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}) : void 0;</div><div class='line' id='LC4837'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4838'><br/></div><div class='line' id='LC4839'>&nbsp;&nbsp;&nbsp;&nbsp;ViewBinding.prototype.die = function() {</div><div class='line' id='LC4840'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.view = null;</div><div class='line' id='LC4841'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ViewBinding.__super__.die.apply(this, arguments);</div><div class='line' id='LC4842'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4843'><br/></div><div class='line' id='LC4844'>&nbsp;&nbsp;&nbsp;&nbsp;return ViewBinding;</div><div class='line' id='LC4845'><br/></div><div class='line' id='LC4846'>&nbsp;&nbsp;})(Batman.DOM.AbstractBinding);</div><div class='line' id='LC4847'><br/></div><div class='line' id='LC4848'>}).call(this);</div><div class='line' id='LC4849'><br/></div><div class='line' id='LC4850'>(function() {</div><div class='line' id='LC4851'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC4852'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC4853'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC4854'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC4855'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4856'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC4857'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC4858'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4859'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC4860'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC4861'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC4862'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC4863'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4864'><br/></div><div class='line' id='LC4865'>&nbsp;&nbsp;Batman.DOM.ViewArgumentBinding = (function(_super) {</div><div class='line' id='LC4866'><br/></div><div class='line' id='LC4867'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(ViewArgumentBinding, _super);</div><div class='line' id='LC4868'><br/></div><div class='line' id='LC4869'>&nbsp;&nbsp;&nbsp;&nbsp;function ViewArgumentBinding() {</div><div class='line' id='LC4870'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ViewArgumentBinding.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC4871'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4872'><br/></div><div class='line' id='LC4873'>&nbsp;&nbsp;&nbsp;&nbsp;ViewArgumentBinding.prototype.onlyObserve = Batman.BindingDefinitionOnlyObserve.None;</div><div class='line' id='LC4874'><br/></div><div class='line' id='LC4875'>&nbsp;&nbsp;&nbsp;&nbsp;return ViewArgumentBinding;</div><div class='line' id='LC4876'><br/></div><div class='line' id='LC4877'>&nbsp;&nbsp;})(Batman.DOM.AbstractBinding);</div><div class='line' id='LC4878'><br/></div><div class='line' id='LC4879'>}).call(this);</div><div class='line' id='LC4880'><br/></div><div class='line' id='LC4881'>(function() {</div><div class='line' id='LC4882'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC4883'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC4884'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC4885'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC4886'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4887'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC4888'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC4889'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4890'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC4891'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC4892'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC4893'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC4894'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4895'><br/></div><div class='line' id='LC4896'>&nbsp;&nbsp;Batman.DOM.ValueBinding = (function(_super) {</div><div class='line' id='LC4897'><br/></div><div class='line' id='LC4898'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(ValueBinding, _super);</div><div class='line' id='LC4899'><br/></div><div class='line' id='LC4900'>&nbsp;&nbsp;&nbsp;&nbsp;function ValueBinding(definition) {</div><div class='line' id='LC4901'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC4902'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.isInputBinding = (_ref = definition.node.nodeName.toLowerCase()) === &#39;input&#39; || _ref === &#39;textarea&#39;;</div><div class='line' id='LC4903'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ValueBinding.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC4904'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4905'><br/></div><div class='line' id='LC4906'>&nbsp;&nbsp;&nbsp;&nbsp;ValueBinding.prototype.nodeChange = function(node, context) {</div><div class='line' id='LC4907'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.isTwoWay()) {</div><div class='line' id='LC4908'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.set(&#39;filteredValue&#39;, this.node.value);</div><div class='line' id='LC4909'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4910'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4911'><br/></div><div class='line' id='LC4912'>&nbsp;&nbsp;&nbsp;&nbsp;ValueBinding.prototype.dataChange = function(value, node) {</div><div class='line' id='LC4913'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.valueForNode(this.node, value, this.escapeValue);</div><div class='line' id='LC4914'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4915'><br/></div><div class='line' id='LC4916'>&nbsp;&nbsp;&nbsp;&nbsp;return ValueBinding;</div><div class='line' id='LC4917'><br/></div><div class='line' id='LC4918'>&nbsp;&nbsp;})(Batman.DOM.AbstractBinding);</div><div class='line' id='LC4919'><br/></div><div class='line' id='LC4920'>}).call(this);</div><div class='line' id='LC4921'><br/></div><div class='line' id='LC4922'>(function() {</div><div class='line' id='LC4923'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC4924'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC4925'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC4926'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC4927'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4928'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC4929'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC4930'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4931'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC4932'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC4933'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC4934'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC4935'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4936'><br/></div><div class='line' id='LC4937'>&nbsp;&nbsp;Batman.DOM.ShowHideBinding = (function(_super) {</div><div class='line' id='LC4938'><br/></div><div class='line' id='LC4939'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(ShowHideBinding, _super);</div><div class='line' id='LC4940'><br/></div><div class='line' id='LC4941'>&nbsp;&nbsp;&nbsp;&nbsp;ShowHideBinding.prototype.onlyObserve = Batman.BindingDefinitionOnlyObserve.Data;</div><div class='line' id='LC4942'><br/></div><div class='line' id='LC4943'>&nbsp;&nbsp;&nbsp;&nbsp;function ShowHideBinding(definition) {</div><div class='line' id='LC4944'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var display;</div><div class='line' id='LC4945'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;display = definition.node.style.display;</div><div class='line' id='LC4946'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!display || display === &#39;none&#39;) {</div><div class='line' id='LC4947'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;display = &#39;&#39;;</div><div class='line' id='LC4948'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4949'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.originalDisplay = display;</div><div class='line' id='LC4950'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.invert = definition.invert;</div><div class='line' id='LC4951'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ShowHideBinding.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC4952'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4953'><br/></div><div class='line' id='LC4954'>&nbsp;&nbsp;&nbsp;&nbsp;ShowHideBinding.prototype.dataChange = function(value) {</div><div class='line' id='LC4955'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var hide, view, _ref;</div><div class='line' id='LC4956'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;view = Batman._data(this.node, &#39;view&#39;);</div><div class='line' id='LC4957'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( !! value === !this.invert) {</div><div class='line' id='LC4958'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (view != null) {</div><div class='line' id='LC4959'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;view.fire(&#39;beforeAppear&#39;, this.node);</div><div class='line' id='LC4960'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4961'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = Batman.data(this.node, &#39;show&#39;)) != null) {</div><div class='line' id='LC4962'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref.call(this.node);</div><div class='line' id='LC4963'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4964'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.node.style.display = this.originalDisplay;</div><div class='line' id='LC4965'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return view != null ? view.fire(&#39;appear&#39;, this.node) : void 0;</div><div class='line' id='LC4966'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC4967'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (view != null) {</div><div class='line' id='LC4968'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;view.fire(&#39;beforeDisappear&#39;, this.node);</div><div class='line' id='LC4969'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4970'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof(hide = Batman.data(this.node, &#39;hide&#39;)) === &#39;function&#39;) {</div><div class='line' id='LC4971'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hide.call(this.node);</div><div class='line' id='LC4972'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC4973'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.setStyleProperty(this.node, &#39;display&#39;, &#39;none&#39;, &#39;important&#39;);</div><div class='line' id='LC4974'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4975'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return view != null ? view.fire(&#39;disappear&#39;, this.node) : void 0;</div><div class='line' id='LC4976'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4977'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4978'><br/></div><div class='line' id='LC4979'>&nbsp;&nbsp;&nbsp;&nbsp;return ShowHideBinding;</div><div class='line' id='LC4980'><br/></div><div class='line' id='LC4981'>&nbsp;&nbsp;})(Batman.DOM.AbstractBinding);</div><div class='line' id='LC4982'><br/></div><div class='line' id='LC4983'>}).call(this);</div><div class='line' id='LC4984'><br/></div><div class='line' id='LC4985'>(function() {</div><div class='line' id='LC4986'>&nbsp;&nbsp;var __bind = function(fn, me) {</div><div class='line' id='LC4987'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function() {</div><div class='line' id='LC4988'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return fn.apply(me, arguments);</div><div class='line' id='LC4989'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC4990'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC4991'>&nbsp;&nbsp;&nbsp;&nbsp;__hasProp = {}.hasOwnProperty,</div><div class='line' id='LC4992'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC4993'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC4994'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC4995'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4996'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC4997'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC4998'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC4999'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC5000'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC5001'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC5002'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC5003'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5004'><br/></div><div class='line' id='LC5005'>&nbsp;&nbsp;Batman.DOM.SelectBinding = (function(_super) {</div><div class='line' id='LC5006'><br/></div><div class='line' id='LC5007'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(SelectBinding, _super);</div><div class='line' id='LC5008'><br/></div><div class='line' id='LC5009'>&nbsp;&nbsp;&nbsp;&nbsp;SelectBinding.prototype.isInputBinding = true;</div><div class='line' id='LC5010'><br/></div><div class='line' id='LC5011'>&nbsp;&nbsp;&nbsp;&nbsp;SelectBinding.prototype.canSetImplicitly = true;</div><div class='line' id='LC5012'><br/></div><div class='line' id='LC5013'>&nbsp;&nbsp;&nbsp;&nbsp;function SelectBinding() {</div><div class='line' id='LC5014'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.updateOptionBindings = __bind(this.updateOptionBindings, this);</div><div class='line' id='LC5015'><br/></div><div class='line' id='LC5016'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.nodeChange = __bind(this.nodeChange, this);</div><div class='line' id='LC5017'><br/></div><div class='line' id='LC5018'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.dataChange = __bind(this.dataChange, this);</div><div class='line' id='LC5019'><br/></div><div class='line' id='LC5020'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.childBindingAdded = __bind(this.childBindingAdded, this);</div><div class='line' id='LC5021'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.selectedBindings = new Batman.SimpleSet;</div><div class='line' id='LC5022'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SelectBinding.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC5023'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5024'><br/></div><div class='line' id='LC5025'>&nbsp;&nbsp;&nbsp;&nbsp;SelectBinding.prototype.childBindingAdded = function(binding) {</div><div class='line' id='LC5026'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var dataChangeHandler, _this = this;</div><div class='line' id='LC5027'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (binding instanceof Batman.DOM.CheckedBinding) {</div><div class='line' id='LC5028'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binding.on(&#39;dataChange&#39;, dataChangeHandler = function() {</div><div class='line' id='LC5029'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.nodeChange();</div><div class='line' id='LC5030'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC5031'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binding.on(&#39;die&#39;, function() {</div><div class='line' id='LC5032'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binding.forget(&#39;dataChange&#39;, dataChangeHandler);</div><div class='line' id='LC5033'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.selectedBindings.remove(binding);</div><div class='line' id='LC5034'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC5035'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.selectedBindings.add(binding);</div><div class='line' id='LC5036'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (binding instanceof Batman.DOM.IteratorBinding) {</div><div class='line' id='LC5037'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binding.on(&#39;nodeAdded&#39;, dataChangeHandler = function() {</div><div class='line' id='LC5038'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this._fireDataChange(_this.get(&#39;filteredValue&#39;));</div><div class='line' id='LC5039'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC5040'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binding.on(&#39;nodeRemoved&#39;, dataChangeHandler);</div><div class='line' id='LC5041'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binding.on(&#39;die&#39;, function() {</div><div class='line' id='LC5042'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binding.forget(&#39;nodeAdded&#39;, dataChangeHandler);</div><div class='line' id='LC5043'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return binding.forget(&#39;nodeRemoved&#39;, dataChangeHandler);</div><div class='line' id='LC5044'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC5045'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC5046'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC5047'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5048'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._fireDataChange(this.get(&#39;filteredValue&#39;));</div><div class='line' id='LC5049'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5050'><br/></div><div class='line' id='LC5051'>&nbsp;&nbsp;&nbsp;&nbsp;SelectBinding.prototype.lastKeyContext = null;</div><div class='line' id='LC5052'><br/></div><div class='line' id='LC5053'>&nbsp;&nbsp;&nbsp;&nbsp;SelectBinding.prototype.dataChange = function(newValue) {</div><div class='line' id='LC5054'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var child, matches, valueToChild, _i, _len, _name, _ref, _this = this;</div><div class='line' id='LC5055'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.lastKeyContext || (this.lastKeyContext = this.get(&#39;keyContext&#39;));</div><div class='line' id='LC5056'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.lastKeyContext !== this.get(&#39;keyContext&#39;)) {</div><div class='line' id='LC5057'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.canSetImplicitly = true;</div><div class='line' id='LC5058'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.lastKeyContext = this.get(&#39;keyContext&#39;);</div><div class='line' id='LC5059'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5060'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (newValue != null ? newValue.forEach : void 0) {</div><div class='line' id='LC5061'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;valueToChild = {};</div><div class='line' id='LC5062'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this.node.children;</div><div class='line' id='LC5063'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC5064'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child = _ref[_i];</div><div class='line' id='LC5065'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.selected = false;</div><div class='line' id='LC5066'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;matches = valueToChild[_name = child.value] || (valueToChild[_name] = []);</div><div class='line' id='LC5067'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;matches.push(child);</div><div class='line' id='LC5068'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5069'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newValue.forEach(function(value) {</div><div class='line' id='LC5070'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var children, node, _j, _len1, _results;</div><div class='line' id='LC5071'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (children = valueToChild[value]) {</div><div class='line' id='LC5072'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC5073'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_j = 0, _len1 = children.length; _j &lt; _len1; _j++) {</div><div class='line' id='LC5074'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node = children[_j];</div><div class='line' id='LC5075'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(node.selected = true);</div><div class='line' id='LC5076'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5077'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC5078'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5079'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC5080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC5081'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(newValue != null) &amp;&amp; this.canSetImplicitly) {</div><div class='line' id='LC5082'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.node.value) {</div><div class='line' id='LC5083'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.canSetImplicitly = false;</div><div class='line' id='LC5084'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set(&#39;unfilteredValue&#39;, this.node.value);</div><div class='line' id='LC5085'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5086'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC5087'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.canSetImplicitly = false;</div><div class='line' id='LC5088'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.valueForNode(this.node, newValue, this.escapeValue);</div><div class='line' id='LC5089'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5090'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5091'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.updateOptionBindings();</div><div class='line' id='LC5092'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5093'><br/></div><div class='line' id='LC5094'>&nbsp;&nbsp;&nbsp;&nbsp;SelectBinding.prototype.nodeChange = function() {</div><div class='line' id='LC5095'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var c, selections;</div><div class='line' id='LC5096'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.isTwoWay()) {</div><div class='line' id='LC5097'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selections = this.node.multiple ? (function() {</div><div class='line' id='LC5098'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _i, _len, _ref, _results;</div><div class='line' id='LC5099'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this.node.children;</div><div class='line' id='LC5100'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC5101'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC5102'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = _ref[_i];</div><div class='line' id='LC5103'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (c.selected) {</div><div class='line' id='LC5104'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(c.value);</div><div class='line' id='LC5105'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5106'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5107'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC5108'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}).call(this) : this.node.value;</div><div class='line' id='LC5109'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof selections === Array &amp;&amp; selections.length === 1) {</div><div class='line' id='LC5110'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selections = selections[0];</div><div class='line' id='LC5111'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5112'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set(&#39;unfilteredValue&#39;, selections);</div><div class='line' id='LC5113'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.updateOptionBindings();</div><div class='line' id='LC5114'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5115'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5116'><br/></div><div class='line' id='LC5117'>&nbsp;&nbsp;&nbsp;&nbsp;SelectBinding.prototype.updateOptionBindings = function() {</div><div class='line' id='LC5118'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.selectedBindings.forEach(function(binding) {</div><div class='line' id='LC5119'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return binding._fireNodeChange();</div><div class='line' id='LC5120'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC5121'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5122'><br/></div><div class='line' id='LC5123'>&nbsp;&nbsp;&nbsp;&nbsp;return SelectBinding;</div><div class='line' id='LC5124'><br/></div><div class='line' id='LC5125'>&nbsp;&nbsp;})(Batman.DOM.AbstractBinding);</div><div class='line' id='LC5126'><br/></div><div class='line' id='LC5127'>}).call(this);</div><div class='line' id='LC5128'><br/></div><div class='line' id='LC5129'>(function() {</div><div class='line' id='LC5130'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC5131'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC5132'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC5133'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC5134'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5135'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC5136'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC5137'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5138'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC5139'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC5140'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC5141'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC5142'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5143'><br/></div><div class='line' id='LC5144'>&nbsp;&nbsp;Batman.DOM.RouteBinding = (function(_super) {</div><div class='line' id='LC5145'><br/></div><div class='line' id='LC5146'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(RouteBinding, _super);</div><div class='line' id='LC5147'><br/></div><div class='line' id='LC5148'>&nbsp;&nbsp;&nbsp;&nbsp;function RouteBinding() {</div><div class='line' id='LC5149'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return RouteBinding.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC5150'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5151'><br/></div><div class='line' id='LC5152'>&nbsp;&nbsp;&nbsp;&nbsp;RouteBinding.prototype.onAnchorTag = false;</div><div class='line' id='LC5153'><br/></div><div class='line' id='LC5154'>&nbsp;&nbsp;&nbsp;&nbsp;RouteBinding.prototype.onlyObserve = Batman.BindingDefinitionOnlyObserve.Data;</div><div class='line' id='LC5155'><br/></div><div class='line' id='LC5156'>&nbsp;&nbsp;&nbsp;&nbsp;RouteBinding.accessor(&#39;dispatcher&#39;, function() {</div><div class='line' id='LC5157'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.renderContext.get(&#39;dispatcher&#39;) || Batman.App.get(&#39;current.dispatcher&#39;);</div><div class='line' id='LC5158'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC5159'><br/></div><div class='line' id='LC5160'>&nbsp;&nbsp;&nbsp;&nbsp;RouteBinding.prototype.bind = function() {</div><div class='line' id='LC5161'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC5162'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.node.nodeName.toUpperCase() === &#39;A&#39;) {</div><div class='line' id='LC5163'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.onAnchorTag = true;</div><div class='line' id='LC5164'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5165'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RouteBinding.__super__.bind.apply(this, arguments);</div><div class='line' id='LC5166'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.events.click(this.node, function(node, event) {</div><div class='line' id='LC5167'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var params;</div><div class='line' id='LC5168'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (event.__batmanActionTaken) {</div><div class='line' id='LC5169'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC5170'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5171'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.__batmanActionTaken = true;</div><div class='line' id='LC5172'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params = _this.pathFromValue(_this.get(&#39;filteredValue&#39;));</div><div class='line' id='LC5173'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (params != null) {</div><div class='line' id='LC5174'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.redirect(params);</div><div class='line' id='LC5175'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5176'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC5177'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5178'><br/></div><div class='line' id='LC5179'>&nbsp;&nbsp;&nbsp;&nbsp;RouteBinding.prototype.dataChange = function(value) {</div><div class='line' id='LC5180'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var path;</div><div class='line' id='LC5181'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value) {</div><div class='line' id='LC5182'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path = this.pathFromValue(value);</div><div class='line' id='LC5183'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5184'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.onAnchorTag) {</div><div class='line' id='LC5185'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (path &amp;&amp; Batman.navigator) {</div><div class='line' id='LC5186'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path = Batman.navigator.linkTo(path);</div><div class='line' id='LC5187'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC5188'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path = &quot;#&quot;;</div><div class='line' id='LC5189'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5190'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.node.href = path;</div><div class='line' id='LC5191'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5192'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5193'><br/></div><div class='line' id='LC5194'>&nbsp;&nbsp;&nbsp;&nbsp;RouteBinding.prototype.pathFromValue = function(value) {</div><div class='line' id='LC5195'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC5196'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value) {</div><div class='line' id='LC5197'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value.isNamedRouteQuery) {</div><div class='line' id='LC5198'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value.get(&#39;path&#39;);</div><div class='line' id='LC5199'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC5200'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = this.get(&#39;dispatcher&#39;)) != null ? _ref.pathFromParams(value) : void 0;</div><div class='line' id='LC5201'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5202'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5203'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5204'><br/></div><div class='line' id='LC5205'>&nbsp;&nbsp;&nbsp;&nbsp;return RouteBinding;</div><div class='line' id='LC5206'><br/></div><div class='line' id='LC5207'>&nbsp;&nbsp;})(Batman.DOM.AbstractBinding);</div><div class='line' id='LC5208'><br/></div><div class='line' id='LC5209'>}).call(this);</div><div class='line' id='LC5210'><br/></div><div class='line' id='LC5211'>(function() {</div><div class='line' id='LC5212'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC5213'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC5214'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC5215'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC5216'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5217'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC5218'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC5219'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5220'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC5221'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC5222'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC5223'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC5224'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5225'><br/></div><div class='line' id='LC5226'>&nbsp;&nbsp;Batman.DOM.RadioBinding = (function(_super) {</div><div class='line' id='LC5227'><br/></div><div class='line' id='LC5228'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(RadioBinding, _super);</div><div class='line' id='LC5229'><br/></div><div class='line' id='LC5230'>&nbsp;&nbsp;&nbsp;&nbsp;function RadioBinding() {</div><div class='line' id='LC5231'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return RadioBinding.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC5232'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5233'><br/></div><div class='line' id='LC5234'>&nbsp;&nbsp;&nbsp;&nbsp;RadioBinding.accessor(&#39;parsedNodeValue&#39;, function() {</div><div class='line' id='LC5235'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.attrReaders._parseAttribute(this.node.value);</div><div class='line' id='LC5236'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC5237'><br/></div><div class='line' id='LC5238'>&nbsp;&nbsp;&nbsp;&nbsp;RadioBinding.prototype.firstBind = true;</div><div class='line' id='LC5239'><br/></div><div class='line' id='LC5240'>&nbsp;&nbsp;&nbsp;&nbsp;RadioBinding.prototype.dataChange = function(value) {</div><div class='line' id='LC5241'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var boundValue;</div><div class='line' id='LC5242'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boundValue = this.get(&#39;filteredValue&#39;);</div><div class='line' id='LC5243'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (boundValue != null) {</div><div class='line' id='LC5244'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.node.checked = boundValue === Batman.DOM.attrReaders._parseAttribute(this.node.value);</div><div class='line' id='LC5245'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC5246'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.firstBind &amp;&amp; this.node.checked) {</div><div class='line' id='LC5247'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set(&#39;filteredValue&#39;, this.get(&#39;parsedNodeValue&#39;));</div><div class='line' id='LC5248'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5249'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5250'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.firstBind = false;</div><div class='line' id='LC5251'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5252'><br/></div><div class='line' id='LC5253'>&nbsp;&nbsp;&nbsp;&nbsp;RadioBinding.prototype.nodeChange = function(node) {</div><div class='line' id='LC5254'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.isTwoWay()) {</div><div class='line' id='LC5255'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.set(&#39;filteredValue&#39;, this.get(&#39;parsedNodeValue&#39;));</div><div class='line' id='LC5256'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5257'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5258'><br/></div><div class='line' id='LC5259'>&nbsp;&nbsp;&nbsp;&nbsp;return RadioBinding;</div><div class='line' id='LC5260'><br/></div><div class='line' id='LC5261'>&nbsp;&nbsp;})(Batman.DOM.AbstractBinding);</div><div class='line' id='LC5262'><br/></div><div class='line' id='LC5263'>}).call(this);</div><div class='line' id='LC5264'><br/></div><div class='line' id='LC5265'>(function() {</div><div class='line' id='LC5266'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC5267'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC5268'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC5269'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC5270'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5271'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC5272'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC5273'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5274'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC5275'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC5276'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC5277'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC5278'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5279'><br/></div><div class='line' id='LC5280'>&nbsp;&nbsp;Batman.DOM.MixinBinding = (function(_super) {</div><div class='line' id='LC5281'><br/></div><div class='line' id='LC5282'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(MixinBinding, _super);</div><div class='line' id='LC5283'><br/></div><div class='line' id='LC5284'>&nbsp;&nbsp;&nbsp;&nbsp;function MixinBinding() {</div><div class='line' id='LC5285'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return MixinBinding.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC5286'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5287'><br/></div><div class='line' id='LC5288'>&nbsp;&nbsp;&nbsp;&nbsp;MixinBinding.prototype.onlyObserve = Batman.BindingDefinitionOnlyObserve.Data;</div><div class='line' id='LC5289'><br/></div><div class='line' id='LC5290'>&nbsp;&nbsp;&nbsp;&nbsp;MixinBinding.prototype.dataChange = function(value) {</div><div class='line' id='LC5291'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value != null) {</div><div class='line' id='LC5292'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.mixin(this.node, value);</div><div class='line' id='LC5293'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5294'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5295'><br/></div><div class='line' id='LC5296'>&nbsp;&nbsp;&nbsp;&nbsp;return MixinBinding;</div><div class='line' id='LC5297'><br/></div><div class='line' id='LC5298'>&nbsp;&nbsp;})(Batman.DOM.AbstractBinding);</div><div class='line' id='LC5299'><br/></div><div class='line' id='LC5300'>}).call(this);</div><div class='line' id='LC5301'><br/></div><div class='line' id='LC5302'>(function() {</div><div class='line' id='LC5303'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC5304'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC5305'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC5306'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC5307'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5308'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC5309'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC5310'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5311'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC5312'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC5313'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC5314'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC5315'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5316'><br/></div><div class='line' id='LC5317'>&nbsp;&nbsp;Batman.DOM.FileBinding = (function(_super) {</div><div class='line' id='LC5318'><br/></div><div class='line' id='LC5319'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(FileBinding, _super);</div><div class='line' id='LC5320'><br/></div><div class='line' id='LC5321'>&nbsp;&nbsp;&nbsp;&nbsp;function FileBinding() {</div><div class='line' id='LC5322'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return FileBinding.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC5323'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5324'><br/></div><div class='line' id='LC5325'>&nbsp;&nbsp;&nbsp;&nbsp;FileBinding.prototype.isInputBinding = true;</div><div class='line' id='LC5326'><br/></div><div class='line' id='LC5327'>&nbsp;&nbsp;&nbsp;&nbsp;FileBinding.prototype.nodeChange = function(node, subContext) {</div><div class='line' id='LC5328'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this.isTwoWay()) {</div><div class='line' id='LC5329'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC5330'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5331'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (node.hasAttribute(&#39;multiple&#39;)) {</div><div class='line' id='LC5332'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.set(&#39;filteredValue&#39;, Array.prototype.slice.call(node.files));</div><div class='line' id='LC5333'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC5334'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.set(&#39;filteredValue&#39;, node.files[0]);</div><div class='line' id='LC5335'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5336'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5337'><br/></div><div class='line' id='LC5338'>&nbsp;&nbsp;&nbsp;&nbsp;return FileBinding;</div><div class='line' id='LC5339'><br/></div><div class='line' id='LC5340'>&nbsp;&nbsp;})(Batman.DOM.AbstractBinding);</div><div class='line' id='LC5341'><br/></div><div class='line' id='LC5342'>}).call(this);</div><div class='line' id='LC5343'><br/></div><div class='line' id='LC5344'>(function() {</div><div class='line' id='LC5345'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC5346'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC5347'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC5348'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC5349'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5350'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC5351'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC5352'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5353'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC5354'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC5355'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC5356'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC5357'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5358'><br/></div><div class='line' id='LC5359'>&nbsp;&nbsp;Batman.DOM.DeferredRenderingBinding = (function(_super) {</div><div class='line' id='LC5360'><br/></div><div class='line' id='LC5361'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(DeferredRenderingBinding, _super);</div><div class='line' id='LC5362'><br/></div><div class='line' id='LC5363'>&nbsp;&nbsp;&nbsp;&nbsp;DeferredRenderingBinding.prototype.rendered = false;</div><div class='line' id='LC5364'><br/></div><div class='line' id='LC5365'>&nbsp;&nbsp;&nbsp;&nbsp;DeferredRenderingBinding.prototype.skipChildren = true;</div><div class='line' id='LC5366'><br/></div><div class='line' id='LC5367'>&nbsp;&nbsp;&nbsp;&nbsp;function DeferredRenderingBinding() {</div><div class='line' id='LC5368'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DeferredRenderingBinding.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC5369'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.node.removeAttribute(&quot;data-renderif&quot;);</div><div class='line' id='LC5370'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5371'><br/></div><div class='line' id='LC5372'>&nbsp;&nbsp;&nbsp;&nbsp;DeferredRenderingBinding.prototype.nodeChange = function() {};</div><div class='line' id='LC5373'><br/></div><div class='line' id='LC5374'>&nbsp;&nbsp;&nbsp;&nbsp;DeferredRenderingBinding.prototype.dataChange = function(value) {</div><div class='line' id='LC5375'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value &amp;&amp; !this.rendered) {</div><div class='line' id='LC5376'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.render();</div><div class='line' id='LC5377'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5378'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5379'><br/></div><div class='line' id='LC5380'>&nbsp;&nbsp;&nbsp;&nbsp;DeferredRenderingBinding.prototype.render = function() {</div><div class='line' id='LC5381'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new Batman.Renderer(this.node, this.renderContext, this.renderer.view);</div><div class='line' id='LC5382'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.rendered = true;</div><div class='line' id='LC5383'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5384'><br/></div><div class='line' id='LC5385'>&nbsp;&nbsp;&nbsp;&nbsp;return DeferredRenderingBinding;</div><div class='line' id='LC5386'><br/></div><div class='line' id='LC5387'>&nbsp;&nbsp;})(Batman.DOM.AbstractBinding);</div><div class='line' id='LC5388'><br/></div><div class='line' id='LC5389'>}).call(this);</div><div class='line' id='LC5390'><br/></div><div class='line' id='LC5391'>(function() {</div><div class='line' id='LC5392'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC5393'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC5394'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC5395'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC5396'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5397'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC5398'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC5399'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5400'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC5401'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC5402'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC5403'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC5404'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5405'><br/></div><div class='line' id='LC5406'>&nbsp;&nbsp;Batman.DOM.AbstractAttributeBinding = (function(_super) {</div><div class='line' id='LC5407'><br/></div><div class='line' id='LC5408'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(AbstractAttributeBinding, _super);</div><div class='line' id='LC5409'><br/></div><div class='line' id='LC5410'>&nbsp;&nbsp;&nbsp;&nbsp;function AbstractAttributeBinding(definition) {</div><div class='line' id='LC5411'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.attributeName = definition.attr;</div><div class='line' id='LC5412'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AbstractAttributeBinding.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC5413'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5414'><br/></div><div class='line' id='LC5415'>&nbsp;&nbsp;&nbsp;&nbsp;return AbstractAttributeBinding;</div><div class='line' id='LC5416'><br/></div><div class='line' id='LC5417'>&nbsp;&nbsp;})(Batman.DOM.AbstractBinding);</div><div class='line' id='LC5418'><br/></div><div class='line' id='LC5419'>}).call(this);</div><div class='line' id='LC5420'><br/></div><div class='line' id='LC5421'>(function() {</div><div class='line' id='LC5422'>&nbsp;&nbsp;var __bind = function(fn, me) {</div><div class='line' id='LC5423'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function() {</div><div class='line' id='LC5424'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return fn.apply(me, arguments);</div><div class='line' id='LC5425'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5426'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC5427'>&nbsp;&nbsp;&nbsp;&nbsp;__hasProp = {}.hasOwnProperty,</div><div class='line' id='LC5428'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC5429'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC5430'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC5431'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5432'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC5433'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC5434'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5435'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC5436'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC5437'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC5438'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC5439'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5440'><br/></div><div class='line' id='LC5441'>&nbsp;&nbsp;Batman.DOM.FormBinding = (function(_super) {</div><div class='line' id='LC5442'><br/></div><div class='line' id='LC5443'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(FormBinding, _super);</div><div class='line' id='LC5444'><br/></div><div class='line' id='LC5445'>&nbsp;&nbsp;&nbsp;&nbsp;FormBinding.current = null;</div><div class='line' id='LC5446'><br/></div><div class='line' id='LC5447'>&nbsp;&nbsp;&nbsp;&nbsp;FormBinding.prototype.errorClass = &#39;error&#39;;</div><div class='line' id='LC5448'><br/></div><div class='line' id='LC5449'>&nbsp;&nbsp;&nbsp;&nbsp;FormBinding.prototype.defaultErrorsListSelector = &#39;div.errors&#39;;</div><div class='line' id='LC5450'><br/></div><div class='line' id='LC5451'>&nbsp;&nbsp;&nbsp;&nbsp;FormBinding.prototype.onlyObserve = Batman.BindingDefinitionOnlyObserve.None;</div><div class='line' id='LC5452'><br/></div><div class='line' id='LC5453'>&nbsp;&nbsp;&nbsp;&nbsp;FormBinding.accessor(&#39;errorsListSelector&#39;, function() {</div><div class='line' id='LC5454'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&#39;node&#39;).getAttribute(&#39;data-errors-list&#39;) || this.defaultErrorsListSelector;</div><div class='line' id='LC5455'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC5456'><br/></div><div class='line' id='LC5457'>&nbsp;&nbsp;&nbsp;&nbsp;function FormBinding() {</div><div class='line' id='LC5458'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.childBindingAdded = __bind(this.childBindingAdded, this);</div><div class='line' id='LC5459'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FormBinding.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC5460'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.contextName = this.attributeName;</div><div class='line' id='LC5461'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete this.attributeName;</div><div class='line' id='LC5462'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.events.submit(this.get(&#39;node&#39;), function(node, e) {</div><div class='line' id='LC5463'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.preventDefault(e);</div><div class='line' id='LC5464'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC5465'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.setupErrorsList();</div><div class='line' id='LC5466'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5467'><br/></div><div class='line' id='LC5468'>&nbsp;&nbsp;&nbsp;&nbsp;FormBinding.prototype.childBindingAdded = function(binding) {</div><div class='line' id='LC5469'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var definition, field, index, node;</div><div class='line' id='LC5470'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (binding.isInputBinding &amp;&amp; Batman.isChildOf(this.get(&#39;node&#39;), binding.get(&#39;node&#39;))) {</div><div class='line' id='LC5471'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (~ (index = binding.get(&#39;key&#39;).indexOf(this.contextName))) {</div><div class='line' id='LC5472'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node = binding.get(&#39;node&#39;);</div><div class='line' id='LC5473'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;field = binding.get(&#39;key&#39;).slice(index + this.contextName.length + 1);</div><div class='line' id='LC5474'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;definition = new Batman.DOM.AttrReaderBindingDefinition(node, this.errorClass, this.get(&#39;keyPath&#39;) + (&quot; | get &#39;errors.&quot; + field + &quot;.length&#39;&quot;), this.renderContext, this.renderer);</div><div class='line' id='LC5475'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.DOM.AddClassBinding(definition);</div><div class='line' id='LC5476'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5477'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5478'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5479'><br/></div><div class='line' id='LC5480'>&nbsp;&nbsp;&nbsp;&nbsp;FormBinding.prototype.setupErrorsList = function() {</div><div class='line' id='LC5481'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.errorsListNode = Batman.DOM.querySelector(this.get(&#39;node&#39;), this.get(&#39;errorsListSelector&#39;))) {</div><div class='line' id='LC5482'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.setInnerHTML(this.errorsListNode, this.errorsListHTML());</div><div class='line' id='LC5483'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this.errorsListNode.getAttribute(&#39;data-showif&#39;)) {</div><div class='line' id='LC5484'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.errorsListNode.setAttribute(&#39;data-showif&#39;, &quot;&quot; + this.contextName + &quot;.errors.length&quot;);</div><div class='line' id='LC5485'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5486'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5487'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5488'><br/></div><div class='line' id='LC5489'>&nbsp;&nbsp;&nbsp;&nbsp;FormBinding.prototype.errorsListHTML = function() {</div><div class='line' id='LC5490'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;&lt;ul&gt;\n  &lt;li data-foreach-error=\&quot;&quot; + this.contextName + &quot;.errors\&quot; data-bind=\&quot;error.fullMessage\&quot;&gt;&lt;/li&gt;\n&lt;/ul&gt;&quot;;</div><div class='line' id='LC5491'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5492'><br/></div><div class='line' id='LC5493'>&nbsp;&nbsp;&nbsp;&nbsp;return FormBinding;</div><div class='line' id='LC5494'><br/></div><div class='line' id='LC5495'>&nbsp;&nbsp;})(Batman.DOM.AbstractAttributeBinding);</div><div class='line' id='LC5496'><br/></div><div class='line' id='LC5497'>}).call(this);</div><div class='line' id='LC5498'><br/></div><div class='line' id='LC5499'>(function() {</div><div class='line' id='LC5500'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC5501'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC5502'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC5503'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC5504'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5505'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC5506'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC5507'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5508'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC5509'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC5510'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC5511'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC5512'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5513'><br/></div><div class='line' id='LC5514'>&nbsp;&nbsp;Batman.DOM.EventBinding = (function(_super) {</div><div class='line' id='LC5515'><br/></div><div class='line' id='LC5516'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(EventBinding, _super);</div><div class='line' id='LC5517'><br/></div><div class='line' id='LC5518'>&nbsp;&nbsp;&nbsp;&nbsp;EventBinding.prototype.onlyObserve = Batman.BindingDefinitionOnlyObserve.None;</div><div class='line' id='LC5519'><br/></div><div class='line' id='LC5520'>&nbsp;&nbsp;&nbsp;&nbsp;function EventBinding() {</div><div class='line' id='LC5521'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var attacher, callback, confirmText, _this = this;</div><div class='line' id='LC5522'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EventBinding.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC5523'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (confirmText = this.node.getAttribute(&#39;data-confirm&#39;)) {</div><div class='line' id='LC5524'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer.deprecated(&quot;data-confirm&quot;);</div><div class='line' id='LC5525'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5526'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback = function() {</div><div class='line' id='LC5527'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC5528'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (confirmText &amp;&amp; !confirm(confirmText)) {</div><div class='line' id='LC5529'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC5530'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5531'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = _this.get(&#39;filteredValue&#39;)) != null ? _ref.apply(_this.get(&#39;callbackContext&#39;), arguments) : void 0;</div><div class='line' id='LC5532'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5533'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (attacher = Batman.DOM.events[this.attributeName]) {</div><div class='line' id='LC5534'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attacher(this.node, callback, this.renderContext);</div><div class='line' id='LC5535'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC5536'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.events.other(this.node, this.attributeName, callback, this.renderContext);</div><div class='line' id='LC5537'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5538'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5539'><br/></div><div class='line' id='LC5540'>&nbsp;&nbsp;&nbsp;&nbsp;EventBinding.accessor(&#39;callbackContext&#39;, function() {</div><div class='line' id='LC5541'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var contextKeySegments;</div><div class='line' id='LC5542'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;contextKeySegments = this.key.split(&#39;.&#39;);</div><div class='line' id='LC5543'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;contextKeySegments.pop();</div><div class='line' id='LC5544'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (contextKeySegments.length &gt; 0) {</div><div class='line' id='LC5545'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&#39;keyContext&#39;).get(contextKeySegments.join(&#39;.&#39;));</div><div class='line' id='LC5546'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC5547'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&#39;keyContext&#39;);</div><div class='line' id='LC5548'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5549'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC5550'><br/></div><div class='line' id='LC5551'>&nbsp;&nbsp;&nbsp;&nbsp;EventBinding.wrapAccessor(&#39;unfilteredValue&#39;, function(core) {</div><div class='line' id='LC5552'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return {</div><div class='line' id='LC5553'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function() {</div><div class='line' id='LC5554'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var functionKey, k, keyContext, keys;</div><div class='line' id='LC5555'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (k = this.get(&#39;key&#39;)) {</div><div class='line' id='LC5556'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keys = k.split(&#39;.&#39;);</div><div class='line' id='LC5557'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (keys.length &gt; 1) {</div><div class='line' id='LC5558'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;functionKey = keys.pop();</div><div class='line' id='LC5559'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keyContext = Batman.getPath(this, [&#39;keyContext&#39;].concat(keys));</div><div class='line' id='LC5560'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keyContext = Batman.RenderContext.deProxy(keyContext);</div><div class='line' id='LC5561'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (keyContext != null) {</div><div class='line' id='LC5562'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return keyContext[functionKey];</div><div class='line' id='LC5563'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5564'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5565'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5566'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return core.get.apply(this, arguments);</div><div class='line' id='LC5567'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5568'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5569'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC5570'><br/></div><div class='line' id='LC5571'>&nbsp;&nbsp;&nbsp;&nbsp;return EventBinding;</div><div class='line' id='LC5572'><br/></div><div class='line' id='LC5573'>&nbsp;&nbsp;})(Batman.DOM.AbstractAttributeBinding);</div><div class='line' id='LC5574'><br/></div><div class='line' id='LC5575'>}).call(this);</div><div class='line' id='LC5576'><br/></div><div class='line' id='LC5577'>(function() {</div><div class='line' id='LC5578'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC5579'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC5580'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC5581'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC5582'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5583'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC5584'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC5585'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5586'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC5587'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC5588'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC5589'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC5590'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5591'><br/></div><div class='line' id='LC5592'>&nbsp;&nbsp;Batman.DOM.NodeAttributeBinding = (function(_super) {</div><div class='line' id='LC5593'><br/></div><div class='line' id='LC5594'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(NodeAttributeBinding, _super);</div><div class='line' id='LC5595'><br/></div><div class='line' id='LC5596'>&nbsp;&nbsp;&nbsp;&nbsp;function NodeAttributeBinding() {</div><div class='line' id='LC5597'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return NodeAttributeBinding.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC5598'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5599'><br/></div><div class='line' id='LC5600'>&nbsp;&nbsp;&nbsp;&nbsp;NodeAttributeBinding.prototype.dataChange = function(value) {</div><div class='line' id='LC5601'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value == null) {</div><div class='line' id='LC5602'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = &quot;&quot;;</div><div class='line' id='LC5603'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5604'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.node[this.attributeName] = value;</div><div class='line' id='LC5605'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5606'><br/></div><div class='line' id='LC5607'>&nbsp;&nbsp;&nbsp;&nbsp;NodeAttributeBinding.prototype.nodeChange = function(node) {</div><div class='line' id='LC5608'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.isTwoWay()) {</div><div class='line' id='LC5609'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.set(&#39;filteredValue&#39;, Batman.DOM.attrReaders._parseAttribute(node[this.attributeName]));</div><div class='line' id='LC5610'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5611'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5612'><br/></div><div class='line' id='LC5613'>&nbsp;&nbsp;&nbsp;&nbsp;return NodeAttributeBinding;</div><div class='line' id='LC5614'><br/></div><div class='line' id='LC5615'>&nbsp;&nbsp;})(Batman.DOM.AbstractAttributeBinding);</div><div class='line' id='LC5616'><br/></div><div class='line' id='LC5617'>}).call(this);</div><div class='line' id='LC5618'><br/></div><div class='line' id='LC5619'>(function() {</div><div class='line' id='LC5620'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC5621'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC5622'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC5623'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC5624'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5625'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC5626'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC5627'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5628'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC5629'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC5630'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC5631'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC5632'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5633'><br/></div><div class='line' id='LC5634'>&nbsp;&nbsp;Batman.DOM.CheckedBinding = (function(_super) {</div><div class='line' id='LC5635'><br/></div><div class='line' id='LC5636'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(CheckedBinding, _super);</div><div class='line' id='LC5637'><br/></div><div class='line' id='LC5638'>&nbsp;&nbsp;&nbsp;&nbsp;function CheckedBinding() {</div><div class='line' id='LC5639'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return CheckedBinding.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC5640'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5641'><br/></div><div class='line' id='LC5642'>&nbsp;&nbsp;&nbsp;&nbsp;CheckedBinding.prototype.isInputBinding = true;</div><div class='line' id='LC5643'><br/></div><div class='line' id='LC5644'>&nbsp;&nbsp;&nbsp;&nbsp;CheckedBinding.prototype.dataChange = function(value) {</div><div class='line' id='LC5645'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.node[this.attributeName] = !! value;</div><div class='line' id='LC5646'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5647'><br/></div><div class='line' id='LC5648'>&nbsp;&nbsp;&nbsp;&nbsp;return CheckedBinding;</div><div class='line' id='LC5649'><br/></div><div class='line' id='LC5650'>&nbsp;&nbsp;})(Batman.DOM.NodeAttributeBinding);</div><div class='line' id='LC5651'><br/></div><div class='line' id='LC5652'>}).call(this);</div><div class='line' id='LC5653'><br/></div><div class='line' id='LC5654'>(function() {</div><div class='line' id='LC5655'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC5656'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC5657'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC5658'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC5659'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5660'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC5661'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC5662'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5663'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC5664'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC5665'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC5666'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC5667'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5668'><br/></div><div class='line' id='LC5669'>&nbsp;&nbsp;Batman.DOM.AttributeBinding = (function(_super) {</div><div class='line' id='LC5670'><br/></div><div class='line' id='LC5671'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(AttributeBinding, _super);</div><div class='line' id='LC5672'><br/></div><div class='line' id='LC5673'>&nbsp;&nbsp;&nbsp;&nbsp;function AttributeBinding() {</div><div class='line' id='LC5674'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return AttributeBinding.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC5675'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5676'><br/></div><div class='line' id='LC5677'>&nbsp;&nbsp;&nbsp;&nbsp;AttributeBinding.prototype.onlyObserve = Batman.BindingDefinitionOnlyObserve.Data;</div><div class='line' id='LC5678'><br/></div><div class='line' id='LC5679'>&nbsp;&nbsp;&nbsp;&nbsp;AttributeBinding.prototype.dataChange = function(value) {</div><div class='line' id='LC5680'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.node.setAttribute(this.attributeName, value);</div><div class='line' id='LC5681'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5682'><br/></div><div class='line' id='LC5683'>&nbsp;&nbsp;&nbsp;&nbsp;AttributeBinding.prototype.nodeChange = function(node) {</div><div class='line' id='LC5684'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.isTwoWay()) {</div><div class='line' id='LC5685'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.set(&#39;filteredValue&#39;, Batman.DOM.attrReaders._parseAttribute(node.getAttribute(this.attributeName)));</div><div class='line' id='LC5686'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5687'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5688'><br/></div><div class='line' id='LC5689'>&nbsp;&nbsp;&nbsp;&nbsp;return AttributeBinding;</div><div class='line' id='LC5690'><br/></div><div class='line' id='LC5691'>&nbsp;&nbsp;})(Batman.DOM.AbstractAttributeBinding);</div><div class='line' id='LC5692'><br/></div><div class='line' id='LC5693'>}).call(this);</div><div class='line' id='LC5694'><br/></div><div class='line' id='LC5695'>(function() {</div><div class='line' id='LC5696'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC5697'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC5698'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC5699'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC5700'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5701'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC5702'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC5703'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5704'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC5705'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC5706'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC5707'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC5708'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5709'><br/></div><div class='line' id='LC5710'>&nbsp;&nbsp;Batman.DOM.AddClassBinding = (function(_super) {</div><div class='line' id='LC5711'><br/></div><div class='line' id='LC5712'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(AddClassBinding, _super);</div><div class='line' id='LC5713'><br/></div><div class='line' id='LC5714'>&nbsp;&nbsp;&nbsp;&nbsp;AddClassBinding.prototype.onlyObserve = Batman.BindingDefinitionOnlyObserve.Data;</div><div class='line' id='LC5715'><br/></div><div class='line' id='LC5716'>&nbsp;&nbsp;&nbsp;&nbsp;function AddClassBinding(definition) {</div><div class='line' id='LC5717'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var name;</div><div class='line' id='LC5718'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.invert = definition.invert;</div><div class='line' id='LC5719'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.classes = (function() {</div><div class='line' id='LC5720'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _i, _len, _ref, _results;</div><div class='line' id='LC5721'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = definition.attr.split(&#39;|&#39;);</div><div class='line' id='LC5722'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC5723'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC5724'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name = _ref[_i];</div><div class='line' id='LC5725'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push({</div><div class='line' id='LC5726'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: name,</div><div class='line' id='LC5727'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pattern: new RegExp(&quot;(?:^|\\s)&quot; + name + &quot;(?:$|\\s)&quot;, &#39;i&#39;)</div><div class='line' id='LC5728'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC5729'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5730'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC5731'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})();</div><div class='line' id='LC5732'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AddClassBinding.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC5733'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5734'><br/></div><div class='line' id='LC5735'>&nbsp;&nbsp;&nbsp;&nbsp;AddClassBinding.prototype.dataChange = function(value) {</div><div class='line' id='LC5736'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var currentName, includesClassName, name, pattern, _i, _len, _ref, _ref1;</div><div class='line' id='LC5737'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;currentName = this.node.className;</div><div class='line' id='LC5738'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this.classes;</div><div class='line' id='LC5739'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC5740'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1 = _ref[_i], name = _ref1.name, pattern = _ref1.pattern;</div><div class='line' id='LC5741'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;includesClassName = pattern.test(currentName);</div><div class='line' id='LC5742'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( !! value === !this.invert) {</div><div class='line' id='LC5743'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!includesClassName) {</div><div class='line' id='LC5744'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.node.className = &quot;&quot; + currentName + &quot; &quot; + name;</div><div class='line' id='LC5745'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5746'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC5747'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (includesClassName) {</div><div class='line' id='LC5748'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.node.className = currentName.replace(pattern, &#39; &#39;);</div><div class='line' id='LC5749'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5750'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5751'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5752'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC5753'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5754'><br/></div><div class='line' id='LC5755'>&nbsp;&nbsp;&nbsp;&nbsp;return AddClassBinding;</div><div class='line' id='LC5756'><br/></div><div class='line' id='LC5757'>&nbsp;&nbsp;})(Batman.DOM.AbstractAttributeBinding);</div><div class='line' id='LC5758'><br/></div><div class='line' id='LC5759'>}).call(this);</div><div class='line' id='LC5760'><br/></div><div class='line' id='LC5761'>(function() {</div><div class='line' id='LC5762'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC5763'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC5764'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC5765'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC5766'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5767'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC5768'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC5769'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5770'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC5771'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC5772'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC5773'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC5774'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5775'><br/></div><div class='line' id='LC5776'>&nbsp;&nbsp;Batman.DOM.AbstractCollectionBinding = (function(_super) {</div><div class='line' id='LC5777'><br/></div><div class='line' id='LC5778'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(AbstractCollectionBinding, _super);</div><div class='line' id='LC5779'><br/></div><div class='line' id='LC5780'>&nbsp;&nbsp;&nbsp;&nbsp;function AbstractCollectionBinding() {</div><div class='line' id='LC5781'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return AbstractCollectionBinding.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC5782'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5783'><br/></div><div class='line' id='LC5784'>&nbsp;&nbsp;&nbsp;&nbsp;AbstractCollectionBinding.prototype.bindCollection = function(newCollection) {</div><div class='line' id='LC5785'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC5786'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (newCollection instanceof Batman.Hash) {</div><div class='line' id='LC5787'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newCollection = newCollection.meta;</div><div class='line' id='LC5788'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5789'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (newCollection === this.collection) {</div><div class='line' id='LC5790'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC5791'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC5792'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.unbindCollection();</div><div class='line' id='LC5793'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.collection = newCollection;</div><div class='line' id='LC5794'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = this.collection) != null ? _ref.isObservable : void 0) {</div><div class='line' id='LC5795'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.collection.observeAndFire(&#39;toArray&#39;, this.handleArrayChanged);</div><div class='line' id='LC5796'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC5797'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5798'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5799'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC5800'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5801'><br/></div><div class='line' id='LC5802'>&nbsp;&nbsp;&nbsp;&nbsp;AbstractCollectionBinding.prototype.unbindCollection = function() {</div><div class='line' id='LC5803'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC5804'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = this.collection) != null ? _ref.isObservable : void 0) {</div><div class='line' id='LC5805'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.collection.forget(&#39;toArray&#39;, this.handleArrayChanged);</div><div class='line' id='LC5806'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5807'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5808'><br/></div><div class='line' id='LC5809'>&nbsp;&nbsp;&nbsp;&nbsp;AbstractCollectionBinding.prototype.handleArrayChanged = function() {};</div><div class='line' id='LC5810'><br/></div><div class='line' id='LC5811'>&nbsp;&nbsp;&nbsp;&nbsp;AbstractCollectionBinding.prototype.die = function() {</div><div class='line' id='LC5812'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.unbindCollection();</div><div class='line' id='LC5813'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return AbstractCollectionBinding.__super__.die.apply(this, arguments);</div><div class='line' id='LC5814'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5815'><br/></div><div class='line' id='LC5816'>&nbsp;&nbsp;&nbsp;&nbsp;return AbstractCollectionBinding;</div><div class='line' id='LC5817'><br/></div><div class='line' id='LC5818'>&nbsp;&nbsp;})(Batman.DOM.AbstractAttributeBinding);</div><div class='line' id='LC5819'><br/></div><div class='line' id='LC5820'>}).call(this);</div><div class='line' id='LC5821'><br/></div><div class='line' id='LC5822'>(function() {</div><div class='line' id='LC5823'>&nbsp;&nbsp;var __bind = function(fn, me) {</div><div class='line' id='LC5824'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function() {</div><div class='line' id='LC5825'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return fn.apply(me, arguments);</div><div class='line' id='LC5826'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5827'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC5828'>&nbsp;&nbsp;&nbsp;&nbsp;__hasProp = {}.hasOwnProperty,</div><div class='line' id='LC5829'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC5830'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC5831'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC5832'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5833'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC5834'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC5835'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5836'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC5837'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC5838'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC5839'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC5840'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC5841'>&nbsp;&nbsp;&nbsp;&nbsp;__slice = [].slice;</div><div class='line' id='LC5842'><br/></div><div class='line' id='LC5843'>&nbsp;&nbsp;Batman.DOM.StyleBinding = (function(_super) {</div><div class='line' id='LC5844'><br/></div><div class='line' id='LC5845'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(StyleBinding, _super);</div><div class='line' id='LC5846'><br/></div><div class='line' id='LC5847'>&nbsp;&nbsp;&nbsp;&nbsp;StyleBinding.prototype.onlyObserve = Batman.BindingDefinitionOnlyObserve.Data;</div><div class='line' id='LC5848'><br/></div><div class='line' id='LC5849'>&nbsp;&nbsp;&nbsp;&nbsp;function StyleBinding() {</div><div class='line' id='LC5850'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.setStyle = __bind(this.setStyle, this);</div><div class='line' id='LC5851'><br/></div><div class='line' id='LC5852'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.handleArrayChanged = __bind(this.handleArrayChanged, this);</div><div class='line' id='LC5853'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.oldStyles = {};</div><div class='line' id='LC5854'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.styleBindings = {};</div><div class='line' id='LC5855'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StyleBinding.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC5856'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5857'><br/></div><div class='line' id='LC5858'>&nbsp;&nbsp;&nbsp;&nbsp;StyleBinding.prototype.dataChange = function(value) {</div><div class='line' id='LC5859'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var colonSplitCSSValues, cssName, key, style, _i, _len, _ref, _ref1, _results;</div><div class='line' id='LC5860'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!value) {</div><div class='line' id='LC5861'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.resetStyles();</div><div class='line' id='LC5862'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC5863'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5864'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.unbindCollection();</div><div class='line' id='LC5865'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof value === &#39;string&#39;) {</div><div class='line' id='LC5866'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.resetStyles();</div><div class='line' id='LC5867'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = value.split(&#39;;&#39;);</div><div class='line' id='LC5868'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC5869'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style = _ref[_i];</div><div class='line' id='LC5870'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1 = style.split(&quot;:&quot;), cssName = _ref1[0], colonSplitCSSValues = 2 &lt;= _ref1.length ? __slice.call(_ref1, 1) : [];</div><div class='line' id='LC5871'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.setStyle(cssName, colonSplitCSSValues.join(&quot;:&quot;));</div><div class='line' id='LC5872'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5873'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC5874'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5875'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value instanceof Batman.Hash) {</div><div class='line' id='LC5876'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.bindCollection(value);</div><div class='line' id='LC5877'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC5878'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value instanceof Batman.Object) {</div><div class='line' id='LC5879'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = value.toJSON();</div><div class='line' id='LC5880'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5881'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.resetStyles();</div><div class='line' id='LC5882'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC5883'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (key in value) {</div><div class='line' id='LC5884'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!__hasProp.call(value, key)) continue;</div><div class='line' id='LC5885'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(this.bindSingleAttribute(key, &quot;&quot; + this.keyPath + &quot;.&quot; + key));</div><div class='line' id='LC5886'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5887'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC5888'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5889'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5890'><br/></div><div class='line' id='LC5891'>&nbsp;&nbsp;&nbsp;&nbsp;StyleBinding.prototype.handleArrayChanged = function(array) {</div><div class='line' id='LC5892'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC5893'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.collection.forEach(function(key, value) {</div><div class='line' id='LC5894'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.bindSingleAttribute(key, &quot;&quot; + _this.keyPath + &quot;.&quot; + key);</div><div class='line' id='LC5895'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC5896'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5897'><br/></div><div class='line' id='LC5898'>&nbsp;&nbsp;&nbsp;&nbsp;StyleBinding.prototype.bindSingleAttribute = function(attr, keyPath) {</div><div class='line' id='LC5899'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var definition;</div><div class='line' id='LC5900'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;definition = new Batman.DOM.AttrReaderBindingDefinition(this.node, attr, keyPath, this.renderContext, this.renderer);</div><div class='line' id='LC5901'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.styleBindings[attr] = new Batman.DOM.StyleBinding.SingleStyleBinding(definition, this);</div><div class='line' id='LC5902'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5903'><br/></div><div class='line' id='LC5904'>&nbsp;&nbsp;&nbsp;&nbsp;StyleBinding.prototype.setStyle = function(key, value) {</div><div class='line' id='LC5905'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = Batman.helpers.camelize(key.trim(), true);</div><div class='line' id='LC5906'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.oldStyles[key] == null) {</div><div class='line' id='LC5907'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.oldStyles[key] = this.node.style[key] || &quot;&quot;;</div><div class='line' id='LC5908'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5909'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value != null ? value.trim : void 0) {</div><div class='line' id='LC5910'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = value.trim();</div><div class='line' id='LC5911'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5912'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value == null) {</div><div class='line' id='LC5913'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = &quot;&quot;;</div><div class='line' id='LC5914'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5915'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.node.style[key] = value;</div><div class='line' id='LC5916'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5917'><br/></div><div class='line' id='LC5918'>&nbsp;&nbsp;&nbsp;&nbsp;StyleBinding.prototype.resetStyles = function() {</div><div class='line' id='LC5919'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var cssName, cssValue, _ref, _results;</div><div class='line' id='LC5920'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this.oldStyles;</div><div class='line' id='LC5921'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC5922'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (cssName in _ref) {</div><div class='line' id='LC5923'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!__hasProp.call(_ref, cssName)) continue;</div><div class='line' id='LC5924'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cssValue = _ref[cssName];</div><div class='line' id='LC5925'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(this.setStyle(cssName, cssValue));</div><div class='line' id='LC5926'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5927'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC5928'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5929'><br/></div><div class='line' id='LC5930'>&nbsp;&nbsp;&nbsp;&nbsp;StyleBinding.prototype.resetBindings = function() {</div><div class='line' id='LC5931'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var attribute, binding, _ref;</div><div class='line' id='LC5932'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this.styleBindings;</div><div class='line' id='LC5933'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (attribute in _ref) {</div><div class='line' id='LC5934'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binding = _ref[attribute];</div><div class='line' id='LC5935'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binding._fireDataChange(&#39;&#39;);</div><div class='line' id='LC5936'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binding.die();</div><div class='line' id='LC5937'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5938'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.styleBindings = {};</div><div class='line' id='LC5939'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5940'><br/></div><div class='line' id='LC5941'>&nbsp;&nbsp;&nbsp;&nbsp;StyleBinding.prototype.unbindCollection = function() {</div><div class='line' id='LC5942'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.resetBindings();</div><div class='line' id='LC5943'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return StyleBinding.__super__.unbindCollection.apply(this, arguments);</div><div class='line' id='LC5944'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5945'><br/></div><div class='line' id='LC5946'>&nbsp;&nbsp;&nbsp;&nbsp;StyleBinding.SingleStyleBinding = (function(_super1) {</div><div class='line' id='LC5947'><br/></div><div class='line' id='LC5948'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__extends(SingleStyleBinding, _super1);</div><div class='line' id='LC5949'><br/></div><div class='line' id='LC5950'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SingleStyleBinding.prototype.onlyObserve = Batman.BindingDefinitionOnlyObserve.Data;</div><div class='line' id='LC5951'><br/></div><div class='line' id='LC5952'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SingleStyleBinding.prototype.isTwoWay = function() {</div><div class='line' id='LC5953'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC5954'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5955'><br/></div><div class='line' id='LC5956'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function SingleStyleBinding(definition, parent) {</div><div class='line' id='LC5957'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.parent = parent;</div><div class='line' id='LC5958'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SingleStyleBinding.__super__.constructor.call(this, definition);</div><div class='line' id='LC5959'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5960'><br/></div><div class='line' id='LC5961'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SingleStyleBinding.prototype.dataChange = function(value) {</div><div class='line' id='LC5962'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.parent.setStyle(this.attributeName, value);</div><div class='line' id='LC5963'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5964'><br/></div><div class='line' id='LC5965'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return SingleStyleBinding;</div><div class='line' id='LC5966'><br/></div><div class='line' id='LC5967'>&nbsp;&nbsp;&nbsp;&nbsp;})(Batman.DOM.AbstractAttributeBinding);</div><div class='line' id='LC5968'><br/></div><div class='line' id='LC5969'>&nbsp;&nbsp;&nbsp;&nbsp;return StyleBinding;</div><div class='line' id='LC5970'><br/></div><div class='line' id='LC5971'>&nbsp;&nbsp;})(Batman.DOM.AbstractCollectionBinding);</div><div class='line' id='LC5972'><br/></div><div class='line' id='LC5973'>}).call(this);</div><div class='line' id='LC5974'><br/></div><div class='line' id='LC5975'>(function() {</div><div class='line' id='LC5976'>&nbsp;&nbsp;var __bind = function(fn, me) {</div><div class='line' id='LC5977'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function() {</div><div class='line' id='LC5978'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return fn.apply(me, arguments);</div><div class='line' id='LC5979'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5980'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC5981'>&nbsp;&nbsp;&nbsp;&nbsp;__hasProp = {}.hasOwnProperty,</div><div class='line' id='LC5982'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC5983'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC5984'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC5985'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5986'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC5987'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC5988'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC5989'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC5990'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC5991'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC5992'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC5993'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC5994'><br/></div><div class='line' id='LC5995'>&nbsp;&nbsp;Batman.DOM.IteratorBinding = (function(_super) {</div><div class='line' id='LC5996'><br/></div><div class='line' id='LC5997'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(IteratorBinding, _super);</div><div class='line' id='LC5998'><br/></div><div class='line' id='LC5999'>&nbsp;&nbsp;&nbsp;&nbsp;IteratorBinding.prototype.currentActionNumber = 0;</div><div class='line' id='LC6000'><br/></div><div class='line' id='LC6001'>&nbsp;&nbsp;&nbsp;&nbsp;IteratorBinding.prototype.queuedActionNumber = 0;</div><div class='line' id='LC6002'><br/></div><div class='line' id='LC6003'>&nbsp;&nbsp;&nbsp;&nbsp;IteratorBinding.prototype.bindImmediately = false;</div><div class='line' id='LC6004'><br/></div><div class='line' id='LC6005'>&nbsp;&nbsp;&nbsp;&nbsp;IteratorBinding.prototype.skipChildren = true;</div><div class='line' id='LC6006'><br/></div><div class='line' id='LC6007'>&nbsp;&nbsp;&nbsp;&nbsp;IteratorBinding.prototype.onlyObserve = Batman.BindingDefinitionOnlyObserve.Data;</div><div class='line' id='LC6008'><br/></div><div class='line' id='LC6009'>&nbsp;&nbsp;&nbsp;&nbsp;function IteratorBinding(definition) {</div><div class='line' id='LC6010'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.handleArrayChanged = __bind(this.handleArrayChanged, this);</div><div class='line' id='LC6011'><br/></div><div class='line' id='LC6012'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var previousSiblingNode, sourceNode, _this = this;</div><div class='line' id='LC6013'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sourceNode = definition.node, this.iteratorName = definition.attr, this.key = definition.keyPath, this.parentRenderer = definition.renderer;</div><div class='line' id='LC6014'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.nodeMap = new Batman.SimpleHash;</div><div class='line' id='LC6015'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.rendererMap = new Batman.SimpleHash;</div><div class='line' id='LC6016'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.prototypeNode = sourceNode.cloneNode(true);</div><div class='line' id='LC6017'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.prototypeNode.removeAttribute(&quot;data-foreach-&quot; + this.iteratorName);</div><div class='line' id='LC6018'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;previousSiblingNode = sourceNode.nextSibling;</div><div class='line' id='LC6019'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.startNode = document.createComment(&quot;start &quot; + this.iteratorName + &quot;-&quot; + (this.get(&#39;_batmanID&#39;)));</div><div class='line' id='LC6020'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.endNode = document.createComment(&quot;end &quot; + this.iteratorName + &quot;-&quot; + (this.get(&#39;_batmanID&#39;)));</div><div class='line' id='LC6021'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.endNode[Batman.expando] = sourceNode[Batman.expando];</div><div class='line' id='LC6022'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Batman.canDeleteExpando) {</div><div class='line' id='LC6023'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete sourceNode[Batman.expando];</div><div class='line' id='LC6024'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6025'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.insertBefore(sourceNode.parentNode, this.startNode, previousSiblingNode);</div><div class='line' id='LC6026'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.insertBefore(sourceNode.parentNode, this.endNode, previousSiblingNode);</div><div class='line' id='LC6027'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.parentRenderer.prevent(&#39;rendered&#39;);</div><div class='line' id='LC6028'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.onParseExit(sourceNode.parentNode, function() {</div><div class='line' id='LC6029'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.destroyNode(sourceNode);</div><div class='line' id='LC6030'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.bind();</div><div class='line' id='LC6031'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.parentRenderer.allowAndFire(&#39;rendered&#39;);</div><div class='line' id='LC6032'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC6033'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;definition.node = this.endNode;</div><div class='line' id='LC6034'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IteratorBinding.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC6035'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6036'><br/></div><div class='line' id='LC6037'>&nbsp;&nbsp;&nbsp;&nbsp;IteratorBinding.prototype.parentNode = function() {</div><div class='line' id='LC6038'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.endNode.parentNode;</div><div class='line' id='LC6039'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6040'><br/></div><div class='line' id='LC6041'>&nbsp;&nbsp;&nbsp;&nbsp;IteratorBinding.prototype.dataChange = function(collection) {</div><div class='line' id='LC6042'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var items, _items;</div><div class='line' id='LC6043'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (collection != null) {</div><div class='line' id='LC6044'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this.bindCollection(collection)) {</div><div class='line' id='LC6045'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;items = (collection != null ? collection.forEach : void 0) ? (_items = [], collection.forEach(function(item) {</div><div class='line' id='LC6046'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _items.push(item);</div><div class='line' id='LC6047'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}), _items) : Object.keys(collection);</div><div class='line' id='LC6048'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.handleArrayChanged(items);</div><div class='line' id='LC6049'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6050'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC6051'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.handleArrayChanged([]);</div><div class='line' id='LC6052'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6053'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6054'><br/></div><div class='line' id='LC6055'>&nbsp;&nbsp;&nbsp;&nbsp;IteratorBinding.prototype.handleArrayChanged = function(newItems) {</div><div class='line' id='LC6056'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var existingNode, index, newItem, node, nodeAtIndex, parentNode, startIndex, unseenNodeMap, _i, _len, _this = this;</div><div class='line' id='LC6057'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parentNode = this.parentNode();</div><div class='line' id='LC6058'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;startIndex = this._getStartNodeIndex() + 1;</div><div class='line' id='LC6059'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unseenNodeMap = this.nodeMap.merge();</div><div class='line' id='LC6060'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (newItems) {</div><div class='line' id='LC6061'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (index = _i = 0, _len = newItems.length; _i &lt; _len; index = ++_i) {</div><div class='line' id='LC6062'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newItem = newItems[index];</div><div class='line' id='LC6063'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodeAtIndex = parentNode.childNodes[startIndex + index];</div><div class='line' id='LC6064'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((nodeAtIndex != null) &amp;&amp; this._itemForNode(nodeAtIndex) === newItem) {</div><div class='line' id='LC6065'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unseenNodeMap.unset(newItem);</div><div class='line' id='LC6066'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;</div><div class='line' id='LC6067'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC6068'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node = (existingNode = this.nodeMap.get(newItem)) ? (unseenNodeMap.unset(newItem), existingNode) : this._newNodeForItem(newItem);</div><div class='line' id='LC6069'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.insertBefore(this.parentNode(), node, nodeAtIndex);</div><div class='line' id='LC6070'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6071'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6072'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6073'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unseenNodeMap.forEach(function(item, node) {</div><div class='line' id='LC6074'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (_this._nodesToBeRendered.has(node)) {</div><div class='line' id='LC6075'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this._nodesToBeRemoved || (_this._nodesToBeRemoved = new Batman.SimpleSet);</div><div class='line' id='LC6076'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this._nodesToBeRemoved.add(node);</div><div class='line' id='LC6077'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC6078'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this._removeItem(item);</div><div class='line' id='LC6079'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC6081'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6082'><br/></div><div class='line' id='LC6083'>&nbsp;&nbsp;&nbsp;&nbsp;IteratorBinding.prototype._itemForNode = function(node) {</div><div class='line' id='LC6084'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman._data(node, &quot;&quot; + this.iteratorName + &quot;Item&quot;);</div><div class='line' id='LC6085'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6086'><br/></div><div class='line' id='LC6087'>&nbsp;&nbsp;&nbsp;&nbsp;IteratorBinding.prototype._newNodeForItem = function(newItem) {</div><div class='line' id='LC6088'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var newNode, renderer, _this = this;</div><div class='line' id='LC6089'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newNode = this.prototypeNode.cloneNode(true);</div><div class='line' id='LC6090'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._nodesToBeRendered || (this._nodesToBeRendered = new Batman.SimpleSet);</div><div class='line' id='LC6091'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._nodesToBeRendered.add(newNode);</div><div class='line' id='LC6092'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman._data(newNode, &quot;&quot; + this.iteratorName + &quot;Item&quot;, newItem);</div><div class='line' id='LC6093'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.nodeMap.set(newItem, newNode);</div><div class='line' id='LC6094'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.parentRenderer.prevent(&#39;rendered&#39;);</div><div class='line' id='LC6095'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;renderer = new Batman.Renderer(newNode, this.renderContext.descend(newItem, this.iteratorName), this.parentRenderer.view);</div><div class='line' id='LC6096'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;renderer.once(&#39;rendered&#39;, function() {</div><div class='line' id='LC6097'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC6098'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this._nodesToBeRendered.remove(newNode);</div><div class='line' id='LC6099'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = _this._nodesToBeRemoved) != null ? _ref.has(newNode) : void 0) {</div><div class='line' id='LC6100'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this._nodesToBeRemoved.remove(newNode);</div><div class='line' id='LC6101'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this._removeItem(newItem);</div><div class='line' id='LC6102'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC6103'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.propagateBindingEvents(newNode);</div><div class='line' id='LC6104'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.fire(&#39;nodeAdded&#39;, newNode, newItem);</div><div class='line' id='LC6105'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6106'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.parentRenderer.allowAndFire(&#39;rendered&#39;);</div><div class='line' id='LC6107'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC6108'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return newNode;</div><div class='line' id='LC6109'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6110'><br/></div><div class='line' id='LC6111'>&nbsp;&nbsp;&nbsp;&nbsp;IteratorBinding.prototype._getStartNodeIndex = function() {</div><div class='line' id='LC6112'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var index, node, _i, _len, _ref;</div><div class='line' id='LC6113'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this.parentNode().childNodes;</div><div class='line' id='LC6114'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (index = _i = 0, _len = _ref.length; _i &lt; _len; index = ++_i) {</div><div class='line' id='LC6115'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node = _ref[index];</div><div class='line' id='LC6116'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (node === this.startNode) {</div><div class='line' id='LC6117'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return index;</div><div class='line' id='LC6118'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6119'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6120'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 0;</div><div class='line' id='LC6121'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6122'><br/></div><div class='line' id='LC6123'>&nbsp;&nbsp;&nbsp;&nbsp;IteratorBinding.prototype._removeItem = function(item) {</div><div class='line' id='LC6124'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var node;</div><div class='line' id='LC6125'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node = this.nodeMap.unset(item);</div><div class='line' id='LC6126'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.destroyNode(node);</div><div class='line' id='LC6127'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.fire(&#39;nodeRemoved&#39;, node, item);</div><div class='line' id='LC6128'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6129'><br/></div><div class='line' id='LC6130'>&nbsp;&nbsp;&nbsp;&nbsp;IteratorBinding.prototype.die = function() {</div><div class='line' id='LC6131'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC6132'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this._nodesToBeRendered &amp;&amp; !this._nodesToBeRendered.isEmpty()) {</div><div class='line' id='LC6133'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._nodesToBeRemoved || (this._nodesToBeRemoved = new Batman.SimpleSet);</div><div class='line' id='LC6134'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(_ref = this._nodesToBeRemoved).add.apply(_ref, this._nodesToBeRendered.toArray());</div><div class='line' id='LC6135'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6136'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return IteratorBinding.__super__.die.apply(this, arguments);</div><div class='line' id='LC6137'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6138'><br/></div><div class='line' id='LC6139'>&nbsp;&nbsp;&nbsp;&nbsp;return IteratorBinding;</div><div class='line' id='LC6140'><br/></div><div class='line' id='LC6141'>&nbsp;&nbsp;})(Batman.DOM.AbstractCollectionBinding);</div><div class='line' id='LC6142'><br/></div><div class='line' id='LC6143'>}).call(this);</div><div class='line' id='LC6144'><br/></div><div class='line' id='LC6145'>(function() {</div><div class='line' id='LC6146'>&nbsp;&nbsp;var __bind = function(fn, me) {</div><div class='line' id='LC6147'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function() {</div><div class='line' id='LC6148'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return fn.apply(me, arguments);</div><div class='line' id='LC6149'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6150'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC6151'>&nbsp;&nbsp;&nbsp;&nbsp;__hasProp = {}.hasOwnProperty,</div><div class='line' id='LC6152'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC6153'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC6154'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC6155'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6156'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC6157'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC6158'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6159'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC6160'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC6161'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC6162'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC6163'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6164'><br/></div><div class='line' id='LC6165'>&nbsp;&nbsp;Batman.DOM.ClassBinding = (function(_super) {</div><div class='line' id='LC6166'><br/></div><div class='line' id='LC6167'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(ClassBinding, _super);</div><div class='line' id='LC6168'><br/></div><div class='line' id='LC6169'>&nbsp;&nbsp;&nbsp;&nbsp;function ClassBinding() {</div><div class='line' id='LC6170'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.handleArrayChanged = __bind(this.handleArrayChanged, this);</div><div class='line' id='LC6171'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ClassBinding.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC6172'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6173'><br/></div><div class='line' id='LC6174'>&nbsp;&nbsp;&nbsp;&nbsp;ClassBinding.prototype.onlyObserve = Batman.BindingDefinitionOnlyObserve.Data;</div><div class='line' id='LC6175'><br/></div><div class='line' id='LC6176'>&nbsp;&nbsp;&nbsp;&nbsp;ClassBinding.prototype.dataChange = function(value) {</div><div class='line' id='LC6177'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value != null) {</div><div class='line' id='LC6178'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.unbindCollection();</div><div class='line' id='LC6179'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof value === &#39;string&#39;) {</div><div class='line' id='LC6180'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.node.className = value;</div><div class='line' id='LC6181'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC6182'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.bindCollection(value);</div><div class='line' id='LC6183'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.updateFromCollection();</div><div class='line' id='LC6184'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6185'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6186'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6187'><br/></div><div class='line' id='LC6188'>&nbsp;&nbsp;&nbsp;&nbsp;ClassBinding.prototype.updateFromCollection = function() {</div><div class='line' id='LC6189'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var array, k, v;</div><div class='line' id='LC6190'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.collection) {</div><div class='line' id='LC6191'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array = this.collection.map ? this.collection.map(function(x) {</div><div class='line' id='LC6192'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return x;</div><div class='line' id='LC6193'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}) : (function() {</div><div class='line' id='LC6194'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref, _results;</div><div class='line' id='LC6195'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this.collection;</div><div class='line' id='LC6196'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC6197'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (k in _ref) {</div><div class='line' id='LC6198'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!__hasProp.call(_ref, k)) continue;</div><div class='line' id='LC6199'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v = _ref[k];</div><div class='line' id='LC6200'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(k);</div><div class='line' id='LC6201'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6202'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC6203'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}).call(this);</div><div class='line' id='LC6204'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (array.toArray != null) {</div><div class='line' id='LC6205'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array = array.toArray();</div><div class='line' id='LC6206'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6207'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.node.className = array.join(&#39; &#39;);</div><div class='line' id='LC6208'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6209'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6210'><br/></div><div class='line' id='LC6211'>&nbsp;&nbsp;&nbsp;&nbsp;ClassBinding.prototype.handleArrayChanged = function() {</div><div class='line' id='LC6212'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.updateFromCollection();</div><div class='line' id='LC6213'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6214'><br/></div><div class='line' id='LC6215'>&nbsp;&nbsp;&nbsp;&nbsp;return ClassBinding;</div><div class='line' id='LC6216'><br/></div><div class='line' id='LC6217'>&nbsp;&nbsp;})(Batman.DOM.AbstractCollectionBinding);</div><div class='line' id='LC6218'><br/></div><div class='line' id='LC6219'>}).call(this);</div><div class='line' id='LC6220'><br/></div><div class='line' id='LC6221'>(function() {</div><div class='line' id='LC6222'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC6223'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC6224'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC6225'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC6226'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6227'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC6228'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC6229'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6230'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC6231'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC6232'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC6233'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC6234'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6235'><br/></div><div class='line' id='LC6236'>&nbsp;&nbsp;Batman.ValidationError = (function(_super) {</div><div class='line' id='LC6237'><br/></div><div class='line' id='LC6238'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(ValidationError, _super);</div><div class='line' id='LC6239'><br/></div><div class='line' id='LC6240'>&nbsp;&nbsp;&nbsp;&nbsp;ValidationError.accessor(&#39;fullMessage&#39;, function() {</div><div class='line' id='LC6241'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.t(&#39;errors.format&#39;, {</div><div class='line' id='LC6242'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attribute: Batman.helpers.humanize(this.attribute),</div><div class='line' id='LC6243'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;message: this.message</div><div class='line' id='LC6244'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC6245'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC6246'><br/></div><div class='line' id='LC6247'>&nbsp;&nbsp;&nbsp;&nbsp;function ValidationError(attribute, message) {</div><div class='line' id='LC6248'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ValidationError.__super__.constructor.call(this, {</div><div class='line' id='LC6249'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attribute: attribute,</div><div class='line' id='LC6250'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;message: message</div><div class='line' id='LC6251'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC6252'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6253'><br/></div><div class='line' id='LC6254'>&nbsp;&nbsp;&nbsp;&nbsp;return ValidationError;</div><div class='line' id='LC6255'><br/></div><div class='line' id='LC6256'>&nbsp;&nbsp;})(Batman.Object);</div><div class='line' id='LC6257'><br/></div><div class='line' id='LC6258'>}).call(this);</div><div class='line' id='LC6259'><br/></div><div class='line' id='LC6260'>(function() {</div><div class='line' id='LC6261'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC6262'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC6263'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC6264'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC6265'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6266'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC6267'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC6268'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6269'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC6270'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC6271'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC6272'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC6273'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC6274'>&nbsp;&nbsp;&nbsp;&nbsp;__slice = [].slice;</div><div class='line' id='LC6275'><br/></div><div class='line' id='LC6276'>&nbsp;&nbsp;Batman.StorageAdapter = (function(_super) {</div><div class='line' id='LC6277'><br/></div><div class='line' id='LC6278'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(StorageAdapter, _super);</div><div class='line' id='LC6279'><br/></div><div class='line' id='LC6280'>&nbsp;&nbsp;&nbsp;&nbsp;StorageAdapter.StorageError = (function(_super1) {</div><div class='line' id='LC6281'><br/></div><div class='line' id='LC6282'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__extends(StorageError, _super1);</div><div class='line' id='LC6283'><br/></div><div class='line' id='LC6284'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StorageError.prototype.name = &quot;StorageError&quot;;</div><div class='line' id='LC6285'><br/></div><div class='line' id='LC6286'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function StorageError(message) {</div><div class='line' id='LC6287'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StorageError.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC6288'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.message = message;</div><div class='line' id='LC6289'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6290'><br/></div><div class='line' id='LC6291'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return StorageError;</div><div class='line' id='LC6292'><br/></div><div class='line' id='LC6293'>&nbsp;&nbsp;&nbsp;&nbsp;})(Error);</div><div class='line' id='LC6294'><br/></div><div class='line' id='LC6295'>&nbsp;&nbsp;&nbsp;&nbsp;StorageAdapter.RecordExistsError = (function(_super1) {</div><div class='line' id='LC6296'><br/></div><div class='line' id='LC6297'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__extends(RecordExistsError, _super1);</div><div class='line' id='LC6298'><br/></div><div class='line' id='LC6299'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RecordExistsError.prototype.name = &#39;RecordExistsError&#39;;</div><div class='line' id='LC6300'><br/></div><div class='line' id='LC6301'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function RecordExistsError(message) {</div><div class='line' id='LC6302'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RecordExistsError.__super__.constructor.call(this, message || &quot;Can&#39;t create this record because it already exists in the store!&quot;);</div><div class='line' id='LC6303'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6304'><br/></div><div class='line' id='LC6305'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return RecordExistsError;</div><div class='line' id='LC6306'><br/></div><div class='line' id='LC6307'>&nbsp;&nbsp;&nbsp;&nbsp;})(StorageAdapter.StorageError);</div><div class='line' id='LC6308'><br/></div><div class='line' id='LC6309'>&nbsp;&nbsp;&nbsp;&nbsp;StorageAdapter.NotFoundError = (function(_super1) {</div><div class='line' id='LC6310'><br/></div><div class='line' id='LC6311'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__extends(NotFoundError, _super1);</div><div class='line' id='LC6312'><br/></div><div class='line' id='LC6313'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NotFoundError.prototype.name = &#39;NotFoundError&#39;;</div><div class='line' id='LC6314'><br/></div><div class='line' id='LC6315'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function NotFoundError(message) {</div><div class='line' id='LC6316'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NotFoundError.__super__.constructor.call(this, message || &quot;Record couldn&#39;t be found in storage!&quot;);</div><div class='line' id='LC6317'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6318'><br/></div><div class='line' id='LC6319'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return NotFoundError;</div><div class='line' id='LC6320'><br/></div><div class='line' id='LC6321'>&nbsp;&nbsp;&nbsp;&nbsp;})(StorageAdapter.StorageError);</div><div class='line' id='LC6322'><br/></div><div class='line' id='LC6323'>&nbsp;&nbsp;&nbsp;&nbsp;StorageAdapter.NotAllowedError = (function(_super1) {</div><div class='line' id='LC6324'><br/></div><div class='line' id='LC6325'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__extends(NotAllowedError, _super1);</div><div class='line' id='LC6326'><br/></div><div class='line' id='LC6327'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NotAllowedError.prototype.name = &quot;NotAllowedError&quot;;</div><div class='line' id='LC6328'><br/></div><div class='line' id='LC6329'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function NotAllowedError(message) {</div><div class='line' id='LC6330'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NotAllowedError.__super__.constructor.call(this, message || &quot;Storage operation denied access to the operation!&quot;);</div><div class='line' id='LC6331'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6332'><br/></div><div class='line' id='LC6333'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return NotAllowedError;</div><div class='line' id='LC6334'><br/></div><div class='line' id='LC6335'>&nbsp;&nbsp;&nbsp;&nbsp;})(StorageAdapter.StorageError);</div><div class='line' id='LC6336'><br/></div><div class='line' id='LC6337'>&nbsp;&nbsp;&nbsp;&nbsp;StorageAdapter.NotAcceptableError = (function(_super1) {</div><div class='line' id='LC6338'><br/></div><div class='line' id='LC6339'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__extends(NotAcceptableError, _super1);</div><div class='line' id='LC6340'><br/></div><div class='line' id='LC6341'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NotAcceptableError.prototype.name = &quot;NotAcceptableError&quot;;</div><div class='line' id='LC6342'><br/></div><div class='line' id='LC6343'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function NotAcceptableError(message) {</div><div class='line' id='LC6344'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NotAcceptableError.__super__.constructor.call(this, message || &quot;Storage operation permitted but the request was malformed!&quot;);</div><div class='line' id='LC6345'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6346'><br/></div><div class='line' id='LC6347'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return NotAcceptableError;</div><div class='line' id='LC6348'><br/></div><div class='line' id='LC6349'>&nbsp;&nbsp;&nbsp;&nbsp;})(StorageAdapter.StorageError);</div><div class='line' id='LC6350'><br/></div><div class='line' id='LC6351'>&nbsp;&nbsp;&nbsp;&nbsp;StorageAdapter.UnprocessableRecordError = (function(_super1) {</div><div class='line' id='LC6352'><br/></div><div class='line' id='LC6353'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__extends(UnprocessableRecordError, _super1);</div><div class='line' id='LC6354'><br/></div><div class='line' id='LC6355'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UnprocessableRecordError.prototype.name = &quot;UnprocessableRecordError&quot;;</div><div class='line' id='LC6356'><br/></div><div class='line' id='LC6357'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function UnprocessableRecordError(message) {</div><div class='line' id='LC6358'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UnprocessableRecordError.__super__.constructor.call(this, message || &quot;Storage adapter could not process the record!&quot;);</div><div class='line' id='LC6359'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6360'><br/></div><div class='line' id='LC6361'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return UnprocessableRecordError;</div><div class='line' id='LC6362'><br/></div><div class='line' id='LC6363'>&nbsp;&nbsp;&nbsp;&nbsp;})(StorageAdapter.StorageError);</div><div class='line' id='LC6364'><br/></div><div class='line' id='LC6365'>&nbsp;&nbsp;&nbsp;&nbsp;StorageAdapter.InternalStorageError = (function(_super1) {</div><div class='line' id='LC6366'><br/></div><div class='line' id='LC6367'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__extends(InternalStorageError, _super1);</div><div class='line' id='LC6368'><br/></div><div class='line' id='LC6369'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InternalStorageError.prototype.name = &quot;InternalStorageError&quot;;</div><div class='line' id='LC6370'><br/></div><div class='line' id='LC6371'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function InternalStorageError(message) {</div><div class='line' id='LC6372'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InternalStorageError.__super__.constructor.call(this, message || &quot;An error occured during the storage operation!&quot;);</div><div class='line' id='LC6373'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6374'><br/></div><div class='line' id='LC6375'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return InternalStorageError;</div><div class='line' id='LC6376'><br/></div><div class='line' id='LC6377'>&nbsp;&nbsp;&nbsp;&nbsp;})(StorageAdapter.StorageError);</div><div class='line' id='LC6378'><br/></div><div class='line' id='LC6379'>&nbsp;&nbsp;&nbsp;&nbsp;StorageAdapter.NotImplementedError = (function(_super1) {</div><div class='line' id='LC6380'><br/></div><div class='line' id='LC6381'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__extends(NotImplementedError, _super1);</div><div class='line' id='LC6382'><br/></div><div class='line' id='LC6383'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NotImplementedError.prototype.name = &quot;NotImplementedError&quot;;</div><div class='line' id='LC6384'><br/></div><div class='line' id='LC6385'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function NotImplementedError(message) {</div><div class='line' id='LC6386'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NotImplementedError.__super__.constructor.call(this, message || &quot;This operation is not implemented by the storage adpater!&quot;);</div><div class='line' id='LC6387'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6388'><br/></div><div class='line' id='LC6389'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return NotImplementedError;</div><div class='line' id='LC6390'><br/></div><div class='line' id='LC6391'>&nbsp;&nbsp;&nbsp;&nbsp;})(StorageAdapter.StorageError);</div><div class='line' id='LC6392'><br/></div><div class='line' id='LC6393'>&nbsp;&nbsp;&nbsp;&nbsp;function StorageAdapter(model) {</div><div class='line' id='LC6394'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var constructor;</div><div class='line' id='LC6395'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StorageAdapter.__super__.constructor.call(this, {</div><div class='line' id='LC6396'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model: model</div><div class='line' id='LC6397'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC6398'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;constructor = this.constructor;</div><div class='line' id='LC6399'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (constructor.ModelMixin) {</div><div class='line' id='LC6400'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.extend(model, constructor.ModelMixin);</div><div class='line' id='LC6401'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6402'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (constructor.RecordMixin) {</div><div class='line' id='LC6403'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.extend(model.prototype, constructor.RecordMixin);</div><div class='line' id='LC6404'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6405'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6406'><br/></div><div class='line' id='LC6407'>&nbsp;&nbsp;&nbsp;&nbsp;StorageAdapter.prototype.isStorageAdapter = true;</div><div class='line' id='LC6408'><br/></div><div class='line' id='LC6409'>&nbsp;&nbsp;&nbsp;&nbsp;StorageAdapter.prototype.storageKey = function(record) {</div><div class='line' id='LC6410'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var model;</div><div class='line' id='LC6411'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model = (record != null ? record.constructor : void 0) || this.model;</div><div class='line' id='LC6412'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return model.get(&#39;storageKey&#39;) || Batman.helpers.pluralize(Batman.helpers.underscore(model.get(&#39;resourceName&#39;)));</div><div class='line' id='LC6413'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6414'><br/></div><div class='line' id='LC6415'>&nbsp;&nbsp;&nbsp;&nbsp;StorageAdapter.prototype.getRecordFromData = function(attributes, constructor) {</div><div class='line' id='LC6416'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var record;</div><div class='line' id='LC6417'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (constructor == null) {</div><div class='line' id='LC6418'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;constructor = this.model;</div><div class='line' id='LC6419'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6420'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record = new constructor();</div><div class='line' id='LC6421'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record._withoutDirtyTracking(function() {</div><div class='line' id='LC6422'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.fromJSON(attributes);</div><div class='line' id='LC6423'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC6424'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return record;</div><div class='line' id='LC6425'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6426'><br/></div><div class='line' id='LC6427'>&nbsp;&nbsp;&nbsp;&nbsp;StorageAdapter.skipIfError = function(f) {</div><div class='line' id='LC6428'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function(env, next) {</div><div class='line' id='LC6429'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (env.error != null) {</div><div class='line' id='LC6430'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return next();</div><div class='line' id='LC6431'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC6432'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return f.call(this, env, next);</div><div class='line' id='LC6433'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6434'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6435'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6436'><br/></div><div class='line' id='LC6437'>&nbsp;&nbsp;&nbsp;&nbsp;StorageAdapter.prototype.before = function() {</div><div class='line' id='LC6438'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._addFilter.apply(this, [&#39;before&#39;].concat(__slice.call(arguments)));</div><div class='line' id='LC6439'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6440'><br/></div><div class='line' id='LC6441'>&nbsp;&nbsp;&nbsp;&nbsp;StorageAdapter.prototype.after = function() {</div><div class='line' id='LC6442'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._addFilter.apply(this, [&#39;after&#39;].concat(__slice.call(arguments)));</div><div class='line' id='LC6443'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6444'><br/></div><div class='line' id='LC6445'>&nbsp;&nbsp;&nbsp;&nbsp;StorageAdapter.prototype._inheritFilters = function() {</div><div class='line' id='LC6446'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var filtersByKey, filtersList, key, oldFilters, position, _results;</div><div class='line' id='LC6447'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this._batman.check(this) || !this._batman.filters) {</div><div class='line' id='LC6448'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;oldFilters = this._batman.getFirst(&#39;filters&#39;);</div><div class='line' id='LC6449'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._batman.filters = {</div><div class='line' id='LC6450'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;before: {},</div><div class='line' id='LC6451'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;after: {}</div><div class='line' id='LC6452'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6453'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (oldFilters != null) {</div><div class='line' id='LC6454'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC6455'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (position in oldFilters) {</div><div class='line' id='LC6456'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filtersByKey = oldFilters[position];</div><div class='line' id='LC6457'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push((function() {</div><div class='line' id='LC6458'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _results1;</div><div class='line' id='LC6459'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results1 = [];</div><div class='line' id='LC6460'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (key in filtersByKey) {</div><div class='line' id='LC6461'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filtersList = filtersByKey[key];</div><div class='line' id='LC6462'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results1.push(this._batman.filters[position][key] = filtersList.slice(0));</div><div class='line' id='LC6463'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6464'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results1;</div><div class='line' id='LC6465'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}).call(this));</div><div class='line' id='LC6466'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6467'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC6468'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6469'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6470'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6471'><br/></div><div class='line' id='LC6472'>&nbsp;&nbsp;&nbsp;&nbsp;StorageAdapter.prototype._addFilter = function() {</div><div class='line' id='LC6473'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var filter, key, keys, position, _base, _i, _j, _len;</div><div class='line' id='LC6474'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position = arguments[0], keys = 3 &lt;= arguments.length ? __slice.call(arguments, 1, _i = arguments.length - 1) : (_i = 1, []), filter = arguments[_i++];</div><div class='line' id='LC6475'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._inheritFilters();</div><div class='line' id='LC6476'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_j = 0, _len = keys.length; _j &lt; _len; _j++) {</div><div class='line' id='LC6477'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = keys[_j];</div><div class='line' id='LC6478'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(_base = this._batman.filters[position])[key] || (_base[key] = []);</div><div class='line' id='LC6479'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._batman.filters[position][key].push(filter);</div><div class='line' id='LC6480'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6481'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC6482'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6483'><br/></div><div class='line' id='LC6484'>&nbsp;&nbsp;&nbsp;&nbsp;StorageAdapter.prototype.runFilter = function(position, action, env, callback) {</div><div class='line' id='LC6485'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var actionFilters, allFilters, filters, next, _this = this;</div><div class='line' id='LC6486'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._inheritFilters();</div><div class='line' id='LC6487'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;allFilters = this._batman.filters[position].all || [];</div><div class='line' id='LC6488'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionFilters = this._batman.filters[position][action] || [];</div><div class='line' id='LC6489'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.action = action;</div><div class='line' id='LC6490'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filters = position === &#39;before&#39; ? actionFilters.concat(allFilters) : allFilters.concat(actionFilters);</div><div class='line' id='LC6491'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;next = function(newEnv) {</div><div class='line' id='LC6492'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var nextFilter;</div><div class='line' id='LC6493'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (newEnv != null) {</div><div class='line' id='LC6494'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env = newEnv;</div><div class='line' id='LC6495'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6496'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((nextFilter = filters.shift()) != null) {</div><div class='line' id='LC6497'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return nextFilter.call(_this, env, next);</div><div class='line' id='LC6498'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC6499'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return callback.call(_this, env);</div><div class='line' id='LC6500'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6501'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6502'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return next();</div><div class='line' id='LC6503'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6504'><br/></div><div class='line' id='LC6505'>&nbsp;&nbsp;&nbsp;&nbsp;StorageAdapter.prototype.runBeforeFilter = function() {</div><div class='line' id='LC6506'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.runFilter.apply(this, [&#39;before&#39;].concat(__slice.call(arguments)));</div><div class='line' id='LC6507'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6508'><br/></div><div class='line' id='LC6509'>&nbsp;&nbsp;&nbsp;&nbsp;StorageAdapter.prototype.runAfterFilter = function(action, env, callback) {</div><div class='line' id='LC6510'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.runFilter(&#39;after&#39;, action, env, this.exportResult(callback));</div><div class='line' id='LC6511'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6512'><br/></div><div class='line' id='LC6513'>&nbsp;&nbsp;&nbsp;&nbsp;StorageAdapter.prototype.exportResult = function(callback) {</div><div class='line' id='LC6514'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function(env) {</div><div class='line' id='LC6515'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return callback(env.error, env.result, env);</div><div class='line' id='LC6516'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6517'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6518'><br/></div><div class='line' id='LC6519'>&nbsp;&nbsp;&nbsp;&nbsp;StorageAdapter.prototype._jsonToAttributes = function(json) {</div><div class='line' id='LC6520'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return JSON.parse(json);</div><div class='line' id='LC6521'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6522'><br/></div><div class='line' id='LC6523'>&nbsp;&nbsp;&nbsp;&nbsp;StorageAdapter.prototype.perform = function(key, subject, options, callback) {</div><div class='line' id='LC6524'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var env, next, _this = this;</div><div class='line' id='LC6525'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options || (options = {});</div><div class='line' id='LC6526'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env = {</div><div class='line' id='LC6527'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options: options,</div><div class='line' id='LC6528'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;subject: subject</div><div class='line' id='LC6529'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6530'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;next = function(newEnv) {</div><div class='line' id='LC6531'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (newEnv != null) {</div><div class='line' id='LC6532'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env = newEnv;</div><div class='line' id='LC6533'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6534'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.runAfterFilter(key, env, callback);</div><div class='line' id='LC6535'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6536'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.runBeforeFilter(key, env, function(env) {</div><div class='line' id='LC6537'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this[key](env, next);</div><div class='line' id='LC6538'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC6539'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return void 0;</div><div class='line' id='LC6540'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6541'><br/></div><div class='line' id='LC6542'>&nbsp;&nbsp;&nbsp;&nbsp;return StorageAdapter;</div><div class='line' id='LC6543'><br/></div><div class='line' id='LC6544'>&nbsp;&nbsp;})(Batman.Object);</div><div class='line' id='LC6545'><br/></div><div class='line' id='LC6546'>}).call(this);</div><div class='line' id='LC6547'><br/></div><div class='line' id='LC6548'>(function() {</div><div class='line' id='LC6549'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC6550'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC6551'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC6552'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC6553'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6554'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC6555'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC6556'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6557'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC6558'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC6559'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC6560'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC6561'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC6562'>&nbsp;&nbsp;&nbsp;&nbsp;__slice = [].slice,</div><div class='line' id='LC6563'>&nbsp;&nbsp;&nbsp;&nbsp;__indexOf = [].indexOf ||</div><div class='line' id='LC6564'>&nbsp;&nbsp;function(item) {</div><div class='line' id='LC6565'>&nbsp;&nbsp;&nbsp;&nbsp;for (var i = 0, l = this.length; i &lt; l; i++) {</div><div class='line' id='LC6566'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (i in this &amp;&amp; this[i] === item) return i;</div><div class='line' id='LC6567'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6568'>&nbsp;&nbsp;&nbsp;&nbsp;return -1;</div><div class='line' id='LC6569'>&nbsp;&nbsp;};</div><div class='line' id='LC6570'><br/></div><div class='line' id='LC6571'>&nbsp;&nbsp;Batman.RestStorage = (function(_super) {</div><div class='line' id='LC6572'>&nbsp;&nbsp;&nbsp;&nbsp;var key, _fn, _i, _len, _ref, _this = this;</div><div class='line' id='LC6573'><br/></div><div class='line' id='LC6574'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(RestStorage, _super);</div><div class='line' id='LC6575'><br/></div><div class='line' id='LC6576'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.CommunicationError = (function(_super1) {</div><div class='line' id='LC6577'><br/></div><div class='line' id='LC6578'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__extends(CommunicationError, _super1);</div><div class='line' id='LC6579'><br/></div><div class='line' id='LC6580'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CommunicationError.prototype.name = &#39;CommunicationError&#39;;</div><div class='line' id='LC6581'><br/></div><div class='line' id='LC6582'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function CommunicationError(message) {</div><div class='line' id='LC6583'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CommunicationError.__super__.constructor.call(this, message || &quot;A communication error has occurred!&quot;);</div><div class='line' id='LC6584'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6585'><br/></div><div class='line' id='LC6586'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return CommunicationError;</div><div class='line' id='LC6587'><br/></div><div class='line' id='LC6588'>&nbsp;&nbsp;&nbsp;&nbsp;})(RestStorage.StorageError);</div><div class='line' id='LC6589'><br/></div><div class='line' id='LC6590'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.JSONContentType = &#39;application/json&#39;;</div><div class='line' id='LC6591'><br/></div><div class='line' id='LC6592'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.PostBodyContentType = &#39;application/x-www-form-urlencoded&#39;;</div><div class='line' id='LC6593'><br/></div><div class='line' id='LC6594'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.BaseMixin = {</div><div class='line' id='LC6595'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;request: function(action, options, callback) {</div><div class='line' id='LC6596'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!callback) {</div><div class='line' id='LC6597'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback = options;</div><div class='line' id='LC6598'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options = {};</div><div class='line' id='LC6599'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6600'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.method || (options.method = &#39;GET&#39;);</div><div class='line' id='LC6601'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.action = action;</div><div class='line' id='LC6602'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._doStorageOperation(options.method.toLowerCase(), options, callback);</div><div class='line' id='LC6603'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6604'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6605'><br/></div><div class='line' id='LC6606'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.ModelMixin = Batman.extend({}, RestStorage.BaseMixin, {</div><div class='line' id='LC6607'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;urlNestsUnder: function() {</div><div class='line' id='LC6608'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var key, keys, parents, _i, _len;</div><div class='line' id='LC6609'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keys = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC6610'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parents = {};</div><div class='line' id='LC6611'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = keys.length; _i &lt; _len; _i++) {</div><div class='line' id='LC6612'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = keys[_i];</div><div class='line' id='LC6613'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parents[key + &#39;_id&#39;] = Batman.helpers.pluralize(key);</div><div class='line' id='LC6614'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6615'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.url = function(options) {</div><div class='line' id='LC6616'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var childSegment, parentID, plural;</div><div class='line' id='LC6617'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childSegment = Batman.helpers.pluralize(this.get(&#39;resourceName&#39;).toLowerCase());</div><div class='line' id='LC6618'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (key in parents) {</div><div class='line' id='LC6619'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plural = parents[key];</div><div class='line' id='LC6620'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parentID = options.data[key];</div><div class='line' id='LC6621'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (parentID) {</div><div class='line' id='LC6622'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete options.data[key];</div><div class='line' id='LC6623'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;&quot; + plural + &quot;/&quot; + parentID + &quot;/&quot; + childSegment;</div><div class='line' id='LC6624'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6625'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6626'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return childSegment;</div><div class='line' id='LC6627'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6628'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.prototype.url = function() {</div><div class='line' id='LC6629'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var childSegment, id, parentID, plural, url;</div><div class='line' id='LC6630'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childSegment = Batman.helpers.pluralize(this.constructor.get(&#39;resourceName&#39;).toLowerCase());</div><div class='line' id='LC6631'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (key in parents) {</div><div class='line' id='LC6632'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plural = parents[key];</div><div class='line' id='LC6633'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parentID = this.get(&#39;dirtyKeys&#39;).get(key);</div><div class='line' id='LC6634'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (parentID === void 0) {</div><div class='line' id='LC6635'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parentID = this.get(key);</div><div class='line' id='LC6636'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6637'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (parentID) {</div><div class='line' id='LC6638'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url = &quot;&quot; + plural + &quot;/&quot; + parentID + &quot;/&quot; + childSegment;</div><div class='line' id='LC6639'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC6640'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6641'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6642'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url || (url = childSegment);</div><div class='line' id='LC6643'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (id = this.get(&#39;id&#39;)) {</div><div class='line' id='LC6644'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url += &#39;/&#39; + id;</div><div class='line' id='LC6645'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6646'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return url;</div><div class='line' id='LC6647'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6648'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6649'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC6650'><br/></div><div class='line' id='LC6651'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.RecordMixin = Batman.extend({}, RestStorage.BaseMixin);</div><div class='line' id='LC6652'><br/></div><div class='line' id='LC6653'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.prototype.defaultRequestOptions = {</div><div class='line' id='LC6654'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type: &#39;json&#39;</div><div class='line' id='LC6655'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6656'><br/></div><div class='line' id='LC6657'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.prototype._implicitActionNames = [&#39;create&#39;, &#39;read&#39;, &#39;update&#39;, &#39;destroy&#39;, &#39;readAll&#39;];</div><div class='line' id='LC6658'><br/></div><div class='line' id='LC6659'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.prototype.serializeAsForm = true;</div><div class='line' id='LC6660'><br/></div><div class='line' id='LC6661'>&nbsp;&nbsp;&nbsp;&nbsp;function RestStorage() {</div><div class='line' id='LC6662'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC6663'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.defaultRequestOptions = Batman.extend({}, this.defaultRequestOptions);</div><div class='line' id='LC6664'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6665'><br/></div><div class='line' id='LC6666'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.prototype.recordJsonNamespace = function(record) {</div><div class='line' id='LC6667'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.helpers.singularize(this.storageKey(record));</div><div class='line' id='LC6668'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6669'><br/></div><div class='line' id='LC6670'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.prototype.collectionJsonNamespace = function(constructor) {</div><div class='line' id='LC6671'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.helpers.pluralize(this.storageKey(constructor.prototype));</div><div class='line' id='LC6672'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6673'><br/></div><div class='line' id='LC6674'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.prototype._execWithOptions = function(object, key, options, context) {</div><div class='line' id='LC6675'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (context == null) {</div><div class='line' id='LC6676'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;context = object;</div><div class='line' id='LC6677'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6678'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof object[key] === &#39;function&#39;) {</div><div class='line' id='LC6679'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return object[key].call(context, options);</div><div class='line' id='LC6680'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC6681'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return object[key];</div><div class='line' id='LC6682'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6683'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6684'><br/></div><div class='line' id='LC6685'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.prototype._defaultCollectionUrl = function(model) {</div><div class='line' id='LC6686'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;&quot; + (this.storageKey(model.prototype));</div><div class='line' id='LC6687'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6688'><br/></div><div class='line' id='LC6689'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.prototype._addParams = function(url, options) {</div><div class='line' id='LC6690'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC6691'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (options &amp;&amp; options.action &amp;&amp; !(_ref = options.action, __indexOf.call(this._implicitActionNames, _ref) &gt;= 0)) {</div><div class='line' id='LC6692'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url += &#39;/&#39; + options.action.toLowerCase();</div><div class='line' id='LC6693'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6694'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return url;</div><div class='line' id='LC6695'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6696'><br/></div><div class='line' id='LC6697'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.prototype._addUrlAffixes = function(url, subject, env) {</div><div class='line' id='LC6698'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var prefix, segments;</div><div class='line' id='LC6699'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;segments = [url, this.urlSuffix(subject, env)];</div><div class='line' id='LC6700'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (url.charAt(0) !== &#39;/&#39;) {</div><div class='line' id='LC6701'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;prefix = this.urlPrefix(subject, env);</div><div class='line' id='LC6702'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (prefix.charAt(prefix.length - 1) !== &#39;/&#39;) {</div><div class='line' id='LC6703'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;segments.unshift(&#39;/&#39;);</div><div class='line' id='LC6704'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6705'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;segments.unshift(prefix);</div><div class='line' id='LC6706'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6707'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return segments.join(&#39;&#39;);</div><div class='line' id='LC6708'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6709'><br/></div><div class='line' id='LC6710'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.prototype.urlPrefix = function(object, env) {</div><div class='line' id='LC6711'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._execWithOptions(object, &#39;urlPrefix&#39;, env.options) || &#39;&#39;;</div><div class='line' id='LC6712'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6713'><br/></div><div class='line' id='LC6714'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.prototype.urlSuffix = function(object, env) {</div><div class='line' id='LC6715'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._execWithOptions(object, &#39;urlSuffix&#39;, env.options) || &#39;&#39;;</div><div class='line' id='LC6716'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6717'><br/></div><div class='line' id='LC6718'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.prototype.urlForRecord = function(record, env) {</div><div class='line' id='LC6719'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var id, url, _ref;</div><div class='line' id='LC6720'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = env.options) != null ? _ref.recordUrl : void 0) {</div><div class='line' id='LC6721'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url = this._execWithOptions(env.options, &#39;recordUrl&#39;, env.options, record);</div><div class='line' id='LC6722'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (record.url) {</div><div class='line' id='LC6723'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url = this._execWithOptions(record, &#39;url&#39;, env.options);</div><div class='line' id='LC6724'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC6725'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url = record.constructor.url ? this._execWithOptions(record.constructor, &#39;url&#39;, env.options) : this._defaultCollectionUrl(record.constructor);</div><div class='line' id='LC6726'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (env.action !== &#39;create&#39;) {</div><div class='line' id='LC6727'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((id = record.get(&#39;id&#39;)) != null) {</div><div class='line' id='LC6728'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url = url + &quot;/&quot; + id;</div><div class='line' id='LC6729'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC6730'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new this.constructor.StorageError(&quot;Couldn&#39;t get/set record primary key on &quot; + env.action + &quot;!&quot;);</div><div class='line' id='LC6731'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6732'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6733'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6734'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._addUrlAffixes(this._addParams(url, env.options), record, env);</div><div class='line' id='LC6735'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6736'><br/></div><div class='line' id='LC6737'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.prototype.urlForCollection = function(model, env) {</div><div class='line' id='LC6738'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var url, _ref;</div><div class='line' id='LC6739'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url = ((_ref = env.options) != null ? _ref.collectionUrl : void 0) ? this._execWithOptions(env.options, &#39;collectionUrl&#39;, env.options, env.options.urlContext) : model.url ? this._execWithOptions(model, &#39;url&#39;, env.options) : this._defaultCollectionUrl(model, env.options);</div><div class='line' id='LC6740'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._addUrlAffixes(this._addParams(url, env.options), model, env);</div><div class='line' id='LC6741'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6742'><br/></div><div class='line' id='LC6743'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.prototype.request = function(env, next) {</div><div class='line' id='LC6744'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var options;</div><div class='line' id='LC6745'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options = Batman.extend(env.options, {</div><div class='line' id='LC6746'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;autosend: false,</div><div class='line' id='LC6747'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;success: function(data) {</div><div class='line' id='LC6748'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return env.data = data;</div><div class='line' id='LC6749'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC6750'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error: function(error) {</div><div class='line' id='LC6751'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return env.error = error;</div><div class='line' id='LC6752'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC6753'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loaded: function() {</div><div class='line' id='LC6754'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.response = env.request.get(&#39;response&#39;);</div><div class='line' id='LC6755'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return next();</div><div class='line' id='LC6756'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6757'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC6758'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.request = new Batman.Request(options);</div><div class='line' id='LC6759'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return env.request.send();</div><div class='line' id='LC6760'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6761'><br/></div><div class='line' id='LC6762'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.prototype.perform = function(key, record, options, callback) {</div><div class='line' id='LC6763'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options || (options = {});</div><div class='line' id='LC6764'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.extend(options, this.defaultRequestOptions);</div><div class='line' id='LC6765'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return RestStorage.__super__.perform.call(this, key, record, options, callback);</div><div class='line' id='LC6766'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6767'><br/></div><div class='line' id='LC6768'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.prototype.before(&#39;all&#39;, RestStorage.skipIfError(function(env, next) {</div><div class='line' id='LC6769'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!env.options.url) {</div><div class='line' id='LC6770'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC6771'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.options.url = env.subject.prototype ? this.urlForCollection(env.subject, env) : this.urlForRecord(env.subject, env);</div><div class='line' id='LC6772'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (error) {</div><div class='line' id='LC6773'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.error = error;</div><div class='line' id='LC6774'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6775'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6776'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return next();</div><div class='line' id='LC6777'>&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC6778'><br/></div><div class='line' id='LC6779'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.prototype.before(&#39;get&#39;, &#39;put&#39;, &#39;post&#39;, &#39;delete&#39;, RestStorage.skipIfError(function(env, next) {</div><div class='line' id='LC6780'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.options.method = env.action.toUpperCase();</div><div class='line' id='LC6781'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return next();</div><div class='line' id='LC6782'>&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC6783'><br/></div><div class='line' id='LC6784'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.prototype.before(&#39;create&#39;, &#39;update&#39;, RestStorage.skipIfError(function(env, next) {</div><div class='line' id='LC6785'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var data, json, namespace;</div><div class='line' id='LC6786'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;json = env.subject.toJSON();</div><div class='line' id='LC6787'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (namespace = this.recordJsonNamespace(env.subject)) {</div><div class='line' id='LC6788'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data = {};</div><div class='line' id='LC6789'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data[namespace] = json;</div><div class='line' id='LC6790'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC6791'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data = json;</div><div class='line' id='LC6792'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6793'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.options.data = data;</div><div class='line' id='LC6794'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return next();</div><div class='line' id='LC6795'>&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC6796'><br/></div><div class='line' id='LC6797'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.prototype.before(&#39;create&#39;, &#39;update&#39;, &#39;put&#39;, &#39;post&#39;, RestStorage.skipIfError(function(env, next) {</div><div class='line' id='LC6798'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.serializeAsForm) {</div><div class='line' id='LC6799'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.options.contentType = this.constructor.PostBodyContentType;</div><div class='line' id='LC6800'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC6801'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (env.options.data != null) {</div><div class='line' id='LC6802'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.options.data = JSON.stringify(env.options.data);</div><div class='line' id='LC6803'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.options.contentType = this.constructor.JSONContentType;</div><div class='line' id='LC6804'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6805'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6806'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return next();</div><div class='line' id='LC6807'>&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC6808'><br/></div><div class='line' id='LC6809'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.prototype.after(&#39;all&#39;, RestStorage.skipIfError(function(env, next) {</div><div class='line' id='LC6810'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var json;</div><div class='line' id='LC6811'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(env.data != null)) {</div><div class='line' id='LC6812'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return next();</div><div class='line' id='LC6813'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6814'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof env.data === &#39;string&#39;) {</div><div class='line' id='LC6815'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (env.data.length &gt; 0) {</div><div class='line' id='LC6816'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC6817'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;json = this._jsonToAttributes(env.data);</div><div class='line' id='LC6818'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (error) {</div><div class='line' id='LC6819'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.error = error;</div><div class='line' id='LC6820'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return next();</div><div class='line' id='LC6821'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6822'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6823'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (typeof env.data === &#39;object&#39;) {</div><div class='line' id='LC6824'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;json = env.data;</div><div class='line' id='LC6825'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6826'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (json != null) {</div><div class='line' id='LC6827'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.json = json;</div><div class='line' id='LC6828'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6829'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return next();</div><div class='line' id='LC6830'>&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC6831'><br/></div><div class='line' id='LC6832'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.prototype.extractFromNamespace = function(data, namespace) {</div><div class='line' id='LC6833'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (namespace &amp;&amp; (data[namespace] != null)) {</div><div class='line' id='LC6834'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return data[namespace];</div><div class='line' id='LC6835'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC6836'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return data;</div><div class='line' id='LC6837'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6838'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6839'><br/></div><div class='line' id='LC6840'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.prototype.after(&#39;create&#39;, &#39;read&#39;, &#39;update&#39;, RestStorage.skipIfError(function(env, next) {</div><div class='line' id='LC6841'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var json;</div><div class='line' id='LC6842'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (env.json != null) {</div><div class='line' id='LC6843'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;json = this.extractFromNamespace(env.json, this.recordJsonNamespace(env.subject));</div><div class='line' id='LC6844'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.subject._withoutDirtyTracking(function() {</div><div class='line' id='LC6845'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.fromJSON(json);</div><div class='line' id='LC6846'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC6847'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6848'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.result = env.subject;</div><div class='line' id='LC6849'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return next();</div><div class='line' id='LC6850'>&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC6851'><br/></div><div class='line' id='LC6852'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.prototype.after(&#39;readAll&#39;, RestStorage.skipIfError(function(env, next) {</div><div class='line' id='LC6853'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var jsonRecordAttributes, namespace;</div><div class='line' id='LC6854'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;namespace = this.collectionJsonNamespace(env.subject);</div><div class='line' id='LC6855'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.recordsAttributes = this.extractFromNamespace(env.json, namespace);</div><div class='line' id='LC6856'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Batman.typeOf(env.recordsAttributes) !== &#39;Array&#39;) {</div><div class='line' id='LC6857'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;namespace = this.recordJsonNamespace(env.subject.prototype);</div><div class='line' id='LC6858'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.recordsAttributes = [this.extractFromNamespace(env.json, namespace)];</div><div class='line' id='LC6859'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6860'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.result = env.records = (function() {</div><div class='line' id='LC6861'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _i, _len, _ref, _results;</div><div class='line' id='LC6862'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = env.recordsAttributes;</div><div class='line' id='LC6863'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC6864'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC6865'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jsonRecordAttributes = _ref[_i];</div><div class='line' id='LC6866'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(this.getRecordFromData(jsonRecordAttributes, env.subject));</div><div class='line' id='LC6867'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6868'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC6869'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}).call(this);</div><div class='line' id='LC6870'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return next();</div><div class='line' id='LC6871'>&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC6872'><br/></div><div class='line' id='LC6873'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.prototype.after(&#39;get&#39;, &#39;put&#39;, &#39;post&#39;, &#39;delete&#39;, RestStorage.skipIfError(function(env, next) {</div><div class='line' id='LC6874'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var json, namespace;</div><div class='line' id='LC6875'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (env.json != null) {</div><div class='line' id='LC6876'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;json = env.json;</div><div class='line' id='LC6877'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;namespace = env.subject.prototype ? this.collectionJsonNamespace(env.subject) : this.recordJsonNamespace(env.subject);</div><div class='line' id='LC6878'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.result = namespace &amp;&amp; (env.json[namespace] != null) ? env.json[namespace] : env.json;</div><div class='line' id='LC6879'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6880'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return next();</div><div class='line' id='LC6881'>&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC6882'><br/></div><div class='line' id='LC6883'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.HTTPMethods = {</div><div class='line' id='LC6884'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;create: &#39;POST&#39;,</div><div class='line' id='LC6885'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;update: &#39;PUT&#39;,</div><div class='line' id='LC6886'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;read: &#39;GET&#39;,</div><div class='line' id='LC6887'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;readAll: &#39;GET&#39;,</div><div class='line' id='LC6888'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;destroy: &#39;DELETE&#39;</div><div class='line' id='LC6889'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6890'><br/></div><div class='line' id='LC6891'>&nbsp;&nbsp;&nbsp;&nbsp;_ref = [&#39;create&#39;, &#39;read&#39;, &#39;update&#39;, &#39;destroy&#39;, &#39;readAll&#39;, &#39;get&#39;, &#39;post&#39;, &#39;put&#39;, &#39;delete&#39;];</div><div class='line' id='LC6892'>&nbsp;&nbsp;&nbsp;&nbsp;_fn = function(key) {</div><div class='line' id='LC6893'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return RestStorage.prototype[key] = RestStorage.skipIfError(function(env, next) {</div><div class='line' id='LC6894'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _base;</div><div class='line' id='LC6895'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(_base = env.options).method || (_base.method = this.constructor.HTTPMethods[key]);</div><div class='line' id='LC6896'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.request(env, next);</div><div class='line' id='LC6897'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC6898'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6899'>&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC6900'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = _ref[_i];</div><div class='line' id='LC6901'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_fn(key);</div><div class='line' id='LC6902'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6903'><br/></div><div class='line' id='LC6904'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.prototype.after(&#39;all&#39;, function(env, next) {</div><div class='line' id='LC6905'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (env.error) {</div><div class='line' id='LC6906'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.error = this._errorFor(env.error, env);</div><div class='line' id='LC6907'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6908'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return next();</div><div class='line' id='LC6909'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC6910'><br/></div><div class='line' id='LC6911'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage._statusCodeErrors = {</div><div class='line' id='LC6912'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;0&#39;: RestStorage.CommunicationError,</div><div class='line' id='LC6913'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;403&#39;: RestStorage.NotAllowedError,</div><div class='line' id='LC6914'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;404&#39;: RestStorage.NotFoundError,</div><div class='line' id='LC6915'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;406&#39;: RestStorage.NotAcceptableError,</div><div class='line' id='LC6916'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;409&#39;: RestStorage.RecordExistsError,</div><div class='line' id='LC6917'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;422&#39;: RestStorage.UnprocessableRecordError,</div><div class='line' id='LC6918'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;500&#39;: RestStorage.InternalStorageError,</div><div class='line' id='LC6919'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;501&#39;: RestStorage.NotImplementedError</div><div class='line' id='LC6920'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6921'><br/></div><div class='line' id='LC6922'>&nbsp;&nbsp;&nbsp;&nbsp;RestStorage.prototype._errorFor = function(error, env) {</div><div class='line' id='LC6923'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var errorClass, request;</div><div class='line' id='LC6924'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (error instanceof Error || !(error.request != null)) {</div><div class='line' id='LC6925'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return error;</div><div class='line' id='LC6926'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6927'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (errorClass = this.constructor._statusCodeErrors[error.request.status]) {</div><div class='line' id='LC6928'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;request = error.request;</div><div class='line' id='LC6929'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error = new errorClass;</div><div class='line' id='LC6930'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error.request = request;</div><div class='line' id='LC6931'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error.env = env;</div><div class='line' id='LC6932'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6933'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return error;</div><div class='line' id='LC6934'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6935'><br/></div><div class='line' id='LC6936'>&nbsp;&nbsp;&nbsp;&nbsp;return RestStorage;</div><div class='line' id='LC6937'><br/></div><div class='line' id='LC6938'>&nbsp;&nbsp;}).call(this, Batman.StorageAdapter);</div><div class='line' id='LC6939'><br/></div><div class='line' id='LC6940'>}).call(this);</div><div class='line' id='LC6941'><br/></div><div class='line' id='LC6942'>(function() {</div><div class='line' id='LC6943'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC6944'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC6945'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC6946'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC6947'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6948'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC6949'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC6950'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6951'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC6952'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC6953'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC6954'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC6955'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6956'><br/></div><div class='line' id='LC6957'>&nbsp;&nbsp;Batman.LocalStorage = (function(_super) {</div><div class='line' id='LC6958'><br/></div><div class='line' id='LC6959'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(LocalStorage, _super);</div><div class='line' id='LC6960'><br/></div><div class='line' id='LC6961'>&nbsp;&nbsp;&nbsp;&nbsp;function LocalStorage() {</div><div class='line' id='LC6962'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof window.localStorage === &#39;undefined&#39;) {</div><div class='line' id='LC6963'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return null;</div><div class='line' id='LC6964'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6965'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LocalStorage.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC6966'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.storage = localStorage;</div><div class='line' id='LC6967'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6968'><br/></div><div class='line' id='LC6969'>&nbsp;&nbsp;&nbsp;&nbsp;LocalStorage.prototype.storageRegExpForRecord = function(record) {</div><div class='line' id='LC6970'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new RegExp(&quot;^&quot; + (this.storageKey(record)) + &quot;(\\d+)$&quot;);</div><div class='line' id='LC6971'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6972'><br/></div><div class='line' id='LC6973'>&nbsp;&nbsp;&nbsp;&nbsp;LocalStorage.prototype.nextIdForRecord = function(record) {</div><div class='line' id='LC6974'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var nextId, re;</div><div class='line' id='LC6975'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;re = this.storageRegExpForRecord(record);</div><div class='line' id='LC6976'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nextId = 1;</div><div class='line' id='LC6977'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._forAllStorageEntries(function(k, v) {</div><div class='line' id='LC6978'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var matches;</div><div class='line' id='LC6979'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (matches = re.exec(k)) {</div><div class='line' id='LC6980'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return nextId = Math.max(nextId, parseInt(matches[1], 10) + 1);</div><div class='line' id='LC6981'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6982'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC6983'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return nextId;</div><div class='line' id='LC6984'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6985'><br/></div><div class='line' id='LC6986'>&nbsp;&nbsp;&nbsp;&nbsp;LocalStorage.prototype._forAllStorageEntries = function(iterator) {</div><div class='line' id='LC6987'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var i, key, _i, _ref;</div><div class='line' id='LC6988'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (i = _i = 0, _ref = this.storage.length; 0 &lt;= _ref ? _i &lt; _ref : _i &gt; _ref; i = 0 &lt;= _ref ? ++_i : --_i) {</div><div class='line' id='LC6989'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = this.storage.key(i);</div><div class='line' id='LC6990'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;iterator.call(this, key, this.storage.getItem(key));</div><div class='line' id='LC6991'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC6992'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC6993'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC6994'><br/></div><div class='line' id='LC6995'>&nbsp;&nbsp;&nbsp;&nbsp;LocalStorage.prototype._storageEntriesMatching = function(constructor, options) {</div><div class='line' id='LC6996'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var re, records;</div><div class='line' id='LC6997'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;re = this.storageRegExpForRecord(constructor.prototype);</div><div class='line' id='LC6998'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;records = [];</div><div class='line' id='LC6999'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._forAllStorageEntries(function(storageKey, storageString) {</div><div class='line' id='LC7000'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var data, keyMatches;</div><div class='line' id='LC7001'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (keyMatches = re.exec(storageKey)) {</div><div class='line' id='LC7002'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data = this._jsonToAttributes(storageString);</div><div class='line' id='LC7003'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data[constructor.primaryKey] = keyMatches[1];</div><div class='line' id='LC7004'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this._dataMatches(options, data)) {</div><div class='line' id='LC7005'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return records.push(data);</div><div class='line' id='LC7006'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7007'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7008'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7009'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return records;</div><div class='line' id='LC7010'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7011'><br/></div><div class='line' id='LC7012'>&nbsp;&nbsp;&nbsp;&nbsp;LocalStorage.prototype._dataMatches = function(conditions, data) {</div><div class='line' id='LC7013'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var k, match, v;</div><div class='line' id='LC7014'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;match = true;</div><div class='line' id='LC7015'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (k in conditions) {</div><div class='line' id='LC7016'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v = conditions[k];</div><div class='line' id='LC7017'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (data[k] !== v) {</div><div class='line' id='LC7018'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;match = false;</div><div class='line' id='LC7019'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC7020'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7021'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7022'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return match;</div><div class='line' id='LC7023'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7024'><br/></div><div class='line' id='LC7025'>&nbsp;&nbsp;&nbsp;&nbsp;LocalStorage.prototype.before(&#39;read&#39;, &#39;create&#39;, &#39;update&#39;, &#39;destroy&#39;, LocalStorage.skipIfError(function(env, next) {</div><div class='line' id='LC7026'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC7027'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (env.action === &#39;create&#39;) {</div><div class='line' id='LC7028'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.id = env.subject.get(&#39;id&#39;) || env.subject._withoutDirtyTracking(function() {</div><div class='line' id='LC7029'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return env.subject.set(&#39;id&#39;, _this.nextIdForRecord(env.subject));</div><div class='line' id='LC7030'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7031'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC7032'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.id = env.subject.get(&#39;id&#39;);</div><div class='line' id='LC7033'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7034'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (env.id == null) {</div><div class='line' id='LC7035'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.error = new this.constructor.StorageError(&quot;Couldn&#39;t get/set record primary key on &quot; + env.action + &quot;!&quot;);</div><div class='line' id='LC7036'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC7037'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.key = this.storageKey(env.subject) + env.id;</div><div class='line' id='LC7038'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7039'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return next();</div><div class='line' id='LC7040'>&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC7041'><br/></div><div class='line' id='LC7042'>&nbsp;&nbsp;&nbsp;&nbsp;LocalStorage.prototype.before(&#39;create&#39;, &#39;update&#39;, LocalStorage.skipIfError(function(env, next) {</div><div class='line' id='LC7043'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.recordAttributes = JSON.stringify(env.subject);</div><div class='line' id='LC7044'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return next();</div><div class='line' id='LC7045'>&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC7046'><br/></div><div class='line' id='LC7047'>&nbsp;&nbsp;&nbsp;&nbsp;LocalStorage.prototype.after(&#39;read&#39;, LocalStorage.skipIfError(function(env, next) {</div><div class='line' id='LC7048'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof env.recordAttributes === &#39;string&#39;) {</div><div class='line' id='LC7049'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC7050'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.recordAttributes = this._jsonToAttributes(env.recordAttributes);</div><div class='line' id='LC7051'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (error) {</div><div class='line' id='LC7052'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.error = error;</div><div class='line' id='LC7053'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return next();</div><div class='line' id='LC7054'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7055'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7056'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.subject._withoutDirtyTracking(function() {</div><div class='line' id='LC7057'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.fromJSON(env.recordAttributes);</div><div class='line' id='LC7058'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7059'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return next();</div><div class='line' id='LC7060'>&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC7061'><br/></div><div class='line' id='LC7062'>&nbsp;&nbsp;&nbsp;&nbsp;LocalStorage.prototype.after(&#39;read&#39;, &#39;create&#39;, &#39;update&#39;, &#39;destroy&#39;, LocalStorage.skipIfError(function(env, next) {</div><div class='line' id='LC7063'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.result = env.subject;</div><div class='line' id='LC7064'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return next();</div><div class='line' id='LC7065'>&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC7066'><br/></div><div class='line' id='LC7067'>&nbsp;&nbsp;&nbsp;&nbsp;LocalStorage.prototype.after(&#39;readAll&#39;, LocalStorage.skipIfError(function(env, next) {</div><div class='line' id='LC7068'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var recordAttributes;</div><div class='line' id='LC7069'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.result = env.records = (function() {</div><div class='line' id='LC7070'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _i, _len, _ref, _results;</div><div class='line' id='LC7071'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = env.recordsAttributes;</div><div class='line' id='LC7072'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC7073'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC7074'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;recordAttributes = _ref[_i];</div><div class='line' id='LC7075'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(this.getRecordFromData(recordAttributes, env.subject));</div><div class='line' id='LC7076'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7077'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC7078'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}).call(this);</div><div class='line' id='LC7079'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return next();</div><div class='line' id='LC7080'>&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC7081'><br/></div><div class='line' id='LC7082'>&nbsp;&nbsp;&nbsp;&nbsp;LocalStorage.prototype.read = LocalStorage.skipIfError(function(env, next) {</div><div class='line' id='LC7083'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.recordAttributes = this.storage.getItem(env.key);</div><div class='line' id='LC7084'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!env.recordAttributes) {</div><div class='line' id='LC7085'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.error = new this.constructor.NotFoundError();</div><div class='line' id='LC7086'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7087'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return next();</div><div class='line' id='LC7088'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7089'><br/></div><div class='line' id='LC7090'>&nbsp;&nbsp;&nbsp;&nbsp;LocalStorage.prototype.create = LocalStorage.skipIfError(function(_arg, next) {</div><div class='line' id='LC7091'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var key, recordAttributes;</div><div class='line' id='LC7092'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = _arg.key, recordAttributes = _arg.recordAttributes;</div><div class='line' id='LC7093'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.storage.getItem(key)) {</div><div class='line' id='LC7094'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arguments[0].error = new this.constructor.RecordExistsError;</div><div class='line' id='LC7095'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC7096'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.storage.setItem(key, recordAttributes);</div><div class='line' id='LC7097'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7098'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return next();</div><div class='line' id='LC7099'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7100'><br/></div><div class='line' id='LC7101'>&nbsp;&nbsp;&nbsp;&nbsp;LocalStorage.prototype.update = LocalStorage.skipIfError(function(_arg, next) {</div><div class='line' id='LC7102'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var key, recordAttributes;</div><div class='line' id='LC7103'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = _arg.key, recordAttributes = _arg.recordAttributes;</div><div class='line' id='LC7104'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.storage.setItem(key, recordAttributes);</div><div class='line' id='LC7105'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return next();</div><div class='line' id='LC7106'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7107'><br/></div><div class='line' id='LC7108'>&nbsp;&nbsp;&nbsp;&nbsp;LocalStorage.prototype.destroy = LocalStorage.skipIfError(function(_arg, next) {</div><div class='line' id='LC7109'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var key;</div><div class='line' id='LC7110'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = _arg.key;</div><div class='line' id='LC7111'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.storage.removeItem(key);</div><div class='line' id='LC7112'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return next();</div><div class='line' id='LC7113'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7114'><br/></div><div class='line' id='LC7115'>&nbsp;&nbsp;&nbsp;&nbsp;LocalStorage.prototype.readAll = LocalStorage.skipIfError(function(env, next) {</div><div class='line' id='LC7116'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC7117'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arguments[0].recordsAttributes = this._storageEntriesMatching(env.subject, env.options.data);</div><div class='line' id='LC7118'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (error) {</div><div class='line' id='LC7119'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arguments[0].error = error;</div><div class='line' id='LC7120'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7121'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return next();</div><div class='line' id='LC7122'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7123'><br/></div><div class='line' id='LC7124'>&nbsp;&nbsp;&nbsp;&nbsp;return LocalStorage;</div><div class='line' id='LC7125'><br/></div><div class='line' id='LC7126'>&nbsp;&nbsp;})(Batman.StorageAdapter);</div><div class='line' id='LC7127'><br/></div><div class='line' id='LC7128'>}).call(this);</div><div class='line' id='LC7129'><br/></div><div class='line' id='LC7130'>(function() {</div><div class='line' id='LC7131'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC7132'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC7133'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC7134'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC7135'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7136'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC7137'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC7138'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7139'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC7140'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC7141'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC7142'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC7143'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7144'><br/></div><div class='line' id='LC7145'>&nbsp;&nbsp;Batman.SessionStorage = (function(_super) {</div><div class='line' id='LC7146'><br/></div><div class='line' id='LC7147'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(SessionStorage, _super);</div><div class='line' id='LC7148'><br/></div><div class='line' id='LC7149'>&nbsp;&nbsp;&nbsp;&nbsp;function SessionStorage() {</div><div class='line' id='LC7150'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof window.sessionStorage === &#39;undefined&#39;) {</div><div class='line' id='LC7151'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return null;</div><div class='line' id='LC7152'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7153'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SessionStorage.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC7154'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.storage = sessionStorage;</div><div class='line' id='LC7155'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7156'><br/></div><div class='line' id='LC7157'>&nbsp;&nbsp;&nbsp;&nbsp;return SessionStorage;</div><div class='line' id='LC7158'><br/></div><div class='line' id='LC7159'>&nbsp;&nbsp;})(Batman.LocalStorage);</div><div class='line' id='LC7160'><br/></div><div class='line' id='LC7161'>}).call(this);</div><div class='line' id='LC7162'><br/></div><div class='line' id='LC7163'>(function() {</div><div class='line' id='LC7164'><br/></div><div class='line' id='LC7165'>&nbsp;&nbsp;Batman.Encoders = new Batman.Object;</div><div class='line' id='LC7166'><br/></div><div class='line' id='LC7167'>}).call(this);</div><div class='line' id='LC7168'><br/></div><div class='line' id='LC7169'>(function() {</div><div class='line' id='LC7170'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC7171'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC7172'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC7173'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC7174'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7175'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC7176'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC7177'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7178'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC7179'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC7180'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC7181'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC7182'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7183'><br/></div><div class='line' id='LC7184'>&nbsp;&nbsp;Batman.ParamsReplacer = (function(_super) {</div><div class='line' id='LC7185'><br/></div><div class='line' id='LC7186'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(ParamsReplacer, _super);</div><div class='line' id='LC7187'><br/></div><div class='line' id='LC7188'>&nbsp;&nbsp;&nbsp;&nbsp;function ParamsReplacer(navigator, params) {</div><div class='line' id='LC7189'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.navigator = navigator;</div><div class='line' id='LC7190'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.params = params;</div><div class='line' id='LC7191'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7192'><br/></div><div class='line' id='LC7193'>&nbsp;&nbsp;&nbsp;&nbsp;ParamsReplacer.prototype.redirect = function() {</div><div class='line' id='LC7194'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.navigator.replace(this.toObject());</div><div class='line' id='LC7195'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7196'><br/></div><div class='line' id='LC7197'>&nbsp;&nbsp;&nbsp;&nbsp;ParamsReplacer.prototype.replace = function(params) {</div><div class='line' id='LC7198'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.params.replace(params);</div><div class='line' id='LC7199'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.redirect();</div><div class='line' id='LC7200'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7201'><br/></div><div class='line' id='LC7202'>&nbsp;&nbsp;&nbsp;&nbsp;ParamsReplacer.prototype.update = function(params) {</div><div class='line' id='LC7203'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.params.update(params);</div><div class='line' id='LC7204'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.redirect();</div><div class='line' id='LC7205'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7206'><br/></div><div class='line' id='LC7207'>&nbsp;&nbsp;&nbsp;&nbsp;ParamsReplacer.prototype.clear = function() {</div><div class='line' id='LC7208'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.params.clear();</div><div class='line' id='LC7209'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.redirect();</div><div class='line' id='LC7210'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7211'><br/></div><div class='line' id='LC7212'>&nbsp;&nbsp;&nbsp;&nbsp;ParamsReplacer.prototype.toObject = function() {</div><div class='line' id='LC7213'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.params.toObject();</div><div class='line' id='LC7214'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7215'><br/></div><div class='line' id='LC7216'>&nbsp;&nbsp;&nbsp;&nbsp;ParamsReplacer.accessor({</div><div class='line' id='LC7217'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function(k) {</div><div class='line' id='LC7218'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.params.get(k);</div><div class='line' id='LC7219'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC7220'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set: function(k, v) {</div><div class='line' id='LC7221'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var oldValue, result;</div><div class='line' id='LC7222'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;oldValue = this.params.get(k);</div><div class='line' id='LC7223'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = this.params.set(k, v);</div><div class='line' id='LC7224'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (oldValue !== v) {</div><div class='line' id='LC7225'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.redirect();</div><div class='line' id='LC7226'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7227'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC7228'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC7229'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unset: function(k) {</div><div class='line' id='LC7230'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var hadKey, result;</div><div class='line' id='LC7231'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hadKey = this.params.hasKey(k);</div><div class='line' id='LC7232'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = this.params.unset(k);</div><div class='line' id='LC7233'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (hadKey) {</div><div class='line' id='LC7234'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.redirect();</div><div class='line' id='LC7235'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7236'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC7237'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7238'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7239'><br/></div><div class='line' id='LC7240'>&nbsp;&nbsp;&nbsp;&nbsp;return ParamsReplacer;</div><div class='line' id='LC7241'><br/></div><div class='line' id='LC7242'>&nbsp;&nbsp;})(Batman.Object);</div><div class='line' id='LC7243'><br/></div><div class='line' id='LC7244'>}).call(this);</div><div class='line' id='LC7245'><br/></div><div class='line' id='LC7246'>(function() {</div><div class='line' id='LC7247'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC7248'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC7249'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC7250'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC7251'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7252'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC7253'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC7254'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7255'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC7256'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC7257'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC7258'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC7259'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7260'><br/></div><div class='line' id='LC7261'>&nbsp;&nbsp;Batman.ParamsPusher = (function(_super) {</div><div class='line' id='LC7262'><br/></div><div class='line' id='LC7263'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(ParamsPusher, _super);</div><div class='line' id='LC7264'><br/></div><div class='line' id='LC7265'>&nbsp;&nbsp;&nbsp;&nbsp;function ParamsPusher() {</div><div class='line' id='LC7266'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ParamsPusher.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC7267'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7268'><br/></div><div class='line' id='LC7269'>&nbsp;&nbsp;&nbsp;&nbsp;ParamsPusher.prototype.redirect = function() {</div><div class='line' id='LC7270'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.navigator.push(this.toObject());</div><div class='line' id='LC7271'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7272'><br/></div><div class='line' id='LC7273'>&nbsp;&nbsp;&nbsp;&nbsp;return ParamsPusher;</div><div class='line' id='LC7274'><br/></div><div class='line' id='LC7275'>&nbsp;&nbsp;})(Batman.ParamsReplacer);</div><div class='line' id='LC7276'><br/></div><div class='line' id='LC7277'>}).call(this);</div><div class='line' id='LC7278'><br/></div><div class='line' id='LC7279'>(function() {</div><div class='line' id='LC7280'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC7281'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC7282'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC7283'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC7284'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7285'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC7286'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC7287'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7288'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC7289'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC7290'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC7291'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC7292'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7293'><br/></div><div class='line' id='LC7294'>&nbsp;&nbsp;Batman.NamedRouteQuery = (function(_super) {</div><div class='line' id='LC7295'><br/></div><div class='line' id='LC7296'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(NamedRouteQuery, _super);</div><div class='line' id='LC7297'><br/></div><div class='line' id='LC7298'>&nbsp;&nbsp;&nbsp;&nbsp;NamedRouteQuery.prototype.isNamedRouteQuery = true;</div><div class='line' id='LC7299'><br/></div><div class='line' id='LC7300'>&nbsp;&nbsp;&nbsp;&nbsp;function NamedRouteQuery(routeMap, args) {</div><div class='line' id='LC7301'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var key;</div><div class='line' id='LC7302'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (args == null) {</div><div class='line' id='LC7303'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args = [];</div><div class='line' id='LC7304'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7305'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NamedRouteQuery.__super__.constructor.call(this, {</div><div class='line' id='LC7306'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;routeMap: routeMap,</div><div class='line' id='LC7307'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args: args</div><div class='line' id='LC7308'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7309'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (key in this.get(&#39;routeMap&#39;).childrenByName) {</div><div class='line' id='LC7310'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this[key] = this._queryAccess.bind(this, key);</div><div class='line' id='LC7311'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7312'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7313'><br/></div><div class='line' id='LC7314'>&nbsp;&nbsp;&nbsp;&nbsp;NamedRouteQuery.accessor(&#39;route&#39;, function() {</div><div class='line' id='LC7315'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var collectionRoute, memberRoute, route, _i, _len, _ref, _ref1;</div><div class='line' id='LC7316'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this.get(&#39;routeMap&#39;), memberRoute = _ref.memberRoute, collectionRoute = _ref.collectionRoute;</div><div class='line' id='LC7317'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1 = [memberRoute, collectionRoute];</div><div class='line' id='LC7318'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref1.length; _i &lt; _len; _i++) {</div><div class='line' id='LC7319'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;route = _ref1[_i];</div><div class='line' id='LC7320'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (route != null) {</div><div class='line' id='LC7321'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (route.namedArguments.length === this.get(&#39;args&#39;).length) {</div><div class='line' id='LC7322'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return route;</div><div class='line' id='LC7323'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7324'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7325'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7326'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return collectionRoute || memberRoute;</div><div class='line' id='LC7327'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7328'><br/></div><div class='line' id='LC7329'>&nbsp;&nbsp;&nbsp;&nbsp;NamedRouteQuery.accessor(&#39;path&#39;, function() {</div><div class='line' id='LC7330'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.path();</div><div class='line' id='LC7331'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7332'><br/></div><div class='line' id='LC7333'>&nbsp;&nbsp;&nbsp;&nbsp;NamedRouteQuery.accessor(&#39;routeMap&#39;, &#39;args&#39;, &#39;cardinality&#39;, &#39;hashValue&#39;, Batman.Property.defaultAccessor);</div><div class='line' id='LC7334'><br/></div><div class='line' id='LC7335'>&nbsp;&nbsp;&nbsp;&nbsp;NamedRouteQuery.accessor({</div><div class='line' id='LC7336'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function(key) {</div><div class='line' id='LC7337'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (key == null) {</div><div class='line' id='LC7338'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC7339'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7340'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof key === &#39;string&#39;) {</div><div class='line' id='LC7341'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.nextQueryForName(key);</div><div class='line' id='LC7342'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC7343'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.nextQueryWithArgument(key);</div><div class='line' id='LC7344'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7345'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC7346'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache: false</div><div class='line' id='LC7347'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7348'><br/></div><div class='line' id='LC7349'>&nbsp;&nbsp;&nbsp;&nbsp;NamedRouteQuery.accessor(&#39;withHash&#39;, function() {</div><div class='line' id='LC7350'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC7351'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.Accessible(function(hashValue) {</div><div class='line' id='LC7352'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.withHash(hashValue);</div><div class='line' id='LC7353'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7354'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7355'><br/></div><div class='line' id='LC7356'>&nbsp;&nbsp;&nbsp;&nbsp;NamedRouteQuery.prototype.withHash = function(hashValue) {</div><div class='line' id='LC7357'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var clone;</div><div class='line' id='LC7358'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clone = this.clone();</div><div class='line' id='LC7359'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clone.set(&#39;hashValue&#39;, hashValue);</div><div class='line' id='LC7360'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return clone;</div><div class='line' id='LC7361'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7362'><br/></div><div class='line' id='LC7363'>&nbsp;&nbsp;&nbsp;&nbsp;NamedRouteQuery.prototype.nextQueryForName = function(key) {</div><div class='line' id='LC7364'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var map;</div><div class='line' id='LC7365'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (map = this.get(&#39;routeMap&#39;).childrenByName[key]) {</div><div class='line' id='LC7366'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.NamedRouteQuery(map, this.args);</div><div class='line' id='LC7367'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC7368'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.developer.error(&quot;Couldn&#39;t find a route for the name &quot; + key + &quot;!&quot;);</div><div class='line' id='LC7369'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7370'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7371'><br/></div><div class='line' id='LC7372'>&nbsp;&nbsp;&nbsp;&nbsp;NamedRouteQuery.prototype.nextQueryWithArgument = function(arg) {</div><div class='line' id='LC7373'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var args;</div><div class='line' id='LC7374'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args = this.args.slice(0);</div><div class='line' id='LC7375'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args.push(arg);</div><div class='line' id='LC7376'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.clone(args);</div><div class='line' id='LC7377'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7378'><br/></div><div class='line' id='LC7379'>&nbsp;&nbsp;&nbsp;&nbsp;NamedRouteQuery.prototype.path = function() {</div><div class='line' id='LC7380'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var argumentName, argumentValue, index, namedArguments, params, _i, _len;</div><div class='line' id='LC7381'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params = {};</div><div class='line' id='LC7382'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;namedArguments = this.get(&#39;route.namedArguments&#39;);</div><div class='line' id='LC7383'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (index = _i = 0, _len = namedArguments.length; _i &lt; _len; index = ++_i) {</div><div class='line' id='LC7384'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;argumentName = namedArguments[index];</div><div class='line' id='LC7385'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((argumentValue = this.get(&#39;args&#39;)[index]) != null) {</div><div class='line' id='LC7386'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params[argumentName] = this._toParam(argumentValue);</div><div class='line' id='LC7387'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7388'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7389'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.get(&#39;hashValue&#39;) != null) {</div><div class='line' id='LC7390'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params[&#39;#&#39;] = this.get(&#39;hashValue&#39;);</div><div class='line' id='LC7391'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7392'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&#39;route&#39;).pathFromParams(params);</div><div class='line' id='LC7393'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7394'><br/></div><div class='line' id='LC7395'>&nbsp;&nbsp;&nbsp;&nbsp;NamedRouteQuery.prototype.toString = function() {</div><div class='line' id='LC7396'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.path();</div><div class='line' id='LC7397'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7398'><br/></div><div class='line' id='LC7399'>&nbsp;&nbsp;&nbsp;&nbsp;NamedRouteQuery.prototype.clone = function(args) {</div><div class='line' id='LC7400'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (args == null) {</div><div class='line' id='LC7401'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args = this.args;</div><div class='line' id='LC7402'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7403'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.NamedRouteQuery(this.routeMap, args);</div><div class='line' id='LC7404'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7405'><br/></div><div class='line' id='LC7406'>&nbsp;&nbsp;&nbsp;&nbsp;NamedRouteQuery.prototype._toParam = function(arg) {</div><div class='line' id='LC7407'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (arg instanceof Batman.AssociationProxy) {</div><div class='line' id='LC7408'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arg = arg.get(&#39;target&#39;);</div><div class='line' id='LC7409'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7410'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((arg != null ? arg.toParam : void 0) != null) {</div><div class='line' id='LC7411'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return arg.toParam();</div><div class='line' id='LC7412'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC7413'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return arg;</div><div class='line' id='LC7414'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7415'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7416'><br/></div><div class='line' id='LC7417'>&nbsp;&nbsp;&nbsp;&nbsp;NamedRouteQuery.prototype._queryAccess = function(key, arg) {</div><div class='line' id='LC7418'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var query;</div><div class='line' id='LC7419'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;query = this.nextQueryForName(key);</div><div class='line' id='LC7420'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (arg != null) {</div><div class='line' id='LC7421'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;query = query.nextQueryWithArgument(arg);</div><div class='line' id='LC7422'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7423'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return query;</div><div class='line' id='LC7424'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7425'><br/></div><div class='line' id='LC7426'>&nbsp;&nbsp;&nbsp;&nbsp;return NamedRouteQuery;</div><div class='line' id='LC7427'><br/></div><div class='line' id='LC7428'>&nbsp;&nbsp;})(Batman.Object);</div><div class='line' id='LC7429'><br/></div><div class='line' id='LC7430'>}).call(this);</div><div class='line' id='LC7431'><br/></div><div class='line' id='LC7432'>(function() {</div><div class='line' id='LC7433'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC7434'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC7435'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC7436'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC7437'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7438'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC7439'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC7440'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7441'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC7442'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC7443'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC7444'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC7445'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7446'><br/></div><div class='line' id='LC7447'>&nbsp;&nbsp;Batman.Dispatcher = (function(_super) {</div><div class='line' id='LC7448'>&nbsp;&nbsp;&nbsp;&nbsp;var ControllerDirectory;</div><div class='line' id='LC7449'><br/></div><div class='line' id='LC7450'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(Dispatcher, _super);</div><div class='line' id='LC7451'><br/></div><div class='line' id='LC7452'>&nbsp;&nbsp;&nbsp;&nbsp;Dispatcher.canInferRoute = function(argument) {</div><div class='line' id='LC7453'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return argument instanceof Batman.Model || argument instanceof Batman.AssociationProxy || argument.prototype instanceof Batman.Model;</div><div class='line' id='LC7454'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7455'><br/></div><div class='line' id='LC7456'>&nbsp;&nbsp;&nbsp;&nbsp;Dispatcher.paramsFromArgument = function(argument) {</div><div class='line' id='LC7457'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var resourceNameFromModel;</div><div class='line' id='LC7458'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resourceNameFromModel = function(model) {</div><div class='line' id='LC7459'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.helpers.camelize(Batman.helpers.pluralize(model.get(&#39;resourceName&#39;)), true);</div><div class='line' id='LC7460'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7461'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this.canInferRoute(argument)) {</div><div class='line' id='LC7462'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return argument;</div><div class='line' id='LC7463'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7464'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (argument instanceof Batman.Model || argument instanceof Batman.AssociationProxy) {</div><div class='line' id='LC7465'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (argument.isProxy) {</div><div class='line' id='LC7466'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;argument = argument.get(&#39;target&#39;);</div><div class='line' id='LC7467'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7468'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (argument != null) {</div><div class='line' id='LC7469'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return {</div><div class='line' id='LC7470'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controller: resourceNameFromModel(argument.constructor),</div><div class='line' id='LC7471'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;action: &#39;show&#39;,</div><div class='line' id='LC7472'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id: argument.get(&#39;id&#39;)</div><div class='line' id='LC7473'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7474'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC7475'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return {};</div><div class='line' id='LC7476'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7477'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (argument.prototype instanceof Batman.Model) {</div><div class='line' id='LC7478'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return {</div><div class='line' id='LC7479'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controller: resourceNameFromModel(argument),</div><div class='line' id='LC7480'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;action: &#39;index&#39;</div><div class='line' id='LC7481'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7482'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC7483'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return argument;</div><div class='line' id='LC7484'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7485'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7486'><br/></div><div class='line' id='LC7487'>&nbsp;&nbsp;&nbsp;&nbsp;ControllerDirectory = (function(_super1) {</div><div class='line' id='LC7488'><br/></div><div class='line' id='LC7489'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__extends(ControllerDirectory, _super1);</div><div class='line' id='LC7490'><br/></div><div class='line' id='LC7491'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ControllerDirectory() {</div><div class='line' id='LC7492'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ControllerDirectory.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC7493'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7494'><br/></div><div class='line' id='LC7495'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ControllerDirectory.accessor(&#39;__app&#39;, Batman.Property.defaultAccessor);</div><div class='line' id='LC7496'><br/></div><div class='line' id='LC7497'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ControllerDirectory.accessor(function(key) {</div><div class='line' id='LC7498'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&quot;__app.&quot; + (Batman.helpers.capitalize(key)) + &quot;Controller.sharedController&quot;);</div><div class='line' id='LC7499'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7500'><br/></div><div class='line' id='LC7501'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ControllerDirectory;</div><div class='line' id='LC7502'><br/></div><div class='line' id='LC7503'>&nbsp;&nbsp;&nbsp;&nbsp;})(Batman.Object);</div><div class='line' id='LC7504'><br/></div><div class='line' id='LC7505'>&nbsp;&nbsp;&nbsp;&nbsp;Dispatcher.accessor(&#39;controllers&#39;, function() {</div><div class='line' id='LC7506'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new ControllerDirectory({</div><div class='line' id='LC7507'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__app: this.get(&#39;app&#39;)</div><div class='line' id='LC7508'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7509'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7510'><br/></div><div class='line' id='LC7511'>&nbsp;&nbsp;&nbsp;&nbsp;function Dispatcher(app, routeMap) {</div><div class='line' id='LC7512'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dispatcher.__super__.constructor.call(this, {</div><div class='line' id='LC7513'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;app: app,</div><div class='line' id='LC7514'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;routeMap: routeMap</div><div class='line' id='LC7515'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7516'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7517'><br/></div><div class='line' id='LC7518'>&nbsp;&nbsp;&nbsp;&nbsp;Dispatcher.prototype.routeForParams = function(params) {</div><div class='line' id='LC7519'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params = this.constructor.paramsFromArgument(params);</div><div class='line' id='LC7520'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&#39;routeMap&#39;).routeForParams(params);</div><div class='line' id='LC7521'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7522'><br/></div><div class='line' id='LC7523'>&nbsp;&nbsp;&nbsp;&nbsp;Dispatcher.prototype.pathFromParams = function(params) {</div><div class='line' id='LC7524'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC7525'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof params === &#39;string&#39;) {</div><div class='line' id='LC7526'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return params;</div><div class='line' id='LC7527'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7528'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params = this.constructor.paramsFromArgument(params);</div><div class='line' id='LC7529'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = this.routeForParams(params)) != null ? _ref.pathFromParams(params) : void 0;</div><div class='line' id='LC7530'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7531'><br/></div><div class='line' id='LC7532'>&nbsp;&nbsp;&nbsp;&nbsp;Dispatcher.prototype.dispatch = function(params) {</div><div class='line' id='LC7533'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var error, inferredParams, path, route, _ref, _ref1;</div><div class='line' id='LC7534'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inferredParams = this.constructor.paramsFromArgument(params);</div><div class='line' id='LC7535'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;route = this.routeForParams(inferredParams);</div><div class='line' id='LC7536'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (route) {</div><div class='line' id='LC7537'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = route.pathAndParamsFromArgument(inferredParams), path = _ref[0], params = _ref[1];</div><div class='line' id='LC7538'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set(&#39;app.currentRoute&#39;, route);</div><div class='line' id='LC7539'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set(&#39;app.currentURL&#39;, path);</div><div class='line' id='LC7540'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.get(&#39;app.currentParams&#39;).replace(params || {});</div><div class='line' id='LC7541'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;route.dispatch(params);</div><div class='line' id='LC7542'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC7543'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Batman.typeOf(params) === &#39;Object&#39; &amp;&amp; !this.constructor.canInferRoute(params)) {</div><div class='line' id='LC7544'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&#39;app.currentParams&#39;).replace(params);</div><div class='line' id='LC7545'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC7546'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.get(&#39;app.currentParams&#39;).clear();</div><div class='line' id='LC7547'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7548'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error = {</div><div class='line' id='LC7549'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type: &#39;404&#39;,</div><div class='line' id='LC7550'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isPrevented: false,</div><div class='line' id='LC7551'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preventDefault: function() {</div><div class='line' id='LC7552'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.isPrevented = true;</div><div class='line' id='LC7553'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7554'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7555'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref1 = Batman.currentApp) != null) {</div><div class='line' id='LC7556'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1.fire(&#39;error&#39;, error);</div><div class='line' id='LC7557'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7558'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (error.isPrevented) {</div><div class='line' id='LC7559'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return params;</div><div class='line' id='LC7560'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7561'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (params !== &#39;/404&#39;) {</div><div class='line' id='LC7562'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.redirect(&#39;/404&#39;);</div><div class='line' id='LC7563'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7564'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7565'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return path;</div><div class='line' id='LC7566'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7567'><br/></div><div class='line' id='LC7568'>&nbsp;&nbsp;&nbsp;&nbsp;return Dispatcher;</div><div class='line' id='LC7569'><br/></div><div class='line' id='LC7570'>&nbsp;&nbsp;}).call(this, Batman.Object);</div><div class='line' id='LC7571'><br/></div><div class='line' id='LC7572'>}).call(this);</div><div class='line' id='LC7573'><br/></div><div class='line' id='LC7574'>(function() {</div><div class='line' id='LC7575'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC7576'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC7577'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC7578'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC7579'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7580'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC7581'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC7582'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7583'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC7584'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC7585'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC7586'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC7587'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7588'><br/></div><div class='line' id='LC7589'>&nbsp;&nbsp;Batman.Route = (function(_super) {</div><div class='line' id='LC7590'><br/></div><div class='line' id='LC7591'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(Route, _super);</div><div class='line' id='LC7592'><br/></div><div class='line' id='LC7593'>&nbsp;&nbsp;&nbsp;&nbsp;Route.regexps = {</div><div class='line' id='LC7594'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;namedParam: /:([\w\d]+)/g,</div><div class='line' id='LC7595'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;splatParam: /\*([\w\d]+)/g,</div><div class='line' id='LC7596'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;queryParam: &#39;(?:\\?.+)?&#39;,</div><div class='line' id='LC7597'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;namedOrSplat: /[:|\*]([\w\d]+)/g,</div><div class='line' id='LC7598'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;namePrefix: &#39;[:|\*]&#39;,</div><div class='line' id='LC7599'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;escapeRegExp: /[-[\]{}+?.,\\^$|#\s]/g,</div><div class='line' id='LC7600'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;openOptParam: /\(/g,</div><div class='line' id='LC7601'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;closeOptParam: /\)/g</div><div class='line' id='LC7602'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7603'><br/></div><div class='line' id='LC7604'>&nbsp;&nbsp;&nbsp;&nbsp;Route.prototype.optionKeys = [&#39;member&#39;, &#39;collection&#39;];</div><div class='line' id='LC7605'><br/></div><div class='line' id='LC7606'>&nbsp;&nbsp;&nbsp;&nbsp;Route.prototype.testKeys = [&#39;controller&#39;, &#39;action&#39;];</div><div class='line' id='LC7607'><br/></div><div class='line' id='LC7608'>&nbsp;&nbsp;&nbsp;&nbsp;Route.prototype.isRoute = true;</div><div class='line' id='LC7609'><br/></div><div class='line' id='LC7610'>&nbsp;&nbsp;&nbsp;&nbsp;function Route(templatePath, baseParams) {</div><div class='line' id='LC7611'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var k, matches, namedArguments, pattern, properties, regexp, regexps, _i, _len, _ref;</div><div class='line' id='LC7612'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;regexps = this.constructor.regexps;</div><div class='line' id='LC7613'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (templatePath.indexOf(&#39;/&#39;) !== 0) {</div><div class='line' id='LC7614'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;templatePath = &quot;/&quot; + templatePath;</div><div class='line' id='LC7615'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7616'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pattern = templatePath.replace(regexps.escapeRegExp, &#39;\\$&amp;&#39;);</div><div class='line' id='LC7617'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;regexp = RegExp(&quot;^&quot; + (pattern.replace(regexps.openOptParam, &#39;(?:&#39;).replace(regexps.closeOptParam, &#39;)?&#39;).replace(regexps.namedParam, &#39;([^\/]+)&#39;).replace(regexps.splatParam, &#39;(.*?)&#39;)) + regexps.queryParam + &quot;$&quot;);</div><div class='line' id='LC7618'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;regexps.namedOrSplat.lastIndex = 0;</div><div class='line' id='LC7619'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;namedArguments = ((function() {</div><div class='line' id='LC7620'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _results;</div><div class='line' id='LC7621'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC7622'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (matches = regexps.namedOrSplat.exec(pattern)) {</div><div class='line' id='LC7623'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(matches[1]);</div><div class='line' id='LC7624'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7625'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC7626'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})());</div><div class='line' id='LC7627'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;properties = {</div><div class='line' id='LC7628'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;templatePath: templatePath,</div><div class='line' id='LC7629'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pattern: pattern,</div><div class='line' id='LC7630'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;regexp: regexp,</div><div class='line' id='LC7631'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;namedArguments: namedArguments,</div><div class='line' id='LC7632'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;baseParams: baseParams</div><div class='line' id='LC7633'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7634'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this.optionKeys;</div><div class='line' id='LC7635'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC7636'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k = _ref[_i];</div><div class='line' id='LC7637'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;properties[k] = baseParams[k];</div><div class='line' id='LC7638'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete baseParams[k];</div><div class='line' id='LC7639'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7640'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Route.__super__.constructor.call(this, properties);</div><div class='line' id='LC7641'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7642'><br/></div><div class='line' id='LC7643'>&nbsp;&nbsp;&nbsp;&nbsp;Route.prototype.paramsFromPath = function(pathAndQuery) {</div><div class='line' id='LC7644'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var index, match, matches, name, namedArguments, params, uri, _i, _len;</div><div class='line' id='LC7645'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uri = new Batman.URI(pathAndQuery);</div><div class='line' id='LC7646'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;namedArguments = this.get(&#39;namedArguments&#39;);</div><div class='line' id='LC7647'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params = Batman.extend({</div><div class='line' id='LC7648'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path: uri.path</div><div class='line' id='LC7649'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, this.get(&#39;baseParams&#39;));</div><div class='line' id='LC7650'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;matches = this.get(&#39;regexp&#39;).exec(uri.path).slice(1);</div><div class='line' id='LC7651'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (index = _i = 0, _len = matches.length; _i &lt; _len; index = ++_i) {</div><div class='line' id='LC7652'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;match = matches[index];</div><div class='line' id='LC7653'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name = namedArguments[index];</div><div class='line' id='LC7654'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params[name] = match;</div><div class='line' id='LC7655'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7656'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.extend(params, uri.queryParams);</div><div class='line' id='LC7657'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7658'><br/></div><div class='line' id='LC7659'>&nbsp;&nbsp;&nbsp;&nbsp;Route.prototype.pathFromParams = function(argumentParams) {</div><div class='line' id='LC7660'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var hash, key, name, newPath, params, path, query, regexp, regexps, _i, _j, _len, _len1, _ref, _ref1;</div><div class='line' id='LC7661'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params = Batman.extend({}, argumentParams);</div><div class='line' id='LC7662'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path = this.get(&#39;templatePath&#39;);</div><div class='line' id='LC7663'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;regexps = this.constructor.regexps;</div><div class='line' id='LC7664'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this.get(&#39;namedArguments&#39;);</div><div class='line' id='LC7665'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC7666'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name = _ref[_i];</div><div class='line' id='LC7667'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;regexp = RegExp(&quot;&quot; + regexps.namePrefix + name);</div><div class='line' id='LC7668'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newPath = path.replace(regexp, (params[name] != null ? params[name] : &#39;&#39;));</div><div class='line' id='LC7669'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (newPath !== path) {</div><div class='line' id='LC7670'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete params[name];</div><div class='line' id='LC7671'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path = newPath;</div><div class='line' id='LC7672'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7673'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7674'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path = path.replace(regexps.openOptParam, &#39;&#39;).replace(regexps.closeOptParam, &#39;&#39;).replace(/([^\/])\/+$/, &#39;$1&#39;);</div><div class='line' id='LC7675'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1 = this.testKeys;</div><div class='line' id='LC7676'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_j = 0, _len1 = _ref1.length; _j &lt; _len1; _j++) {</div><div class='line' id='LC7677'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = _ref1[_j];</div><div class='line' id='LC7678'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete params[key];</div><div class='line' id='LC7679'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7680'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (params[&#39;#&#39;]) {</div><div class='line' id='LC7681'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hash = params[&#39;#&#39;];</div><div class='line' id='LC7682'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete params[&#39;#&#39;];</div><div class='line' id='LC7683'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7684'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;query = Batman.URI.queryFromParams(params);</div><div class='line' id='LC7685'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (query) {</div><div class='line' id='LC7686'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path += &quot;?&quot; + query;</div><div class='line' id='LC7687'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7688'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (hash) {</div><div class='line' id='LC7689'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path += &quot;#&quot; + hash;</div><div class='line' id='LC7690'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7691'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return path;</div><div class='line' id='LC7692'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7693'><br/></div><div class='line' id='LC7694'>&nbsp;&nbsp;&nbsp;&nbsp;Route.prototype.test = function(pathOrParams) {</div><div class='line' id='LC7695'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var key, path, value, _i, _len, _ref;</div><div class='line' id='LC7696'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof pathOrParams === &#39;string&#39;) {</div><div class='line' id='LC7697'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path = pathOrParams;</div><div class='line' id='LC7698'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (pathOrParams.path != null) {</div><div class='line' id='LC7699'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path = pathOrParams.path;</div><div class='line' id='LC7700'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC7701'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path = this.pathFromParams(pathOrParams);</div><div class='line' id='LC7702'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this.testKeys;</div><div class='line' id='LC7703'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC7704'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = _ref[_i];</div><div class='line' id='LC7705'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((value = this.get(key)) != null) {</div><div class='line' id='LC7706'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (pathOrParams[key] !== value) {</div><div class='line' id='LC7707'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC7708'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7709'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7710'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7711'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7712'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&#39;regexp&#39;).test(path);</div><div class='line' id='LC7713'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7714'><br/></div><div class='line' id='LC7715'>&nbsp;&nbsp;&nbsp;&nbsp;Route.prototype.pathAndParamsFromArgument = function(pathOrParams) {</div><div class='line' id='LC7716'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var params, path;</div><div class='line' id='LC7717'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof pathOrParams === &#39;string&#39;) {</div><div class='line' id='LC7718'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params = this.paramsFromPath(pathOrParams);</div><div class='line' id='LC7719'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path = pathOrParams;</div><div class='line' id='LC7720'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC7721'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params = pathOrParams;</div><div class='line' id='LC7722'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path = this.pathFromParams(pathOrParams);</div><div class='line' id='LC7723'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7724'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return [path, params];</div><div class='line' id='LC7725'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7726'><br/></div><div class='line' id='LC7727'>&nbsp;&nbsp;&nbsp;&nbsp;Route.prototype.dispatch = function(params) {</div><div class='line' id='LC7728'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this.test(params)) {</div><div class='line' id='LC7729'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC7730'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7731'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&#39;callback&#39;)(params);</div><div class='line' id='LC7732'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7733'><br/></div><div class='line' id='LC7734'>&nbsp;&nbsp;&nbsp;&nbsp;Route.prototype.callback = function() {</div><div class='line' id='LC7735'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new Batman.DevelopmentError(&quot;Override callback in a Route subclass&quot;);</div><div class='line' id='LC7736'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7737'><br/></div><div class='line' id='LC7738'>&nbsp;&nbsp;&nbsp;&nbsp;return Route;</div><div class='line' id='LC7739'><br/></div><div class='line' id='LC7740'>&nbsp;&nbsp;})(Batman.Object);</div><div class='line' id='LC7741'><br/></div><div class='line' id='LC7742'>}).call(this);</div><div class='line' id='LC7743'><br/></div><div class='line' id='LC7744'>(function() {</div><div class='line' id='LC7745'>&nbsp;&nbsp;var __bind = function(fn, me) {</div><div class='line' id='LC7746'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function() {</div><div class='line' id='LC7747'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return fn.apply(me, arguments);</div><div class='line' id='LC7748'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7749'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC7750'>&nbsp;&nbsp;&nbsp;&nbsp;__hasProp = {}.hasOwnProperty,</div><div class='line' id='LC7751'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC7752'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC7753'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC7754'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7755'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC7756'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC7757'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7758'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC7759'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC7760'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC7761'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC7762'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7763'><br/></div><div class='line' id='LC7764'>&nbsp;&nbsp;Batman.ControllerActionRoute = (function(_super) {</div><div class='line' id='LC7765'><br/></div><div class='line' id='LC7766'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(ControllerActionRoute, _super);</div><div class='line' id='LC7767'><br/></div><div class='line' id='LC7768'>&nbsp;&nbsp;&nbsp;&nbsp;ControllerActionRoute.prototype.optionKeys = [&#39;member&#39;, &#39;collection&#39;, &#39;app&#39;, &#39;controller&#39;, &#39;action&#39;];</div><div class='line' id='LC7769'><br/></div><div class='line' id='LC7770'>&nbsp;&nbsp;&nbsp;&nbsp;function ControllerActionRoute(templatePath, options) {</div><div class='line' id='LC7771'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.callback = __bind(this.callback, this);</div><div class='line' id='LC7772'><br/></div><div class='line' id='LC7773'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var action, controller, _ref;</div><div class='line' id='LC7774'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (options.signature) {</div><div class='line' id='LC7775'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = options.signature.split(&#39;#&#39;), controller = _ref[0], action = _ref[1];</div><div class='line' id='LC7776'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;action || (action = &#39;index&#39;);</div><div class='line' id='LC7777'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.controller = controller;</div><div class='line' id='LC7778'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.action = action;</div><div class='line' id='LC7779'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete options.signature;</div><div class='line' id='LC7780'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7781'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ControllerActionRoute.__super__.constructor.call(this, templatePath, options);</div><div class='line' id='LC7782'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7783'><br/></div><div class='line' id='LC7784'>&nbsp;&nbsp;&nbsp;&nbsp;ControllerActionRoute.prototype.callback = function(params) {</div><div class='line' id='LC7785'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var controller;</div><div class='line' id='LC7786'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controller = this.get(&quot;app.dispatcher.controllers.&quot; + (this.get(&#39;controller&#39;)));</div><div class='line' id='LC7787'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return controller.dispatch(this.get(&#39;action&#39;), params);</div><div class='line' id='LC7788'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7789'><br/></div><div class='line' id='LC7790'>&nbsp;&nbsp;&nbsp;&nbsp;return ControllerActionRoute;</div><div class='line' id='LC7791'><br/></div><div class='line' id='LC7792'>&nbsp;&nbsp;})(Batman.Route);</div><div class='line' id='LC7793'><br/></div><div class='line' id='LC7794'>}).call(this);</div><div class='line' id='LC7795'><br/></div><div class='line' id='LC7796'>(function() {</div><div class='line' id='LC7797'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC7798'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC7799'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC7800'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC7801'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7802'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC7803'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC7804'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7805'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC7806'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC7807'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC7808'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC7809'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7810'><br/></div><div class='line' id='LC7811'>&nbsp;&nbsp;Batman.CallbackActionRoute = (function(_super) {</div><div class='line' id='LC7812'><br/></div><div class='line' id='LC7813'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(CallbackActionRoute, _super);</div><div class='line' id='LC7814'><br/></div><div class='line' id='LC7815'>&nbsp;&nbsp;&nbsp;&nbsp;function CallbackActionRoute() {</div><div class='line' id='LC7816'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return CallbackActionRoute.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC7817'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7818'><br/></div><div class='line' id='LC7819'>&nbsp;&nbsp;&nbsp;&nbsp;CallbackActionRoute.prototype.optionKeys = [&#39;member&#39;, &#39;collection&#39;, &#39;callback&#39;, &#39;app&#39;];</div><div class='line' id='LC7820'><br/></div><div class='line' id='LC7821'>&nbsp;&nbsp;&nbsp;&nbsp;CallbackActionRoute.prototype.controller = false;</div><div class='line' id='LC7822'><br/></div><div class='line' id='LC7823'>&nbsp;&nbsp;&nbsp;&nbsp;CallbackActionRoute.prototype.action = false;</div><div class='line' id='LC7824'><br/></div><div class='line' id='LC7825'>&nbsp;&nbsp;&nbsp;&nbsp;return CallbackActionRoute;</div><div class='line' id='LC7826'><br/></div><div class='line' id='LC7827'>&nbsp;&nbsp;})(Batman.Route);</div><div class='line' id='LC7828'><br/></div><div class='line' id='LC7829'>}).call(this);</div><div class='line' id='LC7830'><br/></div><div class='line' id='LC7831'>(function() {</div><div class='line' id='LC7832'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC7833'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC7834'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC7835'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC7836'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7837'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC7838'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC7839'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7840'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC7841'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC7842'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC7843'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC7844'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC7845'>&nbsp;&nbsp;&nbsp;&nbsp;__slice = [].slice;</div><div class='line' id='LC7846'><br/></div><div class='line' id='LC7847'>&nbsp;&nbsp;Batman.Hash = (function(_super) {</div><div class='line' id='LC7848'>&nbsp;&nbsp;&nbsp;&nbsp;var k, _fn, _i, _j, _len, _len1, _ref, _ref1, _this = this;</div><div class='line' id='LC7849'><br/></div><div class='line' id='LC7850'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(Hash, _super);</div><div class='line' id='LC7851'><br/></div><div class='line' id='LC7852'>&nbsp;&nbsp;&nbsp;&nbsp;Hash.Metadata = (function(_super1) {</div><div class='line' id='LC7853'><br/></div><div class='line' id='LC7854'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__extends(Metadata, _super1);</div><div class='line' id='LC7855'><br/></div><div class='line' id='LC7856'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.extend(Metadata.prototype, Batman.Enumerable);</div><div class='line' id='LC7857'><br/></div><div class='line' id='LC7858'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function Metadata(hash) {</div><div class='line' id='LC7859'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.hash = hash;</div><div class='line' id='LC7860'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7861'><br/></div><div class='line' id='LC7862'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Metadata.accessor(&#39;length&#39;, function() {</div><div class='line' id='LC7863'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.hash.registerAsMutableSource();</div><div class='line' id='LC7864'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.hash.length;</div><div class='line' id='LC7865'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7866'><br/></div><div class='line' id='LC7867'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Metadata.accessor(&#39;isEmpty&#39;, &#39;keys&#39;, &#39;toArray&#39;, function(key) {</div><div class='line' id='LC7868'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.hash.registerAsMutableSource();</div><div class='line' id='LC7869'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.hash[key]();</div><div class='line' id='LC7870'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7871'><br/></div><div class='line' id='LC7872'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Metadata.prototype.forEach = function() {</div><div class='line' id='LC7873'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC7874'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = this.hash).forEach.apply(_ref, arguments);</div><div class='line' id='LC7875'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7876'><br/></div><div class='line' id='LC7877'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Metadata;</div><div class='line' id='LC7878'><br/></div><div class='line' id='LC7879'>&nbsp;&nbsp;&nbsp;&nbsp;})(Batman.Object);</div><div class='line' id='LC7880'><br/></div><div class='line' id='LC7881'>&nbsp;&nbsp;&nbsp;&nbsp;function Hash() {</div><div class='line' id='LC7882'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.meta = new this.constructor.Metadata(this);</div><div class='line' id='LC7883'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.SimpleHash.apply(this, arguments);</div><div class='line' id='LC7884'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hash.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC7885'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7886'><br/></div><div class='line' id='LC7887'>&nbsp;&nbsp;&nbsp;&nbsp;Batman.extend(Hash.prototype, Batman.Enumerable);</div><div class='line' id='LC7888'><br/></div><div class='line' id='LC7889'>&nbsp;&nbsp;&nbsp;&nbsp;Hash.prototype.propertyClass = Batman.Property;</div><div class='line' id='LC7890'><br/></div><div class='line' id='LC7891'>&nbsp;&nbsp;&nbsp;&nbsp;Hash.defaultAccessor = {</div><div class='line' id='LC7892'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: Batman.SimpleHash.prototype.get,</div><div class='line' id='LC7893'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set: Hash.mutation(function(key, value) {</div><div class='line' id='LC7894'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result;</div><div class='line' id='LC7895'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = Batman.SimpleHash.prototype.set.call(this, key, value);</div><div class='line' id='LC7896'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fire(&#39;itemsWereAdded&#39;, key);</div><div class='line' id='LC7897'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC7898'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}),</div><div class='line' id='LC7899'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unset: Hash.mutation(function(key) {</div><div class='line' id='LC7900'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result;</div><div class='line' id='LC7901'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = Batman.SimpleHash.prototype.unset.call(this, key);</div><div class='line' id='LC7902'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (result != null) {</div><div class='line' id='LC7903'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fire(&#39;itemsWereRemoved&#39;, key);</div><div class='line' id='LC7904'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7905'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC7906'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}),</div><div class='line' id='LC7907'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache: false</div><div class='line' id='LC7908'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7909'><br/></div><div class='line' id='LC7910'>&nbsp;&nbsp;&nbsp;&nbsp;Hash.accessor(Hash.defaultAccessor);</div><div class='line' id='LC7911'><br/></div><div class='line' id='LC7912'>&nbsp;&nbsp;&nbsp;&nbsp;Hash.prototype._preventMutationEvents = function(block) {</div><div class='line' id='LC7913'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.prevent(&#39;change&#39;);</div><div class='line' id='LC7914'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.prevent(&#39;itemsWereAdded&#39;);</div><div class='line' id='LC7915'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.prevent(&#39;itemsWereRemoved&#39;);</div><div class='line' id='LC7916'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC7917'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return block.call(this);</div><div class='line' id='LC7918'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} finally {</div><div class='line' id='LC7919'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.allow(&#39;change&#39;);</div><div class='line' id='LC7920'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.allow(&#39;itemsWereAdded&#39;);</div><div class='line' id='LC7921'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.allow(&#39;itemsWereRemoved&#39;);</div><div class='line' id='LC7922'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7923'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7924'><br/></div><div class='line' id='LC7925'>&nbsp;&nbsp;&nbsp;&nbsp;Hash.prototype.clear = Hash.mutation(function() {</div><div class='line' id='LC7926'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var keys, result;</div><div class='line' id='LC7927'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keys = this.keys();</div><div class='line' id='LC7928'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._preventMutationEvents(function() {</div><div class='line' id='LC7929'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC7930'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.forEach(function(k) {</div><div class='line' id='LC7931'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.unset(k);</div><div class='line' id='LC7932'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7933'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7934'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = Batman.SimpleHash.prototype.clear.call(this);</div><div class='line' id='LC7935'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fire.apply(this, [&#39;itemsWereRemoved&#39;].concat(__slice.call(keys)));</div><div class='line' id='LC7936'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC7937'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7938'><br/></div><div class='line' id='LC7939'>&nbsp;&nbsp;&nbsp;&nbsp;Hash.prototype.update = Hash.mutation(function(object) {</div><div class='line' id='LC7940'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var addedKeys;</div><div class='line' id='LC7941'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addedKeys = [];</div><div class='line' id='LC7942'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._preventMutationEvents(function() {</div><div class='line' id='LC7943'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC7944'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.forEach(object, function(k, v) {</div><div class='line' id='LC7945'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!_this.hasKey(k)) {</div><div class='line' id='LC7946'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addedKeys.push(k);</div><div class='line' id='LC7947'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7948'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.set(k, v);</div><div class='line' id='LC7949'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7950'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7951'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (addedKeys.length &gt; 0) {</div><div class='line' id='LC7952'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.fire.apply(this, [&#39;itemsWereAdded&#39;].concat(__slice.call(addedKeys)));</div><div class='line' id='LC7953'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7954'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7955'><br/></div><div class='line' id='LC7956'>&nbsp;&nbsp;&nbsp;&nbsp;Hash.prototype.replace = Hash.mutation(function(object) {</div><div class='line' id='LC7957'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var addedKeys, removedKeys;</div><div class='line' id='LC7958'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addedKeys = [];</div><div class='line' id='LC7959'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removedKeys = [];</div><div class='line' id='LC7960'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._preventMutationEvents(function() {</div><div class='line' id='LC7961'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC7962'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.forEach(function(k, _) {</div><div class='line' id='LC7963'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!Batman.objectHasKey(object, k)) {</div><div class='line' id='LC7964'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.unset(k);</div><div class='line' id='LC7965'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return removedKeys.push(k);</div><div class='line' id='LC7966'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7967'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7968'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.forEach(object, function(k, v) {</div><div class='line' id='LC7969'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!_this.hasKey(k)) {</div><div class='line' id='LC7970'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addedKeys.push(k);</div><div class='line' id='LC7971'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7972'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.set(k, v);</div><div class='line' id='LC7973'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7974'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7975'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (addedKeys.length &gt; 0) {</div><div class='line' id='LC7976'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fire.apply(this, [&#39;itemsWereAdded&#39;].concat(__slice.call(addedKeys)));</div><div class='line' id='LC7977'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7978'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (removedKeys.length &gt; 0) {</div><div class='line' id='LC7979'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.fire.apply(this, [&#39;itemsWereRemoved&#39;].concat(__slice.call(removedKeys)));</div><div class='line' id='LC7980'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7981'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC7982'><br/></div><div class='line' id='LC7983'>&nbsp;&nbsp;&nbsp;&nbsp;_ref = [&#39;equality&#39;, &#39;hashKeyFor&#39;, &#39;objectKey&#39;, &#39;prefixedKey&#39;, &#39;unprefixedKey&#39;];</div><div class='line' id='LC7984'>&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC7985'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k = _ref[_i];</div><div class='line' id='LC7986'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hash.prototype[k] = Batman.SimpleHash.prototype[k];</div><div class='line' id='LC7987'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC7988'><br/></div><div class='line' id='LC7989'>&nbsp;&nbsp;&nbsp;&nbsp;_ref1 = [&#39;hasKey&#39;, &#39;forEach&#39;, &#39;isEmpty&#39;, &#39;keys&#39;, &#39;toArray&#39;, &#39;merge&#39;, &#39;toJSON&#39;, &#39;toObject&#39;];</div><div class='line' id='LC7990'>&nbsp;&nbsp;&nbsp;&nbsp;_fn = function(k) {</div><div class='line' id='LC7991'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Hash.prototype[k] = function() {</div><div class='line' id='LC7992'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.registerAsMutableSource();</div><div class='line' id='LC7993'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.SimpleHash.prototype[k].apply(this, arguments);</div><div class='line' id='LC7994'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7995'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC7996'>&nbsp;&nbsp;&nbsp;&nbsp;for (_j = 0, _len1 = _ref1.length; _j &lt; _len1; _j++) {</div><div class='line' id='LC7997'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k = _ref1[_j];</div><div class='line' id='LC7998'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_fn(k);</div><div class='line' id='LC7999'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8000'><br/></div><div class='line' id='LC8001'>&nbsp;&nbsp;&nbsp;&nbsp;return Hash;</div><div class='line' id='LC8002'><br/></div><div class='line' id='LC8003'>&nbsp;&nbsp;}).call(this, Batman.Object);</div><div class='line' id='LC8004'><br/></div><div class='line' id='LC8005'>}).call(this);</div><div class='line' id='LC8006'><br/></div><div class='line' id='LC8007'>(function() {</div><div class='line' id='LC8008'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC8009'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC8010'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC8011'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC8012'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8013'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC8014'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC8015'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8016'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC8017'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC8018'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC8019'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC8020'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8021'><br/></div><div class='line' id='LC8022'>&nbsp;&nbsp;Batman.RenderCache = (function(_super) {</div><div class='line' id='LC8023'><br/></div><div class='line' id='LC8024'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(RenderCache, _super);</div><div class='line' id='LC8025'><br/></div><div class='line' id='LC8026'>&nbsp;&nbsp;&nbsp;&nbsp;RenderCache.prototype.maximumLength = 4;</div><div class='line' id='LC8027'><br/></div><div class='line' id='LC8028'>&nbsp;&nbsp;&nbsp;&nbsp;function RenderCache() {</div><div class='line' id='LC8029'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RenderCache.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC8030'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.keyQueue = [];</div><div class='line' id='LC8031'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8032'><br/></div><div class='line' id='LC8033'>&nbsp;&nbsp;&nbsp;&nbsp;RenderCache.prototype.viewForOptions = function(options) {</div><div class='line' id='LC8034'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC8035'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (options.cache === false || options.viewClass.prototype.cache === false) {</div><div class='line' id='LC8036'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._newViewFromOptions(options);</div><div class='line' id='LC8037'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8038'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.getOrSet(options, function() {</div><div class='line' id='LC8039'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this._newViewFromOptions(Batman.extend({}, options));</div><div class='line' id='LC8040'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC8041'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8042'><br/></div><div class='line' id='LC8043'>&nbsp;&nbsp;&nbsp;&nbsp;RenderCache.prototype._newViewFromOptions = function(options) {</div><div class='line' id='LC8044'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new options.viewClass(options);</div><div class='line' id='LC8045'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8046'><br/></div><div class='line' id='LC8047'>&nbsp;&nbsp;&nbsp;&nbsp;RenderCache.wrapAccessor(function(core) {</div><div class='line' id='LC8048'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return {</div><div class='line' id='LC8049'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache: false,</div><div class='line' id='LC8050'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function(key) {</div><div class='line' id='LC8051'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result;</div><div class='line' id='LC8052'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = core.get.call(this, key);</div><div class='line' id='LC8053'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (result) {</div><div class='line' id='LC8054'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._addOrBubbleKey(key);</div><div class='line' id='LC8055'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8056'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC8057'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC8058'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set: function(key, value) {</div><div class='line' id='LC8059'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result;</div><div class='line' id='LC8060'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = core.set.apply(this, arguments);</div><div class='line' id='LC8061'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.set(&#39;cached&#39;, true);</div><div class='line' id='LC8062'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._addOrBubbleKey(key);</div><div class='line' id='LC8063'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._evictExpiredKeys();</div><div class='line' id='LC8064'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC8065'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC8066'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unset: function(key) {</div><div class='line' id='LC8067'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result;</div><div class='line' id='LC8068'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = core.unset.apply(this, arguments);</div><div class='line' id='LC8069'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.set(&#39;cached&#39;, false);</div><div class='line' id='LC8070'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._removeKeyFromQueue(key);</div><div class='line' id='LC8071'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC8072'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8073'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8074'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC8075'><br/></div><div class='line' id='LC8076'>&nbsp;&nbsp;&nbsp;&nbsp;RenderCache.prototype.equality = function(incomingOptions, storageOptions) {</div><div class='line' id='LC8077'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var key;</div><div class='line' id='LC8078'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Object.keys(incomingOptions).length !== Object.keys(storageOptions).length) {</div><div class='line' id='LC8079'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC8080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8081'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (key in incomingOptions) {</div><div class='line' id='LC8082'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(key === &#39;view&#39;)) {</div><div class='line' id='LC8083'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (incomingOptions[key] !== storageOptions[key]) {</div><div class='line' id='LC8084'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC8085'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8086'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8087'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8088'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC8089'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8090'><br/></div><div class='line' id='LC8091'>&nbsp;&nbsp;&nbsp;&nbsp;RenderCache.prototype.reset = function() {</div><div class='line' id='LC8092'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var key, _i, _len, _ref, _results;</div><div class='line' id='LC8093'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this.keyQueue.slice(0);</div><div class='line' id='LC8094'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC8095'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC8096'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = _ref[_i];</div><div class='line' id='LC8097'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(this.unset(key));</div><div class='line' id='LC8098'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8099'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC8100'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8101'><br/></div><div class='line' id='LC8102'>&nbsp;&nbsp;&nbsp;&nbsp;RenderCache.prototype._addOrBubbleKey = function(key) {</div><div class='line' id='LC8103'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._removeKeyFromQueue(key);</div><div class='line' id='LC8104'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.keyQueue.unshift(key);</div><div class='line' id='LC8105'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8106'><br/></div><div class='line' id='LC8107'>&nbsp;&nbsp;&nbsp;&nbsp;RenderCache.prototype._removeKeyFromQueue = function(key) {</div><div class='line' id='LC8108'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var index, queuedKey, _i, _len, _ref;</div><div class='line' id='LC8109'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this.keyQueue;</div><div class='line' id='LC8110'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (index = _i = 0, _len = _ref.length; _i &lt; _len; index = ++_i) {</div><div class='line' id='LC8111'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;queuedKey = _ref[index];</div><div class='line' id='LC8112'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.equality(queuedKey, key)) {</div><div class='line' id='LC8113'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.keyQueue.splice(index, 1);</div><div class='line' id='LC8114'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC8115'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8116'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8117'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return key;</div><div class='line' id='LC8118'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8119'><br/></div><div class='line' id='LC8120'>&nbsp;&nbsp;&nbsp;&nbsp;RenderCache.prototype._evictExpiredKeys = function() {</div><div class='line' id='LC8121'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var currentKeys, i, key, _i, _ref, _ref1;</div><div class='line' id='LC8122'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.length &gt; this.maximumLength) {</div><div class='line' id='LC8123'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;currentKeys = this.keyQueue.slice(0);</div><div class='line' id='LC8124'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (i = _i = _ref = this.maximumLength, _ref1 = currentKeys.length; _ref &lt;= _ref1 ? _i &lt; _ref1 : _i &gt; _ref1; i = _ref &lt;= _ref1 ? ++_i : --_i) {</div><div class='line' id='LC8125'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = currentKeys[i];</div><div class='line' id='LC8126'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this.get(key).isInDOM()) {</div><div class='line' id='LC8127'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.unset(key);</div><div class='line' id='LC8128'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8129'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8130'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8131'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8132'><br/></div><div class='line' id='LC8133'>&nbsp;&nbsp;&nbsp;&nbsp;return RenderCache;</div><div class='line' id='LC8134'><br/></div><div class='line' id='LC8135'>&nbsp;&nbsp;})(Batman.Hash);</div><div class='line' id='LC8136'><br/></div><div class='line' id='LC8137'>}).call(this);</div><div class='line' id='LC8138'><br/></div><div class='line' id='LC8139'>(function() {</div><div class='line' id='LC8140'>&nbsp;&nbsp;var __bind = function(fn, me) {</div><div class='line' id='LC8141'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function() {</div><div class='line' id='LC8142'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return fn.apply(me, arguments);</div><div class='line' id='LC8143'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8144'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC8145'>&nbsp;&nbsp;&nbsp;&nbsp;__hasProp = {}.hasOwnProperty,</div><div class='line' id='LC8146'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC8147'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC8148'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC8149'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8150'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC8151'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC8152'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8153'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC8154'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC8155'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC8156'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC8157'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC8158'>&nbsp;&nbsp;&nbsp;&nbsp;__slice = [].slice,</div><div class='line' id='LC8159'>&nbsp;&nbsp;&nbsp;&nbsp;__indexOf = [].indexOf ||</div><div class='line' id='LC8160'>&nbsp;&nbsp;function(item) {</div><div class='line' id='LC8161'>&nbsp;&nbsp;&nbsp;&nbsp;for (var i = 0, l = this.length; i &lt; l; i++) {</div><div class='line' id='LC8162'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (i in this &amp;&amp; this[i] === item) return i;</div><div class='line' id='LC8163'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8164'>&nbsp;&nbsp;&nbsp;&nbsp;return -1;</div><div class='line' id='LC8165'>&nbsp;&nbsp;};</div><div class='line' id='LC8166'><br/></div><div class='line' id='LC8167'>&nbsp;&nbsp;Batman.Controller = (function(_super) {</div><div class='line' id='LC8168'>&nbsp;&nbsp;&nbsp;&nbsp;var _optionsFromFilterArguments;</div><div class='line' id='LC8169'><br/></div><div class='line' id='LC8170'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(Controller, _super);</div><div class='line' id='LC8171'><br/></div><div class='line' id='LC8172'>&nbsp;&nbsp;&nbsp;&nbsp;Controller.singleton(&#39;sharedController&#39;);</div><div class='line' id='LC8173'><br/></div><div class='line' id='LC8174'>&nbsp;&nbsp;&nbsp;&nbsp;Controller.wrapAccessor(&#39;routingKey&#39;, function(core) {</div><div class='line' id='LC8175'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return {</div><div class='line' id='LC8176'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function() {</div><div class='line' id='LC8177'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.routingKey != null) {</div><div class='line' id='LC8178'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.routingKey;</div><div class='line' id='LC8179'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC8180'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Batman.config.minificationErrors) {</div><div class='line' id='LC8181'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer.error(&quot;Please define `routingKey` on the prototype of &quot; + (Batman.functionName(this.constructor)) + &quot; in order for your controller to be minification safe.&quot;);</div><div class='line' id='LC8182'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8183'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.functionName(this.constructor).replace(/Controller$/, &#39;&#39;);</div><div class='line' id='LC8184'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8185'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8186'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8187'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC8188'><br/></div><div class='line' id='LC8189'>&nbsp;&nbsp;&nbsp;&nbsp;Controller.accessor(&#39;_renderContext&#39;, function() {</div><div class='line' id='LC8190'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.RenderContext.root().descend(this);</div><div class='line' id='LC8191'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC8192'><br/></div><div class='line' id='LC8193'>&nbsp;&nbsp;&nbsp;&nbsp;_optionsFromFilterArguments = function(options, nameOrFunction) {</div><div class='line' id='LC8194'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!nameOrFunction) {</div><div class='line' id='LC8195'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nameOrFunction = options;</div><div class='line' id='LC8196'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options = {};</div><div class='line' id='LC8197'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC8198'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof options === &#39;string&#39;) {</div><div class='line' id='LC8199'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options = {</div><div class='line' id='LC8200'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;only: [options]</div><div class='line' id='LC8201'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8202'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC8203'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (options.only &amp;&amp; Batman.typeOf(options.only) !== &#39;Array&#39;) {</div><div class='line' id='LC8204'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.only = [options.only];</div><div class='line' id='LC8205'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8206'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (options.except &amp;&amp; Batman.typeOf(options.except) !== &#39;Array&#39;) {</div><div class='line' id='LC8207'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.except = [options.except];</div><div class='line' id='LC8208'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8209'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8210'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8211'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.block = nameOrFunction;</div><div class='line' id='LC8212'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return options;</div><div class='line' id='LC8213'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8214'><br/></div><div class='line' id='LC8215'>&nbsp;&nbsp;&nbsp;&nbsp;Controller.beforeFilter = function() {</div><div class='line' id='LC8216'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var filters, options, _base;</div><div class='line' id='LC8217'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.initializeObject(this);</div><div class='line' id='LC8218'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options = _optionsFromFilterArguments.apply(null, arguments);</div><div class='line' id='LC8219'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filters = (_base = this._batman).beforeFilters || (_base.beforeFilters = []);</div><div class='line' id='LC8220'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return filters.push(options);</div><div class='line' id='LC8221'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8222'><br/></div><div class='line' id='LC8223'>&nbsp;&nbsp;&nbsp;&nbsp;Controller.afterFilter = function() {</div><div class='line' id='LC8224'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var filters, options, _base;</div><div class='line' id='LC8225'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.initializeObject(this);</div><div class='line' id='LC8226'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options = _optionsFromFilterArguments.apply(null, arguments);</div><div class='line' id='LC8227'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filters = (_base = this._batman).afterFilters || (_base.afterFilters = []);</div><div class='line' id='LC8228'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return filters.push(options);</div><div class='line' id='LC8229'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8230'><br/></div><div class='line' id='LC8231'>&nbsp;&nbsp;&nbsp;&nbsp;Controller.afterFilter(function(params) {</div><div class='line' id='LC8232'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.autoScrollToHash &amp;&amp; (params[&#39;#&#39;] != null)) {</div><div class='line' id='LC8233'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.scrollToHash(params[&#39;#&#39;]);</div><div class='line' id='LC8234'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8235'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC8236'><br/></div><div class='line' id='LC8237'>&nbsp;&nbsp;&nbsp;&nbsp;Controller.catchError = function() {</div><div class='line' id='LC8238'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var currentHandlers, error, errors, handlers, options, _base, _i, _j, _len, _results;</div><div class='line' id='LC8239'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errors = 2 &lt;= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), options = arguments[_i++];</div><div class='line' id='LC8240'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.initializeObject(this);</div><div class='line' id='LC8241'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(_base = this._batman).errorHandlers || (_base.errorHandlers = new Batman.SimpleHash);</div><div class='line' id='LC8242'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handlers = Batman.typeOf(options[&quot;with&quot;]) === &#39;Array&#39; ? options[&quot;with&quot;] : [options[&quot;with&quot;]];</div><div class='line' id='LC8243'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC8244'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_j = 0, _len = errors.length; _j &lt; _len; _j++) {</div><div class='line' id='LC8245'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error = errors[_j];</div><div class='line' id='LC8246'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;currentHandlers = this._batman.errorHandlers.get(error) || [];</div><div class='line' id='LC8247'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(this._batman.errorHandlers.set(error, currentHandlers.concat(handlers)));</div><div class='line' id='LC8248'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8249'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC8250'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8251'><br/></div><div class='line' id='LC8252'>&nbsp;&nbsp;&nbsp;&nbsp;Controller.prototype.errorHandler = function(callback) {</div><div class='line' id='LC8253'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var errorFrame, _ref, _this = this;</div><div class='line' id='LC8254'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errorFrame = (_ref = this._actionFrames) != null ? _ref[this._actionFrames.length - 1] : void 0;</div><div class='line' id='LC8255'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function(err, result, env) {</div><div class='line' id='LC8256'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (err) {</div><div class='line' id='LC8257'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (errorFrame != null ? errorFrame.error : void 0) {</div><div class='line' id='LC8258'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC8259'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8260'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (errorFrame != null) {</div><div class='line' id='LC8261'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errorFrame.error = err;</div><div class='line' id='LC8262'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8263'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!_this.handleError(err)) {</div><div class='line' id='LC8264'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw err;</div><div class='line' id='LC8265'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8266'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC8267'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return typeof callback === &quot;function&quot; ? callback(result, env) : void 0;</div><div class='line' id='LC8268'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8269'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8270'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8271'><br/></div><div class='line' id='LC8272'>&nbsp;&nbsp;&nbsp;&nbsp;Controller.prototype.handleError = function(error) {</div><div class='line' id='LC8273'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var handled, _ref, _this = this;</div><div class='line' id='LC8274'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handled = false;</div><div class='line' id='LC8275'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = this.constructor._batman.getAll(&#39;errorHandlers&#39;)) != null) {</div><div class='line' id='LC8276'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref.forEach(function(hash) {</div><div class='line' id='LC8277'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return hash.forEach(function(key, value) {</div><div class='line' id='LC8278'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var handler, _i, _len, _results;</div><div class='line' id='LC8279'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (error instanceof key) {</div><div class='line' id='LC8280'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handled = true;</div><div class='line' id='LC8281'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC8282'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = value.length; _i &lt; _len; _i++) {</div><div class='line' id='LC8283'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handler = value[_i];</div><div class='line' id='LC8284'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(handler.call(_this, error));</div><div class='line' id='LC8285'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8286'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC8287'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8288'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC8289'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC8290'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8291'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return handled;</div><div class='line' id='LC8292'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8293'><br/></div><div class='line' id='LC8294'>&nbsp;&nbsp;&nbsp;&nbsp;function Controller() {</div><div class='line' id='LC8295'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.redirect = __bind(this.redirect, this);</div><div class='line' id='LC8296'><br/></div><div class='line' id='LC8297'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.handleError = __bind(this.handleError, this);</div><div class='line' id='LC8298'><br/></div><div class='line' id='LC8299'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.errorHandler = __bind(this.errorHandler, this);</div><div class='line' id='LC8300'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Controller.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC8301'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._resetActionFrames();</div><div class='line' id='LC8302'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8303'><br/></div><div class='line' id='LC8304'>&nbsp;&nbsp;&nbsp;&nbsp;Controller.prototype.renderCache = new Batman.RenderCache;</div><div class='line' id='LC8305'><br/></div><div class='line' id='LC8306'>&nbsp;&nbsp;&nbsp;&nbsp;Controller.prototype.defaultRenderYield = &#39;main&#39;;</div><div class='line' id='LC8307'><br/></div><div class='line' id='LC8308'>&nbsp;&nbsp;&nbsp;&nbsp;Controller.prototype.autoScrollToHash = true;</div><div class='line' id='LC8309'><br/></div><div class='line' id='LC8310'>&nbsp;&nbsp;&nbsp;&nbsp;Controller.prototype.dispatch = function(action, params) {</div><div class='line' id='LC8311'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var redirectTo;</div><div class='line' id='LC8312'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (params == null) {</div><div class='line' id='LC8313'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params = {};</div><div class='line' id='LC8314'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8315'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.controller || (params.controller = this.get(&#39;routingKey&#39;));</div><div class='line' id='LC8316'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.action || (params.action = action);</div><div class='line' id='LC8317'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.target || (params.target = this);</div><div class='line' id='LC8318'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._resetActionFrames();</div><div class='line' id='LC8319'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set(&#39;action&#39;, action);</div><div class='line' id='LC8320'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set(&#39;params&#39;, params);</div><div class='line' id='LC8321'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.Yield.cycleAll();</div><div class='line' id='LC8322'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.executeAction(action, params);</div><div class='line' id='LC8323'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.Yield.clearAllStale();</div><div class='line' id='LC8324'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;redirectTo = this._afterFilterRedirect;</div><div class='line' id='LC8325'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete this._afterFilterRedirect;</div><div class='line' id='LC8326'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (redirectTo) {</div><div class='line' id='LC8327'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.redirect(redirectTo);</div><div class='line' id='LC8328'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8329'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8330'><br/></div><div class='line' id='LC8331'>&nbsp;&nbsp;&nbsp;&nbsp;Controller.prototype.executeAction = function(action, params) {</div><div class='line' id='LC8332'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var frame, oldRedirect, parentFrame, result, _ref, _ref1, _this = this;</div><div class='line' id='LC8333'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (params == null) {</div><div class='line' id='LC8334'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params = this.get(&#39;params&#39;);</div><div class='line' id='LC8335'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8336'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer.assert(this[action], &quot;Error! Controller action &quot; + (this.get(&#39;routingKey&#39;)) + &quot;.&quot; + action + &quot; couldn&#39;t be found!&quot;);</div><div class='line' id='LC8337'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parentFrame = this._actionFrames[this._actionFrames.length - 1];</div><div class='line' id='LC8338'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;frame = new Batman.ControllerActionFrame({</div><div class='line' id='LC8339'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parentFrame: parentFrame,</div><div class='line' id='LC8340'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;action: action</div><div class='line' id='LC8341'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, function() {</div><div class='line' id='LC8342'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC8343'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!_this._afterFilterRedirect) {</div><div class='line' id='LC8344'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this._runFilters(action, params, &#39;afterFilters&#39;);</div><div class='line' id='LC8345'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8346'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this._resetActionFrames();</div><div class='line' id='LC8347'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = Batman.navigator) != null ? _ref.redirect = oldRedirect : void 0;</div><div class='line' id='LC8348'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC8349'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._actionFrames.push(frame);</div><div class='line' id='LC8350'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;frame.startOperation({</div><div class='line' id='LC8351'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;internal: true</div><div class='line' id='LC8352'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC8353'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;oldRedirect = (_ref = Batman.navigator) != null ? _ref.redirect : void 0;</div><div class='line' id='LC8354'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref1 = Batman.navigator) != null) {</div><div class='line' id='LC8355'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1.redirect = this.redirect;</div><div class='line' id='LC8356'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8357'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._runFilters(action, params, &#39;beforeFilters&#39;);</div><div class='line' id='LC8358'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this._afterFilterRedirect) {</div><div class='line' id='LC8359'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = this[action](params);</div><div class='line' id='LC8360'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8361'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!frame.operationOccurred) {</div><div class='line' id='LC8362'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.render();</div><div class='line' id='LC8363'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8364'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;frame.finishOperation();</div><div class='line' id='LC8365'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC8366'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8367'><br/></div><div class='line' id='LC8368'>&nbsp;&nbsp;&nbsp;&nbsp;Controller.prototype.redirect = function(url) {</div><div class='line' id='LC8369'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var frame;</div><div class='line' id='LC8370'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;frame = this._actionFrames[this._actionFrames.length - 1];</div><div class='line' id='LC8371'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (frame) {</div><div class='line' id='LC8372'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (frame.operationOccurred) {</div><div class='line' id='LC8373'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer.warn(&quot;Warning! Trying to redirect but an action has already been taken during &quot; + (this.get(&#39;routingKey&#39;)) + &quot;.&quot; + (frame.action || this.get(&#39;action&#39;)));</div><div class='line' id='LC8374'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8375'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;frame.startAndFinishOperation();</div><div class='line' id='LC8376'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this._afterFilterRedirect != null) {</div><div class='line' id='LC8377'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.developer.warn(&quot;Warning! Multiple actions trying to redirect!&quot;);</div><div class='line' id='LC8378'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC8379'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._afterFilterRedirect = url;</div><div class='line' id='LC8380'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8381'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC8382'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Batman.typeOf(url) === &#39;Object&#39;) {</div><div class='line' id='LC8383'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!url.controller) {</div><div class='line' id='LC8384'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url.controller = this;</div><div class='line' id='LC8385'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8386'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8387'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.redirect(url);</div><div class='line' id='LC8388'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8389'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8390'><br/></div><div class='line' id='LC8391'>&nbsp;&nbsp;&nbsp;&nbsp;Controller.prototype.render = function(options) {</div><div class='line' id='LC8392'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var action, frame, view, _ref, _ref1, _this = this;</div><div class='line' id='LC8393'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (options == null) {</div><div class='line' id='LC8394'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options = {};</div><div class='line' id='LC8395'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8396'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (frame = (_ref = this._actionFrames) != null ? _ref[this._actionFrames.length - 1] : void 0) {</div><div class='line' id='LC8397'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;frame.startOperation();</div><div class='line' id='LC8398'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8399'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (options === false) {</div><div class='line' id='LC8400'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;frame.finishOperation();</div><div class='line' id='LC8401'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC8402'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8403'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;action = (frame != null ? frame.action : void 0) || this.get(&#39;action&#39;);</div><div class='line' id='LC8404'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (options) {</div><div class='line' id='LC8405'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.into || (options.into = this.defaultRenderYield);</div><div class='line' id='LC8406'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8407'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!options.view) {</div><div class='line' id='LC8408'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.viewClass || (options.viewClass = this._viewClassForAction(action));</div><div class='line' id='LC8409'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.context || (options.context = this.get(&#39;_renderContext&#39;));</div><div class='line' id='LC8410'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.source || (options.source = Batman.helpers.underscore(this.get(&#39;routingKey&#39;) + &#39;/&#39; + action));</div><div class='line' id='LC8411'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;view = this.renderCache.viewForOptions(options);</div><div class='line' id='LC8412'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC8413'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;view = options.view;</div><div class='line' id='LC8414'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.view = null;</div><div class='line' id='LC8415'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8416'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (view) {</div><div class='line' id='LC8417'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref1 = Batman.currentApp) != null) {</div><div class='line' id='LC8418'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1.prevent(&#39;ready&#39;);</div><div class='line' id='LC8419'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8420'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;view.once(&#39;ready&#39;, function() {</div><div class='line' id='LC8421'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref2;</div><div class='line' id='LC8422'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.Yield.withName(options.into).replace(view.get(&#39;node&#39;));</div><div class='line' id='LC8423'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref2 = Batman.currentApp) != null) {</div><div class='line' id='LC8424'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref2.allowAndFire(&#39;ready&#39;);</div><div class='line' id='LC8425'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8426'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return frame != null ? frame.finishOperation() : void 0;</div><div class='line' id='LC8427'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC8428'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8429'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return view;</div><div class='line' id='LC8430'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8431'><br/></div><div class='line' id='LC8432'>&nbsp;&nbsp;&nbsp;&nbsp;Controller.prototype.scrollToHash = function(hash) {</div><div class='line' id='LC8433'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (hash == null) {</div><div class='line' id='LC8434'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hash = this.get(&#39;params&#39;)[&#39;#&#39;];</div><div class='line' id='LC8435'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8436'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.scrollIntoView(hash);</div><div class='line' id='LC8437'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8438'><br/></div><div class='line' id='LC8439'>&nbsp;&nbsp;&nbsp;&nbsp;Controller.prototype._resetActionFrames = function() {</div><div class='line' id='LC8440'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._actionFrames = [];</div><div class='line' id='LC8441'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8442'><br/></div><div class='line' id='LC8443'>&nbsp;&nbsp;&nbsp;&nbsp;Controller.prototype._viewClassForAction = function(action) {</div><div class='line' id='LC8444'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var classPrefix, _ref;</div><div class='line' id='LC8445'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;classPrefix = this.get(&#39;routingKey&#39;).replace(&#39;/&#39;, &#39;_&#39;);</div><div class='line' id='LC8446'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ((_ref = Batman.currentApp) != null ? _ref[Batman.helpers.camelize(&quot;&quot; + classPrefix + &quot;_&quot; + action + &quot;_view&quot;)] : void 0) || Batman.View;</div><div class='line' id='LC8447'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8448'><br/></div><div class='line' id='LC8449'>&nbsp;&nbsp;&nbsp;&nbsp;Controller.prototype._runFilters = function(action, params, filters) {</div><div class='line' id='LC8450'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var block, options, _i, _len, _ref;</div><div class='line' id='LC8451'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (filters = (_ref = this.constructor._batman) != null ? _ref.get(filters) : void 0) {</div><div class='line' id='LC8452'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = filters.length; _i &lt; _len; _i++) {</div><div class='line' id='LC8453'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options = filters[_i];</div><div class='line' id='LC8454'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (options.only &amp;&amp; __indexOf.call(options.only, action) &lt; 0) {</div><div class='line' id='LC8455'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;</div><div class='line' id='LC8456'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8457'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (options.except &amp;&amp; __indexOf.call(options.except, action) &gt;= 0) {</div><div class='line' id='LC8458'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;</div><div class='line' id='LC8459'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8460'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this._afterFilterRedirect) {</div><div class='line' id='LC8461'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC8462'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8463'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;block = options.block;</div><div class='line' id='LC8464'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof block === &#39;function&#39;) {</div><div class='line' id='LC8465'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;block.call(this, params);</div><div class='line' id='LC8466'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC8467'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof this[block] === &quot;function&quot;) {</div><div class='line' id='LC8468'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this[block](params);</div><div class='line' id='LC8469'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8470'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8471'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8472'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8473'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8474'><br/></div><div class='line' id='LC8475'>&nbsp;&nbsp;&nbsp;&nbsp;return Controller;</div><div class='line' id='LC8476'><br/></div><div class='line' id='LC8477'>&nbsp;&nbsp;})(Batman.Object);</div><div class='line' id='LC8478'><br/></div><div class='line' id='LC8479'>}).call(this);</div><div class='line' id='LC8480'><br/></div><div class='line' id='LC8481'>(function() {</div><div class='line' id='LC8482'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC8483'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC8484'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC8485'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC8486'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8487'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC8488'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC8489'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8490'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC8491'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC8492'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC8493'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC8494'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8495'><br/></div><div class='line' id='LC8496'>&nbsp;&nbsp;Batman.Set = (function(_super) {</div><div class='line' id='LC8497'>&nbsp;&nbsp;&nbsp;&nbsp;var k, _fn, _i, _j, _len, _len1, _ref, _ref1, _this = this;</div><div class='line' id='LC8498'><br/></div><div class='line' id='LC8499'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(Set, _super);</div><div class='line' id='LC8500'><br/></div><div class='line' id='LC8501'>&nbsp;&nbsp;&nbsp;&nbsp;function Set() {</div><div class='line' id='LC8502'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.SimpleSet.apply(this, arguments);</div><div class='line' id='LC8503'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8504'><br/></div><div class='line' id='LC8505'>&nbsp;&nbsp;&nbsp;&nbsp;Batman.extend(Set.prototype, Batman.Enumerable);</div><div class='line' id='LC8506'><br/></div><div class='line' id='LC8507'>&nbsp;&nbsp;&nbsp;&nbsp;Set._applySetAccessors = function(klass) {</div><div class='line' id='LC8508'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var accessor, accessors, key, _results;</div><div class='line' id='LC8509'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;accessors = {</div><div class='line' id='LC8510'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;first: function() {</div><div class='line' id='LC8511'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.toArray()[0];</div><div class='line' id='LC8512'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC8513'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;last: function() {</div><div class='line' id='LC8514'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.toArray()[this.length - 1];</div><div class='line' id='LC8515'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC8516'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isEmpty: function() {</div><div class='line' id='LC8517'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.isEmpty();</div><div class='line' id='LC8518'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC8519'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toArray: function() {</div><div class='line' id='LC8520'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.toArray();</div><div class='line' id='LC8521'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC8522'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length: function() {</div><div class='line' id='LC8523'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.registerAsMutableSource();</div><div class='line' id='LC8524'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.length;</div><div class='line' id='LC8525'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC8526'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;indexedBy: function() {</div><div class='line' id='LC8527'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC8528'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.TerminalAccessible(function(key) {</div><div class='line' id='LC8529'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.indexedBy(key);</div><div class='line' id='LC8530'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC8531'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC8532'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;indexedByUnique: function() {</div><div class='line' id='LC8533'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC8534'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.TerminalAccessible(function(key) {</div><div class='line' id='LC8535'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.indexedByUnique(key);</div><div class='line' id='LC8536'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC8537'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC8538'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sortedBy: function() {</div><div class='line' id='LC8539'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC8540'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.TerminalAccessible(function(key) {</div><div class='line' id='LC8541'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.sortedBy(key);</div><div class='line' id='LC8542'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC8543'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC8544'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sortedByDescending: function() {</div><div class='line' id='LC8545'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC8546'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.TerminalAccessible(function(key) {</div><div class='line' id='LC8547'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.sortedBy(key, &#39;desc&#39;);</div><div class='line' id='LC8548'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC8549'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8550'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8551'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC8552'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (key in accessors) {</div><div class='line' id='LC8553'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;accessor = accessors[key];</div><div class='line' id='LC8554'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(klass.accessor(key, accessor));</div><div class='line' id='LC8555'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8556'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC8557'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8558'><br/></div><div class='line' id='LC8559'>&nbsp;&nbsp;&nbsp;&nbsp;Set._applySetAccessors(Set);</div><div class='line' id='LC8560'><br/></div><div class='line' id='LC8561'>&nbsp;&nbsp;&nbsp;&nbsp;_ref = [&#39;add&#39;, &#39;remove&#39;, &#39;clear&#39;, &#39;replace&#39;, &#39;indexedBy&#39;, &#39;indexedByUnique&#39;, &#39;sortedBy&#39;, &#39;equality&#39;, &#39;_indexOfItem&#39;];</div><div class='line' id='LC8562'>&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC8563'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k = _ref[_i];</div><div class='line' id='LC8564'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set.prototype[k] = Batman.SimpleSet.prototype[k];</div><div class='line' id='LC8565'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8566'><br/></div><div class='line' id='LC8567'>&nbsp;&nbsp;&nbsp;&nbsp;_ref1 = [&#39;find&#39;, &#39;merge&#39;, &#39;forEach&#39;, &#39;toArray&#39;, &#39;isEmpty&#39;, &#39;has&#39;];</div><div class='line' id='LC8568'>&nbsp;&nbsp;&nbsp;&nbsp;_fn = function(k) {</div><div class='line' id='LC8569'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Set.prototype[k] = function() {</div><div class='line' id='LC8570'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.registerAsMutableSource();</div><div class='line' id='LC8571'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.SimpleSet.prototype[k].apply(this, arguments);</div><div class='line' id='LC8572'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8573'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8574'>&nbsp;&nbsp;&nbsp;&nbsp;for (_j = 0, _len1 = _ref1.length; _j &lt; _len1; _j++) {</div><div class='line' id='LC8575'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k = _ref1[_j];</div><div class='line' id='LC8576'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_fn(k);</div><div class='line' id='LC8577'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8578'><br/></div><div class='line' id='LC8579'>&nbsp;&nbsp;&nbsp;&nbsp;Set.prototype.toJSON = Set.prototype.toArray;</div><div class='line' id='LC8580'><br/></div><div class='line' id='LC8581'>&nbsp;&nbsp;&nbsp;&nbsp;return Set;</div><div class='line' id='LC8582'><br/></div><div class='line' id='LC8583'>&nbsp;&nbsp;}).call(this, Batman.Object);</div><div class='line' id='LC8584'><br/></div><div class='line' id='LC8585'>}).call(this);</div><div class='line' id='LC8586'><br/></div><div class='line' id='LC8587'>(function() {</div><div class='line' id='LC8588'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC8589'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC8590'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC8591'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC8592'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8593'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC8594'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC8595'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8596'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC8597'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC8598'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC8599'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC8600'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8601'><br/></div><div class='line' id='LC8602'>&nbsp;&nbsp;Batman.ErrorsSet = (function(_super) {</div><div class='line' id='LC8603'><br/></div><div class='line' id='LC8604'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(ErrorsSet, _super);</div><div class='line' id='LC8605'><br/></div><div class='line' id='LC8606'>&nbsp;&nbsp;&nbsp;&nbsp;function ErrorsSet() {</div><div class='line' id='LC8607'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ErrorsSet.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC8608'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8609'><br/></div><div class='line' id='LC8610'>&nbsp;&nbsp;&nbsp;&nbsp;ErrorsSet.accessor(function(key) {</div><div class='line' id='LC8611'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.indexedBy(&#39;attribute&#39;).get(key);</div><div class='line' id='LC8612'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC8613'><br/></div><div class='line' id='LC8614'>&nbsp;&nbsp;&nbsp;&nbsp;ErrorsSet.prototype.add = function(key, error) {</div><div class='line' id='LC8615'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ErrorsSet.__super__.add.call(this, new Batman.ValidationError(key, error));</div><div class='line' id='LC8616'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8617'><br/></div><div class='line' id='LC8618'>&nbsp;&nbsp;&nbsp;&nbsp;return ErrorsSet;</div><div class='line' id='LC8619'><br/></div><div class='line' id='LC8620'>&nbsp;&nbsp;})(Batman.Set);</div><div class='line' id='LC8621'><br/></div><div class='line' id='LC8622'>}).call(this);</div><div class='line' id='LC8623'><br/></div><div class='line' id='LC8624'>(function() {</div><div class='line' id='LC8625'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC8626'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC8627'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC8628'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC8629'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8630'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC8631'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC8632'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8633'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC8634'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC8635'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC8636'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC8637'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC8638'>&nbsp;&nbsp;&nbsp;&nbsp;__slice = [].slice;</div><div class='line' id='LC8639'><br/></div><div class='line' id='LC8640'>&nbsp;&nbsp;Batman.SetProxy = (function(_super) {</div><div class='line' id='LC8641'>&nbsp;&nbsp;&nbsp;&nbsp;var k, _fn, _i, _len, _ref, _this = this;</div><div class='line' id='LC8642'><br/></div><div class='line' id='LC8643'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(SetProxy, _super);</div><div class='line' id='LC8644'><br/></div><div class='line' id='LC8645'>&nbsp;&nbsp;&nbsp;&nbsp;function SetProxy(base) {</div><div class='line' id='LC8646'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC8647'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.base = base;</div><div class='line' id='LC8648'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetProxy.__super__.constructor.call(this);</div><div class='line' id='LC8649'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.length = this.base.length;</div><div class='line' id='LC8650'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.base.on(&#39;itemsWereAdded&#39;, function() {</div><div class='line' id='LC8651'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var items;</div><div class='line' id='LC8652'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;items = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC8653'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.set(&#39;length&#39;, _this.base.length);</div><div class='line' id='LC8654'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.fire.apply(_this, [&#39;itemsWereAdded&#39;].concat(__slice.call(items)));</div><div class='line' id='LC8655'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC8656'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.base.on(&#39;itemsWereRemoved&#39;, function() {</div><div class='line' id='LC8657'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var items;</div><div class='line' id='LC8658'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;items = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC8659'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.set(&#39;length&#39;, _this.base.length);</div><div class='line' id='LC8660'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.fire.apply(_this, [&#39;itemsWereRemoved&#39;].concat(__slice.call(items)));</div><div class='line' id='LC8661'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC8662'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8663'><br/></div><div class='line' id='LC8664'>&nbsp;&nbsp;&nbsp;&nbsp;Batman.extend(SetProxy.prototype, Batman.Enumerable);</div><div class='line' id='LC8665'><br/></div><div class='line' id='LC8666'>&nbsp;&nbsp;&nbsp;&nbsp;SetProxy.prototype.filter = function(f) {</div><div class='line' id='LC8667'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.reduce(function(accumulator, element) {</div><div class='line' id='LC8668'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (f(element)) {</div><div class='line' id='LC8669'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;accumulator.add(element);</div><div class='line' id='LC8670'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8671'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return accumulator;</div><div class='line' id='LC8672'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, new Batman.Set());</div><div class='line' id='LC8673'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8674'><br/></div><div class='line' id='LC8675'>&nbsp;&nbsp;&nbsp;&nbsp;SetProxy.prototype.replace = function() {</div><div class='line' id='LC8676'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var length, result;</div><div class='line' id='LC8677'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length = this.property(&#39;length&#39;);</div><div class='line' id='LC8678'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length.isolate();</div><div class='line' id='LC8679'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = this.base.replace.apply(this, arguments);</div><div class='line' id='LC8680'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length.expose();</div><div class='line' id='LC8681'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC8682'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8683'><br/></div><div class='line' id='LC8684'>&nbsp;&nbsp;&nbsp;&nbsp;Batman.Set._applySetAccessors(SetProxy);</div><div class='line' id='LC8685'><br/></div><div class='line' id='LC8686'>&nbsp;&nbsp;&nbsp;&nbsp;_ref = [&#39;add&#39;, &#39;remove&#39;, &#39;find&#39;, &#39;clear&#39;, &#39;has&#39;, &#39;merge&#39;, &#39;toArray&#39;, &#39;isEmpty&#39;, &#39;indexedBy&#39;, &#39;indexedByUnique&#39;, &#39;sortedBy&#39;];</div><div class='line' id='LC8687'>&nbsp;&nbsp;&nbsp;&nbsp;_fn = function(k) {</div><div class='line' id='LC8688'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return SetProxy.prototype[k] = function() {</div><div class='line' id='LC8689'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref1;</div><div class='line' id='LC8690'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref1 = this.base)[k].apply(_ref1, arguments);</div><div class='line' id='LC8691'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8692'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8693'>&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC8694'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k = _ref[_i];</div><div class='line' id='LC8695'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_fn(k);</div><div class='line' id='LC8696'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8697'><br/></div><div class='line' id='LC8698'>&nbsp;&nbsp;&nbsp;&nbsp;SetProxy.accessor(&#39;length&#39;, {</div><div class='line' id='LC8699'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function() {</div><div class='line' id='LC8700'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.registerAsMutableSource();</div><div class='line' id='LC8701'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.length;</div><div class='line' id='LC8702'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC8703'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set: function(_, v) {</div><div class='line' id='LC8704'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.length = v;</div><div class='line' id='LC8705'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8706'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC8707'><br/></div><div class='line' id='LC8708'>&nbsp;&nbsp;&nbsp;&nbsp;return SetProxy;</div><div class='line' id='LC8709'><br/></div><div class='line' id='LC8710'>&nbsp;&nbsp;}).call(this, Batman.Object);</div><div class='line' id='LC8711'><br/></div><div class='line' id='LC8712'>}).call(this);</div><div class='line' id='LC8713'><br/></div><div class='line' id='LC8714'>(function() {</div><div class='line' id='LC8715'>&nbsp;&nbsp;var __bind = function(fn, me) {</div><div class='line' id='LC8716'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function() {</div><div class='line' id='LC8717'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return fn.apply(me, arguments);</div><div class='line' id='LC8718'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8719'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC8720'>&nbsp;&nbsp;&nbsp;&nbsp;__hasProp = {}.hasOwnProperty,</div><div class='line' id='LC8721'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC8722'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC8723'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC8724'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8725'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC8726'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC8727'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8728'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC8729'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC8730'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC8731'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC8732'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC8733'>&nbsp;&nbsp;&nbsp;&nbsp;__slice = [].slice;</div><div class='line' id='LC8734'><br/></div><div class='line' id='LC8735'>&nbsp;&nbsp;Batman.BinarySetOperation = (function(_super) {</div><div class='line' id='LC8736'><br/></div><div class='line' id='LC8737'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(BinarySetOperation, _super);</div><div class='line' id='LC8738'><br/></div><div class='line' id='LC8739'>&nbsp;&nbsp;&nbsp;&nbsp;function BinarySetOperation(left, right) {</div><div class='line' id='LC8740'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.left = left;</div><div class='line' id='LC8741'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.right = right;</div><div class='line' id='LC8742'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._setup = __bind(this._setup, this);</div><div class='line' id='LC8743'><br/></div><div class='line' id='LC8744'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BinarySetOperation.__super__.constructor.call(this);</div><div class='line' id='LC8745'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._setup(this.left, this.right);</div><div class='line' id='LC8746'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._setup(this.right, this.left);</div><div class='line' id='LC8747'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8748'><br/></div><div class='line' id='LC8749'>&nbsp;&nbsp;&nbsp;&nbsp;BinarySetOperation.prototype._setup = function(set, opposite) {</div><div class='line' id='LC8750'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC8751'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set.on(&#39;itemsWereAdded&#39;, function() {</div><div class='line' id='LC8752'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var items;</div><div class='line' id='LC8753'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;items = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC8754'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this._itemsWereAddedToSource.apply(_this, [set, opposite].concat(__slice.call(items)));</div><div class='line' id='LC8755'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC8756'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set.on(&#39;itemsWereRemoved&#39;, function() {</div><div class='line' id='LC8757'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var items;</div><div class='line' id='LC8758'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;items = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC8759'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this._itemsWereRemovedFromSource.apply(_this, [set, opposite].concat(__slice.call(items)));</div><div class='line' id='LC8760'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC8761'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._itemsWereAddedToSource.apply(this, [set, opposite].concat(__slice.call(set.toArray())));</div><div class='line' id='LC8762'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8763'><br/></div><div class='line' id='LC8764'>&nbsp;&nbsp;&nbsp;&nbsp;BinarySetOperation.prototype.merge = function() {</div><div class='line' id='LC8765'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var merged, others, set, _i, _len;</div><div class='line' id='LC8766'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;others = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC8767'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;merged = new Batman.Set;</div><div class='line' id='LC8768'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;others.unshift(this);</div><div class='line' id='LC8769'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = others.length; _i &lt; _len; _i++) {</div><div class='line' id='LC8770'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set = others[_i];</div><div class='line' id='LC8771'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set.forEach(function(v) {</div><div class='line' id='LC8772'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return merged.add(v);</div><div class='line' id='LC8773'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC8774'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8775'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return merged;</div><div class='line' id='LC8776'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8777'><br/></div><div class='line' id='LC8778'>&nbsp;&nbsp;&nbsp;&nbsp;BinarySetOperation.prototype.filter = Batman.SetProxy.prototype.filter;</div><div class='line' id='LC8779'><br/></div><div class='line' id='LC8780'>&nbsp;&nbsp;&nbsp;&nbsp;return BinarySetOperation;</div><div class='line' id='LC8781'><br/></div><div class='line' id='LC8782'>&nbsp;&nbsp;})(Batman.Set);</div><div class='line' id='LC8783'><br/></div><div class='line' id='LC8784'>}).call(this);</div><div class='line' id='LC8785'><br/></div><div class='line' id='LC8786'>(function() {</div><div class='line' id='LC8787'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC8788'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC8789'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC8790'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC8791'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8792'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC8793'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC8794'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8795'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC8796'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC8797'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC8798'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC8799'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC8800'>&nbsp;&nbsp;&nbsp;&nbsp;__slice = [].slice;</div><div class='line' id='LC8801'><br/></div><div class='line' id='LC8802'>&nbsp;&nbsp;Batman.SetUnion = (function(_super) {</div><div class='line' id='LC8803'><br/></div><div class='line' id='LC8804'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(SetUnion, _super);</div><div class='line' id='LC8805'><br/></div><div class='line' id='LC8806'>&nbsp;&nbsp;&nbsp;&nbsp;function SetUnion() {</div><div class='line' id='LC8807'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return SetUnion.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC8808'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8809'><br/></div><div class='line' id='LC8810'>&nbsp;&nbsp;&nbsp;&nbsp;SetUnion.prototype._itemsWereAddedToSource = function() {</div><div class='line' id='LC8811'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var items, opposite, source;</div><div class='line' id='LC8812'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;source = arguments[0], opposite = arguments[1], items = 3 &lt;= arguments.length ? __slice.call(arguments, 2) : [];</div><div class='line' id='LC8813'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.add.apply(this, items);</div><div class='line' id='LC8814'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8815'><br/></div><div class='line' id='LC8816'>&nbsp;&nbsp;&nbsp;&nbsp;SetUnion.prototype._itemsWereRemovedFromSource = function() {</div><div class='line' id='LC8817'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var item, items, itemsToRemove, opposite, source;</div><div class='line' id='LC8818'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;source = arguments[0], opposite = arguments[1], items = 3 &lt;= arguments.length ? __slice.call(arguments, 2) : [];</div><div class='line' id='LC8819'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;itemsToRemove = (function() {</div><div class='line' id='LC8820'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _i, _len, _results;</div><div class='line' id='LC8821'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC8822'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = items.length; _i &lt; _len; _i++) {</div><div class='line' id='LC8823'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item = items[_i];</div><div class='line' id='LC8824'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!opposite.has(item)) {</div><div class='line' id='LC8825'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(item);</div><div class='line' id='LC8826'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8827'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8828'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC8829'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})();</div><div class='line' id='LC8830'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.remove.apply(this, itemsToRemove);</div><div class='line' id='LC8831'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8832'><br/></div><div class='line' id='LC8833'>&nbsp;&nbsp;&nbsp;&nbsp;return SetUnion;</div><div class='line' id='LC8834'><br/></div><div class='line' id='LC8835'>&nbsp;&nbsp;})(Batman.BinarySetOperation);</div><div class='line' id='LC8836'><br/></div><div class='line' id='LC8837'>}).call(this);</div><div class='line' id='LC8838'><br/></div><div class='line' id='LC8839'>(function() {</div><div class='line' id='LC8840'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC8841'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC8842'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC8843'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC8844'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8845'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC8846'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC8847'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8848'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC8849'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC8850'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC8851'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC8852'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC8853'>&nbsp;&nbsp;&nbsp;&nbsp;__slice = [].slice;</div><div class='line' id='LC8854'><br/></div><div class='line' id='LC8855'>&nbsp;&nbsp;Batman.SetIntersection = (function(_super) {</div><div class='line' id='LC8856'><br/></div><div class='line' id='LC8857'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(SetIntersection, _super);</div><div class='line' id='LC8858'><br/></div><div class='line' id='LC8859'>&nbsp;&nbsp;&nbsp;&nbsp;function SetIntersection() {</div><div class='line' id='LC8860'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return SetIntersection.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC8861'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8862'><br/></div><div class='line' id='LC8863'>&nbsp;&nbsp;&nbsp;&nbsp;SetIntersection.prototype._itemsWereAddedToSource = function() {</div><div class='line' id='LC8864'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var item, items, itemsToAdd, opposite, source;</div><div class='line' id='LC8865'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;source = arguments[0], opposite = arguments[1], items = 3 &lt;= arguments.length ? __slice.call(arguments, 2) : [];</div><div class='line' id='LC8866'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;itemsToAdd = (function() {</div><div class='line' id='LC8867'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _i, _len, _results;</div><div class='line' id='LC8868'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC8869'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = items.length; _i &lt; _len; _i++) {</div><div class='line' id='LC8870'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item = items[_i];</div><div class='line' id='LC8871'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (opposite.has(item)) {</div><div class='line' id='LC8872'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(item);</div><div class='line' id='LC8873'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8874'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8875'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC8876'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})();</div><div class='line' id='LC8877'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (itemsToAdd.length &gt; 0) {</div><div class='line' id='LC8878'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.add.apply(this, itemsToAdd);</div><div class='line' id='LC8879'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8880'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8881'><br/></div><div class='line' id='LC8882'>&nbsp;&nbsp;&nbsp;&nbsp;SetIntersection.prototype._itemsWereRemovedFromSource = function() {</div><div class='line' id='LC8883'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var items, opposite, source;</div><div class='line' id='LC8884'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;source = arguments[0], opposite = arguments[1], items = 3 &lt;= arguments.length ? __slice.call(arguments, 2) : [];</div><div class='line' id='LC8885'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.remove.apply(this, items);</div><div class='line' id='LC8886'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8887'><br/></div><div class='line' id='LC8888'>&nbsp;&nbsp;&nbsp;&nbsp;return SetIntersection;</div><div class='line' id='LC8889'><br/></div><div class='line' id='LC8890'>&nbsp;&nbsp;})(Batman.BinarySetOperation);</div><div class='line' id='LC8891'><br/></div><div class='line' id='LC8892'>}).call(this);</div><div class='line' id='LC8893'><br/></div><div class='line' id='LC8894'>(function() {</div><div class='line' id='LC8895'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC8896'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC8897'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC8898'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC8899'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8900'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC8901'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC8902'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8903'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC8904'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC8905'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC8906'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC8907'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC8908'>&nbsp;&nbsp;&nbsp;&nbsp;__slice = [].slice;</div><div class='line' id='LC8909'><br/></div><div class='line' id='LC8910'>&nbsp;&nbsp;Batman.SetComplement = (function(_super) {</div><div class='line' id='LC8911'><br/></div><div class='line' id='LC8912'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(SetComplement, _super);</div><div class='line' id='LC8913'><br/></div><div class='line' id='LC8914'>&nbsp;&nbsp;&nbsp;&nbsp;function SetComplement() {</div><div class='line' id='LC8915'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return SetComplement.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC8916'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8917'><br/></div><div class='line' id='LC8918'>&nbsp;&nbsp;&nbsp;&nbsp;SetComplement.prototype._itemsWereAddedToSource = function() {</div><div class='line' id='LC8919'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var item, items, itemsToAdd, itemsToRemove, opposite, source;</div><div class='line' id='LC8920'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;source = arguments[0], opposite = arguments[1], items = 3 &lt;= arguments.length ? __slice.call(arguments, 2) : [];</div><div class='line' id='LC8921'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (source === this.left) {</div><div class='line' id='LC8922'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;itemsToAdd = (function() {</div><div class='line' id='LC8923'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _i, _len, _results;</div><div class='line' id='LC8924'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC8925'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = items.length; _i &lt; _len; _i++) {</div><div class='line' id='LC8926'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item = items[_i];</div><div class='line' id='LC8927'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!opposite.has(item)) {</div><div class='line' id='LC8928'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(item);</div><div class='line' id='LC8929'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8930'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8931'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC8932'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})();</div><div class='line' id='LC8933'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (itemsToAdd.length &gt; 0) {</div><div class='line' id='LC8934'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.add.apply(this, itemsToAdd);</div><div class='line' id='LC8935'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8936'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC8937'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;itemsToRemove = (function() {</div><div class='line' id='LC8938'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _i, _len, _results;</div><div class='line' id='LC8939'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC8940'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = items.length; _i &lt; _len; _i++) {</div><div class='line' id='LC8941'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item = items[_i];</div><div class='line' id='LC8942'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (opposite.has(item)) {</div><div class='line' id='LC8943'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(item);</div><div class='line' id='LC8944'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8945'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8946'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC8947'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})();</div><div class='line' id='LC8948'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (itemsToRemove.length &gt; 0) {</div><div class='line' id='LC8949'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.remove.apply(this, itemsToRemove);</div><div class='line' id='LC8950'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8951'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8952'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8953'><br/></div><div class='line' id='LC8954'>&nbsp;&nbsp;&nbsp;&nbsp;SetComplement.prototype._itemsWereRemovedFromSource = function() {</div><div class='line' id='LC8955'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var item, items, itemsToAdd, opposite, source;</div><div class='line' id='LC8956'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;source = arguments[0], opposite = arguments[1], items = 3 &lt;= arguments.length ? __slice.call(arguments, 2) : [];</div><div class='line' id='LC8957'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (source === this.left) {</div><div class='line' id='LC8958'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.remove.apply(this, items);</div><div class='line' id='LC8959'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC8960'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;itemsToAdd = (function() {</div><div class='line' id='LC8961'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _i, _len, _results;</div><div class='line' id='LC8962'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC8963'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = items.length; _i &lt; _len; _i++) {</div><div class='line' id='LC8964'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item = items[_i];</div><div class='line' id='LC8965'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (opposite.has(item)) {</div><div class='line' id='LC8966'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(item);</div><div class='line' id='LC8967'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8968'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8969'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC8970'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})();</div><div class='line' id='LC8971'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (itemsToAdd.length &gt; 0) {</div><div class='line' id='LC8972'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.add.apply(this, itemsToAdd);</div><div class='line' id='LC8973'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8974'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8975'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8976'><br/></div><div class='line' id='LC8977'>&nbsp;&nbsp;&nbsp;&nbsp;SetComplement.prototype._addComplement = function(items, opposite) {</div><div class='line' id='LC8978'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var item, itemsToAdd;</div><div class='line' id='LC8979'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;itemsToAdd = (function() {</div><div class='line' id='LC8980'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _i, _len, _results;</div><div class='line' id='LC8981'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC8982'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = items.length; _i &lt; _len; _i++) {</div><div class='line' id='LC8983'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item = items[_i];</div><div class='line' id='LC8984'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (opposite.has(item)) {</div><div class='line' id='LC8985'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(item);</div><div class='line' id='LC8986'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8987'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8988'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC8989'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})();</div><div class='line' id='LC8990'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (itemsToAdd.length &gt; 0) {</div><div class='line' id='LC8991'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.add.apply(this, itemsToAdd);</div><div class='line' id='LC8992'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC8993'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC8994'><br/></div><div class='line' id='LC8995'>&nbsp;&nbsp;&nbsp;&nbsp;return SetComplement;</div><div class='line' id='LC8996'><br/></div><div class='line' id='LC8997'>&nbsp;&nbsp;})(Batman.BinarySetOperation);</div><div class='line' id='LC8998'><br/></div><div class='line' id='LC8999'>}).call(this);</div><div class='line' id='LC9000'><br/></div><div class='line' id='LC9001'>(function() {</div><div class='line' id='LC9002'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC9003'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC9004'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC9005'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC9006'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9007'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC9008'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC9009'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9010'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC9011'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC9012'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC9013'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC9014'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC9015'>&nbsp;&nbsp;&nbsp;&nbsp;__slice = [].slice;</div><div class='line' id='LC9016'><br/></div><div class='line' id='LC9017'>&nbsp;&nbsp;Batman.StateMachine = (function(_super) {</div><div class='line' id='LC9018'><br/></div><div class='line' id='LC9019'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(StateMachine, _super);</div><div class='line' id='LC9020'><br/></div><div class='line' id='LC9021'>&nbsp;&nbsp;&nbsp;&nbsp;StateMachine.InvalidTransitionError = function(message) {</div><div class='line' id='LC9022'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.message = message != null ? message : &quot;&quot;;</div><div class='line' id='LC9023'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9024'><br/></div><div class='line' id='LC9025'>&nbsp;&nbsp;&nbsp;&nbsp;StateMachine.InvalidTransitionError.prototype = new Error;</div><div class='line' id='LC9026'><br/></div><div class='line' id='LC9027'>&nbsp;&nbsp;&nbsp;&nbsp;StateMachine.transitions = function(table) {</div><div class='line' id='LC9028'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var definePredicate, fromState, k, object, predicateKeys, toState, transitions, v, _fn, _ref, _this = this;</div><div class='line' id='LC9029'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (k in table) {</div><div class='line' id='LC9030'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v = table[k];</div><div class='line' id='LC9031'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(v.from &amp;&amp; v.to)) {</div><div class='line' id='LC9032'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;</div><div class='line' id='LC9033'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9034'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object = {};</div><div class='line' id='LC9035'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (v.from.forEach) {</div><div class='line' id='LC9036'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v.from.forEach(function(fromKey) {</div><div class='line' id='LC9037'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return object[fromKey] = v.to;</div><div class='line' id='LC9038'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9039'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC9040'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object[v.from] = v.to;</div><div class='line' id='LC9041'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9042'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table[k] = object;</div><div class='line' id='LC9043'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9044'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.prototype.transitionTable = Batman.extend({}, this.prototype.transitionTable, table);</div><div class='line' id='LC9045'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;predicateKeys = [];</div><div class='line' id='LC9046'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;definePredicate = function(state) {</div><div class='line' id='LC9047'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var key;</div><div class='line' id='LC9048'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = &quot;is&quot; + (Batman.helpers.capitalize(state));</div><div class='line' id='LC9049'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (_this.prototype[key] != null) {</div><div class='line' id='LC9050'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC9051'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9052'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;predicateKeys.push(key);</div><div class='line' id='LC9053'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.prototype[key] = function() {</div><div class='line' id='LC9054'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&#39;state&#39;) === state;</div><div class='line' id='LC9055'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9056'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9057'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this.prototype.transitionTable;</div><div class='line' id='LC9058'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_fn = function(k) {</div><div class='line' id='LC9059'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.prototype[k] = function() {</div><div class='line' id='LC9060'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.startTransition(k);</div><div class='line' id='LC9061'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9062'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9063'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (k in _ref) {</div><div class='line' id='LC9064'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transitions = _ref[k];</div><div class='line' id='LC9065'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(!this.prototype[k])) {</div><div class='line' id='LC9066'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;</div><div class='line' id='LC9067'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9068'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_fn(k);</div><div class='line' id='LC9069'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (fromState in transitions) {</div><div class='line' id='LC9070'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toState = transitions[fromState];</div><div class='line' id='LC9071'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;definePredicate(fromState);</div><div class='line' id='LC9072'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;definePredicate(toState);</div><div class='line' id='LC9073'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9074'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9075'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (predicateKeys.length) {</div><div class='line' id='LC9076'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.accessor.apply(this, __slice.call(predicateKeys).concat([function(key) {</div><div class='line' id='LC9077'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this[key]();</div><div class='line' id='LC9078'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}]));</div><div class='line' id='LC9079'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC9081'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9082'><br/></div><div class='line' id='LC9083'>&nbsp;&nbsp;&nbsp;&nbsp;function StateMachine(startState) {</div><div class='line' id='LC9084'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.nextEvents = [];</div><div class='line' id='LC9085'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set(&#39;_state&#39;, startState);</div><div class='line' id='LC9086'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9087'><br/></div><div class='line' id='LC9088'>&nbsp;&nbsp;&nbsp;&nbsp;StateMachine.accessor(&#39;state&#39;, function() {</div><div class='line' id='LC9089'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&#39;_state&#39;);</div><div class='line' id='LC9090'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9091'><br/></div><div class='line' id='LC9092'>&nbsp;&nbsp;&nbsp;&nbsp;StateMachine.prototype.isTransitioning = false;</div><div class='line' id='LC9093'><br/></div><div class='line' id='LC9094'>&nbsp;&nbsp;&nbsp;&nbsp;StateMachine.prototype.transitionTable = {};</div><div class='line' id='LC9095'><br/></div><div class='line' id='LC9096'>&nbsp;&nbsp;&nbsp;&nbsp;StateMachine.prototype.onTransition = function(from, into, callback) {</div><div class='line' id='LC9097'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.on(&quot;&quot; + from + &quot;-&gt;&quot; + into, callback);</div><div class='line' id='LC9098'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9099'><br/></div><div class='line' id='LC9100'>&nbsp;&nbsp;&nbsp;&nbsp;StateMachine.prototype.onEnter = function(into, callback) {</div><div class='line' id='LC9101'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.on(&quot;enter &quot; + into, callback);</div><div class='line' id='LC9102'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9103'><br/></div><div class='line' id='LC9104'>&nbsp;&nbsp;&nbsp;&nbsp;StateMachine.prototype.onExit = function(from, callback) {</div><div class='line' id='LC9105'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.on(&quot;exit &quot; + from, callback);</div><div class='line' id='LC9106'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9107'><br/></div><div class='line' id='LC9108'>&nbsp;&nbsp;&nbsp;&nbsp;StateMachine.prototype.startTransition = Batman.Property.wrapTrackingPrevention(function(event) {</div><div class='line' id='LC9109'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var nextState, previousState;</div><div class='line' id='LC9110'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.isTransitioning) {</div><div class='line' id='LC9111'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.nextEvents.push(event);</div><div class='line' id='LC9112'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC9113'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9114'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;previousState = this.get(&#39;state&#39;);</div><div class='line' id='LC9115'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nextState = this.nextStateForEvent(event);</div><div class='line' id='LC9116'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!nextState) {</div><div class='line' id='LC9117'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC9118'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9119'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.isTransitioning = true;</div><div class='line' id='LC9120'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fire(&quot;exit &quot; + previousState);</div><div class='line' id='LC9121'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set(&#39;_state&#39;, nextState);</div><div class='line' id='LC9122'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fire(&quot;&quot; + previousState + &quot;-&gt;&quot; + nextState);</div><div class='line' id='LC9123'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fire(&quot;enter &quot; + nextState);</div><div class='line' id='LC9124'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fire(event);</div><div class='line' id='LC9125'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.isTransitioning = false;</div><div class='line' id='LC9126'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.nextEvents.length &gt; 0) {</div><div class='line' id='LC9127'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.startTransition(this.nextEvents.shift());</div><div class='line' id='LC9128'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9129'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC9130'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9131'><br/></div><div class='line' id='LC9132'>&nbsp;&nbsp;&nbsp;&nbsp;StateMachine.prototype.canStartTransition = function(event, fromState) {</div><div class='line' id='LC9133'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (fromState == null) {</div><div class='line' id='LC9134'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fromState = this.get(&#39;state&#39;);</div><div class='line' id='LC9135'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9136'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return !!this.nextStateForEvent(event, fromState);</div><div class='line' id='LC9137'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9138'><br/></div><div class='line' id='LC9139'>&nbsp;&nbsp;&nbsp;&nbsp;StateMachine.prototype.nextStateForEvent = function(event, fromState) {</div><div class='line' id='LC9140'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC9141'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (fromState == null) {</div><div class='line' id='LC9142'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fromState = this.get(&#39;state&#39;);</div><div class='line' id='LC9143'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9144'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = this.transitionTable[event]) != null ? _ref[fromState] : void 0;</div><div class='line' id='LC9145'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9146'><br/></div><div class='line' id='LC9147'>&nbsp;&nbsp;&nbsp;&nbsp;return StateMachine;</div><div class='line' id='LC9148'><br/></div><div class='line' id='LC9149'>&nbsp;&nbsp;})(Batman.Object);</div><div class='line' id='LC9150'><br/></div><div class='line' id='LC9151'>&nbsp;&nbsp;Batman.DelegatingStateMachine = (function(_super) {</div><div class='line' id='LC9152'><br/></div><div class='line' id='LC9153'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(DelegatingStateMachine, _super);</div><div class='line' id='LC9154'><br/></div><div class='line' id='LC9155'>&nbsp;&nbsp;&nbsp;&nbsp;function DelegatingStateMachine(startState, base) {</div><div class='line' id='LC9156'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.base = base;</div><div class='line' id='LC9157'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DelegatingStateMachine.__super__.constructor.call(this, startState);</div><div class='line' id='LC9158'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9159'><br/></div><div class='line' id='LC9160'>&nbsp;&nbsp;&nbsp;&nbsp;DelegatingStateMachine.prototype.fire = function() {</div><div class='line' id='LC9161'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result, _ref;</div><div class='line' id='LC9162'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = DelegatingStateMachine.__super__.fire.apply(this, arguments);</div><div class='line' id='LC9163'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(_ref = this.base).fire.apply(_ref, arguments);</div><div class='line' id='LC9164'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC9165'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9166'><br/></div><div class='line' id='LC9167'>&nbsp;&nbsp;&nbsp;&nbsp;return DelegatingStateMachine;</div><div class='line' id='LC9168'><br/></div><div class='line' id='LC9169'>&nbsp;&nbsp;})(Batman.StateMachine);</div><div class='line' id='LC9170'><br/></div><div class='line' id='LC9171'>}).call(this);</div><div class='line' id='LC9172'><br/></div><div class='line' id='LC9173'>(function() {</div><div class='line' id='LC9174'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC9175'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC9176'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC9177'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC9178'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9179'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC9180'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC9181'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9182'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC9183'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC9184'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC9185'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC9186'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC9187'>&nbsp;&nbsp;&nbsp;&nbsp;__slice = [].slice;</div><div class='line' id='LC9188'><br/></div><div class='line' id='LC9189'>&nbsp;&nbsp;Batman.Model = (function(_super) {</div><div class='line' id='LC9190'>&nbsp;&nbsp;&nbsp;&nbsp;var functionName, _i, _j, _len, _len1, _ref, _ref1;</div><div class='line' id='LC9191'><br/></div><div class='line' id='LC9192'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(Model, _super);</div><div class='line' id='LC9193'><br/></div><div class='line' id='LC9194'>&nbsp;&nbsp;&nbsp;&nbsp;Model.storageKey = null;</div><div class='line' id='LC9195'><br/></div><div class='line' id='LC9196'>&nbsp;&nbsp;&nbsp;&nbsp;Model.primaryKey = &#39;id&#39;;</div><div class='line' id='LC9197'><br/></div><div class='line' id='LC9198'>&nbsp;&nbsp;&nbsp;&nbsp;Model.persist = function() {</div><div class='line' id='LC9199'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var mechanism, options;</div><div class='line' id='LC9200'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mechanism = arguments[0], options = 2 &lt;= arguments.length ? __slice.call(arguments, 1) : [];</div><div class='line' id='LC9201'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.initializeObject(this.prototype);</div><div class='line' id='LC9202'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mechanism = mechanism.isStorageAdapter ? mechanism : new mechanism(this);</div><div class='line' id='LC9203'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (options.length &gt; 0) {</div><div class='line' id='LC9204'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.mixin.apply(Batman, [mechanism].concat(__slice.call(options)));</div><div class='line' id='LC9205'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9206'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.prototype._batman.storage = mechanism;</div><div class='line' id='LC9207'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return mechanism;</div><div class='line' id='LC9208'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9209'><br/></div><div class='line' id='LC9210'>&nbsp;&nbsp;&nbsp;&nbsp;Model.storageAdapter = function() {</div><div class='line' id='LC9211'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.initializeObject(this.prototype);</div><div class='line' id='LC9212'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.prototype._batman.storage;</div><div class='line' id='LC9213'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9214'><br/></div><div class='line' id='LC9215'>&nbsp;&nbsp;&nbsp;&nbsp;Model.encode = function() {</div><div class='line' id='LC9216'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var encoder, encoderForKey, encoderOrLastKey, key, keys, _base, _i, _j, _len;</div><div class='line' id='LC9217'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keys = 2 &lt;= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), encoderOrLastKey = arguments[_i++];</div><div class='line' id='LC9218'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.initializeObject(this.prototype);</div><div class='line' id='LC9219'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(_base = this.prototype._batman).encoders || (_base.encoders = new Batman.SimpleHash);</div><div class='line' id='LC9220'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;encoder = {};</div><div class='line' id='LC9221'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (Batman.typeOf(encoderOrLastKey)) {</div><div class='line' id='LC9222'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;String&#39;:</div><div class='line' id='LC9223'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keys.push(encoderOrLastKey);</div><div class='line' id='LC9224'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC9225'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;Function&#39;:</div><div class='line' id='LC9226'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;encoder.encode = encoderOrLastKey;</div><div class='line' id='LC9227'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC9228'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:</div><div class='line' id='LC9229'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;encoder = encoderOrLastKey;</div><div class='line' id='LC9230'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9231'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_j = 0, _len = keys.length; _j &lt; _len; _j++) {</div><div class='line' id='LC9232'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = keys[_j];</div><div class='line' id='LC9233'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;encoderForKey = Batman.extend({</div><div class='line' id='LC9234'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;as: key</div><div class='line' id='LC9235'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, this.defaultEncoder, encoder);</div><div class='line' id='LC9236'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.prototype._batman.encoders.set(key, encoderForKey);</div><div class='line' id='LC9237'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9238'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9239'><br/></div><div class='line' id='LC9240'>&nbsp;&nbsp;&nbsp;&nbsp;Model.defaultEncoder = {</div><div class='line' id='LC9241'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;encode: function(x) {</div><div class='line' id='LC9242'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return x;</div><div class='line' id='LC9243'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC9244'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;decode: function(x) {</div><div class='line' id='LC9245'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return x;</div><div class='line' id='LC9246'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9247'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9248'><br/></div><div class='line' id='LC9249'>&nbsp;&nbsp;&nbsp;&nbsp;Model.observeAndFire(&#39;primaryKey&#39;, function(newPrimaryKey, oldPrimaryKey) {</div><div class='line' id='LC9250'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.encode(oldPrimaryKey, {</div><div class='line' id='LC9251'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;encode: false,</div><div class='line' id='LC9252'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;decode: false</div><div class='line' id='LC9253'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9254'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.encode(newPrimaryKey, {</div><div class='line' id='LC9255'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;encode: false,</div><div class='line' id='LC9256'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;decode: this.defaultEncoder.decode</div><div class='line' id='LC9257'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9258'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9259'><br/></div><div class='line' id='LC9260'>&nbsp;&nbsp;&nbsp;&nbsp;Model.validate = function() {</div><div class='line' id='LC9261'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var keys, matches, optionsOrFunction, validatorClass, validators, _base, _i, _j, _len, _ref, _results;</div><div class='line' id='LC9262'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keys = 2 &lt;= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), optionsOrFunction = arguments[_i++];</div><div class='line' id='LC9263'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.initializeObject(this.prototype);</div><div class='line' id='LC9264'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;validators = (_base = this.prototype._batman).validators || (_base.validators = []);</div><div class='line' id='LC9265'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof optionsOrFunction === &#39;function&#39;) {</div><div class='line' id='LC9266'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return validators.push({</div><div class='line' id='LC9267'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keys: keys,</div><div class='line' id='LC9268'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback: optionsOrFunction</div><div class='line' id='LC9269'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9270'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC9271'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = Batman.Validators;</div><div class='line' id='LC9272'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC9273'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_j = 0, _len = _ref.length; _j &lt; _len; _j++) {</div><div class='line' id='LC9274'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;validatorClass = _ref[_j];</div><div class='line' id='LC9275'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((matches = validatorClass.matches(optionsOrFunction))) {</div><div class='line' id='LC9276'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(validators.push({</div><div class='line' id='LC9277'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keys: keys,</div><div class='line' id='LC9278'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;validator: new validatorClass(matches)</div><div class='line' id='LC9279'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC9280'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC9281'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(void 0);</div><div class='line' id='LC9282'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9283'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9284'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC9285'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9286'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9287'><br/></div><div class='line' id='LC9288'>&nbsp;&nbsp;&nbsp;&nbsp;Model.classAccessor(&#39;resourceName&#39;, {</div><div class='line' id='LC9289'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function() {</div><div class='line' id='LC9290'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.resourceName != null) {</div><div class='line' id='LC9291'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.resourceName;</div><div class='line' id='LC9292'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC9293'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Batman.config.minificationErrors) {</div><div class='line' id='LC9294'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer.error(&quot;Please define &quot; + (Batman.functionName(this)) + &quot;.resourceName in order for your model to be minification safe.&quot;);</div><div class='line' id='LC9295'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9296'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.helpers.underscore(Batman.functionName(this));</div><div class='line' id='LC9297'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9298'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9299'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9300'><br/></div><div class='line' id='LC9301'>&nbsp;&nbsp;&nbsp;&nbsp;Model.classAccessor(&#39;all&#39;, {</div><div class='line' id='LC9302'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function() {</div><div class='line' id='LC9303'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._batman.check(this);</div><div class='line' id='LC9304'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.prototype.hasStorage() &amp;&amp; !this._batman.allLoadTriggered) {</div><div class='line' id='LC9305'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.load();</div><div class='line' id='LC9306'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._batman.allLoadTriggered = true;</div><div class='line' id='LC9307'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9308'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&#39;loaded&#39;);</div><div class='line' id='LC9309'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC9310'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set: function(k, v) {</div><div class='line' id='LC9311'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.set(&#39;loaded&#39;, v);</div><div class='line' id='LC9312'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9313'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9314'><br/></div><div class='line' id='LC9315'>&nbsp;&nbsp;&nbsp;&nbsp;Model.classAccessor(&#39;loaded&#39;, {</div><div class='line' id='LC9316'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function() {</div><div class='line' id='LC9317'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._loaded || (this._loaded = new Batman.Set);</div><div class='line' id='LC9318'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC9319'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set: function(k, v) {</div><div class='line' id='LC9320'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._loaded = v;</div><div class='line' id='LC9321'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9322'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9323'><br/></div><div class='line' id='LC9324'>&nbsp;&nbsp;&nbsp;&nbsp;Model.classAccessor(&#39;first&#39;, function() {</div><div class='line' id='LC9325'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&#39;all&#39;).toArray()[0];</div><div class='line' id='LC9326'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9327'><br/></div><div class='line' id='LC9328'>&nbsp;&nbsp;&nbsp;&nbsp;Model.classAccessor(&#39;last&#39;, function() {</div><div class='line' id='LC9329'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var x;</div><div class='line' id='LC9330'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = this.get(&#39;all&#39;).toArray();</div><div class='line' id='LC9331'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return x[x.length - 1];</div><div class='line' id='LC9332'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9333'><br/></div><div class='line' id='LC9334'>&nbsp;&nbsp;&nbsp;&nbsp;Model.clear = function() {</div><div class='line' id='LC9335'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result, _ref;</div><div class='line' id='LC9336'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.initializeObject(this);</div><div class='line' id='LC9337'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = this.get(&#39;loaded&#39;).clear();</div><div class='line' id='LC9338'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = this._batman.get(&#39;associations&#39;)) != null) {</div><div class='line' id='LC9339'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref.reset();</div><div class='line' id='LC9340'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9341'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._resetPromises();</div><div class='line' id='LC9342'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC9343'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9344'><br/></div><div class='line' id='LC9345'>&nbsp;&nbsp;&nbsp;&nbsp;Model.find = function(id, callback) {</div><div class='line' id='LC9346'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.findWithOptions(id, void 0, callback);</div><div class='line' id='LC9347'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9348'><br/></div><div class='line' id='LC9349'>&nbsp;&nbsp;&nbsp;&nbsp;Model.findWithOptions = function(id, options, callback) {</div><div class='line' id='LC9350'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var record;</div><div class='line' id='LC9351'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (options == null) {</div><div class='line' id='LC9352'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options = {};</div><div class='line' id='LC9353'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9354'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer.assert(callback, &quot;Must call find with a callback!&quot;);</div><div class='line' id='LC9355'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record = new this();</div><div class='line' id='LC9356'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record._withoutDirtyTracking(function() {</div><div class='line' id='LC9357'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.set(&#39;id&#39;, id);</div><div class='line' id='LC9358'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9359'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record.loadWithOptions(options, callback);</div><div class='line' id='LC9360'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return record;</div><div class='line' id='LC9361'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9362'><br/></div><div class='line' id='LC9363'>&nbsp;&nbsp;&nbsp;&nbsp;Model.load = function(options, callback) {</div><div class='line' id='LC9364'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC9365'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = typeof options) === &#39;function&#39; || _ref === &#39;undefined&#39;) {</div><div class='line' id='LC9366'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback = options;</div><div class='line' id='LC9367'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options = {};</div><div class='line' id='LC9368'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC9369'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options = {</div><div class='line' id='LC9370'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data: options</div><div class='line' id='LC9371'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9372'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9373'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.loadWithOptions(options, callback);</div><div class='line' id='LC9374'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9375'><br/></div><div class='line' id='LC9376'>&nbsp;&nbsp;&nbsp;&nbsp;Model.loadWithOptions = function(options, callback) {</div><div class='line' id='LC9377'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC9378'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fire(&#39;loading&#39;, options);</div><div class='line' id='LC9379'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._doStorageOperation(&#39;readAll&#39;, options, function(err, records, env) {</div><div class='line' id='LC9380'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var mappedRecords;</div><div class='line' id='LC9381'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (err != null) {</div><div class='line' id='LC9382'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.fire(&#39;error&#39;, err);</div><div class='line' id='LC9383'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return typeof callback === &quot;function&quot; ? callback(err, []) : void 0;</div><div class='line' id='LC9384'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC9385'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mappedRecords = _this._mapIdentities(records);</div><div class='line' id='LC9386'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.fire(&#39;loaded&#39;, mappedRecords, env);</div><div class='line' id='LC9387'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return typeof callback === &quot;function&quot; ? callback(err, mappedRecords, env) : void 0;</div><div class='line' id='LC9388'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9389'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9390'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9391'><br/></div><div class='line' id='LC9392'>&nbsp;&nbsp;&nbsp;&nbsp;Model.create = function(attrs, callback) {</div><div class='line' id='LC9393'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var obj, _ref;</div><div class='line' id='LC9394'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!callback) {</div><div class='line' id='LC9395'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = [{},</div><div class='line' id='LC9396'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attrs], attrs = _ref[0], callback = _ref[1];</div><div class='line' id='LC9397'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9398'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj = new this(attrs);</div><div class='line' id='LC9399'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj.save(callback);</div><div class='line' id='LC9400'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return obj;</div><div class='line' id='LC9401'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9402'><br/></div><div class='line' id='LC9403'>&nbsp;&nbsp;&nbsp;&nbsp;Model.findOrCreate = function(attrs, callback) {</div><div class='line' id='LC9404'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var foundRecord, record;</div><div class='line' id='LC9405'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record = new this(attrs);</div><div class='line' id='LC9406'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (record.isNew()) {</div><div class='line' id='LC9407'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record.save(callback);</div><div class='line' id='LC9408'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC9409'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foundRecord = this._mapIdentity(record);</div><div class='line' id='LC9410'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback(void 0, foundRecord);</div><div class='line' id='LC9411'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9412'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return record;</div><div class='line' id='LC9413'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9414'><br/></div><div class='line' id='LC9415'>&nbsp;&nbsp;&nbsp;&nbsp;Model.createFromJSON = function(json) {</div><div class='line' id='LC9416'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var record;</div><div class='line' id='LC9417'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record = new this;</div><div class='line' id='LC9418'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record._withoutDirtyTracking(function() {</div><div class='line' id='LC9419'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.fromJSON(json);</div><div class='line' id='LC9420'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9421'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._mapIdentity(record);</div><div class='line' id='LC9422'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9423'><br/></div><div class='line' id='LC9424'>&nbsp;&nbsp;&nbsp;&nbsp;Model._mapIdentity = function(record) {</div><div class='line' id='LC9425'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._mapIdentities([record])[0];</div><div class='line' id='LC9426'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9427'><br/></div><div class='line' id='LC9428'>&nbsp;&nbsp;&nbsp;&nbsp;Model._mapIdentities = function(records) {</div><div class='line' id='LC9429'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var existing, id, index, newRecords, record, _i, _len, _ref, _ref1;</div><div class='line' id='LC9430'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newRecords = [];</div><div class='line' id='LC9431'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (index = _i = 0, _len = records.length; _i &lt; _len; index = ++_i) {</div><div class='line' id='LC9432'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record = records[index];</div><div class='line' id='LC9433'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!((id = record.get(&#39;id&#39;)) != null)) {</div><div class='line' id='LC9434'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;</div><div class='line' id='LC9435'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (existing = (_ref = this.get(&#39;loaded.indexedBy.id&#39;).get(id)) != null ? _ref.toArray()[0] : void 0) {</div><div class='line' id='LC9436'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;existing._withoutDirtyTracking(function() {</div><div class='line' id='LC9437'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref1;</div><div class='line' id='LC9438'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.updateAttributes(((_ref1 = record.get(&#39;attributes&#39;)) != null ? _ref1.toObject() : void 0) || {});</div><div class='line' id='LC9439'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9440'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;records[index] = existing;</div><div class='line' id='LC9441'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC9442'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newRecords.push(record);</div><div class='line' id='LC9443'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9444'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9445'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (newRecords.length) {</div><div class='line' id='LC9446'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(_ref1 = this.get(&#39;loaded&#39;)).add.apply(_ref1, newRecords);</div><div class='line' id='LC9447'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9448'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return records;</div><div class='line' id='LC9449'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9450'><br/></div><div class='line' id='LC9451'>&nbsp;&nbsp;&nbsp;&nbsp;Model._doStorageOperation = function(operation, options, callback) {</div><div class='line' id='LC9452'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var adapter;</div><div class='line' id='LC9453'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer.assert(this.prototype.hasStorage(), &quot;Can&#39;t &quot; + operation + &quot; model &quot; + (Batman.functionName(this.constructor)) + &quot; without any storage adapters!&quot;);</div><div class='line' id='LC9454'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;adapter = this.prototype._batman.get(&#39;storage&#39;);</div><div class='line' id='LC9455'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return adapter.perform(operation, this, options, callback);</div><div class='line' id='LC9456'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9457'><br/></div><div class='line' id='LC9458'>&nbsp;&nbsp;&nbsp;&nbsp;_ref = [&#39;find&#39;, &#39;load&#39;, &#39;create&#39;];</div><div class='line' id='LC9459'>&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC9460'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;functionName = _ref[_i];</div><div class='line' id='LC9461'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Model[functionName] = Batman.Property.wrapTrackingPrevention(Model[functionName]);</div><div class='line' id='LC9462'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9463'><br/></div><div class='line' id='LC9464'>&nbsp;&nbsp;&nbsp;&nbsp;Model.InstanceLifecycleStateMachine = (function(_super1) {</div><div class='line' id='LC9465'><br/></div><div class='line' id='LC9466'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__extends(InstanceLifecycleStateMachine, _super1);</div><div class='line' id='LC9467'><br/></div><div class='line' id='LC9468'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function InstanceLifecycleStateMachine() {</div><div class='line' id='LC9469'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return InstanceLifecycleStateMachine.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC9470'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9471'><br/></div><div class='line' id='LC9472'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InstanceLifecycleStateMachine.transitions({</div><div class='line' id='LC9473'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;load: {</div><div class='line' id='LC9474'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from: [&#39;dirty&#39;, &#39;clean&#39;],</div><div class='line' id='LC9475'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to: &#39;loading&#39;</div><div class='line' id='LC9476'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC9477'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;create: {</div><div class='line' id='LC9478'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from: [&#39;dirty&#39;, &#39;clean&#39;],</div><div class='line' id='LC9479'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to: &#39;creating&#39;</div><div class='line' id='LC9480'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC9481'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;save: {</div><div class='line' id='LC9482'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from: [&#39;dirty&#39;, &#39;clean&#39;],</div><div class='line' id='LC9483'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to: &#39;saving&#39;</div><div class='line' id='LC9484'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC9485'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;destroy: {</div><div class='line' id='LC9486'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from: [&#39;dirty&#39;, &#39;clean&#39;],</div><div class='line' id='LC9487'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to: &#39;destroying&#39;</div><div class='line' id='LC9488'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC9489'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;failedValidation: {</div><div class='line' id='LC9490'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from: [&#39;saving&#39;, &#39;creating&#39;],</div><div class='line' id='LC9491'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to: &#39;dirty&#39;</div><div class='line' id='LC9492'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC9493'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loaded: {</div><div class='line' id='LC9494'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loading: &#39;clean&#39;</div><div class='line' id='LC9495'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC9496'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;created: {</div><div class='line' id='LC9497'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;creating: &#39;clean&#39;</div><div class='line' id='LC9498'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC9499'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;saved: {</div><div class='line' id='LC9500'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;saving: &#39;clean&#39;</div><div class='line' id='LC9501'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC9502'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;destroyed: {</div><div class='line' id='LC9503'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;destroying: &#39;destroyed&#39;</div><div class='line' id='LC9504'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC9505'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set: {</div><div class='line' id='LC9506'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from: [&#39;dirty&#39;, &#39;clean&#39;],</div><div class='line' id='LC9507'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to: &#39;dirty&#39;</div><div class='line' id='LC9508'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC9509'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error: {</div><div class='line' id='LC9510'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from: [&#39;saving&#39;, &#39;creating&#39;, &#39;loading&#39;, &#39;destroying&#39;],</div><div class='line' id='LC9511'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to: &#39;error&#39;</div><div class='line' id='LC9512'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9513'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9514'><br/></div><div class='line' id='LC9515'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return InstanceLifecycleStateMachine;</div><div class='line' id='LC9516'><br/></div><div class='line' id='LC9517'>&nbsp;&nbsp;&nbsp;&nbsp;})(Batman.DelegatingStateMachine);</div><div class='line' id='LC9518'><br/></div><div class='line' id='LC9519'>&nbsp;&nbsp;&nbsp;&nbsp;function Model(idOrAttributes) {</div><div class='line' id='LC9520'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (idOrAttributes == null) {</div><div class='line' id='LC9521'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;idOrAttributes = {};</div><div class='line' id='LC9522'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9523'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer.assert(this instanceof Batman.Object, &quot;constructors must be called with new&quot;);</div><div class='line' id='LC9524'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Batman.typeOf(idOrAttributes) === &#39;Object&#39;) {</div><div class='line' id='LC9525'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Model.__super__.constructor.call(this, idOrAttributes);</div><div class='line' id='LC9526'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC9527'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Model.__super__.constructor.call(this);</div><div class='line' id='LC9528'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set(&#39;id&#39;, idOrAttributes);</div><div class='line' id='LC9529'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9530'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9531'><br/></div><div class='line' id='LC9532'>&nbsp;&nbsp;&nbsp;&nbsp;Model.accessor(&#39;lifecycle&#39;, function() {</div><div class='line' id='LC9533'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.lifecycle || (this.lifecycle = new Batman.Model.InstanceLifecycleStateMachine(&#39;clean&#39;, this));</div><div class='line' id='LC9534'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9535'><br/></div><div class='line' id='LC9536'>&nbsp;&nbsp;&nbsp;&nbsp;Model.accessor(&#39;attributes&#39;, function() {</div><div class='line' id='LC9537'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.attributes || (this.attributes = new Batman.Hash);</div><div class='line' id='LC9538'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9539'><br/></div><div class='line' id='LC9540'>&nbsp;&nbsp;&nbsp;&nbsp;Model.accessor(&#39;dirtyKeys&#39;, function() {</div><div class='line' id='LC9541'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.dirtyKeys || (this.dirtyKeys = new Batman.Hash);</div><div class='line' id='LC9542'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9543'><br/></div><div class='line' id='LC9544'>&nbsp;&nbsp;&nbsp;&nbsp;Model.accessor(&#39;_dirtiedKeys&#39;, function() {</div><div class='line' id='LC9545'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._dirtiedKeys || (this._dirtiedKeys = new Batman.SimpleSet);</div><div class='line' id='LC9546'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9547'><br/></div><div class='line' id='LC9548'>&nbsp;&nbsp;&nbsp;&nbsp;Model.accessor(&#39;errors&#39;, function() {</div><div class='line' id='LC9549'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.errors || (this.errors = new Batman.ErrorsSet);</div><div class='line' id='LC9550'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9551'><br/></div><div class='line' id='LC9552'>&nbsp;&nbsp;&nbsp;&nbsp;Model.accessor(&#39;isNew&#39;, function() {</div><div class='line' id='LC9553'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.isNew();</div><div class='line' id='LC9554'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9555'><br/></div><div class='line' id='LC9556'>&nbsp;&nbsp;&nbsp;&nbsp;Model.accessor(&#39;isDirty&#39;, function() {</div><div class='line' id='LC9557'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.isDirty();</div><div class='line' id='LC9558'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9559'><br/></div><div class='line' id='LC9560'>&nbsp;&nbsp;&nbsp;&nbsp;Model.accessor(Model.defaultAccessor = {</div><div class='line' id='LC9561'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function(k) {</div><div class='line' id='LC9562'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.getPath(this, [&#39;attributes&#39;, k]);</div><div class='line' id='LC9563'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC9564'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set: function(k, v) {</div><div class='line' id='LC9565'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this._willSet(k)) {</div><div class='line' id='LC9566'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&#39;attributes&#39;).set(k, v);</div><div class='line' id='LC9567'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC9568'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(k);</div><div class='line' id='LC9569'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9570'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC9571'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unset: function(k) {</div><div class='line' id='LC9572'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&#39;attributes&#39;).unset(k);</div><div class='line' id='LC9573'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9574'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9575'><br/></div><div class='line' id='LC9576'>&nbsp;&nbsp;&nbsp;&nbsp;Model.wrapAccessor(&#39;id&#39;, function(core) {</div><div class='line' id='LC9577'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return {</div><div class='line' id='LC9578'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function() {</div><div class='line' id='LC9579'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var primaryKey;</div><div class='line' id='LC9580'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;primaryKey = this.constructor.primaryKey;</div><div class='line' id='LC9581'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (primaryKey === &#39;id&#39;) {</div><div class='line' id='LC9582'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return core.get.apply(this, arguments);</div><div class='line' id='LC9583'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC9584'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(primaryKey);</div><div class='line' id='LC9585'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9586'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC9587'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set: function(key, value) {</div><div class='line' id='LC9588'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var parsedValue, primaryKey;</div><div class='line' id='LC9589'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((typeof value === &quot;string&quot;) &amp;&amp; (value.match(/[^0-9]/) === null) &amp;&amp; ((&quot;&quot; + (parsedValue = parseInt(value, 10))) === value)) {</div><div class='line' id='LC9590'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = parsedValue;</div><div class='line' id='LC9591'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9592'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;primaryKey = this.constructor.primaryKey;</div><div class='line' id='LC9593'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (primaryKey === &#39;id&#39;) {</div><div class='line' id='LC9594'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._willSet(key);</div><div class='line' id='LC9595'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return core.set.apply(this, arguments);</div><div class='line' id='LC9596'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC9597'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.set(primaryKey, value);</div><div class='line' id='LC9598'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9599'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9600'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9601'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9602'><br/></div><div class='line' id='LC9603'>&nbsp;&nbsp;&nbsp;&nbsp;Model.prototype.isNew = function() {</div><div class='line' id='LC9604'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return typeof this.get(&#39;id&#39;) === &#39;undefined&#39;;</div><div class='line' id='LC9605'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9606'><br/></div><div class='line' id='LC9607'>&nbsp;&nbsp;&nbsp;&nbsp;Model.prototype.isDirty = function() {</div><div class='line' id='LC9608'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&#39;lifecycle.state&#39;) === &#39;dirty&#39;;</div><div class='line' id='LC9609'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9610'><br/></div><div class='line' id='LC9611'>&nbsp;&nbsp;&nbsp;&nbsp;Model.prototype.updateAttributes = function(attrs) {</div><div class='line' id='LC9612'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.mixin(attrs);</div><div class='line' id='LC9613'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC9614'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9615'><br/></div><div class='line' id='LC9616'>&nbsp;&nbsp;&nbsp;&nbsp;Model.prototype.toString = function() {</div><div class='line' id='LC9617'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;&quot; + (this.constructor.get(&#39;resourceName&#39;)) + &quot;: &quot; + (this.get(&#39;id&#39;));</div><div class='line' id='LC9618'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9619'><br/></div><div class='line' id='LC9620'>&nbsp;&nbsp;&nbsp;&nbsp;Model.prototype.toParam = function() {</div><div class='line' id='LC9621'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&#39;id&#39;);</div><div class='line' id='LC9622'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9623'><br/></div><div class='line' id='LC9624'>&nbsp;&nbsp;&nbsp;&nbsp;Model.prototype.toJSON = function() {</div><div class='line' id='LC9625'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var encoders, obj, _this = this;</div><div class='line' id='LC9626'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj = {};</div><div class='line' id='LC9627'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;encoders = this._batman.get(&#39;encoders&#39;);</div><div class='line' id='LC9628'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(!encoders || encoders.isEmpty())) {</div><div class='line' id='LC9629'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;encoders.forEach(function(key, encoder) {</div><div class='line' id='LC9630'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var encodedVal, val;</div><div class='line' id='LC9631'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (encoder.encode) {</div><div class='line' id='LC9632'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;val = _this.get(key);</div><div class='line' id='LC9633'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof val !== &#39;undefined&#39;) {</div><div class='line' id='LC9634'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;encodedVal = encoder.encode(val, key, obj, _this);</div><div class='line' id='LC9635'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof encodedVal !== &#39;undefined&#39;) {</div><div class='line' id='LC9636'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return obj[encoder.as] = encodedVal;</div><div class='line' id='LC9637'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9638'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9639'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9640'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9641'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9642'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return obj;</div><div class='line' id='LC9643'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9644'><br/></div><div class='line' id='LC9645'>&nbsp;&nbsp;&nbsp;&nbsp;Model.prototype.fromJSON = function(data) {</div><div class='line' id='LC9646'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var encoders, key, obj, value, _this = this;</div><div class='line' id='LC9647'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj = {};</div><div class='line' id='LC9648'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;encoders = this._batman.get(&#39;encoders&#39;);</div><div class='line' id='LC9649'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!encoders || encoders.isEmpty() || !encoders.some(function(key, encoder) {</div><div class='line' id='LC9650'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return encoder.decode != null;</div><div class='line' id='LC9651'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})) {</div><div class='line' id='LC9652'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (key in data) {</div><div class='line' id='LC9653'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = data[key];</div><div class='line' id='LC9654'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj[key] = value;</div><div class='line' id='LC9655'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9656'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC9657'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;encoders.forEach(function(key, encoder) {</div><div class='line' id='LC9658'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (encoder.decode &amp;&amp; typeof data[encoder.as] !== &#39;undefined&#39;) {</div><div class='line' id='LC9659'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return obj[key] = encoder.decode(data[encoder.as], encoder.as, data, obj, _this);</div><div class='line' id='LC9660'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9661'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9662'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9663'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.constructor.primaryKey !== &#39;id&#39;) {</div><div class='line' id='LC9664'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj.id = data[this.constructor.primaryKey];</div><div class='line' id='LC9665'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9666'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer[&quot;do&quot;](function() {</div><div class='line' id='LC9667'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((!encoders) || encoders.length &lt;= 1) {</div><div class='line' id='LC9668'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.developer.warn(&quot;Warning: Model &quot; + (Batman.functionName(_this.constructor)) + &quot; has suspiciously few decoders!&quot;);</div><div class='line' id='LC9669'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9670'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9671'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.mixin(obj);</div><div class='line' id='LC9672'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9673'><br/></div><div class='line' id='LC9674'>&nbsp;&nbsp;&nbsp;&nbsp;Model.prototype.hasStorage = function() {</div><div class='line' id='LC9675'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._batman.get(&#39;storage&#39;) != null;</div><div class='line' id='LC9676'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9677'><br/></div><div class='line' id='LC9678'>&nbsp;&nbsp;&nbsp;&nbsp;Model.prototype.load = function(options, callback) {</div><div class='line' id='LC9679'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref1;</div><div class='line' id='LC9680'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!callback) {</div><div class='line' id='LC9681'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1 = [{},</div><div class='line' id='LC9682'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options], options = _ref1[0], callback = _ref1[1];</div><div class='line' id='LC9683'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC9684'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options = {</div><div class='line' id='LC9685'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data: options</div><div class='line' id='LC9686'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9687'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9688'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.loadWithOptions(options, callback);</div><div class='line' id='LC9689'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9690'><br/></div><div class='line' id='LC9691'>&nbsp;&nbsp;&nbsp;&nbsp;Model.prototype.loadWithOptions = function(options, callback) {</div><div class='line' id='LC9692'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var callbackQueue, hasOptions, _ref1, _this = this;</div><div class='line' id='LC9693'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hasOptions = Object.keys(options).length !== 0;</div><div class='line' id='LC9694'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref1 = this.get(&#39;lifecycle.state&#39;)) === &#39;destroying&#39; || _ref1 === &#39;destroyed&#39;) {</div><div class='line' id='LC9695'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof callback === &quot;function&quot;) {</div><div class='line' id='LC9696'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback(new Error(&quot;Can&#39;t load a destroyed record!&quot;));</div><div class='line' id='LC9697'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9698'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC9699'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9700'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.get(&#39;lifecycle&#39;).load()) {</div><div class='line' id='LC9701'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callbackQueue = [];</div><div class='line' id='LC9702'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (callback != null) {</div><div class='line' id='LC9703'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callbackQueue.push(callback);</div><div class='line' id='LC9704'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9705'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!hasOptions) {</div><div class='line' id='LC9706'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._currentLoad = callbackQueue;</div><div class='line' id='LC9707'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9708'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._doStorageOperation(&#39;read&#39;, options, function(err, record, env) {</div><div class='line' id='LC9709'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _j, _len1;</div><div class='line' id='LC9710'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!err) {</div><div class='line' id='LC9711'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.get(&#39;lifecycle&#39;).loaded();</div><div class='line' id='LC9712'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record = _this.constructor._mapIdentity(record);</div><div class='line' id='LC9713'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC9714'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.get(&#39;lifecycle&#39;).error();</div><div class='line' id='LC9715'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9716'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!hasOptions) {</div><div class='line' id='LC9717'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this._currentLoad = null;</div><div class='line' id='LC9718'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9719'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_j = 0, _len1 = callbackQueue.length; _j &lt; _len1; _j++) {</div><div class='line' id='LC9720'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback = callbackQueue[_j];</div><div class='line' id='LC9721'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback(err, record, env);</div><div class='line' id='LC9722'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9723'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9724'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC9725'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.get(&#39;lifecycle.state&#39;) === &#39;loading&#39; &amp;&amp; !hasOptions) {</div><div class='line' id='LC9726'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (callback != null) {</div><div class='line' id='LC9727'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._currentLoad.push(callback);</div><div class='line' id='LC9728'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9729'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC9730'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return typeof callback === &quot;function&quot; ? callback(new Batman.StateMachine.InvalidTransitionError(&quot;Can&#39;t load while in state &quot; + (this.get(&#39;lifecycle.state&#39;)))) : void 0;</div><div class='line' id='LC9731'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9732'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9733'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9734'><br/></div><div class='line' id='LC9735'>&nbsp;&nbsp;&nbsp;&nbsp;Model.prototype.save = function(options, callback) {</div><div class='line' id='LC9736'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var endState, isNew, startState, storageOperation, _ref1, _ref2, _this = this;</div><div class='line' id='LC9737'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!callback) {</div><div class='line' id='LC9738'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1 = [{},</div><div class='line' id='LC9739'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options], options = _ref1[0], callback = _ref1[1];</div><div class='line' id='LC9740'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9741'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isNew = this.isNew();</div><div class='line' id='LC9742'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref2 = isNew ? [&#39;create&#39;, &#39;create&#39;, &#39;created&#39;] : [&#39;save&#39;, &#39;update&#39;, &#39;saved&#39;], startState = _ref2[0], storageOperation = _ref2[1], endState = _ref2[2];</div><div class='line' id='LC9743'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.get(&#39;lifecycle&#39;).startTransition(startState)) {</div><div class='line' id='LC9744'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.validate(function(error, errors) {</div><div class='line' id='LC9745'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var associations;</div><div class='line' id='LC9746'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (error || errors.length) {</div><div class='line' id='LC9747'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.get(&#39;lifecycle&#39;).failedValidation();</div><div class='line' id='LC9748'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return typeof callback === &quot;function&quot; ? callback(error || errors, _this) : void 0;</div><div class='line' id='LC9749'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9750'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;associations = _this.constructor._batman.get(&#39;associations&#39;);</div><div class='line' id='LC9751'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this._withoutDirtyTracking(function() {</div><div class='line' id='LC9752'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref3, _this = this;</div><div class='line' id='LC9753'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return associations != null ? (_ref3 = associations.getByType(&#39;belongsTo&#39;)) != null ? _ref3.forEach(function(association, label) {</div><div class='line' id='LC9754'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return association.apply(_this);</div><div class='line' id='LC9755'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}) : void 0 : void 0;</div><div class='line' id='LC9756'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9757'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this._doStorageOperation(storageOperation, {</div><div class='line' id='LC9758'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data: options</div><div class='line' id='LC9759'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, function(err, record, env) {</div><div class='line' id='LC9760'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!err) {</div><div class='line' id='LC9761'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.get(&#39;dirtyKeys&#39;).clear();</div><div class='line' id='LC9762'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.get(&#39;_dirtiedKeys&#39;).clear();</div><div class='line' id='LC9763'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (associations) {</div><div class='line' id='LC9764'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record._withoutDirtyTracking(function() {</div><div class='line' id='LC9765'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref3, _ref4;</div><div class='line' id='LC9766'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref3 = associations.getByType(&#39;hasOne&#39;)) != null) {</div><div class='line' id='LC9767'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref3.forEach(function(association, label) {</div><div class='line' id='LC9768'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return association.apply(err, record);</div><div class='line' id='LC9769'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9770'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9771'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref4 = associations.getByType(&#39;hasMany&#39;)) != null ? _ref4.forEach(function(association, label) {</div><div class='line' id='LC9772'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return association.apply(err, record);</div><div class='line' id='LC9773'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}) : void 0;</div><div class='line' id='LC9774'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9775'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9776'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record = _this.constructor._mapIdentity(record);</div><div class='line' id='LC9777'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.get(&#39;lifecycle&#39;).startTransition(endState);</div><div class='line' id='LC9778'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC9779'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (err instanceof Batman.ErrorsSet) {</div><div class='line' id='LC9780'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.get(&#39;lifecycle&#39;).failedValidation();</div><div class='line' id='LC9781'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC9782'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.get(&#39;lifecycle&#39;).error();</div><div class='line' id='LC9783'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9784'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9785'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return typeof callback === &quot;function&quot; ? callback(err, record || _this, env) : void 0;</div><div class='line' id='LC9786'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9787'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9788'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC9789'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return typeof callback === &quot;function&quot; ? callback(new Batman.StateMachine.InvalidTransitionError(&quot;Can&#39;t save while in state &quot; + (this.get(&#39;lifecycle.state&#39;)))) : void 0;</div><div class='line' id='LC9790'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9791'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9792'><br/></div><div class='line' id='LC9793'>&nbsp;&nbsp;&nbsp;&nbsp;Model.prototype.destroy = function(options, callback) {</div><div class='line' id='LC9794'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref1, _this = this;</div><div class='line' id='LC9795'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!callback) {</div><div class='line' id='LC9796'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1 = [{},</div><div class='line' id='LC9797'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options], options = _ref1[0], callback = _ref1[1];</div><div class='line' id='LC9798'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9799'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.get(&#39;lifecycle&#39;).destroy()) {</div><div class='line' id='LC9800'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._doStorageOperation(&#39;destroy&#39;, {</div><div class='line' id='LC9801'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data: options</div><div class='line' id='LC9802'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, function(err, record, env) {</div><div class='line' id='LC9803'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!err) {</div><div class='line' id='LC9804'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.constructor.get(&#39;loaded&#39;).remove(_this);</div><div class='line' id='LC9805'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.get(&#39;lifecycle&#39;).destroyed();</div><div class='line' id='LC9806'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC9807'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.get(&#39;lifecycle&#39;).error();</div><div class='line' id='LC9808'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9809'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return typeof callback === &quot;function&quot; ? callback(err, record, env) : void 0;</div><div class='line' id='LC9810'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9811'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC9812'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return typeof callback === &quot;function&quot; ? callback(new Batman.StateMachine.InvalidTransitionError(&quot;Can&#39;t destroy while in state &quot; + (this.get(&#39;lifecycle.state&#39;)))) : void 0;</div><div class='line' id='LC9813'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9814'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9815'><br/></div><div class='line' id='LC9816'>&nbsp;&nbsp;&nbsp;&nbsp;Model.prototype.validate = function(callback) {</div><div class='line' id='LC9817'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var args, count, errors, finishedValidation, key, validator, validators, _j, _k, _len1, _len2, _ref1;</div><div class='line' id='LC9818'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errors = this.get(&#39;errors&#39;);</div><div class='line' id='LC9819'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errors.clear();</div><div class='line' id='LC9820'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;validators = this._batman.get(&#39;validators&#39;) || [];</div><div class='line' id='LC9821'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!validators || validators.length === 0) {</div><div class='line' id='LC9822'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof callback === &quot;function&quot;) {</div><div class='line' id='LC9823'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback(void 0, errors);</div><div class='line' id='LC9824'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9825'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC9826'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9827'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count = validators.reduce((function(acc, validator) {</div><div class='line' id='LC9828'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return acc + validator.keys.length;</div><div class='line' id='LC9829'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}), 0);</div><div class='line' id='LC9830'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;finishedValidation = function() {</div><div class='line' id='LC9831'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (--count === 0) {</div><div class='line' id='LC9832'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return typeof callback === &quot;function&quot; ? callback(void 0, errors) : void 0;</div><div class='line' id='LC9833'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9834'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9835'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_j = 0, _len1 = validators.length; _j &lt; _len1; _j++) {</div><div class='line' id='LC9836'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;validator = validators[_j];</div><div class='line' id='LC9837'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1 = validator.keys;</div><div class='line' id='LC9838'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_k = 0, _len2 = _ref1.length; _k &lt; _len2; _k++) {</div><div class='line' id='LC9839'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = _ref1[_k];</div><div class='line' id='LC9840'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args = [errors, this, key, finishedValidation];</div><div class='line' id='LC9841'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC9842'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (validator.validator) {</div><div class='line' id='LC9843'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;validator.validator.validateEach.apply(validator.validator, args);</div><div class='line' id='LC9844'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC9845'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;validator.callback.apply(validator, args);</div><div class='line' id='LC9846'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9847'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC9848'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof callback === &quot;function&quot;) {</div><div class='line' id='LC9849'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback(e, errors);</div><div class='line' id='LC9850'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9851'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9852'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9853'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9854'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9855'><br/></div><div class='line' id='LC9856'>&nbsp;&nbsp;&nbsp;&nbsp;Model.prototype.associationProxy = function(association) {</div><div class='line' id='LC9857'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var proxies, _base, _name;</div><div class='line' id='LC9858'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.initializeObject(this);</div><div class='line' id='LC9859'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proxies = (_base = this._batman).associationProxies || (_base.associationProxies = {});</div><div class='line' id='LC9860'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proxies[_name = association.label] || (proxies[_name] = new association.proxyClass(association, this));</div><div class='line' id='LC9861'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return proxies[association.label];</div><div class='line' id='LC9862'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9863'><br/></div><div class='line' id='LC9864'>&nbsp;&nbsp;&nbsp;&nbsp;Model.prototype._willSet = function(key) {</div><div class='line' id='LC9865'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this._pauseDirtyTracking) {</div><div class='line' id='LC9866'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC9867'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9868'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.get(&#39;lifecycle&#39;).startTransition(&#39;set&#39;)) {</div><div class='line' id='LC9869'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this.get(&#39;_dirtiedKeys&#39;).has(key)) {</div><div class='line' id='LC9870'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set(&quot;dirtyKeys.&quot; + key, this.get(key));</div><div class='line' id='LC9871'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.get(&#39;_dirtiedKeys&#39;).add(key);</div><div class='line' id='LC9872'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9873'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC9874'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC9875'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC9876'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9877'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9878'><br/></div><div class='line' id='LC9879'>&nbsp;&nbsp;&nbsp;&nbsp;Model.prototype._doStorageOperation = function(operation, options, callback) {</div><div class='line' id='LC9880'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var adapter, _this = this;</div><div class='line' id='LC9881'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer.assert(this.hasStorage(), &quot;Can&#39;t &quot; + operation + &quot; model &quot; + (Batman.functionName(this.constructor)) + &quot; without any storage adapters!&quot;);</div><div class='line' id='LC9882'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;adapter = this._batman.get(&#39;storage&#39;);</div><div class='line' id='LC9883'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return adapter.perform(operation, this, options, function() {</div><div class='line' id='LC9884'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return callback.apply(null, arguments);</div><div class='line' id='LC9885'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9886'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9887'><br/></div><div class='line' id='LC9888'>&nbsp;&nbsp;&nbsp;&nbsp;Model.prototype._withoutDirtyTracking = function(block) {</div><div class='line' id='LC9889'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result;</div><div class='line' id='LC9890'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._pauseDirtyTracking = true;</div><div class='line' id='LC9891'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = block.call(this);</div><div class='line' id='LC9892'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._pauseDirtyTracking = false;</div><div class='line' id='LC9893'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC9894'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9895'><br/></div><div class='line' id='LC9896'>&nbsp;&nbsp;&nbsp;&nbsp;_ref1 = [&#39;load&#39;, &#39;save&#39;, &#39;validate&#39;, &#39;destroy&#39;];</div><div class='line' id='LC9897'>&nbsp;&nbsp;&nbsp;&nbsp;for (_j = 0, _len1 = _ref1.length; _j &lt; _len1; _j++) {</div><div class='line' id='LC9898'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;functionName = _ref1[_j];</div><div class='line' id='LC9899'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Model.prototype[functionName] = Batman.Property.wrapTrackingPrevention(Model.prototype[functionName]);</div><div class='line' id='LC9900'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9901'><br/></div><div class='line' id='LC9902'>&nbsp;&nbsp;&nbsp;&nbsp;return Model;</div><div class='line' id='LC9903'><br/></div><div class='line' id='LC9904'>&nbsp;&nbsp;}).call(this, Batman.Object);</div><div class='line' id='LC9905'><br/></div><div class='line' id='LC9906'>}).call(this);</div><div class='line' id='LC9907'><br/></div><div class='line' id='LC9908'>(function() {</div><div class='line' id='LC9909'>&nbsp;&nbsp;var k, _fn, _i, _len, _ref, _this = this;</div><div class='line' id='LC9910'><br/></div><div class='line' id='LC9911'>&nbsp;&nbsp;_ref = Batman.AssociationCurator.availableAssociations;</div><div class='line' id='LC9912'>&nbsp;&nbsp;_fn = function(k) {</div><div class='line' id='LC9913'>&nbsp;&nbsp;&nbsp;&nbsp;return Batman.Model[k] = function(label, scope) {</div><div class='line' id='LC9914'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var collection, _base;</div><div class='line' id='LC9915'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.initializeObject(this);</div><div class='line' id='LC9916'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;collection = (_base = this._batman).associations || (_base.associations = new Batman.AssociationCurator(this));</div><div class='line' id='LC9917'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return collection.add(new Batman[&quot;&quot; + (Batman.helpers.capitalize(k)) + &quot;Association&quot;](this, label, scope));</div><div class='line' id='LC9918'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9919'>&nbsp;&nbsp;};</div><div class='line' id='LC9920'>&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC9921'>&nbsp;&nbsp;&nbsp;&nbsp;k = _ref[_i];</div><div class='line' id='LC9922'>&nbsp;&nbsp;&nbsp;&nbsp;_fn(k);</div><div class='line' id='LC9923'>&nbsp;&nbsp;}</div><div class='line' id='LC9924'><br/></div><div class='line' id='LC9925'>}).call(this);</div><div class='line' id='LC9926'><br/></div><div class='line' id='LC9927'>(function() {</div><div class='line' id='LC9928'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC9929'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC9930'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC9931'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC9932'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9933'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC9934'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC9935'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9936'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC9937'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC9938'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC9939'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC9940'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9941'><br/></div><div class='line' id='LC9942'>&nbsp;&nbsp;Batman.Proxy = (function(_super) {</div><div class='line' id='LC9943'><br/></div><div class='line' id='LC9944'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(Proxy, _super);</div><div class='line' id='LC9945'><br/></div><div class='line' id='LC9946'>&nbsp;&nbsp;&nbsp;&nbsp;Proxy.prototype.isProxy = true;</div><div class='line' id='LC9947'><br/></div><div class='line' id='LC9948'>&nbsp;&nbsp;&nbsp;&nbsp;function Proxy(target) {</div><div class='line' id='LC9949'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Proxy.__super__.constructor.call(this);</div><div class='line' id='LC9950'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (target != null) {</div><div class='line' id='LC9951'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set(&#39;target&#39;, target);</div><div class='line' id='LC9952'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9953'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9954'><br/></div><div class='line' id='LC9955'>&nbsp;&nbsp;&nbsp;&nbsp;Proxy.accessor(&#39;target&#39;, Batman.Property.defaultAccessor);</div><div class='line' id='LC9956'><br/></div><div class='line' id='LC9957'>&nbsp;&nbsp;&nbsp;&nbsp;Proxy.accessor({</div><div class='line' id='LC9958'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function(key) {</div><div class='line' id='LC9959'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC9960'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = this.get(&#39;target&#39;)) != null ? _ref.get(key) : void 0;</div><div class='line' id='LC9961'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC9962'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set: function(key, value) {</div><div class='line' id='LC9963'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC9964'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = this.get(&#39;target&#39;)) != null ? _ref.set(key, value) : void 0;</div><div class='line' id='LC9965'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC9966'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unset: function(key) {</div><div class='line' id='LC9967'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC9968'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = this.get(&#39;target&#39;)) != null ? _ref.unset(key) : void 0;</div><div class='line' id='LC9969'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9970'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC9971'><br/></div><div class='line' id='LC9972'>&nbsp;&nbsp;&nbsp;&nbsp;return Proxy;</div><div class='line' id='LC9973'><br/></div><div class='line' id='LC9974'>&nbsp;&nbsp;})(Batman.Object);</div><div class='line' id='LC9975'><br/></div><div class='line' id='LC9976'>}).call(this);</div><div class='line' id='LC9977'><br/></div><div class='line' id='LC9978'>(function() {</div><div class='line' id='LC9979'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC9980'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC9981'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC9982'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC9983'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9984'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC9985'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC9986'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC9987'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC9988'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC9989'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC9990'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC9991'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC9992'><br/></div><div class='line' id='LC9993'>&nbsp;&nbsp;Batman.AssociationProxy = (function(_super) {</div><div class='line' id='LC9994'><br/></div><div class='line' id='LC9995'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(AssociationProxy, _super);</div><div class='line' id='LC9996'><br/></div><div class='line' id='LC9997'>&nbsp;&nbsp;&nbsp;&nbsp;AssociationProxy.prototype.loaded = false;</div><div class='line' id='LC9998'><br/></div><div class='line' id='LC9999'>&nbsp;&nbsp;&nbsp;&nbsp;function AssociationProxy(association, model) {</div><div class='line' id='LC10000'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.association = association;</div><div class='line' id='LC10001'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.model = model;</div><div class='line' id='LC10002'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AssociationProxy.__super__.constructor.call(this);</div><div class='line' id='LC10003'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10004'><br/></div><div class='line' id='LC10005'>&nbsp;&nbsp;&nbsp;&nbsp;AssociationProxy.prototype.toJSON = function() {</div><div class='line' id='LC10006'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var target;</div><div class='line' id='LC10007'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;target = this.get(&#39;target&#39;);</div><div class='line' id='LC10008'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (target != null) {</div><div class='line' id='LC10009'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&#39;target&#39;).toJSON();</div><div class='line' id='LC10010'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10011'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10012'><br/></div><div class='line' id='LC10013'>&nbsp;&nbsp;&nbsp;&nbsp;AssociationProxy.prototype.load = function(callback) {</div><div class='line' id='LC10014'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC10015'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fetch(function(err, proxiedRecord) {</div><div class='line' id='LC10016'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!err) {</div><div class='line' id='LC10017'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this._setTarget(proxiedRecord);</div><div class='line' id='LC10018'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10019'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return typeof callback === &quot;function&quot; ? callback(err, proxiedRecord) : void 0;</div><div class='line' id='LC10020'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC10021'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&#39;target&#39;);</div><div class='line' id='LC10022'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10023'><br/></div><div class='line' id='LC10024'>&nbsp;&nbsp;&nbsp;&nbsp;AssociationProxy.prototype.loadFromLocal = function() {</div><div class='line' id='LC10025'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var target;</div><div class='line' id='LC10026'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this._canLoad()) {</div><div class='line' id='LC10027'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC10028'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10029'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (target = this.fetchFromLocal()) {</div><div class='line' id='LC10030'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._setTarget(target);</div><div class='line' id='LC10031'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10032'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return target;</div><div class='line' id='LC10033'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10034'><br/></div><div class='line' id='LC10035'>&nbsp;&nbsp;&nbsp;&nbsp;AssociationProxy.prototype.fetch = function(callback) {</div><div class='line' id='LC10036'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var record;</div><div class='line' id='LC10037'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this._canLoad()) {</div><div class='line' id='LC10038'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return callback(void 0, void 0);</div><div class='line' id='LC10039'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10040'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record = this.fetchFromLocal();</div><div class='line' id='LC10041'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (record) {</div><div class='line' id='LC10042'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return callback(void 0, record);</div><div class='line' id='LC10043'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC10044'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.fetchFromRemote(callback);</div><div class='line' id='LC10045'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10046'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10047'><br/></div><div class='line' id='LC10048'>&nbsp;&nbsp;&nbsp;&nbsp;AssociationProxy.accessor(&#39;loaded&#39;, Batman.Property.defaultAccessor);</div><div class='line' id='LC10049'><br/></div><div class='line' id='LC10050'>&nbsp;&nbsp;&nbsp;&nbsp;AssociationProxy.accessor(&#39;target&#39;, {</div><div class='line' id='LC10051'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function() {</div><div class='line' id='LC10052'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.fetchFromLocal();</div><div class='line' id='LC10053'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC10054'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set: function(_, v) {</div><div class='line' id='LC10055'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return v;</div><div class='line' id='LC10056'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10057'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC10058'><br/></div><div class='line' id='LC10059'>&nbsp;&nbsp;&nbsp;&nbsp;AssociationProxy.prototype._canLoad = function() {</div><div class='line' id='LC10060'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (this.get(&#39;foreignValue&#39;) || this.get(&#39;primaryValue&#39;)) != null;</div><div class='line' id='LC10061'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10062'><br/></div><div class='line' id='LC10063'>&nbsp;&nbsp;&nbsp;&nbsp;AssociationProxy.prototype._setTarget = function(target) {</div><div class='line' id='LC10064'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set(&#39;target&#39;, target);</div><div class='line' id='LC10065'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set(&#39;loaded&#39;, true);</div><div class='line' id='LC10066'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.fire(&#39;loaded&#39;, target);</div><div class='line' id='LC10067'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10068'><br/></div><div class='line' id='LC10069'>&nbsp;&nbsp;&nbsp;&nbsp;return AssociationProxy;</div><div class='line' id='LC10070'><br/></div><div class='line' id='LC10071'>&nbsp;&nbsp;})(Batman.Proxy);</div><div class='line' id='LC10072'><br/></div><div class='line' id='LC10073'>}).call(this);</div><div class='line' id='LC10074'><br/></div><div class='line' id='LC10075'>(function() {</div><div class='line' id='LC10076'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC10077'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC10078'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC10079'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC10080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10081'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC10082'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC10083'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10084'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC10085'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC10086'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC10087'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC10088'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10089'><br/></div><div class='line' id='LC10090'>&nbsp;&nbsp;Batman.HasOneProxy = (function(_super) {</div><div class='line' id='LC10091'><br/></div><div class='line' id='LC10092'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(HasOneProxy, _super);</div><div class='line' id='LC10093'><br/></div><div class='line' id='LC10094'>&nbsp;&nbsp;&nbsp;&nbsp;function HasOneProxy() {</div><div class='line' id='LC10095'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return HasOneProxy.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC10096'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10097'><br/></div><div class='line' id='LC10098'>&nbsp;&nbsp;&nbsp;&nbsp;HasOneProxy.accessor(&#39;primaryValue&#39;, function() {</div><div class='line' id='LC10099'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.model.get(this.association.primaryKey);</div><div class='line' id='LC10100'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC10101'><br/></div><div class='line' id='LC10102'>&nbsp;&nbsp;&nbsp;&nbsp;HasOneProxy.prototype.fetchFromLocal = function() {</div><div class='line' id='LC10103'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.association.setIndex().get(this.get(&#39;primaryValue&#39;));</div><div class='line' id='LC10104'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10105'><br/></div><div class='line' id='LC10106'>&nbsp;&nbsp;&nbsp;&nbsp;HasOneProxy.prototype.fetchFromRemote = function(callback) {</div><div class='line' id='LC10107'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var loadOptions, _this = this;</div><div class='line' id='LC10108'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loadOptions = {</div><div class='line' id='LC10109'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data: {}</div><div class='line' id='LC10110'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10111'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loadOptions.data[this.association.foreignKey] = this.get(&#39;primaryValue&#39;);</div><div class='line' id='LC10112'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.association.options.url) {</div><div class='line' id='LC10113'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loadOptions.collectionUrl = this.association.options.url;</div><div class='line' id='LC10114'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loadOptions.urlContext = this.model;</div><div class='line' id='LC10115'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10116'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.association.getRelatedModel().loadWithOptions(loadOptions, function(error, loadedRecords) {</div><div class='line' id='LC10117'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (error) {</div><div class='line' id='LC10118'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw error;</div><div class='line' id='LC10119'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10120'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!loadedRecords || loadedRecords.length &lt;= 0) {</div><div class='line' id='LC10121'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return callback(new Error(&quot;Couldn&#39;t find related record!&quot;), void 0);</div><div class='line' id='LC10122'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC10123'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return callback(void 0, loadedRecords[0]);</div><div class='line' id='LC10124'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10125'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC10126'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10127'><br/></div><div class='line' id='LC10128'>&nbsp;&nbsp;&nbsp;&nbsp;return HasOneProxy;</div><div class='line' id='LC10129'><br/></div><div class='line' id='LC10130'>&nbsp;&nbsp;})(Batman.AssociationProxy);</div><div class='line' id='LC10131'><br/></div><div class='line' id='LC10132'>}).call(this);</div><div class='line' id='LC10133'><br/></div><div class='line' id='LC10134'>(function() {</div><div class='line' id='LC10135'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC10136'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC10137'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC10138'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC10139'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10140'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC10141'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC10142'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10143'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC10144'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC10145'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC10146'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC10147'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10148'><br/></div><div class='line' id='LC10149'>&nbsp;&nbsp;Batman.BelongsToProxy = (function(_super) {</div><div class='line' id='LC10150'><br/></div><div class='line' id='LC10151'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(BelongsToProxy, _super);</div><div class='line' id='LC10152'><br/></div><div class='line' id='LC10153'>&nbsp;&nbsp;&nbsp;&nbsp;function BelongsToProxy() {</div><div class='line' id='LC10154'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return BelongsToProxy.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC10155'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10156'><br/></div><div class='line' id='LC10157'>&nbsp;&nbsp;&nbsp;&nbsp;BelongsToProxy.accessor(&#39;foreignValue&#39;, function() {</div><div class='line' id='LC10158'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.model.get(this.association.foreignKey);</div><div class='line' id='LC10159'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC10160'><br/></div><div class='line' id='LC10161'>&nbsp;&nbsp;&nbsp;&nbsp;BelongsToProxy.prototype.fetchFromLocal = function() {</div><div class='line' id='LC10162'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.association.setIndex().get(this.get(&#39;foreignValue&#39;));</div><div class='line' id='LC10163'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10164'><br/></div><div class='line' id='LC10165'>&nbsp;&nbsp;&nbsp;&nbsp;BelongsToProxy.prototype.fetchFromRemote = function(callback) {</div><div class='line' id='LC10166'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var loadOptions, _this = this;</div><div class='line' id='LC10167'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loadOptions = {};</div><div class='line' id='LC10168'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.association.options.url) {</div><div class='line' id='LC10169'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loadOptions.recordUrl = this.association.options.url;</div><div class='line' id='LC10170'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10171'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.association.getRelatedModel().findWithOptions(this.get(&#39;foreignValue&#39;), loadOptions, function(error, loadedRecord) {</div><div class='line' id='LC10172'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (error) {</div><div class='line' id='LC10173'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw error;</div><div class='line' id='LC10174'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10175'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return callback(void 0, loadedRecord);</div><div class='line' id='LC10176'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC10177'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10178'><br/></div><div class='line' id='LC10179'>&nbsp;&nbsp;&nbsp;&nbsp;return BelongsToProxy;</div><div class='line' id='LC10180'><br/></div><div class='line' id='LC10181'>&nbsp;&nbsp;})(Batman.AssociationProxy);</div><div class='line' id='LC10182'><br/></div><div class='line' id='LC10183'>}).call(this);</div><div class='line' id='LC10184'><br/></div><div class='line' id='LC10185'>(function() {</div><div class='line' id='LC10186'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC10187'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC10188'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC10189'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC10190'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10191'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC10192'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC10193'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10194'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC10195'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC10196'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC10197'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC10198'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10199'><br/></div><div class='line' id='LC10200'>&nbsp;&nbsp;Batman.PolymorphicBelongsToProxy = (function(_super) {</div><div class='line' id='LC10201'><br/></div><div class='line' id='LC10202'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(PolymorphicBelongsToProxy, _super);</div><div class='line' id='LC10203'><br/></div><div class='line' id='LC10204'>&nbsp;&nbsp;&nbsp;&nbsp;function PolymorphicBelongsToProxy() {</div><div class='line' id='LC10205'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return PolymorphicBelongsToProxy.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC10206'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10207'><br/></div><div class='line' id='LC10208'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicBelongsToProxy.accessor(&#39;foreignTypeValue&#39;, function() {</div><div class='line' id='LC10209'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.model.get(this.association.foreignTypeKey);</div><div class='line' id='LC10210'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC10211'><br/></div><div class='line' id='LC10212'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicBelongsToProxy.prototype.fetchFromLocal = function() {</div><div class='line' id='LC10213'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.association.setIndexForType(this.get(&#39;foreignTypeValue&#39;)).get(this.get(&#39;foreignValue&#39;));</div><div class='line' id='LC10214'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10215'><br/></div><div class='line' id='LC10216'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicBelongsToProxy.prototype.fetchFromRemote = function(callback) {</div><div class='line' id='LC10217'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var loadOptions, _this = this;</div><div class='line' id='LC10218'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loadOptions = {};</div><div class='line' id='LC10219'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.association.options.url) {</div><div class='line' id='LC10220'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loadOptions.recordUrl = this.association.options.url;</div><div class='line' id='LC10221'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10222'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.association.getRelatedModelForType(this.get(&#39;foreignTypeValue&#39;)).findWithOptions(this.get(&#39;foreignValue&#39;), loadOptions, function(error, loadedRecord) {</div><div class='line' id='LC10223'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (error) {</div><div class='line' id='LC10224'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw error;</div><div class='line' id='LC10225'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10226'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return callback(void 0, loadedRecord);</div><div class='line' id='LC10227'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC10228'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10229'><br/></div><div class='line' id='LC10230'>&nbsp;&nbsp;&nbsp;&nbsp;return PolymorphicBelongsToProxy;</div><div class='line' id='LC10231'><br/></div><div class='line' id='LC10232'>&nbsp;&nbsp;})(Batman.BelongsToProxy);</div><div class='line' id='LC10233'><br/></div><div class='line' id='LC10234'>}).call(this);</div><div class='line' id='LC10235'><br/></div><div class='line' id='LC10236'>(function() {</div><div class='line' id='LC10237'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC10238'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC10239'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC10240'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC10241'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10242'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC10243'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC10244'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10245'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC10246'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC10247'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC10248'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC10249'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10250'><br/></div><div class='line' id='LC10251'>&nbsp;&nbsp;Batman.Accessible = (function(_super) {</div><div class='line' id='LC10252'><br/></div><div class='line' id='LC10253'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(Accessible, _super);</div><div class='line' id='LC10254'><br/></div><div class='line' id='LC10255'>&nbsp;&nbsp;&nbsp;&nbsp;function Accessible() {</div><div class='line' id='LC10256'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.accessor.apply(this, arguments);</div><div class='line' id='LC10257'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10258'><br/></div><div class='line' id='LC10259'>&nbsp;&nbsp;&nbsp;&nbsp;return Accessible;</div><div class='line' id='LC10260'><br/></div><div class='line' id='LC10261'>&nbsp;&nbsp;})(Batman.Object);</div><div class='line' id='LC10262'><br/></div><div class='line' id='LC10263'>&nbsp;&nbsp;Batman.TerminalAccessible = (function(_super) {</div><div class='line' id='LC10264'><br/></div><div class='line' id='LC10265'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(TerminalAccessible, _super);</div><div class='line' id='LC10266'><br/></div><div class='line' id='LC10267'>&nbsp;&nbsp;&nbsp;&nbsp;function TerminalAccessible() {</div><div class='line' id='LC10268'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return TerminalAccessible.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC10269'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10270'><br/></div><div class='line' id='LC10271'>&nbsp;&nbsp;&nbsp;&nbsp;TerminalAccessible.prototype.propertyClass = Batman.Property;</div><div class='line' id='LC10272'><br/></div><div class='line' id='LC10273'>&nbsp;&nbsp;&nbsp;&nbsp;return TerminalAccessible;</div><div class='line' id='LC10274'><br/></div><div class='line' id='LC10275'>&nbsp;&nbsp;})(Batman.Accessible);</div><div class='line' id='LC10276'><br/></div><div class='line' id='LC10277'>}).call(this);</div><div class='line' id='LC10278'><br/></div><div class='line' id='LC10279'>(function() {</div><div class='line' id='LC10280'><br/></div><div class='line' id='LC10281'>&nbsp;&nbsp;Batman.mixins = new Batman.Object;</div><div class='line' id='LC10282'><br/></div><div class='line' id='LC10283'>}).call(this);</div><div class='line' id='LC10284'><br/></div><div class='line' id='LC10285'>(function() {</div><div class='line' id='LC10286'><br/></div><div class='line' id='LC10287'>&nbsp;&nbsp;Batman.URI = (function() {</div><div class='line' id='LC10288'>&nbsp;&nbsp;&nbsp;&nbsp;/*</div><div class='line' id='LC10289'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# URI parsing</div><div class='line' id='LC10290'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC10291'><br/></div><div class='line' id='LC10292'>&nbsp;&nbsp;&nbsp;&nbsp;var attributes, childKeyMatchers, decodeQueryComponent, encodeComponent, encodeQueryComponent, keyVal, nameParser, normalizeParams, plus, queryFromParams, r20, strictParser;</div><div class='line' id='LC10293'><br/></div><div class='line' id='LC10294'>&nbsp;&nbsp;&nbsp;&nbsp;strictParser = /^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/;</div><div class='line' id='LC10295'><br/></div><div class='line' id='LC10296'>&nbsp;&nbsp;&nbsp;&nbsp;attributes = [&quot;source&quot;, &quot;protocol&quot;, &quot;authority&quot;, &quot;userInfo&quot;, &quot;user&quot;, &quot;password&quot;, &quot;hostname&quot;, &quot;port&quot;, &quot;relative&quot;, &quot;path&quot;, &quot;directory&quot;, &quot;file&quot;, &quot;query&quot;, &quot;hash&quot;];</div><div class='line' id='LC10297'><br/></div><div class='line' id='LC10298'>&nbsp;&nbsp;&nbsp;&nbsp;function URI(str) {</div><div class='line' id='LC10299'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var i, matches;</div><div class='line' id='LC10300'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;matches = strictParser.exec(str);</div><div class='line' id='LC10301'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 14;</div><div class='line' id='LC10302'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (i--) {</div><div class='line' id='LC10303'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this[attributes[i]] = matches[i] || &#39;&#39;;</div><div class='line' id='LC10304'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10305'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.queryParams = this.constructor.paramsFromQuery(this.query);</div><div class='line' id='LC10306'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete this.authority;</div><div class='line' id='LC10307'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete this.userInfo;</div><div class='line' id='LC10308'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete this.relative;</div><div class='line' id='LC10309'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete this.directory;</div><div class='line' id='LC10310'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete this.file;</div><div class='line' id='LC10311'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete this.query;</div><div class='line' id='LC10312'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10313'><br/></div><div class='line' id='LC10314'>&nbsp;&nbsp;&nbsp;&nbsp;URI.prototype.queryString = function() {</div><div class='line' id='LC10315'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.constructor.queryFromParams(this.queryParams);</div><div class='line' id='LC10316'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10317'><br/></div><div class='line' id='LC10318'>&nbsp;&nbsp;&nbsp;&nbsp;URI.prototype.toString = function() {</div><div class='line' id='LC10319'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return [this.protocol ? &quot;&quot; + this.protocol + &quot;:&quot; : void 0, this.authority() ? &quot;//&quot; : void 0, this.authority(), this.relative()].join(&quot;&quot;);</div><div class='line' id='LC10320'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10321'><br/></div><div class='line' id='LC10322'>&nbsp;&nbsp;&nbsp;&nbsp;URI.prototype.userInfo = function() {</div><div class='line' id='LC10323'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return [this.user, this.password ? &quot;:&quot; + this.password : void 0].join(&quot;&quot;);</div><div class='line' id='LC10324'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10325'><br/></div><div class='line' id='LC10326'>&nbsp;&nbsp;&nbsp;&nbsp;URI.prototype.authority = function() {</div><div class='line' id='LC10327'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return [this.userInfo(), this.user || this.password ? &quot;@&quot; : void 0, this.hostname, this.port ? &quot;:&quot; + this.port : void 0].join(&quot;&quot;);</div><div class='line' id='LC10328'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10329'><br/></div><div class='line' id='LC10330'>&nbsp;&nbsp;&nbsp;&nbsp;URI.prototype.relative = function() {</div><div class='line' id='LC10331'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var query;</div><div class='line' id='LC10332'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;query = this.queryString();</div><div class='line' id='LC10333'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return [this.path, query ? &quot;?&quot; + query : void 0, this.hash ? &quot;#&quot; + this.hash : void 0].join(&quot;&quot;);</div><div class='line' id='LC10334'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10335'><br/></div><div class='line' id='LC10336'>&nbsp;&nbsp;&nbsp;&nbsp;URI.prototype.directory = function() {</div><div class='line' id='LC10337'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var splitPath;</div><div class='line' id='LC10338'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;splitPath = this.path.split(&#39;/&#39;);</div><div class='line' id='LC10339'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (splitPath.length &gt; 1) {</div><div class='line' id='LC10340'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return splitPath.slice(0, splitPath.length - 1).join(&#39;/&#39;) + &quot;/&quot;;</div><div class='line' id='LC10341'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC10342'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;&quot;;</div><div class='line' id='LC10343'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10344'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10345'><br/></div><div class='line' id='LC10346'>&nbsp;&nbsp;&nbsp;&nbsp;URI.prototype.file = function() {</div><div class='line' id='LC10347'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var splitPath;</div><div class='line' id='LC10348'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;splitPath = this.path.split(&quot;/&quot;);</div><div class='line' id='LC10349'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return splitPath[splitPath.length - 1];</div><div class='line' id='LC10350'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10351'><br/></div><div class='line' id='LC10352'>&nbsp;&nbsp;&nbsp;&nbsp;/*</div><div class='line' id='LC10353'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# query parsing</div><div class='line' id='LC10354'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC10355'><br/></div><div class='line' id='LC10356'><br/></div><div class='line' id='LC10357'>&nbsp;&nbsp;&nbsp;&nbsp;URI.paramsFromQuery = function(query) {</div><div class='line' id='LC10358'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var matches, params, segment, _i, _len, _ref;</div><div class='line' id='LC10359'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params = {};</div><div class='line' id='LC10360'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = query.split(&#39;&amp;&#39;);</div><div class='line' id='LC10361'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC10362'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;segment = _ref[_i];</div><div class='line' id='LC10363'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (matches = segment.match(keyVal)) {</div><div class='line' id='LC10364'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;normalizeParams(params, decodeQueryComponent(matches[1]), decodeQueryComponent(matches[2]));</div><div class='line' id='LC10365'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC10366'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;normalizeParams(params, decodeQueryComponent(segment), null);</div><div class='line' id='LC10367'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10368'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10369'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return params;</div><div class='line' id='LC10370'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10371'><br/></div><div class='line' id='LC10372'>&nbsp;&nbsp;&nbsp;&nbsp;URI.decodeQueryComponent = decodeQueryComponent = function(str) {</div><div class='line' id='LC10373'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return decodeURIComponent(str.replace(plus, &#39;%20&#39;));</div><div class='line' id='LC10374'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10375'><br/></div><div class='line' id='LC10376'>&nbsp;&nbsp;&nbsp;&nbsp;nameParser = /^[\[\]]*([^\[\]]+)\]*(.*)/;</div><div class='line' id='LC10377'><br/></div><div class='line' id='LC10378'>&nbsp;&nbsp;&nbsp;&nbsp;childKeyMatchers = [/^\[\]\[([^\[\]]+)\]$/, /^\[\](.+)$/];</div><div class='line' id='LC10379'><br/></div><div class='line' id='LC10380'>&nbsp;&nbsp;&nbsp;&nbsp;plus = /\+/g;</div><div class='line' id='LC10381'><br/></div><div class='line' id='LC10382'>&nbsp;&nbsp;&nbsp;&nbsp;r20 = /%20/g;</div><div class='line' id='LC10383'><br/></div><div class='line' id='LC10384'>&nbsp;&nbsp;&nbsp;&nbsp;keyVal = /^([^=]*)=(.*)/;</div><div class='line' id='LC10385'><br/></div><div class='line' id='LC10386'>&nbsp;&nbsp;&nbsp;&nbsp;normalizeParams = function(params, name, v) {</div><div class='line' id='LC10387'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var after, childKey, k, last, matches, _ref, _ref1, _ref2;</div><div class='line' id='LC10388'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (matches = name.match(nameParser)) {</div><div class='line' id='LC10389'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k = matches[1];</div><div class='line' id='LC10390'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;after = matches[2];</div><div class='line' id='LC10391'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC10392'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC10393'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10394'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (after === &#39;&#39;) {</div><div class='line' id='LC10395'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params[k] = v;</div><div class='line' id='LC10396'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (after === &#39;[]&#39;) {</div><div class='line' id='LC10397'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = params[k]) == null) {</div><div class='line' id='LC10398'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params[k] = [];</div><div class='line' id='LC10399'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10400'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Batman.typeOf(params[k]) !== &#39;Array&#39;) {</div><div class='line' id='LC10401'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new Error(&quot;expected Array (got &quot; + (Batman.typeOf(params[k])) + &quot;) for param \&quot;&quot; + k + &quot;\&quot;&quot;);</div><div class='line' id='LC10402'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10403'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params[k].push(v);</div><div class='line' id='LC10404'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (matches = after.match(childKeyMatchers[0]) || after.match(childKeyMatchers[1])) {</div><div class='line' id='LC10405'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childKey = matches[1];</div><div class='line' id='LC10406'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref1 = params[k]) == null) {</div><div class='line' id='LC10407'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params[k] = [];</div><div class='line' id='LC10408'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10409'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Batman.typeOf(params[k]) !== &#39;Array&#39;) {</div><div class='line' id='LC10410'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new Error(&quot;expected Array (got &quot; + (Batman.typeOf(params[k])) + &quot;) for param \&quot;&quot; + k + &quot;\&quot;&quot;);</div><div class='line' id='LC10411'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10412'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;last = params[k][params[k].length - 1];</div><div class='line' id='LC10413'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Batman.typeOf(last) === &#39;Object&#39; &amp;&amp; !(childKey in last)) {</div><div class='line' id='LC10414'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;normalizeParams(last, childKey, v);</div><div class='line' id='LC10415'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC10416'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params[k].push(normalizeParams({}, childKey, v));</div><div class='line' id='LC10417'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10418'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC10419'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref2 = params[k]) == null) {</div><div class='line' id='LC10420'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params[k] = {};</div><div class='line' id='LC10421'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10422'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Batman.typeOf(params[k]) !== &#39;Object&#39;) {</div><div class='line' id='LC10423'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new Error(&quot;expected Object (got &quot; + (Batman.typeOf(params[k])) + &quot;) for param \&quot;&quot; + k + &quot;\&quot;&quot;);</div><div class='line' id='LC10424'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10425'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params[k] = normalizeParams(params[k], after, v);</div><div class='line' id='LC10426'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10427'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return params;</div><div class='line' id='LC10428'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10429'><br/></div><div class='line' id='LC10430'>&nbsp;&nbsp;&nbsp;&nbsp;/*</div><div class='line' id='LC10431'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# query building</div><div class='line' id='LC10432'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC10433'><br/></div><div class='line' id='LC10434'><br/></div><div class='line' id='LC10435'>&nbsp;&nbsp;&nbsp;&nbsp;URI.queryFromParams = queryFromParams = function(value, prefix) {</div><div class='line' id='LC10436'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var arrayResults, k, v, valueType;</div><div class='line' id='LC10437'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value == null) {</div><div class='line' id='LC10438'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return prefix;</div><div class='line' id='LC10439'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10440'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;valueType = Batman.typeOf(value);</div><div class='line' id='LC10441'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!((prefix != null) || valueType === &#39;Object&#39;)) {</div><div class='line' id='LC10442'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new Error(&quot;value must be an Object&quot;);</div><div class='line' id='LC10443'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10444'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (valueType) {</div><div class='line' id='LC10445'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;Array&#39;:</div><div class='line' id='LC10446'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ((function() {</div><div class='line' id='LC10447'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _i, _len;</div><div class='line' id='LC10448'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arrayResults = [];</div><div class='line' id='LC10449'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value.length === 0) {</div><div class='line' id='LC10450'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arrayResults.push(queryFromParams(null, &quot;&quot; + prefix + &quot;[]&quot;));</div><div class='line' id='LC10451'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC10452'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = value.length; _i &lt; _len; _i++) {</div><div class='line' id='LC10453'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v = value[_i];</div><div class='line' id='LC10454'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arrayResults.push(queryFromParams(v, &quot;&quot; + prefix + &quot;[]&quot;));</div><div class='line' id='LC10455'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10456'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10457'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return arrayResults;</div><div class='line' id='LC10458'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})()).join(&quot;&amp;&quot;);</div><div class='line' id='LC10459'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;Object&#39;:</div><div class='line' id='LC10460'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ((function() {</div><div class='line' id='LC10461'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _results;</div><div class='line' id='LC10462'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC10463'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (k in value) {</div><div class='line' id='LC10464'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v = value[k];</div><div class='line' id='LC10465'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(queryFromParams(v, prefix ? &quot;&quot; + prefix + &quot;[&quot; + (encodeQueryComponent(k)) + &quot;]&quot; : encodeQueryComponent(k)));</div><div class='line' id='LC10466'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10467'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC10468'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})()).join(&quot;&amp;&quot;);</div><div class='line' id='LC10469'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:</div><div class='line' id='LC10470'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (prefix != null) {</div><div class='line' id='LC10471'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;&quot; + prefix + &quot;=&quot; + (encodeQueryComponent(value));</div><div class='line' id='LC10472'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC10473'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return encodeQueryComponent(value);</div><div class='line' id='LC10474'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10475'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10476'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10477'><br/></div><div class='line' id='LC10478'>&nbsp;&nbsp;&nbsp;&nbsp;URI.encodeComponent = encodeComponent = function(str) {</div><div class='line' id='LC10479'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (str != null) {</div><div class='line' id='LC10480'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return encodeURIComponent(str);</div><div class='line' id='LC10481'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC10482'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &#39;&#39;;</div><div class='line' id='LC10483'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10484'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10485'><br/></div><div class='line' id='LC10486'>&nbsp;&nbsp;&nbsp;&nbsp;URI.encodeQueryComponent = encodeQueryComponent = function(str) {</div><div class='line' id='LC10487'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return encodeComponent(str).replace(r20, &#39;+&#39;);</div><div class='line' id='LC10488'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10489'><br/></div><div class='line' id='LC10490'>&nbsp;&nbsp;&nbsp;&nbsp;return URI;</div><div class='line' id='LC10491'><br/></div><div class='line' id='LC10492'>&nbsp;&nbsp;})();</div><div class='line' id='LC10493'><br/></div><div class='line' id='LC10494'>}).call(this);</div><div class='line' id='LC10495'><br/></div><div class='line' id='LC10496'>(function() {</div><div class='line' id='LC10497'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC10498'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC10499'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC10500'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC10501'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10502'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC10503'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC10504'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10505'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC10506'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC10507'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC10508'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC10509'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10510'><br/></div><div class='line' id='LC10511'>&nbsp;&nbsp;Batman.Request = (function(_super) {</div><div class='line' id='LC10512'>&nbsp;&nbsp;&nbsp;&nbsp;var dataHasFileUploads;</div><div class='line' id='LC10513'><br/></div><div class='line' id='LC10514'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(Request, _super);</div><div class='line' id='LC10515'><br/></div><div class='line' id='LC10516'>&nbsp;&nbsp;&nbsp;&nbsp;Request.objectToFormData = function(data) {</div><div class='line' id='LC10517'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var formData, key, pairForList, val, _i, _len, _ref, _ref1;</div><div class='line' id='LC10518'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pairForList = function(key, object, first) {</div><div class='line' id='LC10519'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var k, list, v;</div><div class='line' id='LC10520'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (first == null) {</div><div class='line' id='LC10521'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;first = false;</div><div class='line' id='LC10522'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10523'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (object instanceof Batman.container.File) {</div><div class='line' id='LC10524'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return [[key, object]];</div><div class='line' id='LC10525'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10526'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return list = (function() {</div><div class='line' id='LC10527'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (Batman.typeOf(object)) {</div><div class='line' id='LC10528'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;Object&#39;:</div><div class='line' id='LC10529'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list = (function() {</div><div class='line' id='LC10530'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _results;</div><div class='line' id='LC10531'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC10532'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (k in object) {</div><div class='line' id='LC10533'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v = object[k];</div><div class='line' id='LC10534'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(pairForList((first ? k : &quot;&quot; + key + &quot;[&quot; + k + &quot;]&quot;), v));</div><div class='line' id='LC10535'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10536'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC10537'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})();</div><div class='line' id='LC10538'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return list.reduce(function(acc, list) {</div><div class='line' id='LC10539'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return acc.concat(list);</div><div class='line' id='LC10540'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, []);</div><div class='line' id='LC10541'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;Array&#39;:</div><div class='line' id='LC10542'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return object.reduce(function(acc, element) {</div><div class='line' id='LC10543'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return acc.concat(pairForList(&quot;&quot; + key + &quot;[]&quot;, element));</div><div class='line' id='LC10544'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, []);</div><div class='line' id='LC10545'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:</div><div class='line' id='LC10546'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return [[key, object != null ? object : &quot;&quot;]];</div><div class='line' id='LC10547'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10548'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})();</div><div class='line' id='LC10549'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10550'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;formData = new Batman.container.FormData();</div><div class='line' id='LC10551'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = pairForList(&quot;&quot;, data, true);</div><div class='line' id='LC10552'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC10553'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1 = _ref[_i], key = _ref1[0], val = _ref1[1];</div><div class='line' id='LC10554'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;formData.append(key, val);</div><div class='line' id='LC10555'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10556'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return formData;</div><div class='line' id='LC10557'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10558'><br/></div><div class='line' id='LC10559'>&nbsp;&nbsp;&nbsp;&nbsp;Request.dataHasFileUploads = dataHasFileUploads = function(data) {</div><div class='line' id='LC10560'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var k, type, v, _i, _len;</div><div class='line' id='LC10561'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((typeof File !== &quot;undefined&quot; &amp;&amp; File !== null) &amp;&amp; data instanceof File) {</div><div class='line' id='LC10562'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC10563'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10564'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type = Batman.typeOf(data);</div><div class='line' id='LC10565'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (type) {</div><div class='line' id='LC10566'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;Object&#39;:</div><div class='line' id='LC10567'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (k in data) {</div><div class='line' id='LC10568'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v = data[k];</div><div class='line' id='LC10569'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (dataHasFileUploads(v)) {</div><div class='line' id='LC10570'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC10571'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10572'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10573'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC10574'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case &#39;Array&#39;:</div><div class='line' id='LC10575'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = data.length; _i &lt; _len; _i++) {</div><div class='line' id='LC10576'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v = data[_i];</div><div class='line' id='LC10577'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (dataHasFileUploads(v)) {</div><div class='line' id='LC10578'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC10579'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10580'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10581'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10582'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC10583'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10584'><br/></div><div class='line' id='LC10585'>&nbsp;&nbsp;&nbsp;&nbsp;Request.wrapAccessor(&#39;method&#39;, function(core) {</div><div class='line' id='LC10586'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return {</div><div class='line' id='LC10587'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set: function(k, val) {</div><div class='line' id='LC10588'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return core.set.call(this, k, val != null ? typeof val.toUpperCase === &quot;function&quot; ? val.toUpperCase() : void 0 : void 0);</div><div class='line' id='LC10589'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10590'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10591'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC10592'><br/></div><div class='line' id='LC10593'>&nbsp;&nbsp;&nbsp;&nbsp;Request.prototype.method = &#39;GET&#39;;</div><div class='line' id='LC10594'><br/></div><div class='line' id='LC10595'>&nbsp;&nbsp;&nbsp;&nbsp;Request.prototype.hasFileUploads = function() {</div><div class='line' id='LC10596'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return dataHasFileUploads(this.data);</div><div class='line' id='LC10597'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10598'><br/></div><div class='line' id='LC10599'>&nbsp;&nbsp;&nbsp;&nbsp;Request.prototype.contentType = &#39;application/x-www-form-urlencoded&#39;;</div><div class='line' id='LC10600'><br/></div><div class='line' id='LC10601'>&nbsp;&nbsp;&nbsp;&nbsp;Request.prototype.autosend = true;</div><div class='line' id='LC10602'><br/></div><div class='line' id='LC10603'>&nbsp;&nbsp;&nbsp;&nbsp;function Request(options) {</div><div class='line' id='LC10604'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var handler, handlers, k, _ref;</div><div class='line' id='LC10605'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handlers = {};</div><div class='line' id='LC10606'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (k in options) {</div><div class='line' id='LC10607'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handler = options[k];</div><div class='line' id='LC10608'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(k === &#39;success&#39; || k === &#39;error&#39; || k === &#39;loading&#39; || k === &#39;loaded&#39;)) {</div><div class='line' id='LC10609'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;</div><div class='line' id='LC10610'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10611'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handlers[k] = handler;</div><div class='line' id='LC10612'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete options[k];</div><div class='line' id='LC10613'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10614'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Request.__super__.constructor.call(this, options);</div><div class='line' id='LC10615'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (k in handlers) {</div><div class='line' id='LC10616'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handler = handlers[k];</div><div class='line' id='LC10617'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.on(k, handler);</div><div class='line' id='LC10618'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10619'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (((_ref = this.get(&#39;url&#39;)) != null ? _ref.length : void 0) &gt; 0) {</div><div class='line' id='LC10620'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.autosend) {</div><div class='line' id='LC10621'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.send();</div><div class='line' id='LC10622'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10623'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC10624'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.observe(&#39;url&#39;, function(url) {</div><div class='line' id='LC10625'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (url != null) {</div><div class='line' id='LC10626'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.send();</div><div class='line' id='LC10627'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10628'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC10629'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10630'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10631'><br/></div><div class='line' id='LC10632'>&nbsp;&nbsp;&nbsp;&nbsp;Request.prototype.send = function() {</div><div class='line' id='LC10633'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.developer.error(&quot;Please source a dependency file for a request implementation&quot;);</div><div class='line' id='LC10634'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10635'><br/></div><div class='line' id='LC10636'>&nbsp;&nbsp;&nbsp;&nbsp;return Request;</div><div class='line' id='LC10637'><br/></div><div class='line' id='LC10638'>&nbsp;&nbsp;})(Batman.Object);</div><div class='line' id='LC10639'><br/></div><div class='line' id='LC10640'>}).call(this);</div><div class='line' id='LC10641'><br/></div><div class='line' id='LC10642'>(function() {</div><div class='line' id='LC10643'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC10644'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC10645'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC10646'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC10647'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10648'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC10649'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC10650'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10651'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC10652'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC10653'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC10654'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC10655'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC10656'>&nbsp;&nbsp;&nbsp;&nbsp;__slice = [].slice;</div><div class='line' id='LC10657'><br/></div><div class='line' id='LC10658'>&nbsp;&nbsp;Batman.SetObserver = (function(_super) {</div><div class='line' id='LC10659'><br/></div><div class='line' id='LC10660'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(SetObserver, _super);</div><div class='line' id='LC10661'><br/></div><div class='line' id='LC10662'>&nbsp;&nbsp;&nbsp;&nbsp;function SetObserver(base) {</div><div class='line' id='LC10663'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC10664'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.base = base;</div><div class='line' id='LC10665'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._itemObservers = new Batman.SimpleHash;</div><div class='line' id='LC10666'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._setObservers = new Batman.SimpleHash;</div><div class='line' id='LC10667'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._setObservers.set(&quot;itemsWereAdded&quot;, function() {</div><div class='line' id='LC10668'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.fire.apply(_this, [&#39;itemsWereAdded&#39;].concat(__slice.call(arguments)));</div><div class='line' id='LC10669'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC10670'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._setObservers.set(&quot;itemsWereRemoved&quot;, function() {</div><div class='line' id='LC10671'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.fire.apply(_this, [&#39;itemsWereRemoved&#39;].concat(__slice.call(arguments)));</div><div class='line' id='LC10672'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC10673'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.on(&#39;itemsWereAdded&#39;, this.startObservingItems.bind(this));</div><div class='line' id='LC10674'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.on(&#39;itemsWereRemoved&#39;, this.stopObservingItems.bind(this));</div><div class='line' id='LC10675'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10676'><br/></div><div class='line' id='LC10677'>&nbsp;&nbsp;&nbsp;&nbsp;SetObserver.prototype.observedItemKeys = [];</div><div class='line' id='LC10678'><br/></div><div class='line' id='LC10679'>&nbsp;&nbsp;&nbsp;&nbsp;SetObserver.prototype.observerForItemAndKey = function(item, key) {};</div><div class='line' id='LC10680'><br/></div><div class='line' id='LC10681'>&nbsp;&nbsp;&nbsp;&nbsp;SetObserver.prototype._getOrSetObserverForItemAndKey = function(item, key) {</div><div class='line' id='LC10682'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC10683'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._itemObservers.getOrSet(item, function() {</div><div class='line' id='LC10684'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var observersByKey;</div><div class='line' id='LC10685'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;observersByKey = new Batman.SimpleHash;</div><div class='line' id='LC10686'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return observersByKey.getOrSet(key, function() {</div><div class='line' id='LC10687'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.observerForItemAndKey(item, key);</div><div class='line' id='LC10688'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC10689'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC10690'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10691'><br/></div><div class='line' id='LC10692'>&nbsp;&nbsp;&nbsp;&nbsp;SetObserver.prototype.startObserving = function() {</div><div class='line' id='LC10693'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._manageItemObservers(&quot;observe&quot;);</div><div class='line' id='LC10694'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._manageSetObservers(&quot;addHandler&quot;);</div><div class='line' id='LC10695'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10696'><br/></div><div class='line' id='LC10697'>&nbsp;&nbsp;&nbsp;&nbsp;SetObserver.prototype.stopObserving = function() {</div><div class='line' id='LC10698'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._manageItemObservers(&quot;forget&quot;);</div><div class='line' id='LC10699'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._manageSetObservers(&quot;removeHandler&quot;);</div><div class='line' id='LC10700'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10701'><br/></div><div class='line' id='LC10702'>&nbsp;&nbsp;&nbsp;&nbsp;SetObserver.prototype.startObservingItems = function() {</div><div class='line' id='LC10703'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var item, items, _i, _len, _results;</div><div class='line' id='LC10704'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;items = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC10705'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC10706'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = items.length; _i &lt; _len; _i++) {</div><div class='line' id='LC10707'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item = items[_i];</div><div class='line' id='LC10708'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(this._manageObserversForItem(item, &quot;observe&quot;));</div><div class='line' id='LC10709'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10710'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC10711'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10712'><br/></div><div class='line' id='LC10713'>&nbsp;&nbsp;&nbsp;&nbsp;SetObserver.prototype.stopObservingItems = function() {</div><div class='line' id='LC10714'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var item, items, _i, _len, _results;</div><div class='line' id='LC10715'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;items = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC10716'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC10717'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = items.length; _i &lt; _len; _i++) {</div><div class='line' id='LC10718'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item = items[_i];</div><div class='line' id='LC10719'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(this._manageObserversForItem(item, &quot;forget&quot;));</div><div class='line' id='LC10720'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10721'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC10722'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10723'><br/></div><div class='line' id='LC10724'>&nbsp;&nbsp;&nbsp;&nbsp;SetObserver.prototype._manageObserversForItem = function(item, method) {</div><div class='line' id='LC10725'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var key, _i, _len, _ref;</div><div class='line' id='LC10726'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!item.isObservable) {</div><div class='line' id='LC10727'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC10728'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10729'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this.observedItemKeys;</div><div class='line' id='LC10730'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC10731'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = _ref[_i];</div><div class='line' id='LC10732'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item[method](key, this._getOrSetObserverForItemAndKey(item, key));</div><div class='line' id='LC10733'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10734'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (method === &quot;forget&quot;) {</div><div class='line' id='LC10735'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._itemObservers.unset(item);</div><div class='line' id='LC10736'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10737'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10738'><br/></div><div class='line' id='LC10739'>&nbsp;&nbsp;&nbsp;&nbsp;SetObserver.prototype._manageItemObservers = function(method) {</div><div class='line' id='LC10740'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC10741'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.base.forEach(function(item) {</div><div class='line' id='LC10742'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this._manageObserversForItem(item, method);</div><div class='line' id='LC10743'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC10744'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10745'><br/></div><div class='line' id='LC10746'>&nbsp;&nbsp;&nbsp;&nbsp;SetObserver.prototype._manageSetObservers = function(method) {</div><div class='line' id='LC10747'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC10748'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this.base.isObservable) {</div><div class='line' id='LC10749'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC10750'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10751'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._setObservers.forEach(function(key, observer) {</div><div class='line' id='LC10752'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.base.event(key)[method](observer);</div><div class='line' id='LC10753'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC10754'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10755'><br/></div><div class='line' id='LC10756'>&nbsp;&nbsp;&nbsp;&nbsp;return SetObserver;</div><div class='line' id='LC10757'><br/></div><div class='line' id='LC10758'>&nbsp;&nbsp;})(Batman.Object);</div><div class='line' id='LC10759'><br/></div><div class='line' id='LC10760'>}).call(this);</div><div class='line' id='LC10761'><br/></div><div class='line' id='LC10762'>(function() {</div><div class='line' id='LC10763'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC10764'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC10765'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC10766'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC10767'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10768'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC10769'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC10770'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10771'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC10772'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC10773'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC10774'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC10775'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10776'><br/></div><div class='line' id='LC10777'>&nbsp;&nbsp;Batman.SetSort = (function(_super) {</div><div class='line' id='LC10778'><br/></div><div class='line' id='LC10779'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(SetSort, _super);</div><div class='line' id='LC10780'><br/></div><div class='line' id='LC10781'>&nbsp;&nbsp;&nbsp;&nbsp;function SetSort(base, key, order) {</div><div class='line' id='LC10782'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var boundReIndex, _this = this;</div><div class='line' id='LC10783'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.key = key;</div><div class='line' id='LC10784'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (order == null) {</div><div class='line' id='LC10785'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;order = &quot;asc&quot;;</div><div class='line' id='LC10786'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10787'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetSort.__super__.constructor.call(this, base);</div><div class='line' id='LC10788'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.descending = order.toLowerCase() === &quot;desc&quot;;</div><div class='line' id='LC10789'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.base.isObservable) {</div><div class='line' id='LC10790'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._setObserver = new Batman.SetObserver(this.base);</div><div class='line' id='LC10791'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._setObserver.observedItemKeys = [this.key];</div><div class='line' id='LC10792'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boundReIndex = function() {</div><div class='line' id='LC10793'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this._reIndex();</div><div class='line' id='LC10794'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10795'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._setObserver.observerForItemAndKey = function() {</div><div class='line' id='LC10796'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return boundReIndex;</div><div class='line' id='LC10797'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10798'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._setObserver.on(&#39;itemsWereAdded&#39;, boundReIndex);</div><div class='line' id='LC10799'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._setObserver.on(&#39;itemsWereRemoved&#39;, boundReIndex);</div><div class='line' id='LC10800'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.startObserving();</div><div class='line' id='LC10801'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10802'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._reIndex();</div><div class='line' id='LC10803'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10804'><br/></div><div class='line' id='LC10805'>&nbsp;&nbsp;&nbsp;&nbsp;SetSort.prototype.startObserving = function() {</div><div class='line' id='LC10806'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC10807'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = this._setObserver) != null ? _ref.startObserving() : void 0;</div><div class='line' id='LC10808'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10809'><br/></div><div class='line' id='LC10810'>&nbsp;&nbsp;&nbsp;&nbsp;SetSort.prototype.stopObserving = function() {</div><div class='line' id='LC10811'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC10812'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = this._setObserver) != null ? _ref.stopObserving() : void 0;</div><div class='line' id='LC10813'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10814'><br/></div><div class='line' id='LC10815'>&nbsp;&nbsp;&nbsp;&nbsp;SetSort.prototype.toArray = function() {</div><div class='line' id='LC10816'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&#39;_storage&#39;);</div><div class='line' id='LC10817'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10818'><br/></div><div class='line' id='LC10819'>&nbsp;&nbsp;&nbsp;&nbsp;SetSort.prototype.forEach = function(iterator, ctx) {</div><div class='line' id='LC10820'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var e, i, _i, _len, _ref, _results;</div><div class='line' id='LC10821'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this.get(&#39;_storage&#39;);</div><div class='line' id='LC10822'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC10823'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (i = _i = 0, _len = _ref.length; _i &lt; _len; i = ++_i) {</div><div class='line' id='LC10824'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e = _ref[i];</div><div class='line' id='LC10825'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(iterator.call(ctx, e, i, this));</div><div class='line' id='LC10826'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10827'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC10828'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10829'><br/></div><div class='line' id='LC10830'>&nbsp;&nbsp;&nbsp;&nbsp;SetSort.prototype.find = function(block) {</div><div class='line' id='LC10831'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var item, _i, _len, _ref;</div><div class='line' id='LC10832'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.base.registerAsMutableSource();</div><div class='line' id='LC10833'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this.get(&#39;_storage&#39;);</div><div class='line' id='LC10834'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC10835'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item = _ref[_i];</div><div class='line' id='LC10836'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (block(item)) {</div><div class='line' id='LC10837'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return item;</div><div class='line' id='LC10838'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10839'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10840'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10841'><br/></div><div class='line' id='LC10842'>&nbsp;&nbsp;&nbsp;&nbsp;SetSort.prototype.merge = function(other) {</div><div class='line' id='LC10843'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.base.registerAsMutableSource();</div><div class='line' id='LC10844'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (function(func, args, ctor) {</div><div class='line' id='LC10845'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = func.prototype;</div><div class='line' id='LC10846'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var child = new ctor,</div><div class='line' id='LC10847'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = func.apply(child, args),</div><div class='line' id='LC10848'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t = typeof result;</div><div class='line' id='LC10849'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return t == &quot;object&quot; || t == &quot;function&quot; ? result || child : child;</div><div class='line' id='LC10850'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})(Batman.Set, this._storage, function() {}).merge(other).sortedBy(this.key, this.order);</div><div class='line' id='LC10851'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10852'><br/></div><div class='line' id='LC10853'>&nbsp;&nbsp;&nbsp;&nbsp;SetSort.prototype.compare = function(a, b) {</div><div class='line' id='LC10854'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a === b) {</div><div class='line' id='LC10855'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 0;</div><div class='line' id='LC10856'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10857'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a === void 0) {</div><div class='line' id='LC10858'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 1;</div><div class='line' id='LC10859'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10860'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (b === void 0) {</div><div class='line' id='LC10861'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;</div><div class='line' id='LC10862'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10863'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a === null) {</div><div class='line' id='LC10864'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 1;</div><div class='line' id='LC10865'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10866'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (b === null) {</div><div class='line' id='LC10867'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;</div><div class='line' id='LC10868'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10869'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a === false) {</div><div class='line' id='LC10870'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 1;</div><div class='line' id='LC10871'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10872'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (b === false) {</div><div class='line' id='LC10873'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;</div><div class='line' id='LC10874'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10875'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a === true) {</div><div class='line' id='LC10876'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 1;</div><div class='line' id='LC10877'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10878'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (b === true) {</div><div class='line' id='LC10879'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;</div><div class='line' id='LC10880'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10881'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a !== a) {</div><div class='line' id='LC10882'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (b !== b) {</div><div class='line' id='LC10883'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 0;</div><div class='line' id='LC10884'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC10885'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 1;</div><div class='line' id='LC10886'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10887'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10888'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (b !== b) {</div><div class='line' id='LC10889'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;</div><div class='line' id='LC10890'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10891'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a &gt; b) {</div><div class='line' id='LC10892'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 1;</div><div class='line' id='LC10893'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10894'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a &lt; b) {</div><div class='line' id='LC10895'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;</div><div class='line' id='LC10896'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10897'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 0;</div><div class='line' id='LC10898'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10899'><br/></div><div class='line' id='LC10900'>&nbsp;&nbsp;&nbsp;&nbsp;SetSort.prototype._reIndex = function() {</div><div class='line' id='LC10901'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var newOrder, _ref, _this = this;</div><div class='line' id='LC10902'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newOrder = this.base.toArray().sort(function(a, b) {</div><div class='line' id='LC10903'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var multiple, valueA, valueB;</div><div class='line' id='LC10904'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;valueA = Batman.get(a, _this.key);</div><div class='line' id='LC10905'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof valueA === &#39;function&#39;) {</div><div class='line' id='LC10906'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;valueA = valueA.call(a);</div><div class='line' id='LC10907'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10908'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (valueA != null) {</div><div class='line' id='LC10909'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;valueA = valueA.valueOf();</div><div class='line' id='LC10910'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10911'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;valueB = Batman.get(b, _this.key);</div><div class='line' id='LC10912'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof valueB === &#39;function&#39;) {</div><div class='line' id='LC10913'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;valueB = valueB.call(b);</div><div class='line' id='LC10914'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10915'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (valueB != null) {</div><div class='line' id='LC10916'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;valueB = valueB.valueOf();</div><div class='line' id='LC10917'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10918'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;multiple = _this.descending ? -1 : 1;</div><div class='line' id='LC10919'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.compare.call(_this, valueA, valueB) * multiple;</div><div class='line' id='LC10920'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC10921'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = this._setObserver) != null) {</div><div class='line' id='LC10922'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref.startObservingItems.apply(_ref, newOrder);</div><div class='line' id='LC10923'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10924'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.set(&#39;_storage&#39;, newOrder);</div><div class='line' id='LC10925'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10926'><br/></div><div class='line' id='LC10927'>&nbsp;&nbsp;&nbsp;&nbsp;return SetSort;</div><div class='line' id='LC10928'><br/></div><div class='line' id='LC10929'>&nbsp;&nbsp;})(Batman.SetProxy);</div><div class='line' id='LC10930'><br/></div><div class='line' id='LC10931'>}).call(this);</div><div class='line' id='LC10932'><br/></div><div class='line' id='LC10933'>(function() {</div><div class='line' id='LC10934'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC10935'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC10936'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC10937'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC10938'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10939'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC10940'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC10941'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10942'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC10943'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC10944'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC10945'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC10946'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10947'><br/></div><div class='line' id='LC10948'>&nbsp;&nbsp;Batman.AssociationSet = (function(_super) {</div><div class='line' id='LC10949'><br/></div><div class='line' id='LC10950'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(AssociationSet, _super);</div><div class='line' id='LC10951'><br/></div><div class='line' id='LC10952'>&nbsp;&nbsp;&nbsp;&nbsp;function AssociationSet(foreignKeyValue, association) {</div><div class='line' id='LC10953'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var base;</div><div class='line' id='LC10954'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.foreignKeyValue = foreignKeyValue;</div><div class='line' id='LC10955'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.association = association;</div><div class='line' id='LC10956'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;base = new Batman.Set;</div><div class='line' id='LC10957'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AssociationSet.__super__.constructor.call(this, base, &#39;_batmanID&#39;);</div><div class='line' id='LC10958'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10959'><br/></div><div class='line' id='LC10960'>&nbsp;&nbsp;&nbsp;&nbsp;AssociationSet.prototype.loaded = false;</div><div class='line' id='LC10961'><br/></div><div class='line' id='LC10962'>&nbsp;&nbsp;&nbsp;&nbsp;AssociationSet.prototype.load = function(callback) {</div><div class='line' id='LC10963'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC10964'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.foreignKeyValue == null) {</div><div class='line' id='LC10965'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return callback(void 0, this);</div><div class='line' id='LC10966'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10967'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.association.getRelatedModel().loadWithOptions(this._getLoadOptions(), function(err, records) {</div><div class='line' id='LC10968'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!err) {</div><div class='line' id='LC10969'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.markAsLoaded();</div><div class='line' id='LC10970'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10971'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return callback(err, _this);</div><div class='line' id='LC10972'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC10973'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10974'><br/></div><div class='line' id='LC10975'>&nbsp;&nbsp;&nbsp;&nbsp;AssociationSet.prototype._getLoadOptions = function() {</div><div class='line' id='LC10976'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var loadOptions;</div><div class='line' id='LC10977'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loadOptions = {</div><div class='line' id='LC10978'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data: {}</div><div class='line' id='LC10979'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10980'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loadOptions.data[this.association.foreignKey] = this.foreignKeyValue;</div><div class='line' id='LC10981'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.association.options.url) {</div><div class='line' id='LC10982'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loadOptions.collectionUrl = this.association.options.url;</div><div class='line' id='LC10983'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loadOptions.urlContext = this.association.parentSetIndex().get(this.foreignKeyValue);</div><div class='line' id='LC10984'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC10985'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return loadOptions;</div><div class='line' id='LC10986'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10987'><br/></div><div class='line' id='LC10988'>&nbsp;&nbsp;&nbsp;&nbsp;AssociationSet.accessor(&#39;loaded&#39;, Batman.Property.defaultAccessor);</div><div class='line' id='LC10989'><br/></div><div class='line' id='LC10990'>&nbsp;&nbsp;&nbsp;&nbsp;AssociationSet.prototype.markAsLoaded = function() {</div><div class='line' id='LC10991'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set(&#39;loaded&#39;, true);</div><div class='line' id='LC10992'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.fire(&#39;loaded&#39;);</div><div class='line' id='LC10993'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC10994'><br/></div><div class='line' id='LC10995'>&nbsp;&nbsp;&nbsp;&nbsp;return AssociationSet;</div><div class='line' id='LC10996'><br/></div><div class='line' id='LC10997'>&nbsp;&nbsp;})(Batman.SetSort);</div><div class='line' id='LC10998'><br/></div><div class='line' id='LC10999'>}).call(this);</div><div class='line' id='LC11000'><br/></div><div class='line' id='LC11001'>(function() {</div><div class='line' id='LC11002'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC11003'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC11004'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC11005'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC11006'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11007'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC11008'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC11009'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11010'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC11011'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC11012'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC11013'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC11014'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11015'><br/></div><div class='line' id='LC11016'>&nbsp;&nbsp;Batman.PolymorphicAssociationSet = (function(_super) {</div><div class='line' id='LC11017'><br/></div><div class='line' id='LC11018'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(PolymorphicAssociationSet, _super);</div><div class='line' id='LC11019'><br/></div><div class='line' id='LC11020'>&nbsp;&nbsp;&nbsp;&nbsp;function PolymorphicAssociationSet(foreignKeyValue, foreignTypeKeyValue, association) {</div><div class='line' id='LC11021'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.foreignKeyValue = foreignKeyValue;</div><div class='line' id='LC11022'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.foreignTypeKeyValue = foreignTypeKeyValue;</div><div class='line' id='LC11023'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.association = association;</div><div class='line' id='LC11024'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicAssociationSet.__super__.constructor.call(this, this.foreignKeyValue, this.association);</div><div class='line' id='LC11025'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11026'><br/></div><div class='line' id='LC11027'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicAssociationSet.prototype._getLoadOptions = function() {</div><div class='line' id='LC11028'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var loadOptions;</div><div class='line' id='LC11029'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loadOptions = {</div><div class='line' id='LC11030'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data: {}</div><div class='line' id='LC11031'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11032'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loadOptions.data[this.association.foreignKey] = this.foreignKeyValue;</div><div class='line' id='LC11033'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loadOptions.data[this.association.foreignTypeKey] = this.foreignTypeKeyValue;</div><div class='line' id='LC11034'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.association.options.url) {</div><div class='line' id='LC11035'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loadOptions.collectionUrl = this.association.options.url;</div><div class='line' id='LC11036'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loadOptions.urlContext = this.association.parentSetIndex().get(this.foreignKeyValue);</div><div class='line' id='LC11037'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11038'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return loadOptions;</div><div class='line' id='LC11039'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11040'><br/></div><div class='line' id='LC11041'>&nbsp;&nbsp;&nbsp;&nbsp;return PolymorphicAssociationSet;</div><div class='line' id='LC11042'><br/></div><div class='line' id='LC11043'>&nbsp;&nbsp;})(Batman.AssociationSet);</div><div class='line' id='LC11044'><br/></div><div class='line' id='LC11045'>}).call(this);</div><div class='line' id='LC11046'><br/></div><div class='line' id='LC11047'>(function() {</div><div class='line' id='LC11048'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC11049'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC11050'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC11051'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC11052'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11053'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC11054'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC11055'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11056'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC11057'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC11058'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC11059'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC11060'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC11061'>&nbsp;&nbsp;&nbsp;&nbsp;__slice = [].slice;</div><div class='line' id='LC11062'><br/></div><div class='line' id='LC11063'>&nbsp;&nbsp;Batman.SetIndex = (function(_super) {</div><div class='line' id='LC11064'><br/></div><div class='line' id='LC11065'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(SetIndex, _super);</div><div class='line' id='LC11066'><br/></div><div class='line' id='LC11067'>&nbsp;&nbsp;&nbsp;&nbsp;SetIndex.accessor(&#39;toArray&#39;, function() {</div><div class='line' id='LC11068'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.toArray();</div><div class='line' id='LC11069'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11070'><br/></div><div class='line' id='LC11071'>&nbsp;&nbsp;&nbsp;&nbsp;Batman.extend(SetIndex.prototype, Batman.Enumerable);</div><div class='line' id='LC11072'><br/></div><div class='line' id='LC11073'>&nbsp;&nbsp;&nbsp;&nbsp;SetIndex.prototype.propertyClass = Batman.Property;</div><div class='line' id='LC11074'><br/></div><div class='line' id='LC11075'>&nbsp;&nbsp;&nbsp;&nbsp;function SetIndex(base, key) {</div><div class='line' id='LC11076'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC11077'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.base = base;</div><div class='line' id='LC11078'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.key = key;</div><div class='line' id='LC11079'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetIndex.__super__.constructor.call(this);</div><div class='line' id='LC11080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._storage = new Batman.Hash;</div><div class='line' id='LC11081'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.base.isEventEmitter) {</div><div class='line' id='LC11082'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._setObserver = new Batman.SetObserver(this.base);</div><div class='line' id='LC11083'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._setObserver.observedItemKeys = [this.key];</div><div class='line' id='LC11084'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._setObserver.observerForItemAndKey = this.observerForItemAndKey.bind(this);</div><div class='line' id='LC11085'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._setObserver.on(&#39;itemsWereAdded&#39;, function() {</div><div class='line' id='LC11086'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var item, items, _i, _len, _results;</div><div class='line' id='LC11087'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;items = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC11088'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC11089'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = items.length; _i &lt; _len; _i++) {</div><div class='line' id='LC11090'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item = items[_i];</div><div class='line' id='LC11091'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(_this._addItem(item));</div><div class='line' id='LC11092'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11093'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC11094'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11095'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._setObserver.on(&#39;itemsWereRemoved&#39;, function() {</div><div class='line' id='LC11096'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var item, items, _i, _len, _results;</div><div class='line' id='LC11097'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;items = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC11098'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC11099'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = items.length; _i &lt; _len; _i++) {</div><div class='line' id='LC11100'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item = items[_i];</div><div class='line' id='LC11101'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(_this._removeItem(item));</div><div class='line' id='LC11102'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11103'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC11104'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11105'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11106'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.base.forEach(this._addItem.bind(this));</div><div class='line' id='LC11107'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.startObserving();</div><div class='line' id='LC11108'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11109'><br/></div><div class='line' id='LC11110'>&nbsp;&nbsp;&nbsp;&nbsp;SetIndex.accessor(function(key) {</div><div class='line' id='LC11111'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._resultSetForKey(key);</div><div class='line' id='LC11112'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11113'><br/></div><div class='line' id='LC11114'>&nbsp;&nbsp;&nbsp;&nbsp;SetIndex.prototype.startObserving = function() {</div><div class='line' id='LC11115'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC11116'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = this._setObserver) != null ? _ref.startObserving() : void 0;</div><div class='line' id='LC11117'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11118'><br/></div><div class='line' id='LC11119'>&nbsp;&nbsp;&nbsp;&nbsp;SetIndex.prototype.stopObserving = function() {</div><div class='line' id='LC11120'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC11121'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = this._setObserver) != null ? _ref.stopObserving() : void 0;</div><div class='line' id='LC11122'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11123'><br/></div><div class='line' id='LC11124'>&nbsp;&nbsp;&nbsp;&nbsp;SetIndex.prototype.observerForItemAndKey = function(item, key) {</div><div class='line' id='LC11125'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC11126'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function(newValue, oldValue) {</div><div class='line' id='LC11127'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this._removeItemFromKey(item, oldValue);</div><div class='line' id='LC11128'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this._addItemToKey(item, newValue);</div><div class='line' id='LC11129'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11130'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11131'><br/></div><div class='line' id='LC11132'>&nbsp;&nbsp;&nbsp;&nbsp;SetIndex.prototype.forEach = function(iterator, ctx) {</div><div class='line' id='LC11133'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC11134'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._storage.forEach(function(key, set) {</div><div class='line' id='LC11135'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (set.get(&#39;length&#39;) &gt; 0) {</div><div class='line' id='LC11136'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return iterator.call(ctx, key, set, _this);</div><div class='line' id='LC11137'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11138'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11139'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11140'><br/></div><div class='line' id='LC11141'>&nbsp;&nbsp;&nbsp;&nbsp;SetIndex.prototype.toArray = function() {</div><div class='line' id='LC11142'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var results;</div><div class='line' id='LC11143'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;results = [];</div><div class='line' id='LC11144'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._storage.forEach(function(key, set) {</div><div class='line' id='LC11145'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (set.get(&#39;length&#39;) &gt; 0) {</div><div class='line' id='LC11146'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return results.push(key);</div><div class='line' id='LC11147'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11148'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11149'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return results;</div><div class='line' id='LC11150'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11151'><br/></div><div class='line' id='LC11152'>&nbsp;&nbsp;&nbsp;&nbsp;SetIndex.prototype._addItem = function(item) {</div><div class='line' id='LC11153'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._addItemToKey(item, this._keyForItem(item));</div><div class='line' id='LC11154'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11155'><br/></div><div class='line' id='LC11156'>&nbsp;&nbsp;&nbsp;&nbsp;SetIndex.prototype._addItemToKey = function(item, key) {</div><div class='line' id='LC11157'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._resultSetForKey(key).add(item);</div><div class='line' id='LC11158'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11159'><br/></div><div class='line' id='LC11160'>&nbsp;&nbsp;&nbsp;&nbsp;SetIndex.prototype._removeItem = function(item) {</div><div class='line' id='LC11161'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._removeItemFromKey(item, this._keyForItem(item));</div><div class='line' id='LC11162'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11163'><br/></div><div class='line' id='LC11164'>&nbsp;&nbsp;&nbsp;&nbsp;SetIndex.prototype._removeItemFromKey = function(item, key) {</div><div class='line' id='LC11165'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._resultSetForKey(key).remove(item);</div><div class='line' id='LC11166'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11167'><br/></div><div class='line' id='LC11168'>&nbsp;&nbsp;&nbsp;&nbsp;SetIndex.prototype._resultSetForKey = function(key) {</div><div class='line' id='LC11169'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._storage.getOrSet(key, function() {</div><div class='line' id='LC11170'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.Set;</div><div class='line' id='LC11171'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11172'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11173'><br/></div><div class='line' id='LC11174'>&nbsp;&nbsp;&nbsp;&nbsp;SetIndex.prototype._keyForItem = function(item) {</div><div class='line' id='LC11175'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.Keypath.forBaseAndKey(item, this.key).getValue();</div><div class='line' id='LC11176'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11177'><br/></div><div class='line' id='LC11178'>&nbsp;&nbsp;&nbsp;&nbsp;return SetIndex;</div><div class='line' id='LC11179'><br/></div><div class='line' id='LC11180'>&nbsp;&nbsp;})(Batman.Object);</div><div class='line' id='LC11181'><br/></div><div class='line' id='LC11182'>}).call(this);</div><div class='line' id='LC11183'><br/></div><div class='line' id='LC11184'>(function() {</div><div class='line' id='LC11185'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC11186'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC11187'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC11188'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC11189'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11190'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC11191'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC11192'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11193'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC11194'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC11195'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC11196'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC11197'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11198'><br/></div><div class='line' id='LC11199'>&nbsp;&nbsp;Batman.PolymorphicAssociationSetIndex = (function(_super) {</div><div class='line' id='LC11200'><br/></div><div class='line' id='LC11201'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(PolymorphicAssociationSetIndex, _super);</div><div class='line' id='LC11202'><br/></div><div class='line' id='LC11203'>&nbsp;&nbsp;&nbsp;&nbsp;function PolymorphicAssociationSetIndex(association, type, key) {</div><div class='line' id='LC11204'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.association = association;</div><div class='line' id='LC11205'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.type = type;</div><div class='line' id='LC11206'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicAssociationSetIndex.__super__.constructor.call(this, this.association.getRelatedModel().get(&#39;loaded&#39;), key);</div><div class='line' id='LC11207'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11208'><br/></div><div class='line' id='LC11209'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicAssociationSetIndex.prototype._resultSetForKey = function(key) {</div><div class='line' id='LC11210'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.association.setForKey(key);</div><div class='line' id='LC11211'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11212'><br/></div><div class='line' id='LC11213'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicAssociationSetIndex.prototype._addItem = function(item) {</div><div class='line' id='LC11214'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.association.modelType() !== item.get(this.association.foreignTypeKey)) {</div><div class='line' id='LC11215'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC11216'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11217'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return PolymorphicAssociationSetIndex.__super__._addItem.apply(this, arguments);</div><div class='line' id='LC11218'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11219'><br/></div><div class='line' id='LC11220'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicAssociationSetIndex.prototype._removeItem = function(item) {</div><div class='line' id='LC11221'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.association.modelType() !== item.get(this.association.foreignTypeKey)) {</div><div class='line' id='LC11222'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC11223'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11224'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return PolymorphicAssociationSetIndex.__super__._removeItem.apply(this, arguments);</div><div class='line' id='LC11225'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11226'><br/></div><div class='line' id='LC11227'>&nbsp;&nbsp;&nbsp;&nbsp;return PolymorphicAssociationSetIndex;</div><div class='line' id='LC11228'><br/></div><div class='line' id='LC11229'>&nbsp;&nbsp;})(Batman.SetIndex);</div><div class='line' id='LC11230'><br/></div><div class='line' id='LC11231'>}).call(this);</div><div class='line' id='LC11232'><br/></div><div class='line' id='LC11233'>(function() {</div><div class='line' id='LC11234'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC11235'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC11236'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC11237'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC11238'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11239'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC11240'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC11241'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11242'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC11243'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC11244'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC11245'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC11246'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11247'><br/></div><div class='line' id='LC11248'>&nbsp;&nbsp;Batman.AssociationSetIndex = (function(_super) {</div><div class='line' id='LC11249'><br/></div><div class='line' id='LC11250'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(AssociationSetIndex, _super);</div><div class='line' id='LC11251'><br/></div><div class='line' id='LC11252'>&nbsp;&nbsp;&nbsp;&nbsp;function AssociationSetIndex(association, key) {</div><div class='line' id='LC11253'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.association = association;</div><div class='line' id='LC11254'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AssociationSetIndex.__super__.constructor.call(this, this.association.getRelatedModel().get(&#39;loaded&#39;), key);</div><div class='line' id='LC11255'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11256'><br/></div><div class='line' id='LC11257'>&nbsp;&nbsp;&nbsp;&nbsp;AssociationSetIndex.prototype._resultSetForKey = function(key) {</div><div class='line' id='LC11258'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.association.setForKey(key);</div><div class='line' id='LC11259'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11260'><br/></div><div class='line' id='LC11261'>&nbsp;&nbsp;&nbsp;&nbsp;AssociationSetIndex.prototype.forEach = function(iterator, ctx) {</div><div class='line' id='LC11262'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC11263'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.association.proxies.forEach(function(record, set) {</div><div class='line' id='LC11264'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var key;</div><div class='line' id='LC11265'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = _this.association.indexValueForRecord(record);</div><div class='line' id='LC11266'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (set.get(&#39;length&#39;) &gt; 0) {</div><div class='line' id='LC11267'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return iterator.call(ctx, key, set, _this);</div><div class='line' id='LC11268'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11269'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11270'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11271'><br/></div><div class='line' id='LC11272'>&nbsp;&nbsp;&nbsp;&nbsp;AssociationSetIndex.prototype.toArray = function() {</div><div class='line' id='LC11273'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var results;</div><div class='line' id='LC11274'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;results = [];</div><div class='line' id='LC11275'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.forEach(function(key) {</div><div class='line' id='LC11276'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return results.push(key);</div><div class='line' id='LC11277'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11278'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return results;</div><div class='line' id='LC11279'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11280'><br/></div><div class='line' id='LC11281'>&nbsp;&nbsp;&nbsp;&nbsp;return AssociationSetIndex;</div><div class='line' id='LC11282'><br/></div><div class='line' id='LC11283'>&nbsp;&nbsp;})(Batman.SetIndex);</div><div class='line' id='LC11284'><br/></div><div class='line' id='LC11285'>}).call(this);</div><div class='line' id='LC11286'><br/></div><div class='line' id='LC11287'>(function() {</div><div class='line' id='LC11288'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC11289'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC11290'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC11291'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC11292'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11293'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC11294'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC11295'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11296'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC11297'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC11298'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC11299'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC11300'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11301'><br/></div><div class='line' id='LC11302'>&nbsp;&nbsp;Batman.UniqueSetIndex = (function(_super) {</div><div class='line' id='LC11303'><br/></div><div class='line' id='LC11304'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(UniqueSetIndex, _super);</div><div class='line' id='LC11305'><br/></div><div class='line' id='LC11306'>&nbsp;&nbsp;&nbsp;&nbsp;function UniqueSetIndex() {</div><div class='line' id='LC11307'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._uniqueIndex = new Batman.Hash;</div><div class='line' id='LC11308'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UniqueSetIndex.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC11309'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11310'><br/></div><div class='line' id='LC11311'>&nbsp;&nbsp;&nbsp;&nbsp;UniqueSetIndex.accessor(function(key) {</div><div class='line' id='LC11312'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._uniqueIndex.get(key);</div><div class='line' id='LC11313'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11314'><br/></div><div class='line' id='LC11315'>&nbsp;&nbsp;&nbsp;&nbsp;UniqueSetIndex.prototype._addItemToKey = function(item, key) {</div><div class='line' id='LC11316'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._resultSetForKey(key).add(item);</div><div class='line' id='LC11317'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this._uniqueIndex.hasKey(key)) {</div><div class='line' id='LC11318'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._uniqueIndex.set(key, item);</div><div class='line' id='LC11319'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11320'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11321'><br/></div><div class='line' id='LC11322'>&nbsp;&nbsp;&nbsp;&nbsp;UniqueSetIndex.prototype._removeItemFromKey = function(item, key) {</div><div class='line' id='LC11323'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var resultSet;</div><div class='line' id='LC11324'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resultSet = this._resultSetForKey(key);</div><div class='line' id='LC11325'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UniqueSetIndex.__super__._removeItemFromKey.apply(this, arguments);</div><div class='line' id='LC11326'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (resultSet.isEmpty()) {</div><div class='line' id='LC11327'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._uniqueIndex.unset(key);</div><div class='line' id='LC11328'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11329'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._uniqueIndex.set(key, resultSet.toArray()[0]);</div><div class='line' id='LC11330'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11331'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11332'><br/></div><div class='line' id='LC11333'>&nbsp;&nbsp;&nbsp;&nbsp;return UniqueSetIndex;</div><div class='line' id='LC11334'><br/></div><div class='line' id='LC11335'>&nbsp;&nbsp;})(Batman.SetIndex);</div><div class='line' id='LC11336'><br/></div><div class='line' id='LC11337'>}).call(this);</div><div class='line' id='LC11338'><br/></div><div class='line' id='LC11339'>(function() {</div><div class='line' id='LC11340'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC11341'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC11342'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC11343'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC11344'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11345'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC11346'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC11347'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11348'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC11349'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC11350'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC11351'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC11352'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11353'><br/></div><div class='line' id='LC11354'>&nbsp;&nbsp;Batman.UniqueAssociationSetIndex = (function(_super) {</div><div class='line' id='LC11355'><br/></div><div class='line' id='LC11356'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(UniqueAssociationSetIndex, _super);</div><div class='line' id='LC11357'><br/></div><div class='line' id='LC11358'>&nbsp;&nbsp;&nbsp;&nbsp;function UniqueAssociationSetIndex(association, key) {</div><div class='line' id='LC11359'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.association = association;</div><div class='line' id='LC11360'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UniqueAssociationSetIndex.__super__.constructor.call(this, this.association.getRelatedModel().get(&#39;loaded&#39;), key);</div><div class='line' id='LC11361'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11362'><br/></div><div class='line' id='LC11363'>&nbsp;&nbsp;&nbsp;&nbsp;return UniqueAssociationSetIndex;</div><div class='line' id='LC11364'><br/></div><div class='line' id='LC11365'>&nbsp;&nbsp;})(Batman.UniqueSetIndex);</div><div class='line' id='LC11366'><br/></div><div class='line' id='LC11367'>}).call(this);</div><div class='line' id='LC11368'><br/></div><div class='line' id='LC11369'>(function() {</div><div class='line' id='LC11370'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC11371'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC11372'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC11373'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC11374'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11375'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC11376'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC11377'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11378'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC11379'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC11380'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC11381'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC11382'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11383'><br/></div><div class='line' id='LC11384'>&nbsp;&nbsp;Batman.PolymorphicUniqueAssociationSetIndex = (function(_super) {</div><div class='line' id='LC11385'><br/></div><div class='line' id='LC11386'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(PolymorphicUniqueAssociationSetIndex, _super);</div><div class='line' id='LC11387'><br/></div><div class='line' id='LC11388'>&nbsp;&nbsp;&nbsp;&nbsp;function PolymorphicUniqueAssociationSetIndex(association, type, key) {</div><div class='line' id='LC11389'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.association = association;</div><div class='line' id='LC11390'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.type = type;</div><div class='line' id='LC11391'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicUniqueAssociationSetIndex.__super__.constructor.call(this, this.association.getRelatedModelForType(type).get(&#39;loaded&#39;), key);</div><div class='line' id='LC11392'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11393'><br/></div><div class='line' id='LC11394'>&nbsp;&nbsp;&nbsp;&nbsp;return PolymorphicUniqueAssociationSetIndex;</div><div class='line' id='LC11395'><br/></div><div class='line' id='LC11396'>&nbsp;&nbsp;})(Batman.UniqueSetIndex);</div><div class='line' id='LC11397'><br/></div><div class='line' id='LC11398'>}).call(this);</div><div class='line' id='LC11399'><br/></div><div class='line' id='LC11400'>(function() {</div><div class='line' id='LC11401'>&nbsp;&nbsp;var __bind = function(fn, me) {</div><div class='line' id='LC11402'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function() {</div><div class='line' id='LC11403'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return fn.apply(me, arguments);</div><div class='line' id='LC11404'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11405'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC11406'>&nbsp;&nbsp;&nbsp;&nbsp;__slice = [].slice;</div><div class='line' id='LC11407'><br/></div><div class='line' id='LC11408'>&nbsp;&nbsp;Batman.Navigator = (function() {</div><div class='line' id='LC11409'><br/></div><div class='line' id='LC11410'>&nbsp;&nbsp;&nbsp;&nbsp;Navigator.defaultClass = function() {</div><div class='line' id='LC11411'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Batman.config.usePushState &amp;&amp; Batman.PushStateNavigator.isSupported()) {</div><div class='line' id='LC11412'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.PushStateNavigator;</div><div class='line' id='LC11413'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11414'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.HashbangNavigator;</div><div class='line' id='LC11415'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11416'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11417'><br/></div><div class='line' id='LC11418'>&nbsp;&nbsp;&nbsp;&nbsp;Navigator.forApp = function(app) {</div><div class='line' id='LC11419'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new(this.defaultClass())(app);</div><div class='line' id='LC11420'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11421'><br/></div><div class='line' id='LC11422'>&nbsp;&nbsp;&nbsp;&nbsp;function Navigator(app) {</div><div class='line' id='LC11423'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.app = app;</div><div class='line' id='LC11424'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.handleCurrentLocation = __bind(this.handleCurrentLocation, this);</div><div class='line' id='LC11425'><br/></div><div class='line' id='LC11426'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11427'><br/></div><div class='line' id='LC11428'>&nbsp;&nbsp;&nbsp;&nbsp;Navigator.prototype.start = function() {</div><div class='line' id='LC11429'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC11430'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof window === &#39;undefined&#39;) {</div><div class='line' id='LC11431'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC11432'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11433'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.started) {</div><div class='line' id='LC11434'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC11435'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11436'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.started = true;</div><div class='line' id='LC11437'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.startWatching();</div><div class='line' id='LC11438'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.currentApp.prevent(&#39;ready&#39;);</div><div class='line' id='LC11439'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.setImmediate(function() {</div><div class='line' id='LC11440'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (_this.started &amp;&amp; Batman.currentApp) {</div><div class='line' id='LC11441'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.handleCurrentLocation();</div><div class='line' id='LC11442'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.currentApp.allowAndFire(&#39;ready&#39;);</div><div class='line' id='LC11443'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11444'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11445'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11446'><br/></div><div class='line' id='LC11447'>&nbsp;&nbsp;&nbsp;&nbsp;Navigator.prototype.stop = function() {</div><div class='line' id='LC11448'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.stopWatching();</div><div class='line' id='LC11449'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.started = false;</div><div class='line' id='LC11450'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11451'><br/></div><div class='line' id='LC11452'>&nbsp;&nbsp;&nbsp;&nbsp;Navigator.prototype.handleLocation = function(location) {</div><div class='line' id='LC11453'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var path;</div><div class='line' id='LC11454'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path = this.pathFromLocation(location);</div><div class='line' id='LC11455'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (path === this.cachedPath) {</div><div class='line' id='LC11456'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC11457'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11458'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.dispatch(path);</div><div class='line' id='LC11459'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11460'><br/></div><div class='line' id='LC11461'>&nbsp;&nbsp;&nbsp;&nbsp;Navigator.prototype.handleCurrentLocation = function() {</div><div class='line' id='LC11462'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.handleLocation(window.location);</div><div class='line' id='LC11463'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11464'><br/></div><div class='line' id='LC11465'>&nbsp;&nbsp;&nbsp;&nbsp;Navigator.prototype.dispatch = function(params) {</div><div class='line' id='LC11466'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cachedPath = this.app.get(&#39;dispatcher&#39;).dispatch(params);</div><div class='line' id='LC11467'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this._lastRedirect) {</div><div class='line' id='LC11468'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cachedPath = this._lastRedirect;</div><div class='line' id='LC11469'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11470'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.cachedPath;</div><div class='line' id='LC11471'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11472'><br/></div><div class='line' id='LC11473'>&nbsp;&nbsp;&nbsp;&nbsp;Navigator.prototype.push = function(params) {</div><div class='line' id='LC11474'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var path, pathFromParams, _base;</div><div class='line' id='LC11475'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pathFromParams = typeof(_base = this.app.get(&#39;dispatcher&#39;)).pathFromParams === &quot;function&quot; ? _base.pathFromParams(params) : void 0;</div><div class='line' id='LC11476'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (pathFromParams) {</div><div class='line' id='LC11477'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._lastRedirect = pathFromParams;</div><div class='line' id='LC11478'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11479'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path = this.dispatch(params);</div><div class='line' id='LC11480'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this._lastRedirect || this._lastRedirect === path) {</div><div class='line' id='LC11481'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.pushState(null, &#39;&#39;, path);</div><div class='line' id='LC11482'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11483'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return path;</div><div class='line' id='LC11484'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11485'><br/></div><div class='line' id='LC11486'>&nbsp;&nbsp;&nbsp;&nbsp;Navigator.prototype.replace = function(params) {</div><div class='line' id='LC11487'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var path, pathFromParams, _base;</div><div class='line' id='LC11488'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pathFromParams = typeof(_base = this.app.get(&#39;dispatcher&#39;)).pathFromParams === &quot;function&quot; ? _base.pathFromParams(params) : void 0;</div><div class='line' id='LC11489'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (pathFromParams) {</div><div class='line' id='LC11490'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._lastRedirect = pathFromParams;</div><div class='line' id='LC11491'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11492'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path = this.dispatch(params);</div><div class='line' id='LC11493'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this._lastRedirect || this._lastRedirect === path) {</div><div class='line' id='LC11494'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.replaceState(null, &#39;&#39;, path);</div><div class='line' id='LC11495'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11496'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return path;</div><div class='line' id='LC11497'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11498'><br/></div><div class='line' id='LC11499'>&nbsp;&nbsp;&nbsp;&nbsp;Navigator.prototype.redirect = Navigator.prototype.push;</div><div class='line' id='LC11500'><br/></div><div class='line' id='LC11501'>&nbsp;&nbsp;&nbsp;&nbsp;Navigator.prototype.normalizePath = function() {</div><div class='line' id='LC11502'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var i, seg, segments;</div><div class='line' id='LC11503'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;segments = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC11504'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;segments = (function() {</div><div class='line' id='LC11505'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _i, _len, _results;</div><div class='line' id='LC11506'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC11507'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (i = _i = 0, _len = segments.length; _i &lt; _len; i = ++_i) {</div><div class='line' id='LC11508'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;seg = segments[i];</div><div class='line' id='LC11509'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push((&quot;&quot; + seg).replace(/^(?!\/)/, &#39;/&#39;).replace(/\/+$/, &#39;&#39;));</div><div class='line' id='LC11510'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11511'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC11512'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})();</div><div class='line' id='LC11513'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return segments.join(&#39;&#39;) || &#39;/&#39;;</div><div class='line' id='LC11514'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11515'><br/></div><div class='line' id='LC11516'>&nbsp;&nbsp;&nbsp;&nbsp;Navigator.normalizePath = Navigator.prototype.normalizePath;</div><div class='line' id='LC11517'><br/></div><div class='line' id='LC11518'>&nbsp;&nbsp;&nbsp;&nbsp;return Navigator;</div><div class='line' id='LC11519'><br/></div><div class='line' id='LC11520'>&nbsp;&nbsp;})();</div><div class='line' id='LC11521'><br/></div><div class='line' id='LC11522'>}).call(this);</div><div class='line' id='LC11523'><br/></div><div class='line' id='LC11524'>(function() {</div><div class='line' id='LC11525'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC11526'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC11527'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC11528'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC11529'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11530'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC11531'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC11532'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11533'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC11534'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC11535'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC11536'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC11537'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11538'><br/></div><div class='line' id='LC11539'>&nbsp;&nbsp;Batman.PushStateNavigator = (function(_super) {</div><div class='line' id='LC11540'><br/></div><div class='line' id='LC11541'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(PushStateNavigator, _super);</div><div class='line' id='LC11542'><br/></div><div class='line' id='LC11543'>&nbsp;&nbsp;&nbsp;&nbsp;function PushStateNavigator() {</div><div class='line' id='LC11544'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return PushStateNavigator.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC11545'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11546'><br/></div><div class='line' id='LC11547'>&nbsp;&nbsp;&nbsp;&nbsp;PushStateNavigator.isSupported = function() {</div><div class='line' id='LC11548'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC11549'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (typeof window !== &quot;undefined&quot; &amp;&amp; window !== null ? (_ref = window.history) != null ? _ref.pushState : void 0 : void 0) != null;</div><div class='line' id='LC11550'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11551'><br/></div><div class='line' id='LC11552'>&nbsp;&nbsp;&nbsp;&nbsp;PushStateNavigator.prototype.startWatching = function() {</div><div class='line' id='LC11553'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.addEventListener(window, &#39;popstate&#39;, this.handleCurrentLocation);</div><div class='line' id='LC11554'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11555'><br/></div><div class='line' id='LC11556'>&nbsp;&nbsp;&nbsp;&nbsp;PushStateNavigator.prototype.stopWatching = function() {</div><div class='line' id='LC11557'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.removeEventListener(window, &#39;popstate&#39;, this.handleCurrentLocation);</div><div class='line' id='LC11558'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11559'><br/></div><div class='line' id='LC11560'>&nbsp;&nbsp;&nbsp;&nbsp;PushStateNavigator.prototype.pushState = function(stateObject, title, path) {</div><div class='line' id='LC11561'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (path !== this.pathFromLocation(window.location)) {</div><div class='line' id='LC11562'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return window.history.pushState(stateObject, title, this.linkTo(path));</div><div class='line' id='LC11563'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11564'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11565'><br/></div><div class='line' id='LC11566'>&nbsp;&nbsp;&nbsp;&nbsp;PushStateNavigator.prototype.replaceState = function(stateObject, title, path) {</div><div class='line' id='LC11567'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (path !== this.pathFromLocation(window.location)) {</div><div class='line' id='LC11568'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return window.history.replaceState(stateObject, title, this.linkTo(path));</div><div class='line' id='LC11569'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11570'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11571'><br/></div><div class='line' id='LC11572'>&nbsp;&nbsp;&nbsp;&nbsp;PushStateNavigator.prototype.linkTo = function(url) {</div><div class='line' id='LC11573'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.normalizePath(Batman.config.pathPrefix, url);</div><div class='line' id='LC11574'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11575'><br/></div><div class='line' id='LC11576'>&nbsp;&nbsp;&nbsp;&nbsp;PushStateNavigator.prototype.pathFromLocation = function(location) {</div><div class='line' id='LC11577'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var fullPath, prefixPattern;</div><div class='line' id='LC11578'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fullPath = &quot;&quot; + (location.pathname || &#39;&#39;) + (location.search || &#39;&#39;);</div><div class='line' id='LC11579'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;prefixPattern = new RegExp(&quot;^&quot; + (this.normalizePath(Batman.config.pathPrefix)));</div><div class='line' id='LC11580'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.normalizePath(fullPath.replace(prefixPattern, &#39;&#39;));</div><div class='line' id='LC11581'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11582'><br/></div><div class='line' id='LC11583'>&nbsp;&nbsp;&nbsp;&nbsp;PushStateNavigator.prototype.handleLocation = function(location) {</div><div class='line' id='LC11584'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var hashbangPath, path;</div><div class='line' id='LC11585'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path = this.pathFromLocation(location);</div><div class='line' id='LC11586'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (path === &#39;/&#39; &amp;&amp; (hashbangPath = Batman.HashbangNavigator.prototype.pathFromLocation(location)) !== &#39;/&#39;) {</div><div class='line' id='LC11587'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.replace(hashbangPath);</div><div class='line' id='LC11588'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11589'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return PushStateNavigator.__super__.handleLocation.apply(this, arguments);</div><div class='line' id='LC11590'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11591'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11592'><br/></div><div class='line' id='LC11593'>&nbsp;&nbsp;&nbsp;&nbsp;return PushStateNavigator;</div><div class='line' id='LC11594'><br/></div><div class='line' id='LC11595'>&nbsp;&nbsp;})(Batman.Navigator);</div><div class='line' id='LC11596'><br/></div><div class='line' id='LC11597'>}).call(this);</div><div class='line' id='LC11598'><br/></div><div class='line' id='LC11599'>(function() {</div><div class='line' id='LC11600'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC11601'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC11602'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC11603'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC11604'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11605'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC11606'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC11607'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11608'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC11609'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC11610'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC11611'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC11612'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11613'><br/></div><div class='line' id='LC11614'>&nbsp;&nbsp;Batman.HashbangNavigator = (function(_super) {</div><div class='line' id='LC11615'><br/></div><div class='line' id='LC11616'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(HashbangNavigator, _super);</div><div class='line' id='LC11617'><br/></div><div class='line' id='LC11618'>&nbsp;&nbsp;&nbsp;&nbsp;function HashbangNavigator() {</div><div class='line' id='LC11619'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return HashbangNavigator.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC11620'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11621'><br/></div><div class='line' id='LC11622'>&nbsp;&nbsp;&nbsp;&nbsp;HashbangNavigator.prototype.HASH_PREFIX = &#39;#!&#39;;</div><div class='line' id='LC11623'><br/></div><div class='line' id='LC11624'>&nbsp;&nbsp;&nbsp;&nbsp;if ((typeof window !== &quot;undefined&quot; &amp;&amp; window !== null) &amp;&amp; &#39;onhashchange&#39; in window) {</div><div class='line' id='LC11625'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HashbangNavigator.prototype.startWatching = function() {</div><div class='line' id='LC11626'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.addEventListener(window, &#39;hashchange&#39;, this.handleCurrentLocation);</div><div class='line' id='LC11627'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11628'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HashbangNavigator.prototype.stopWatching = function() {</div><div class='line' id='LC11629'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.removeEventListener(window, &#39;hashchange&#39;, this.handleCurrentLocation);</div><div class='line' id='LC11630'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11631'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11632'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HashbangNavigator.prototype.startWatching = function() {</div><div class='line' id='LC11633'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.interval = setInterval(this.handleCurrentLocation, 100);</div><div class='line' id='LC11634'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11635'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HashbangNavigator.prototype.stopWatching = function() {</div><div class='line' id='LC11636'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.interval = clearInterval(this.interval);</div><div class='line' id='LC11637'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11638'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11639'><br/></div><div class='line' id='LC11640'>&nbsp;&nbsp;&nbsp;&nbsp;HashbangNavigator.prototype.pushState = function(stateObject, title, path) {</div><div class='line' id='LC11641'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return window.location.hash = this.linkTo(path);</div><div class='line' id='LC11642'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11643'><br/></div><div class='line' id='LC11644'>&nbsp;&nbsp;&nbsp;&nbsp;HashbangNavigator.prototype.replaceState = function(stateObject, title, path) {</div><div class='line' id='LC11645'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var loc;</div><div class='line' id='LC11646'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loc = window.location;</div><div class='line' id='LC11647'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return loc.replace(&quot;&quot; + loc.pathname + loc.search + (this.linkTo(path)));</div><div class='line' id='LC11648'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11649'><br/></div><div class='line' id='LC11650'>&nbsp;&nbsp;&nbsp;&nbsp;HashbangNavigator.prototype.linkTo = function(url) {</div><div class='line' id='LC11651'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.HASH_PREFIX + url;</div><div class='line' id='LC11652'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11653'><br/></div><div class='line' id='LC11654'>&nbsp;&nbsp;&nbsp;&nbsp;HashbangNavigator.prototype.pathFromLocation = function(location) {</div><div class='line' id='LC11655'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var hash;</div><div class='line' id='LC11656'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hash = location.hash;</div><div class='line' id='LC11657'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((hash != null ? hash.substr(0, 2) : void 0) === this.HASH_PREFIX) {</div><div class='line' id='LC11658'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.normalizePath(hash.substr(2));</div><div class='line' id='LC11659'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11660'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &#39;/&#39;;</div><div class='line' id='LC11661'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11662'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11663'><br/></div><div class='line' id='LC11664'>&nbsp;&nbsp;&nbsp;&nbsp;HashbangNavigator.prototype.handleLocation = function(location) {</div><div class='line' id='LC11665'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var realPath;</div><div class='line' id='LC11666'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!Batman.config.usePushState) {</div><div class='line' id='LC11667'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return HashbangNavigator.__super__.handleLocation.apply(this, arguments);</div><div class='line' id='LC11668'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11669'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;realPath = Batman.PushStateNavigator.prototype.pathFromLocation(location);</div><div class='line' id='LC11670'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (realPath === &#39;/&#39;) {</div><div class='line' id='LC11671'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return HashbangNavigator.__super__.handleLocation.apply(this, arguments);</div><div class='line' id='LC11672'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11673'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return location.replace(this.normalizePath(&quot;&quot; + Batman.config.pathPrefix + (this.linkTo(realPath))));</div><div class='line' id='LC11674'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11675'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11676'><br/></div><div class='line' id='LC11677'>&nbsp;&nbsp;&nbsp;&nbsp;return HashbangNavigator;</div><div class='line' id='LC11678'><br/></div><div class='line' id='LC11679'>&nbsp;&nbsp;})(Batman.Navigator);</div><div class='line' id='LC11680'><br/></div><div class='line' id='LC11681'>}).call(this);</div><div class='line' id='LC11682'><br/></div><div class='line' id='LC11683'>(function() {</div><div class='line' id='LC11684'><br/></div><div class='line' id='LC11685'>&nbsp;&nbsp;Batman.RouteMap = (function() {</div><div class='line' id='LC11686'><br/></div><div class='line' id='LC11687'>&nbsp;&nbsp;&nbsp;&nbsp;RouteMap.prototype.memberRoute = null;</div><div class='line' id='LC11688'><br/></div><div class='line' id='LC11689'>&nbsp;&nbsp;&nbsp;&nbsp;RouteMap.prototype.collectionRoute = null;</div><div class='line' id='LC11690'><br/></div><div class='line' id='LC11691'>&nbsp;&nbsp;&nbsp;&nbsp;function RouteMap() {</div><div class='line' id='LC11692'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.childrenByOrder = [];</div><div class='line' id='LC11693'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.childrenByName = {};</div><div class='line' id='LC11694'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11695'><br/></div><div class='line' id='LC11696'>&nbsp;&nbsp;&nbsp;&nbsp;RouteMap.prototype.routeForParams = function(params) {</div><div class='line' id='LC11697'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var route, _i, _len, _ref;</div><div class='line' id='LC11698'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this.childrenByOrder;</div><div class='line' id='LC11699'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC11700'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;route = _ref[_i];</div><div class='line' id='LC11701'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (route.test(params)) {</div><div class='line' id='LC11702'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return route;</div><div class='line' id='LC11703'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11704'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11705'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return void 0;</div><div class='line' id='LC11706'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11707'><br/></div><div class='line' id='LC11708'>&nbsp;&nbsp;&nbsp;&nbsp;RouteMap.prototype.addRoute = function(name, route) {</div><div class='line' id='LC11709'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var base, names, _this = this;</div><div class='line' id='LC11710'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.childrenByOrder.push(route);</div><div class='line' id='LC11711'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (name.length &gt; 0 &amp;&amp; (names = name.split(&#39;.&#39;)).length &gt; 0) {</div><div class='line' id='LC11712'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;base = names.shift();</div><div class='line' id='LC11713'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this.childrenByName[base]) {</div><div class='line' id='LC11714'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.childrenByName[base] = new Batman.RouteMap;</div><div class='line' id='LC11715'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11716'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.childrenByName[base].addRoute(names.join(&#39;.&#39;), route);</div><div class='line' id='LC11717'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11718'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (route.get(&#39;member&#39;)) {</div><div class='line' id='LC11719'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer[&quot;do&quot;](function() {</div><div class='line' id='LC11720'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (_this.memberRoute) {</div><div class='line' id='LC11721'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.developer.error(&quot;Member route with name &quot; + name + &quot; already exists!&quot;);</div><div class='line' id='LC11722'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11723'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11724'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.memberRoute = route;</div><div class='line' id='LC11725'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11726'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer[&quot;do&quot;](function() {</div><div class='line' id='LC11727'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (_this.collectionRoute) {</div><div class='line' id='LC11728'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.developer.error(&quot;Collection route with name &quot; + name + &quot; already exists!&quot;);</div><div class='line' id='LC11729'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11730'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11731'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.collectionRoute = route;</div><div class='line' id='LC11732'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11733'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11734'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC11735'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11736'><br/></div><div class='line' id='LC11737'>&nbsp;&nbsp;&nbsp;&nbsp;return RouteMap;</div><div class='line' id='LC11738'><br/></div><div class='line' id='LC11739'>&nbsp;&nbsp;})();</div><div class='line' id='LC11740'><br/></div><div class='line' id='LC11741'>}).call(this);</div><div class='line' id='LC11742'><br/></div><div class='line' id='LC11743'>(function() {</div><div class='line' id='LC11744'>&nbsp;&nbsp;var __slice = [].slice;</div><div class='line' id='LC11745'><br/></div><div class='line' id='LC11746'>&nbsp;&nbsp;Batman.RouteMapBuilder = (function() {</div><div class='line' id='LC11747'><br/></div><div class='line' id='LC11748'>&nbsp;&nbsp;&nbsp;&nbsp;RouteMapBuilder.BUILDER_FUNCTIONS = [&#39;resources&#39;, &#39;member&#39;, &#39;collection&#39;, &#39;route&#39;, &#39;root&#39;];</div><div class='line' id='LC11749'><br/></div><div class='line' id='LC11750'>&nbsp;&nbsp;&nbsp;&nbsp;RouteMapBuilder.ROUTES = {</div><div class='line' id='LC11751'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index: {</div><div class='line' id='LC11752'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cardinality: &#39;collection&#39;,</div><div class='line' id='LC11753'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path: function(resource) {</div><div class='line' id='LC11754'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return resource;</div><div class='line' id='LC11755'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC11756'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: function(resource) {</div><div class='line' id='LC11757'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return resource;</div><div class='line' id='LC11758'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11759'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC11760'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;new&quot;: {</div><div class='line' id='LC11761'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cardinality: &#39;collection&#39;,</div><div class='line' id='LC11762'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path: function(resource) {</div><div class='line' id='LC11763'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;&quot; + resource + &quot;/new&quot;;</div><div class='line' id='LC11764'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC11765'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: function(resource) {</div><div class='line' id='LC11766'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;&quot; + resource + &quot;.new&quot;;</div><div class='line' id='LC11767'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11768'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC11769'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;show: {</div><div class='line' id='LC11770'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cardinality: &#39;member&#39;,</div><div class='line' id='LC11771'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path: function(resource) {</div><div class='line' id='LC11772'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;&quot; + resource + &quot;/:id&quot;;</div><div class='line' id='LC11773'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC11774'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: function(resource) {</div><div class='line' id='LC11775'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return resource;</div><div class='line' id='LC11776'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11777'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC11778'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edit: {</div><div class='line' id='LC11779'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cardinality: &#39;member&#39;,</div><div class='line' id='LC11780'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path: function(resource) {</div><div class='line' id='LC11781'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;&quot; + resource + &quot;/:id/edit&quot;;</div><div class='line' id='LC11782'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC11783'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: function(resource) {</div><div class='line' id='LC11784'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;&quot; + resource + &quot;.edit&quot;;</div><div class='line' id='LC11785'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11786'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC11787'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;collection: {</div><div class='line' id='LC11788'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cardinality: &#39;collection&#39;,</div><div class='line' id='LC11789'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path: function(resource, name) {</div><div class='line' id='LC11790'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;&quot; + resource + &quot;/&quot; + name;</div><div class='line' id='LC11791'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC11792'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: function(resource, name) {</div><div class='line' id='LC11793'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;&quot; + resource + &quot;.&quot; + name;</div><div class='line' id='LC11794'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11795'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC11796'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;member: {</div><div class='line' id='LC11797'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cardinality: &#39;member&#39;,</div><div class='line' id='LC11798'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path: function(resource, name) {</div><div class='line' id='LC11799'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;&quot; + resource + &quot;/:id/&quot; + name;</div><div class='line' id='LC11800'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC11801'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: function(resource, name) {</div><div class='line' id='LC11802'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;&quot; + resource + &quot;.&quot; + name;</div><div class='line' id='LC11803'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11804'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11805'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11806'><br/></div><div class='line' id='LC11807'>&nbsp;&nbsp;&nbsp;&nbsp;function RouteMapBuilder(app, routeMap, parent, baseOptions) {</div><div class='line' id='LC11808'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.app = app;</div><div class='line' id='LC11809'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.routeMap = routeMap;</div><div class='line' id='LC11810'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.parent = parent;</div><div class='line' id='LC11811'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.baseOptions = baseOptions != null ? baseOptions : {};</div><div class='line' id='LC11812'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.parent) {</div><div class='line' id='LC11813'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.rootPath = this.parent._nestingPath();</div><div class='line' id='LC11814'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.rootName = this.parent._nestingName();</div><div class='line' id='LC11815'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11816'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.rootPath = &#39;&#39;;</div><div class='line' id='LC11817'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.rootName = &#39;&#39;;</div><div class='line' id='LC11818'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11819'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11820'><br/></div><div class='line' id='LC11821'>&nbsp;&nbsp;&nbsp;&nbsp;RouteMapBuilder.prototype.resources = function() {</div><div class='line' id='LC11822'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var action, actions, arg, args, as, callback, childBuilder, controller, included, k, options, path, resourceName, resourceNames, resourceRoot, routeOptions, routeTemplate, v, _i, _j, _k, _len, _len1, _len2, _ref, _ref1;</div><div class='line' id='LC11823'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC11824'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resourceNames = (function() {</div><div class='line' id='LC11825'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _i, _len, _results;</div><div class='line' id='LC11826'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC11827'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = args.length; _i &lt; _len; _i++) {</div><div class='line' id='LC11828'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arg = args[_i];</div><div class='line' id='LC11829'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof arg === &#39;string&#39;) {</div><div class='line' id='LC11830'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(arg);</div><div class='line' id='LC11831'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11832'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11833'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC11834'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})();</div><div class='line' id='LC11835'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof args[args.length - 1] === &#39;function&#39;) {</div><div class='line' id='LC11836'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback = args.pop();</div><div class='line' id='LC11837'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11838'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof args[args.length - 1] === &#39;object&#39;) {</div><div class='line' id='LC11839'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options = args.pop();</div><div class='line' id='LC11840'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11841'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options = {};</div><div class='line' id='LC11842'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11843'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actions = {</div><div class='line' id='LC11844'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index: true,</div><div class='line' id='LC11845'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;new&quot;: true,</div><div class='line' id='LC11846'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;show: true,</div><div class='line' id='LC11847'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;edit: true</div><div class='line' id='LC11848'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11849'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (options.except) {</div><div class='line' id='LC11850'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = options.except;</div><div class='line' id='LC11851'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC11852'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k = _ref[_i];</div><div class='line' id='LC11853'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actions[k] = false;</div><div class='line' id='LC11854'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11855'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete options.except;</div><div class='line' id='LC11856'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (options.only) {</div><div class='line' id='LC11857'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (k in actions) {</div><div class='line' id='LC11858'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v = actions[k];</div><div class='line' id='LC11859'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actions[k] = false;</div><div class='line' id='LC11860'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11861'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1 = options.only;</div><div class='line' id='LC11862'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_j = 0, _len1 = _ref1.length; _j &lt; _len1; _j++) {</div><div class='line' id='LC11863'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k = _ref1[_j];</div><div class='line' id='LC11864'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actions[k] = true;</div><div class='line' id='LC11865'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11866'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete options.only;</div><div class='line' id='LC11867'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11868'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_k = 0, _len2 = resourceNames.length; _k &lt; _len2; _k++) {</div><div class='line' id='LC11869'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resourceName = resourceNames[_k];</div><div class='line' id='LC11870'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resourceRoot = Batman.helpers.pluralize(resourceName);</div><div class='line' id='LC11871'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controller = Batman.helpers.camelize(resourceRoot, true);</div><div class='line' id='LC11872'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childBuilder = this._childBuilder({</div><div class='line' id='LC11873'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controller: controller</div><div class='line' id='LC11874'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC11875'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (callback != null) {</div><div class='line' id='LC11876'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback.call(childBuilder);</div><div class='line' id='LC11877'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11878'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (action in actions) {</div><div class='line' id='LC11879'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;included = actions[action];</div><div class='line' id='LC11880'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(included)) {</div><div class='line' id='LC11881'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;</div><div class='line' id='LC11882'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11883'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;routeTemplate = this.constructor.ROUTES[action];</div><div class='line' id='LC11884'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;as = routeTemplate.name(resourceRoot);</div><div class='line' id='LC11885'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path = routeTemplate.path(resourceRoot);</div><div class='line' id='LC11886'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;routeOptions = Batman.extend({</div><div class='line' id='LC11887'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;controller: controller,</div><div class='line' id='LC11888'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;action: action,</div><div class='line' id='LC11889'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path: path,</div><div class='line' id='LC11890'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;as: as</div><div class='line' id='LC11891'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, options);</div><div class='line' id='LC11892'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childBuilder[routeTemplate.cardinality](action, routeOptions);</div><div class='line' id='LC11893'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11894'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11895'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC11896'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11897'><br/></div><div class='line' id='LC11898'>&nbsp;&nbsp;&nbsp;&nbsp;RouteMapBuilder.prototype.member = function() {</div><div class='line' id='LC11899'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._addRoutesWithCardinality.apply(this, [&#39;member&#39;].concat(__slice.call(arguments)));</div><div class='line' id='LC11900'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11901'><br/></div><div class='line' id='LC11902'>&nbsp;&nbsp;&nbsp;&nbsp;RouteMapBuilder.prototype.collection = function() {</div><div class='line' id='LC11903'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._addRoutesWithCardinality.apply(this, [&#39;collection&#39;].concat(__slice.call(arguments)));</div><div class='line' id='LC11904'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11905'><br/></div><div class='line' id='LC11906'>&nbsp;&nbsp;&nbsp;&nbsp;RouteMapBuilder.prototype.root = function(signature, options) {</div><div class='line' id='LC11907'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.route(&#39;/&#39;, signature, options);</div><div class='line' id='LC11908'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11909'><br/></div><div class='line' id='LC11910'>&nbsp;&nbsp;&nbsp;&nbsp;RouteMapBuilder.prototype.route = function(path, signature, options, callback) {</div><div class='line' id='LC11911'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!callback) {</div><div class='line' id='LC11912'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof options === &#39;function&#39;) {</div><div class='line' id='LC11913'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback = options;</div><div class='line' id='LC11914'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options = void 0;</div><div class='line' id='LC11915'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (typeof signature === &#39;function&#39;) {</div><div class='line' id='LC11916'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback = signature;</div><div class='line' id='LC11917'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;signature = void 0;</div><div class='line' id='LC11918'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11919'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11920'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!options) {</div><div class='line' id='LC11921'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof signature === &#39;string&#39;) {</div><div class='line' id='LC11922'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options = {</div><div class='line' id='LC11923'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;signature: signature</div><div class='line' id='LC11924'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11925'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11926'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options = signature;</div><div class='line' id='LC11927'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11928'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options || (options = {});</div><div class='line' id='LC11929'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11930'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (signature) {</div><div class='line' id='LC11931'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.signature = signature;</div><div class='line' id='LC11932'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11933'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11934'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (callback) {</div><div class='line' id='LC11935'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.callback = callback;</div><div class='line' id='LC11936'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11937'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.as || (options.as = this._nameFromPath(path));</div><div class='line' id='LC11938'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.path = path;</div><div class='line' id='LC11939'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._addRoute(options);</div><div class='line' id='LC11940'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11941'><br/></div><div class='line' id='LC11942'>&nbsp;&nbsp;&nbsp;&nbsp;RouteMapBuilder.prototype._addRoutesWithCardinality = function() {</div><div class='line' id='LC11943'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var cardinality, name, names, options, resourceRoot, routeOptions, routeTemplate, _i, _j, _len;</div><div class='line' id='LC11944'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cardinality = arguments[0], names = 3 &lt;= arguments.length ? __slice.call(arguments, 1, _i = arguments.length - 1) : (_i = 1, []), options = arguments[_i++];</div><div class='line' id='LC11945'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof options === &#39;string&#39;) {</div><div class='line' id='LC11946'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;names.push(options);</div><div class='line' id='LC11947'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options = {};</div><div class='line' id='LC11948'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11949'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options = Batman.extend({}, this.baseOptions, options);</div><div class='line' id='LC11950'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options[cardinality] = true;</div><div class='line' id='LC11951'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;routeTemplate = this.constructor.ROUTES[cardinality];</div><div class='line' id='LC11952'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resourceRoot = Batman.helpers.underscore(options.controller);</div><div class='line' id='LC11953'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_j = 0, _len = names.length; _j &lt; _len; _j++) {</div><div class='line' id='LC11954'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name = names[_j];</div><div class='line' id='LC11955'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;routeOptions = Batman.extend({</div><div class='line' id='LC11956'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;action: name</div><div class='line' id='LC11957'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, options);</div><div class='line' id='LC11958'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (routeOptions.path == null) {</div><div class='line' id='LC11959'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;routeOptions.path = routeTemplate.path(resourceRoot, name);</div><div class='line' id='LC11960'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11961'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (routeOptions.as == null) {</div><div class='line' id='LC11962'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;routeOptions.as = routeTemplate.name(resourceRoot, name);</div><div class='line' id='LC11963'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11964'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._addRoute(routeOptions);</div><div class='line' id='LC11965'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11966'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC11967'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11968'><br/></div><div class='line' id='LC11969'>&nbsp;&nbsp;&nbsp;&nbsp;RouteMapBuilder.prototype._addRoute = function(options) {</div><div class='line' id='LC11970'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var klass, name, path, route;</div><div class='line' id='LC11971'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (options == null) {</div><div class='line' id='LC11972'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options = {};</div><div class='line' id='LC11973'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11974'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path = this.rootPath + options.path;</div><div class='line' id='LC11975'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name = this.rootName + Batman.helpers.camelize(options.as, true);</div><div class='line' id='LC11976'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete options.as;</div><div class='line' id='LC11977'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete options.path;</div><div class='line' id='LC11978'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;klass = options.callback ? Batman.CallbackActionRoute : Batman.ControllerActionRoute;</div><div class='line' id='LC11979'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.app = this.app;</div><div class='line' id='LC11980'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;route = new klass(path, options);</div><div class='line' id='LC11981'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.routeMap.addRoute(name, route);</div><div class='line' id='LC11982'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11983'><br/></div><div class='line' id='LC11984'>&nbsp;&nbsp;&nbsp;&nbsp;RouteMapBuilder.prototype._nameFromPath = function(path) {</div><div class='line' id='LC11985'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path = path.replace(Batman.Route.regexps.namedOrSplat, &#39;&#39;).replace(/\/+/g, &#39;.&#39;).replace(/(^\.)|(\.$)/g, &#39;&#39;);</div><div class='line' id='LC11986'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return path;</div><div class='line' id='LC11987'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11988'><br/></div><div class='line' id='LC11989'>&nbsp;&nbsp;&nbsp;&nbsp;RouteMapBuilder.prototype._nestingPath = function() {</div><div class='line' id='LC11990'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var nestingParam, nestingSegment;</div><div class='line' id='LC11991'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this.parent) {</div><div class='line' id='LC11992'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;&quot;;</div><div class='line' id='LC11993'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC11994'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nestingParam = &quot;:&quot; + Batman.helpers.singularize(this.baseOptions.controller) + &quot;Id&quot;;</div><div class='line' id='LC11995'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nestingSegment = Batman.helpers.underscore(this.baseOptions.controller);</div><div class='line' id='LC11996'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;&quot; + (this.parent._nestingPath()) + nestingSegment + &quot;/&quot; + nestingParam + &quot;/&quot;;</div><div class='line' id='LC11997'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC11998'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC11999'><br/></div><div class='line' id='LC12000'>&nbsp;&nbsp;&nbsp;&nbsp;RouteMapBuilder.prototype._nestingName = function() {</div><div class='line' id='LC12001'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this.parent) {</div><div class='line' id='LC12002'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;&quot;;</div><div class='line' id='LC12003'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC12004'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.parent._nestingName() + this.baseOptions.controller + &quot;.&quot;;</div><div class='line' id='LC12005'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12006'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12007'><br/></div><div class='line' id='LC12008'>&nbsp;&nbsp;&nbsp;&nbsp;RouteMapBuilder.prototype._childBuilder = function(baseOptions) {</div><div class='line' id='LC12009'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (baseOptions == null) {</div><div class='line' id='LC12010'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;baseOptions = {};</div><div class='line' id='LC12011'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12012'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.RouteMapBuilder(this.app, this.routeMap, this, baseOptions);</div><div class='line' id='LC12013'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12014'><br/></div><div class='line' id='LC12015'>&nbsp;&nbsp;&nbsp;&nbsp;return RouteMapBuilder;</div><div class='line' id='LC12016'><br/></div><div class='line' id='LC12017'>&nbsp;&nbsp;})();</div><div class='line' id='LC12018'><br/></div><div class='line' id='LC12019'>}).call(this);</div><div class='line' id='LC12020'><br/></div><div class='line' id='LC12021'>(function() {</div><div class='line' id='LC12022'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC12023'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC12024'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC12025'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC12026'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12027'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC12028'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC12029'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12030'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC12031'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC12032'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC12033'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC12034'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC12035'>&nbsp;&nbsp;&nbsp;&nbsp;__slice = [].slice;</div><div class='line' id='LC12036'><br/></div><div class='line' id='LC12037'>&nbsp;&nbsp;Batman.App = (function(_super) {</div><div class='line' id='LC12038'>&nbsp;&nbsp;&nbsp;&nbsp;var name, _fn, _i, _len, _ref, _this = this;</div><div class='line' id='LC12039'><br/></div><div class='line' id='LC12040'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(App, _super);</div><div class='line' id='LC12041'><br/></div><div class='line' id='LC12042'>&nbsp;&nbsp;&nbsp;&nbsp;function App() {</div><div class='line' id='LC12043'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return App.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC12044'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12045'><br/></div><div class='line' id='LC12046'>&nbsp;&nbsp;&nbsp;&nbsp;App.classAccessor(&#39;currentParams&#39;, {</div><div class='line' id='LC12047'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function() {</div><div class='line' id='LC12048'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.Hash;</div><div class='line' id='LC12049'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC12050'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;final&#39;: true</div><div class='line' id='LC12051'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12052'><br/></div><div class='line' id='LC12053'>&nbsp;&nbsp;&nbsp;&nbsp;App.classAccessor(&#39;paramsManager&#39;, {</div><div class='line' id='LC12054'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function() {</div><div class='line' id='LC12055'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var nav, params;</div><div class='line' id='LC12056'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(nav = this.get(&#39;navigator&#39;))) {</div><div class='line' id='LC12057'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC12058'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12059'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params = this.get(&#39;currentParams&#39;);</div><div class='line' id='LC12060'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return params.replacer = new Batman.ParamsReplacer(nav, params);</div><div class='line' id='LC12061'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC12062'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;final&#39;: true</div><div class='line' id='LC12063'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12064'><br/></div><div class='line' id='LC12065'>&nbsp;&nbsp;&nbsp;&nbsp;App.classAccessor(&#39;paramsPusher&#39;, {</div><div class='line' id='LC12066'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function() {</div><div class='line' id='LC12067'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var nav, params;</div><div class='line' id='LC12068'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(nav = this.get(&#39;navigator&#39;))) {</div><div class='line' id='LC12069'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC12070'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12071'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params = this.get(&#39;currentParams&#39;);</div><div class='line' id='LC12072'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return params.pusher = new Batman.ParamsPusher(nav, params);</div><div class='line' id='LC12073'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC12074'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;final&#39;: true</div><div class='line' id='LC12075'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12076'><br/></div><div class='line' id='LC12077'>&nbsp;&nbsp;&nbsp;&nbsp;App.classAccessor(&#39;routes&#39;, function() {</div><div class='line' id='LC12078'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.NamedRouteQuery(this.get(&#39;routeMap&#39;));</div><div class='line' id='LC12079'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12080'><br/></div><div class='line' id='LC12081'>&nbsp;&nbsp;&nbsp;&nbsp;App.classAccessor(&#39;routeMap&#39;, function() {</div><div class='line' id='LC12082'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.RouteMap;</div><div class='line' id='LC12083'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12084'><br/></div><div class='line' id='LC12085'>&nbsp;&nbsp;&nbsp;&nbsp;App.classAccessor(&#39;routeMapBuilder&#39;, function() {</div><div class='line' id='LC12086'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.RouteMapBuilder(this, this.get(&#39;routeMap&#39;));</div><div class='line' id='LC12087'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12088'><br/></div><div class='line' id='LC12089'>&nbsp;&nbsp;&nbsp;&nbsp;App.classAccessor(&#39;dispatcher&#39;, function() {</div><div class='line' id='LC12090'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.Dispatcher(this, this.get(&#39;routeMap&#39;));</div><div class='line' id='LC12091'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12092'><br/></div><div class='line' id='LC12093'>&nbsp;&nbsp;&nbsp;&nbsp;App.classAccessor(&#39;controllers&#39;, function() {</div><div class='line' id='LC12094'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&#39;dispatcher.controllers&#39;);</div><div class='line' id='LC12095'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12096'><br/></div><div class='line' id='LC12097'>&nbsp;&nbsp;&nbsp;&nbsp;App.classAccessor(&#39;_renderContext&#39;, function() {</div><div class='line' id='LC12098'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.RenderContext.base.descend(this);</div><div class='line' id='LC12099'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12100'><br/></div><div class='line' id='LC12101'>&nbsp;&nbsp;&nbsp;&nbsp;App.requirePath = &#39;&#39;;</div><div class='line' id='LC12102'><br/></div><div class='line' id='LC12103'>&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer[&quot;do&quot;](function() {</div><div class='line' id='LC12104'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var requireDeprecated;</div><div class='line' id='LC12105'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;requireDeprecated = &quot;Please use whatever means you&#39;d like to load your code before calling App.run.&quot;;</div><div class='line' id='LC12106'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;App.require = function() {</div><div class='line' id='LC12107'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var base, name, names, path, _i, _len, _this = this;</div><div class='line' id='LC12108'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path = arguments[0], names = 2 &lt;= arguments.length ? __slice.call(arguments, 1) : [];</div><div class='line' id='LC12109'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer.deprecated(&quot;App.require&quot;, requireDeprecated);</div><div class='line' id='LC12110'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;base = this.requirePath + path;</div><div class='line' id='LC12111'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = names.length; _i &lt; _len; _i++) {</div><div class='line' id='LC12112'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name = names[_i];</div><div class='line' id='LC12113'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.prevent(&#39;run&#39;);</div><div class='line' id='LC12114'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path = base + &#39;/&#39; + name + &#39;.coffee&#39;;</div><div class='line' id='LC12115'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new Batman.Request({</div><div class='line' id='LC12116'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url: path,</div><div class='line' id='LC12117'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type: &#39;html&#39;,</div><div class='line' id='LC12118'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;success: function(response) {</div><div class='line' id='LC12119'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CoffeeScript[&quot;eval&quot;](response);</div><div class='line' id='LC12120'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.allow(&#39;run&#39;);</div><div class='line' id='LC12121'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!_this.isPrevented(&#39;run&#39;)) {</div><div class='line' id='LC12122'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.fire(&#39;loaded&#39;);</div><div class='line' id='LC12123'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12124'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (_this.wantsToRun) {</div><div class='line' id='LC12125'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.run();</div><div class='line' id='LC12126'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12127'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12128'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12129'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12130'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC12131'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12132'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;App.controller = function() {</div><div class='line' id='LC12133'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var names;</div><div class='line' id='LC12134'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;names = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC12135'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer.deprecated(&quot;App.controller&quot;, requireDeprecated);</div><div class='line' id='LC12136'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;names = names.map(function(n) {</div><div class='line' id='LC12137'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return n + &#39;_controller&#39;;</div><div class='line' id='LC12138'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12139'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.require.apply(this, [&#39;controllers&#39;].concat(__slice.call(names)));</div><div class='line' id='LC12140'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12141'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;App.model = function() {</div><div class='line' id='LC12142'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer.deprecated(&quot;App.model&quot;, requireDeprecated);</div><div class='line' id='LC12143'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.require.apply(this, [&#39;models&#39;].concat(__slice.call(arguments)));</div><div class='line' id='LC12144'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12145'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return App.view = function() {</div><div class='line' id='LC12146'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer.deprecated(&quot;App.view&quot;, requireDeprecated);</div><div class='line' id='LC12147'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.require.apply(this, [&#39;views&#39;].concat(__slice.call(arguments)));</div><div class='line' id='LC12148'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12149'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12150'><br/></div><div class='line' id='LC12151'>&nbsp;&nbsp;&nbsp;&nbsp;App.layout = void 0;</div><div class='line' id='LC12152'><br/></div><div class='line' id='LC12153'>&nbsp;&nbsp;&nbsp;&nbsp;App.shouldAllowEvent = {};</div><div class='line' id='LC12154'><br/></div><div class='line' id='LC12155'>&nbsp;&nbsp;&nbsp;&nbsp;_ref = Batman.RouteMapBuilder.BUILDER_FUNCTIONS;</div><div class='line' id='LC12156'>&nbsp;&nbsp;&nbsp;&nbsp;_fn = function(name) {</div><div class='line' id='LC12157'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return App[name] = function() {</div><div class='line' id='LC12158'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref1;</div><div class='line' id='LC12159'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref1 = this.get(&#39;routeMapBuilder&#39;))[name].apply(_ref1, arguments);</div><div class='line' id='LC12160'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12161'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12162'>&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC12163'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name = _ref[_i];</div><div class='line' id='LC12164'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_fn(name);</div><div class='line' id='LC12165'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12166'><br/></div><div class='line' id='LC12167'>&nbsp;&nbsp;&nbsp;&nbsp;App.event(&#39;ready&#39;).oneShot = true;</div><div class='line' id='LC12168'><br/></div><div class='line' id='LC12169'>&nbsp;&nbsp;&nbsp;&nbsp;App.event(&#39;run&#39;).oneShot = true;</div><div class='line' id='LC12170'><br/></div><div class='line' id='LC12171'>&nbsp;&nbsp;&nbsp;&nbsp;App.run = function() {</div><div class='line' id='LC12172'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var layout, layoutClass, _this = this;</div><div class='line' id='LC12173'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Batman.currentApp) {</div><div class='line' id='LC12174'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Batman.currentApp === this) {</div><div class='line' id='LC12175'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC12176'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12177'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.currentApp.stop();</div><div class='line' id='LC12178'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12179'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.hasRun) {</div><div class='line' id='LC12180'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC12181'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12182'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.isPrevented(&#39;run&#39;)) {</div><div class='line' id='LC12183'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.wantsToRun = true;</div><div class='line' id='LC12184'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC12185'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC12186'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete this.wantsToRun;</div><div class='line' id='LC12187'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12188'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.currentApp = this;</div><div class='line' id='LC12189'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.App.set(&#39;current&#39;, this);</div><div class='line' id='LC12190'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.get(&#39;dispatcher&#39;) == null) {</div><div class='line' id='LC12191'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set(&#39;dispatcher&#39;, new Batman.Dispatcher(this, this.get(&#39;routeMap&#39;)));</div><div class='line' id='LC12192'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set(&#39;controllers&#39;, this.get(&#39;dispatcher.controllers&#39;));</div><div class='line' id='LC12193'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12194'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.get(&#39;navigator&#39;) == null) {</div><div class='line' id='LC12195'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set(&#39;navigator&#39;, Batman.Navigator.forApp(this));</div><div class='line' id='LC12196'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.on(&#39;run&#39;, function() {</div><div class='line' id='LC12197'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.navigator = _this.get(&#39;navigator&#39;);</div><div class='line' id='LC12198'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Object.keys(_this.get(&#39;dispatcher&#39;).routeMap).length &gt; 0) {</div><div class='line' id='LC12199'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.navigator.start();</div><div class='line' id='LC12200'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12201'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12202'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12203'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.observe(&#39;layout&#39;, function(layout) {</div><div class='line' id='LC12204'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return layout != null ? layout.on(&#39;ready&#39;, function() {</div><div class='line' id='LC12205'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.fire(&#39;ready&#39;);</div><div class='line' id='LC12206'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}) : void 0;</div><div class='line' id='LC12207'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12208'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout = this.get(&#39;layout&#39;);</div><div class='line' id='LC12209'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (layout) {</div><div class='line' id='LC12210'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof layout === &#39;string&#39;) {</div><div class='line' id='LC12211'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layoutClass = this[Batman.helpers.camelize(layout) + &#39;View&#39;];</div><div class='line' id='LC12212'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12213'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC12214'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (layout !== null) {</div><div class='line' id='LC12215'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layoutClass = Batman.View;</div><div class='line' id='LC12216'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12217'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12218'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (layoutClass) {</div><div class='line' id='LC12219'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout = this.set(&#39;layout&#39;, new layoutClass({</div><div class='line' id='LC12220'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;context: this,</div><div class='line' id='LC12221'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node: document</div><div class='line' id='LC12222'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC12223'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12224'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.hasRun = true;</div><div class='line' id='LC12225'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fire(&#39;run&#39;);</div><div class='line' id='LC12226'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC12227'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12228'><br/></div><div class='line' id='LC12229'>&nbsp;&nbsp;&nbsp;&nbsp;App.event(&#39;ready&#39;).oneShot = true;</div><div class='line' id='LC12230'><br/></div><div class='line' id='LC12231'>&nbsp;&nbsp;&nbsp;&nbsp;App.event(&#39;stop&#39;).oneShot = true;</div><div class='line' id='LC12232'><br/></div><div class='line' id='LC12233'>&nbsp;&nbsp;&nbsp;&nbsp;App.stop = function() {</div><div class='line' id='LC12234'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref1;</div><div class='line' id='LC12235'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref1 = this.navigator) != null) {</div><div class='line' id='LC12236'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1.stop();</div><div class='line' id='LC12237'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12238'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.navigator = null;</div><div class='line' id='LC12239'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.hasRun = false;</div><div class='line' id='LC12240'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fire(&#39;stop&#39;);</div><div class='line' id='LC12241'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC12242'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12243'><br/></div><div class='line' id='LC12244'>&nbsp;&nbsp;&nbsp;&nbsp;return App;</div><div class='line' id='LC12245'><br/></div><div class='line' id='LC12246'>&nbsp;&nbsp;}).call(this, Batman.Object);</div><div class='line' id='LC12247'><br/></div><div class='line' id='LC12248'>}).call(this);</div><div class='line' id='LC12249'><br/></div><div class='line' id='LC12250'>(function() {</div><div class='line' id='LC12251'><br/></div><div class='line' id='LC12252'>&nbsp;&nbsp;Batman.Association = (function() {</div><div class='line' id='LC12253'><br/></div><div class='line' id='LC12254'>&nbsp;&nbsp;&nbsp;&nbsp;Association.prototype.associationType = &#39;&#39;;</div><div class='line' id='LC12255'><br/></div><div class='line' id='LC12256'>&nbsp;&nbsp;&nbsp;&nbsp;Association.prototype.isPolymorphic = false;</div><div class='line' id='LC12257'><br/></div><div class='line' id='LC12258'>&nbsp;&nbsp;&nbsp;&nbsp;Association.prototype.defaultOptions = {</div><div class='line' id='LC12259'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;saveInline: true,</div><div class='line' id='LC12260'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;autoload: true,</div><div class='line' id='LC12261'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nestUrl: false</div><div class='line' id='LC12262'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12263'><br/></div><div class='line' id='LC12264'>&nbsp;&nbsp;&nbsp;&nbsp;function Association(model, label, options) {</div><div class='line' id='LC12265'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var defaultOptions, encoder, getAccessor, self;</div><div class='line' id='LC12266'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.model = model;</div><div class='line' id='LC12267'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.label = label;</div><div class='line' id='LC12268'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (options == null) {</div><div class='line' id='LC12269'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options = {};</div><div class='line' id='LC12270'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12271'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;defaultOptions = {</div><div class='line' id='LC12272'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;namespace: Batman.currentApp,</div><div class='line' id='LC12273'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: Batman.helpers.camelize(Batman.helpers.singularize(this.label))</div><div class='line' id='LC12274'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12275'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.options = Batman.extend(defaultOptions, this.defaultOptions, options);</div><div class='line' id='LC12276'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.options.nestUrl) {</div><div class='line' id='LC12277'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(this.model.urlNestsUnder != null)) {</div><div class='line' id='LC12278'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer.error(&quot;You must persist the the model &quot; + this.model.constructor.name + &quot; to use the url helpers on an association&quot;);</div><div class='line' id='LC12279'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12280'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.model.urlNestsUnder(Batman.helpers.underscore(this.getRelatedModel().get(&#39;resourceName&#39;)));</div><div class='line' id='LC12281'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12282'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.options.extend != null) {</div><div class='line' id='LC12283'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.extend(this, this.options.extend);</div><div class='line' id='LC12284'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12285'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;encoder = {</div><div class='line' id='LC12286'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;encode: this.options.saveInline ? this.encoder() : false,</div><div class='line' id='LC12287'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;decode: this.decoder()</div><div class='line' id='LC12288'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12289'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.model.encode(this.label, encoder);</div><div class='line' id='LC12290'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self = this;</div><div class='line' id='LC12291'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getAccessor = function() {</div><div class='line' id='LC12292'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return self.getAccessor.call(this, self, this.model, this.label);</div><div class='line' id='LC12293'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12294'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.model.accessor(this.label, {</div><div class='line' id='LC12295'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: getAccessor,</div><div class='line' id='LC12296'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set: model.defaultAccessor.set,</div><div class='line' id='LC12297'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unset: model.defaultAccessor.unset</div><div class='line' id='LC12298'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12299'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12300'><br/></div><div class='line' id='LC12301'>&nbsp;&nbsp;&nbsp;&nbsp;Association.prototype.getRelatedModel = function() {</div><div class='line' id='LC12302'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var className, relatedModel, scope;</div><div class='line' id='LC12303'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope = this.options.namespace || Batman.currentApp;</div><div class='line' id='LC12304'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;className = this.options.name;</div><div class='line' id='LC12305'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;relatedModel = scope != null ? scope[className] : void 0;</div><div class='line' id='LC12306'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer[&quot;do&quot;](function() {</div><div class='line' id='LC12307'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((Batman.currentApp != null) &amp;&amp; !relatedModel) {</div><div class='line' id='LC12308'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.developer.warn(&quot;Related model &quot; + className + &quot; hasn&#39;t loaded yet.&quot;);</div><div class='line' id='LC12309'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12310'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12311'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return relatedModel;</div><div class='line' id='LC12312'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12313'><br/></div><div class='line' id='LC12314'>&nbsp;&nbsp;&nbsp;&nbsp;Association.prototype.getFromAttributes = function(record) {</div><div class='line' id='LC12315'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return record.get(&quot;attributes.&quot; + this.label);</div><div class='line' id='LC12316'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12317'><br/></div><div class='line' id='LC12318'>&nbsp;&nbsp;&nbsp;&nbsp;Association.prototype.setIntoAttributes = function(record, value) {</div><div class='line' id='LC12319'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return record.get(&#39;attributes&#39;).set(this.label, value);</div><div class='line' id='LC12320'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12321'><br/></div><div class='line' id='LC12322'>&nbsp;&nbsp;&nbsp;&nbsp;Association.prototype.inverse = function() {</div><div class='line' id='LC12323'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var inverse, relatedAssocs, _this = this;</div><div class='line' id='LC12324'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (relatedAssocs = this.getRelatedModel()._batman.get(&#39;associations&#39;)) {</div><div class='line' id='LC12325'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.options.inverseOf) {</div><div class='line' id='LC12326'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return relatedAssocs.getByLabel(this.options.inverseOf);</div><div class='line' id='LC12327'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12328'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inverse = null;</div><div class='line' id='LC12329'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;relatedAssocs.forEach(function(label, assoc) {</div><div class='line' id='LC12330'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (assoc.getRelatedModel() === _this.model) {</div><div class='line' id='LC12331'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return inverse = assoc;</div><div class='line' id='LC12332'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12333'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12334'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return inverse;</div><div class='line' id='LC12335'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12336'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12337'><br/></div><div class='line' id='LC12338'>&nbsp;&nbsp;&nbsp;&nbsp;Association.prototype.reset = function() {</div><div class='line' id='LC12339'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete this.index;</div><div class='line' id='LC12340'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC12341'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12342'><br/></div><div class='line' id='LC12343'>&nbsp;&nbsp;&nbsp;&nbsp;return Association;</div><div class='line' id='LC12344'><br/></div><div class='line' id='LC12345'>&nbsp;&nbsp;})();</div><div class='line' id='LC12346'><br/></div><div class='line' id='LC12347'>}).call(this);</div><div class='line' id='LC12348'><br/></div><div class='line' id='LC12349'>(function() {</div><div class='line' id='LC12350'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC12351'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC12352'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC12353'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC12354'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12355'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC12356'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC12357'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12358'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC12359'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC12360'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC12361'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC12362'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12363'><br/></div><div class='line' id='LC12364'>&nbsp;&nbsp;Batman.PluralAssociation = (function(_super) {</div><div class='line' id='LC12365'><br/></div><div class='line' id='LC12366'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(PluralAssociation, _super);</div><div class='line' id='LC12367'><br/></div><div class='line' id='LC12368'>&nbsp;&nbsp;&nbsp;&nbsp;PluralAssociation.prototype.proxyClass = Batman.AssociationSet;</div><div class='line' id='LC12369'><br/></div><div class='line' id='LC12370'>&nbsp;&nbsp;&nbsp;&nbsp;PluralAssociation.prototype.isSingular = false;</div><div class='line' id='LC12371'><br/></div><div class='line' id='LC12372'>&nbsp;&nbsp;&nbsp;&nbsp;function PluralAssociation() {</div><div class='line' id='LC12373'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PluralAssociation.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC12374'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._resetSetHashes();</div><div class='line' id='LC12375'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12376'><br/></div><div class='line' id='LC12377'>&nbsp;&nbsp;&nbsp;&nbsp;PluralAssociation.prototype.setForRecord = function(record) {</div><div class='line' id='LC12378'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var childModelSetIndex, indexValue, _this = this;</div><div class='line' id='LC12379'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;indexValue = this.indexValueForRecord(record);</div><div class='line' id='LC12380'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childModelSetIndex = this.setIndex();</div><div class='line' id='LC12381'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.Property.withoutTracking(function() {</div><div class='line' id='LC12382'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this._setsByRecord.getOrSet(record, function() {</div><div class='line' id='LC12383'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var existingValueSet, newSet;</div><div class='line' id='LC12384'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (indexValue != null) {</div><div class='line' id='LC12385'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;existingValueSet = _this._setsByValue.get(indexValue);</div><div class='line' id='LC12386'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (existingValueSet != null) {</div><div class='line' id='LC12387'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return existingValueSet;</div><div class='line' id='LC12388'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12389'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12390'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newSet = _this.proxyClassInstanceForKey(indexValue);</div><div class='line' id='LC12391'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (indexValue != null) {</div><div class='line' id='LC12392'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this._setsByValue.set(indexValue, newSet);</div><div class='line' id='LC12393'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12394'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return newSet;</div><div class='line' id='LC12395'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12396'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12397'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (indexValue != null) {</div><div class='line' id='LC12398'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return childModelSetIndex.get(indexValue);</div><div class='line' id='LC12399'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC12400'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._setsByRecord.get(record);</div><div class='line' id='LC12401'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12402'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12403'><br/></div><div class='line' id='LC12404'>&nbsp;&nbsp;&nbsp;&nbsp;PluralAssociation.prototype.setForKey = Batman.Property.wrapTrackingPrevention(function(indexValue) {</div><div class='line' id='LC12405'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var foundSet, _this = this;</div><div class='line' id='LC12406'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foundSet = void 0;</div><div class='line' id='LC12407'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._setsByRecord.forEach(function(record, set) {</div><div class='line' id='LC12408'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (foundSet != null) {</div><div class='line' id='LC12409'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC12410'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12411'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (_this.indexValueForRecord(record) === indexValue) {</div><div class='line' id='LC12412'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return foundSet = set;</div><div class='line' id='LC12413'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12414'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12415'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (foundSet != null) {</div><div class='line' id='LC12416'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foundSet.foreignKeyValue = indexValue;</div><div class='line' id='LC12417'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return foundSet;</div><div class='line' id='LC12418'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12419'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._setsByValue.getOrSet(indexValue, function() {</div><div class='line' id='LC12420'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.proxyClassInstanceForKey(indexValue);</div><div class='line' id='LC12421'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12422'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12423'><br/></div><div class='line' id='LC12424'>&nbsp;&nbsp;&nbsp;&nbsp;PluralAssociation.prototype.proxyClassInstanceForKey = function(indexValue) {</div><div class='line' id='LC12425'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new this.proxyClass(indexValue, this);</div><div class='line' id='LC12426'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12427'><br/></div><div class='line' id='LC12428'>&nbsp;&nbsp;&nbsp;&nbsp;PluralAssociation.prototype.getAccessor = function(self, model, label) {</div><div class='line' id='LC12429'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var relatedRecords, setInAttributes, _this = this;</div><div class='line' id='LC12430'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!self.getRelatedModel()) {</div><div class='line' id='LC12431'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC12432'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12433'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (setInAttributes = self.getFromAttributes(this)) {</div><div class='line' id='LC12434'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return setInAttributes;</div><div class='line' id='LC12435'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC12436'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;relatedRecords = self.setForRecord(this);</div><div class='line' id='LC12437'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.setIntoAttributes(this, relatedRecords);</div><div class='line' id='LC12438'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.Property.withoutTracking(function() {</div><div class='line' id='LC12439'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (self.options.autoload &amp;&amp; !_this.isNew() &amp;&amp; !relatedRecords.loaded) {</div><div class='line' id='LC12440'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return relatedRecords.load(function(error, records) {</div><div class='line' id='LC12441'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (error) {</div><div class='line' id='LC12442'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw error;</div><div class='line' id='LC12443'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12444'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12445'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12446'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12447'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return relatedRecords;</div><div class='line' id='LC12448'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12449'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12450'><br/></div><div class='line' id='LC12451'>&nbsp;&nbsp;&nbsp;&nbsp;PluralAssociation.prototype.parentSetIndex = function() {</div><div class='line' id='LC12452'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.parentIndex || (this.parentIndex = this.model.get(&#39;loaded&#39;).indexedByUnique(this.primaryKey));</div><div class='line' id='LC12453'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.parentIndex;</div><div class='line' id='LC12454'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12455'><br/></div><div class='line' id='LC12456'>&nbsp;&nbsp;&nbsp;&nbsp;PluralAssociation.prototype.setIndex = function() {</div><div class='line' id='LC12457'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.index || (this.index = new Batman.AssociationSetIndex(this, this[this.indexRelatedModelOn]));</div><div class='line' id='LC12458'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.index;</div><div class='line' id='LC12459'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12460'><br/></div><div class='line' id='LC12461'>&nbsp;&nbsp;&nbsp;&nbsp;PluralAssociation.prototype.indexValueForRecord = function(record) {</div><div class='line' id='LC12462'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return record.get(this.primaryKey);</div><div class='line' id='LC12463'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12464'><br/></div><div class='line' id='LC12465'>&nbsp;&nbsp;&nbsp;&nbsp;PluralAssociation.prototype.reset = function() {</div><div class='line' id='LC12466'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PluralAssociation.__super__.reset.apply(this, arguments);</div><div class='line' id='LC12467'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._resetSetHashes();</div><div class='line' id='LC12468'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12469'><br/></div><div class='line' id='LC12470'>&nbsp;&nbsp;&nbsp;&nbsp;PluralAssociation.prototype._resetSetHashes = function() {</div><div class='line' id='LC12471'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._setsByRecord = new Batman.SimpleHash;</div><div class='line' id='LC12472'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._setsByValue = new Batman.SimpleHash;</div><div class='line' id='LC12473'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12474'><br/></div><div class='line' id='LC12475'>&nbsp;&nbsp;&nbsp;&nbsp;return PluralAssociation;</div><div class='line' id='LC12476'><br/></div><div class='line' id='LC12477'>&nbsp;&nbsp;})(Batman.Association);</div><div class='line' id='LC12478'><br/></div><div class='line' id='LC12479'>}).call(this);</div><div class='line' id='LC12480'><br/></div><div class='line' id='LC12481'>(function() {</div><div class='line' id='LC12482'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC12483'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC12484'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC12485'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC12486'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12487'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC12488'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC12489'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12490'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC12491'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC12492'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC12493'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC12494'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12495'><br/></div><div class='line' id='LC12496'>&nbsp;&nbsp;Batman.HasManyAssociation = (function(_super) {</div><div class='line' id='LC12497'><br/></div><div class='line' id='LC12498'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(HasManyAssociation, _super);</div><div class='line' id='LC12499'><br/></div><div class='line' id='LC12500'>&nbsp;&nbsp;&nbsp;&nbsp;HasManyAssociation.prototype.associationType = &#39;hasMany&#39;;</div><div class='line' id='LC12501'><br/></div><div class='line' id='LC12502'>&nbsp;&nbsp;&nbsp;&nbsp;HasManyAssociation.prototype.indexRelatedModelOn = &#39;foreignKey&#39;;</div><div class='line' id='LC12503'><br/></div><div class='line' id='LC12504'>&nbsp;&nbsp;&nbsp;&nbsp;function HasManyAssociation(model, label, options) {</div><div class='line' id='LC12505'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (options != null ? options.as : void 0) {</div><div class='line' id='LC12506'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (function(func, args, ctor) {</div><div class='line' id='LC12507'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = func.prototype;</div><div class='line' id='LC12508'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var child = new ctor,</div><div class='line' id='LC12509'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = func.apply(child, args),</div><div class='line' id='LC12510'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t = typeof result;</div><div class='line' id='LC12511'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return t == &quot;object&quot; || t == &quot;function&quot; ? result || child : child;</div><div class='line' id='LC12512'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})(Batman.PolymorphicHasManyAssociation, arguments, function() {});</div><div class='line' id='LC12513'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12514'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HasManyAssociation.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC12515'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.primaryKey = this.options.primaryKey || &quot;id&quot;;</div><div class='line' id='LC12516'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.foreignKey = this.options.foreignKey || (&quot;&quot; + (Batman.helpers.underscore(model.get(&#39;resourceName&#39;))) + &quot;_id&quot;);</div><div class='line' id='LC12517'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12518'><br/></div><div class='line' id='LC12519'>&nbsp;&nbsp;&nbsp;&nbsp;HasManyAssociation.prototype.apply = function(baseSaveError, base) {</div><div class='line' id='LC12520'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var relations, set, _this = this;</div><div class='line' id='LC12521'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!baseSaveError) {</div><div class='line' id='LC12522'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (relations = this.getFromAttributes(base)) {</div><div class='line' id='LC12523'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;relations.forEach(function(model) {</div><div class='line' id='LC12524'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return model.set(_this.foreignKey, base.get(_this.primaryKey));</div><div class='line' id='LC12525'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12526'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12527'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;base.set(this.label, set = this.setForRecord(base));</div><div class='line' id='LC12528'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (base.lifecycle.get(&#39;state&#39;) === &#39;creating&#39;) {</div><div class='line' id='LC12529'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return set.markAsLoaded();</div><div class='line' id='LC12530'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12531'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12532'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12533'><br/></div><div class='line' id='LC12534'>&nbsp;&nbsp;&nbsp;&nbsp;HasManyAssociation.prototype.encoder = function() {</div><div class='line' id='LC12535'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var association;</div><div class='line' id='LC12536'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;association = this;</div><div class='line' id='LC12537'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function(relationSet, _, __, record) {</div><div class='line' id='LC12538'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var jsonArray;</div><div class='line' id='LC12539'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (relationSet != null) {</div><div class='line' id='LC12540'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jsonArray = [];</div><div class='line' id='LC12541'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;relationSet.forEach(function(relation) {</div><div class='line' id='LC12542'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var relationJSON;</div><div class='line' id='LC12543'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;relationJSON = relation.toJSON();</div><div class='line' id='LC12544'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!association.inverse() || association.inverse().options.encodeForeignKey) {</div><div class='line' id='LC12545'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;relationJSON[association.foreignKey] = record.get(association.primaryKey);</div><div class='line' id='LC12546'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12547'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return jsonArray.push(relationJSON);</div><div class='line' id='LC12548'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12549'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12550'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return jsonArray;</div><div class='line' id='LC12551'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12552'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12553'><br/></div><div class='line' id='LC12554'>&nbsp;&nbsp;&nbsp;&nbsp;HasManyAssociation.prototype.decoder = function() {</div><div class='line' id='LC12555'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var association;</div><div class='line' id='LC12556'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;association = this;</div><div class='line' id='LC12557'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function(data, key, _, __, parentRecord) {</div><div class='line' id='LC12558'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var existingRecord, existingRelations, jsonObject, newRelations, record, relatedModel, savedRecord, _i, _len;</div><div class='line' id='LC12559'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (relatedModel = association.getRelatedModel()) {</div><div class='line' id='LC12560'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;existingRelations = association.getFromAttributes(parentRecord) || association.setForRecord(parentRecord);</div><div class='line' id='LC12561'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newRelations = existingRelations.filter(function(relation) {</div><div class='line' id='LC12562'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return relation.isNew();</div><div class='line' id='LC12563'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}).toArray();</div><div class='line' id='LC12564'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = data.length; _i &lt; _len; _i++) {</div><div class='line' id='LC12565'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jsonObject = data[_i];</div><div class='line' id='LC12566'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record = new relatedModel();</div><div class='line' id='LC12567'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record._withoutDirtyTracking(function() {</div><div class='line' id='LC12568'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.fromJSON(jsonObject);</div><div class='line' id='LC12569'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12570'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;existingRecord = relatedModel.get(&#39;loaded&#39;).indexedByUnique(&#39;id&#39;).get(record.get(&#39;id&#39;));</div><div class='line' id='LC12571'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (existingRecord != null) {</div><div class='line' id='LC12572'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;existingRecord._withoutDirtyTracking(function() {</div><div class='line' id='LC12573'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.fromJSON(jsonObject);</div><div class='line' id='LC12574'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12575'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record = existingRecord;</div><div class='line' id='LC12576'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC12577'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (newRelations.length &gt; 0) {</div><div class='line' id='LC12578'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;savedRecord = newRelations.shift();</div><div class='line' id='LC12579'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;savedRecord._withoutDirtyTracking(function() {</div><div class='line' id='LC12580'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.fromJSON(jsonObject);</div><div class='line' id='LC12581'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12582'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record = savedRecord;</div><div class='line' id='LC12583'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12584'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12585'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record = relatedModel._mapIdentity(record);</div><div class='line' id='LC12586'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;existingRelations.add(record);</div><div class='line' id='LC12587'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (association.options.inverseOf) {</div><div class='line' id='LC12588'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record.set(association.options.inverseOf, parentRecord);</div><div class='line' id='LC12589'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12590'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12591'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;existingRelations.markAsLoaded();</div><div class='line' id='LC12592'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC12593'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer.error(&quot;Can&#39;t decode model &quot; + association.options.name + &quot; because it hasn&#39;t been loaded yet!&quot;);</div><div class='line' id='LC12594'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12595'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return existingRelations;</div><div class='line' id='LC12596'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12597'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12598'><br/></div><div class='line' id='LC12599'>&nbsp;&nbsp;&nbsp;&nbsp;return HasManyAssociation;</div><div class='line' id='LC12600'><br/></div><div class='line' id='LC12601'>&nbsp;&nbsp;})(Batman.PluralAssociation);</div><div class='line' id='LC12602'><br/></div><div class='line' id='LC12603'>}).call(this);</div><div class='line' id='LC12604'><br/></div><div class='line' id='LC12605'>(function() {</div><div class='line' id='LC12606'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC12607'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC12608'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC12609'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC12610'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12611'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC12612'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC12613'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12614'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC12615'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC12616'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC12617'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC12618'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12619'><br/></div><div class='line' id='LC12620'>&nbsp;&nbsp;Batman.PolymorphicHasManyAssociation = (function(_super) {</div><div class='line' id='LC12621'><br/></div><div class='line' id='LC12622'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(PolymorphicHasManyAssociation, _super);</div><div class='line' id='LC12623'><br/></div><div class='line' id='LC12624'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicHasManyAssociation.prototype.proxyClass = Batman.PolymorphicAssociationSet;</div><div class='line' id='LC12625'><br/></div><div class='line' id='LC12626'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicHasManyAssociation.prototype.isPolymorphic = true;</div><div class='line' id='LC12627'><br/></div><div class='line' id='LC12628'>&nbsp;&nbsp;&nbsp;&nbsp;function PolymorphicHasManyAssociation(model, label, options) {</div><div class='line' id='LC12629'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.inverseOf = this.foreignLabel = options.as;</div><div class='line' id='LC12630'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete options.as;</div><div class='line' id='LC12631'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.foreignKey || (options.foreignKey = &quot;&quot; + this.foreignLabel + &quot;_id&quot;);</div><div class='line' id='LC12632'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicHasManyAssociation.__super__.constructor.call(this, model, label, options);</div><div class='line' id='LC12633'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.foreignTypeKey = options.foreignTypeKey || (&quot;&quot; + this.foreignLabel + &quot;_type&quot;);</div><div class='line' id='LC12634'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.model.encode(this.foreignTypeKey);</div><div class='line' id='LC12635'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12636'><br/></div><div class='line' id='LC12637'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicHasManyAssociation.prototype.apply = function(baseSaveError, base) {</div><div class='line' id='LC12638'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var relations, _this = this;</div><div class='line' id='LC12639'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!baseSaveError) {</div><div class='line' id='LC12640'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (relations = this.getFromAttributes(base)) {</div><div class='line' id='LC12641'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicHasManyAssociation.__super__.apply.apply(this, arguments);</div><div class='line' id='LC12642'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;relations.forEach(function(model) {</div><div class='line' id='LC12643'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return model.set(_this.foreignTypeKey, _this.modelType());</div><div class='line' id='LC12644'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12645'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12646'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12647'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC12648'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12649'><br/></div><div class='line' id='LC12650'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicHasManyAssociation.prototype.proxyClassInstanceForKey = function(indexValue) {</div><div class='line' id='LC12651'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new this.proxyClass(indexValue, this.modelType(), this);</div><div class='line' id='LC12652'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12653'><br/></div><div class='line' id='LC12654'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicHasManyAssociation.prototype.getRelatedModelForType = function(type) {</div><div class='line' id='LC12655'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var relatedModel, scope;</div><div class='line' id='LC12656'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope = this.options.namespace || Batman.currentApp;</div><div class='line' id='LC12657'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (type) {</div><div class='line' id='LC12658'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;relatedModel = scope != null ? scope[type] : void 0;</div><div class='line' id='LC12659'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;relatedModel || (relatedModel = scope != null ? scope[Batman.helpers.camelize(type)] : void 0);</div><div class='line' id='LC12660'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC12661'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;relatedModel = this.getRelatedModel();</div><div class='line' id='LC12662'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12663'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer[&quot;do&quot;](function() {</div><div class='line' id='LC12664'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((Batman.currentApp != null) &amp;&amp; !relatedModel) {</div><div class='line' id='LC12665'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.developer.warn(&quot;Related model &quot; + type + &quot; for polymorphic association not found.&quot;);</div><div class='line' id='LC12666'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12667'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12668'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return relatedModel;</div><div class='line' id='LC12669'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12670'><br/></div><div class='line' id='LC12671'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicHasManyAssociation.prototype.modelType = function() {</div><div class='line' id='LC12672'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.model.get(&#39;resourceName&#39;);</div><div class='line' id='LC12673'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12674'><br/></div><div class='line' id='LC12675'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicHasManyAssociation.prototype.setIndex = function() {</div><div class='line' id='LC12676'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.typeIndex || (this.typeIndex = new Batman.PolymorphicAssociationSetIndex(this, this.modelType(), this[this.indexRelatedModelOn]));</div><div class='line' id='LC12677'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.typeIndex;</div><div class='line' id='LC12678'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12679'><br/></div><div class='line' id='LC12680'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicHasManyAssociation.prototype.encoder = function() {</div><div class='line' id='LC12681'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var association;</div><div class='line' id='LC12682'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;association = this;</div><div class='line' id='LC12683'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function(relationSet, _, __, record) {</div><div class='line' id='LC12684'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var jsonArray;</div><div class='line' id='LC12685'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (relationSet != null) {</div><div class='line' id='LC12686'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jsonArray = [];</div><div class='line' id='LC12687'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;relationSet.forEach(function(relation) {</div><div class='line' id='LC12688'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var relationJSON;</div><div class='line' id='LC12689'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;relationJSON = relation.toJSON();</div><div class='line' id='LC12690'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;relationJSON[association.foreignKey] = record.get(association.primaryKey);</div><div class='line' id='LC12691'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;relationJSON[association.foreignTypeKey] = association.modelType();</div><div class='line' id='LC12692'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return jsonArray.push(relationJSON);</div><div class='line' id='LC12693'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12694'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12695'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return jsonArray;</div><div class='line' id='LC12696'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12697'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12698'><br/></div><div class='line' id='LC12699'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicHasManyAssociation.prototype.decoder = function() {</div><div class='line' id='LC12700'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var association;</div><div class='line' id='LC12701'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;association = this;</div><div class='line' id='LC12702'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function(data, key, _, __, parentRecord) {</div><div class='line' id='LC12703'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var existingRecord, existingRelations, jsonObject, newRelations, record, relatedModel, savedRecord, subType, type, _i, _len;</div><div class='line' id='LC12704'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (relatedModel = association.getRelatedModel()) {</div><div class='line' id='LC12705'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;existingRelations = association.getFromAttributes(parentRecord) || association.setForRecord(parentRecord);</div><div class='line' id='LC12706'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newRelations = existingRelations.filter(function(relation) {</div><div class='line' id='LC12707'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return relation.isNew();</div><div class='line' id='LC12708'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}).toArray();</div><div class='line' id='LC12709'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = data.length; _i &lt; _len; _i++) {</div><div class='line' id='LC12710'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jsonObject = data[_i];</div><div class='line' id='LC12711'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type = jsonObject[association.options.foreignTypeKey];</div><div class='line' id='LC12712'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;subType = association.getRelatedModelForType(type);</div><div class='line' id='LC12713'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record = new subType();</div><div class='line' id='LC12714'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record._withoutDirtyTracking(function() {</div><div class='line' id='LC12715'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.fromJSON(jsonObject);</div><div class='line' id='LC12716'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12717'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;existingRecord = relatedModel.get(&#39;loaded&#39;).indexedByUnique(&#39;id&#39;).get(record.get(&#39;id&#39;));</div><div class='line' id='LC12718'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (existingRecord != null) {</div><div class='line' id='LC12719'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;existingRecord._withoutDirtyTracking(function() {</div><div class='line' id='LC12720'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.fromJSON(jsonObject);</div><div class='line' id='LC12721'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12722'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record = existingRecord;</div><div class='line' id='LC12723'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC12724'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (newRelations.length &gt; 0) {</div><div class='line' id='LC12725'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;savedRecord = newRelations.shift();</div><div class='line' id='LC12726'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;savedRecord._withoutDirtyTracking(function() {</div><div class='line' id='LC12727'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.fromJSON(jsonObject);</div><div class='line' id='LC12728'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12729'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record = savedRecord;</div><div class='line' id='LC12730'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12731'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12732'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record = relatedModel._mapIdentity(record);</div><div class='line' id='LC12733'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;existingRelations.add(record);</div><div class='line' id='LC12734'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (association.options.inverseOf) {</div><div class='line' id='LC12735'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record.set(association.options.inverseOf, parentRecord);</div><div class='line' id='LC12736'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12737'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12738'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;existingRelations.markAsLoaded();</div><div class='line' id='LC12739'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC12740'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer.error(&quot;Can&#39;t decode model &quot; + association.options.name + &quot; because it hasn&#39;t been loaded yet!&quot;);</div><div class='line' id='LC12741'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12742'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return existingRelations;</div><div class='line' id='LC12743'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12744'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12745'><br/></div><div class='line' id='LC12746'>&nbsp;&nbsp;&nbsp;&nbsp;return PolymorphicHasManyAssociation;</div><div class='line' id='LC12747'><br/></div><div class='line' id='LC12748'>&nbsp;&nbsp;})(Batman.HasManyAssociation);</div><div class='line' id='LC12749'><br/></div><div class='line' id='LC12750'>}).call(this);</div><div class='line' id='LC12751'><br/></div><div class='line' id='LC12752'>(function() {</div><div class='line' id='LC12753'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC12754'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC12755'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC12756'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC12757'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12758'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC12759'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC12760'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12761'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC12762'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC12763'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC12764'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC12765'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12766'><br/></div><div class='line' id='LC12767'>&nbsp;&nbsp;Batman.SingularAssociation = (function(_super) {</div><div class='line' id='LC12768'><br/></div><div class='line' id='LC12769'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(SingularAssociation, _super);</div><div class='line' id='LC12770'><br/></div><div class='line' id='LC12771'>&nbsp;&nbsp;&nbsp;&nbsp;function SingularAssociation() {</div><div class='line' id='LC12772'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return SingularAssociation.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC12773'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12774'><br/></div><div class='line' id='LC12775'>&nbsp;&nbsp;&nbsp;&nbsp;SingularAssociation.prototype.isSingular = true;</div><div class='line' id='LC12776'><br/></div><div class='line' id='LC12777'>&nbsp;&nbsp;&nbsp;&nbsp;SingularAssociation.prototype.getAccessor = function(self, model, label) {</div><div class='line' id='LC12778'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var parent, proxy, record, recordInAttributes, _ref;</div><div class='line' id='LC12779'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (recordInAttributes = self.getFromAttributes(this)) {</div><div class='line' id='LC12780'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return recordInAttributes;</div><div class='line' id='LC12781'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12782'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (self.getRelatedModel()) {</div><div class='line' id='LC12783'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proxy = this.associationProxy(self);</div><div class='line' id='LC12784'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record = false;</div><div class='line' id='LC12785'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parent = this;</div><div class='line' id='LC12786'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = proxy._loadSetter) == null) {</div><div class='line' id='LC12787'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proxy._loadSetter = proxy.once(&#39;loaded&#39;, function(child) {</div><div class='line' id='LC12788'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return parent._withoutDirtyTracking(function() {</div><div class='line' id='LC12789'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.set(self.label, child);</div><div class='line' id='LC12790'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12791'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12792'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12793'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!Batman.Property.withoutTracking(function() {</div><div class='line' id='LC12794'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return proxy.get(&#39;loaded&#39;);</div><div class='line' id='LC12795'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})) {</div><div class='line' id='LC12796'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (self.options.autoload) {</div><div class='line' id='LC12797'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.Property.withoutTracking(function() {</div><div class='line' id='LC12798'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return proxy.load();</div><div class='line' id='LC12799'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC12800'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC12801'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record = proxy.loadFromLocal();</div><div class='line' id='LC12802'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12803'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12804'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return record || proxy;</div><div class='line' id='LC12805'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12806'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12807'><br/></div><div class='line' id='LC12808'>&nbsp;&nbsp;&nbsp;&nbsp;SingularAssociation.prototype.setIndex = function() {</div><div class='line' id='LC12809'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.index || (this.index = new Batman.UniqueAssociationSetIndex(this, this[this.indexRelatedModelOn]));</div><div class='line' id='LC12810'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.index;</div><div class='line' id='LC12811'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12812'><br/></div><div class='line' id='LC12813'>&nbsp;&nbsp;&nbsp;&nbsp;return SingularAssociation;</div><div class='line' id='LC12814'><br/></div><div class='line' id='LC12815'>&nbsp;&nbsp;})(Batman.Association);</div><div class='line' id='LC12816'><br/></div><div class='line' id='LC12817'>}).call(this);</div><div class='line' id='LC12818'><br/></div><div class='line' id='LC12819'>(function() {</div><div class='line' id='LC12820'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC12821'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC12822'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC12823'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC12824'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12825'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC12826'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC12827'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12828'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC12829'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC12830'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC12831'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC12832'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12833'><br/></div><div class='line' id='LC12834'>&nbsp;&nbsp;Batman.HasOneAssociation = (function(_super) {</div><div class='line' id='LC12835'><br/></div><div class='line' id='LC12836'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(HasOneAssociation, _super);</div><div class='line' id='LC12837'><br/></div><div class='line' id='LC12838'>&nbsp;&nbsp;&nbsp;&nbsp;HasOneAssociation.prototype.associationType = &#39;hasOne&#39;;</div><div class='line' id='LC12839'><br/></div><div class='line' id='LC12840'>&nbsp;&nbsp;&nbsp;&nbsp;HasOneAssociation.prototype.proxyClass = Batman.HasOneProxy;</div><div class='line' id='LC12841'><br/></div><div class='line' id='LC12842'>&nbsp;&nbsp;&nbsp;&nbsp;HasOneAssociation.prototype.indexRelatedModelOn = &#39;foreignKey&#39;;</div><div class='line' id='LC12843'><br/></div><div class='line' id='LC12844'>&nbsp;&nbsp;&nbsp;&nbsp;function HasOneAssociation() {</div><div class='line' id='LC12845'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HasOneAssociation.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC12846'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.primaryKey = this.options.primaryKey || &quot;id&quot;;</div><div class='line' id='LC12847'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.foreignKey = this.options.foreignKey || (&quot;&quot; + (Batman.helpers.underscore(this.model.get(&#39;resourceName&#39;))) + &quot;_id&quot;);</div><div class='line' id='LC12848'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12849'><br/></div><div class='line' id='LC12850'>&nbsp;&nbsp;&nbsp;&nbsp;HasOneAssociation.prototype.apply = function(baseSaveError, base) {</div><div class='line' id='LC12851'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var relation;</div><div class='line' id='LC12852'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (relation = this.getFromAttributes(base)) {</div><div class='line' id='LC12853'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return relation.set(this.foreignKey, base.get(this.primaryKey));</div><div class='line' id='LC12854'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12855'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12856'><br/></div><div class='line' id='LC12857'>&nbsp;&nbsp;&nbsp;&nbsp;HasOneAssociation.prototype.encoder = function() {</div><div class='line' id='LC12858'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var association;</div><div class='line' id='LC12859'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;association = this;</div><div class='line' id='LC12860'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function(val, key, object, record) {</div><div class='line' id='LC12861'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var json;</div><div class='line' id='LC12862'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!association.options.saveInline) {</div><div class='line' id='LC12863'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC12864'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12865'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (json = val.toJSON()) {</div><div class='line' id='LC12866'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;json[association.foreignKey] = record.get(association.primaryKey);</div><div class='line' id='LC12867'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12868'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return json;</div><div class='line' id='LC12869'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12870'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12871'><br/></div><div class='line' id='LC12872'>&nbsp;&nbsp;&nbsp;&nbsp;HasOneAssociation.prototype.decoder = function() {</div><div class='line' id='LC12873'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var association;</div><div class='line' id='LC12874'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;association = this;</div><div class='line' id='LC12875'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function(data, _, __, ___, parentRecord) {</div><div class='line' id='LC12876'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var record, relatedModel;</div><div class='line' id='LC12877'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!data) {</div><div class='line' id='LC12878'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC12879'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12880'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;relatedModel = association.getRelatedModel();</div><div class='line' id='LC12881'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record = relatedModel.createFromJSON(data);</div><div class='line' id='LC12882'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (association.options.inverseOf) {</div><div class='line' id='LC12883'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record.set(association.options.inverseOf, parentRecord);</div><div class='line' id='LC12884'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12885'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return record;</div><div class='line' id='LC12886'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12887'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12888'><br/></div><div class='line' id='LC12889'>&nbsp;&nbsp;&nbsp;&nbsp;return HasOneAssociation;</div><div class='line' id='LC12890'><br/></div><div class='line' id='LC12891'>&nbsp;&nbsp;})(Batman.SingularAssociation);</div><div class='line' id='LC12892'><br/></div><div class='line' id='LC12893'>}).call(this);</div><div class='line' id='LC12894'><br/></div><div class='line' id='LC12895'>(function() {</div><div class='line' id='LC12896'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC12897'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC12898'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC12899'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC12900'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12901'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC12902'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC12903'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12904'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC12905'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC12906'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC12907'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC12908'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12909'><br/></div><div class='line' id='LC12910'>&nbsp;&nbsp;Batman.BelongsToAssociation = (function(_super) {</div><div class='line' id='LC12911'><br/></div><div class='line' id='LC12912'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(BelongsToAssociation, _super);</div><div class='line' id='LC12913'><br/></div><div class='line' id='LC12914'>&nbsp;&nbsp;&nbsp;&nbsp;BelongsToAssociation.prototype.associationType = &#39;belongsTo&#39;;</div><div class='line' id='LC12915'><br/></div><div class='line' id='LC12916'>&nbsp;&nbsp;&nbsp;&nbsp;BelongsToAssociation.prototype.proxyClass = Batman.BelongsToProxy;</div><div class='line' id='LC12917'><br/></div><div class='line' id='LC12918'>&nbsp;&nbsp;&nbsp;&nbsp;BelongsToAssociation.prototype.indexRelatedModelOn = &#39;primaryKey&#39;;</div><div class='line' id='LC12919'><br/></div><div class='line' id='LC12920'>&nbsp;&nbsp;&nbsp;&nbsp;BelongsToAssociation.prototype.defaultOptions = {</div><div class='line' id='LC12921'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;saveInline: false,</div><div class='line' id='LC12922'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;autoload: true,</div><div class='line' id='LC12923'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;encodeForeignKey: true</div><div class='line' id='LC12924'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12925'><br/></div><div class='line' id='LC12926'>&nbsp;&nbsp;&nbsp;&nbsp;function BelongsToAssociation(model, label, options) {</div><div class='line' id='LC12927'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (options != null ? options.polymorphic : void 0) {</div><div class='line' id='LC12928'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete options.polymorphic;</div><div class='line' id='LC12929'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (function(func, args, ctor) {</div><div class='line' id='LC12930'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = func.prototype;</div><div class='line' id='LC12931'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var child = new ctor,</div><div class='line' id='LC12932'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = func.apply(child, args),</div><div class='line' id='LC12933'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t = typeof result;</div><div class='line' id='LC12934'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return t == &quot;object&quot; || t == &quot;function&quot; ? result || child : child;</div><div class='line' id='LC12935'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})(Batman.PolymorphicBelongsToAssociation, arguments, function() {});</div><div class='line' id='LC12936'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12937'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BelongsToAssociation.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC12938'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.foreignKey = this.options.foreignKey || (&quot;&quot; + this.label + &quot;_id&quot;);</div><div class='line' id='LC12939'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.primaryKey = this.options.primaryKey || &quot;id&quot;;</div><div class='line' id='LC12940'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.options.encodeForeignKey) {</div><div class='line' id='LC12941'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.model.encode(this.foreignKey);</div><div class='line' id='LC12942'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12943'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12944'><br/></div><div class='line' id='LC12945'>&nbsp;&nbsp;&nbsp;&nbsp;BelongsToAssociation.prototype.encoder = function() {</div><div class='line' id='LC12946'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function(val) {</div><div class='line' id='LC12947'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return val.toJSON();</div><div class='line' id='LC12948'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12949'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12950'><br/></div><div class='line' id='LC12951'>&nbsp;&nbsp;&nbsp;&nbsp;BelongsToAssociation.prototype.decoder = function() {</div><div class='line' id='LC12952'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var association;</div><div class='line' id='LC12953'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;association = this;</div><div class='line' id='LC12954'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function(data, _, __, ___, childRecord) {</div><div class='line' id='LC12955'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var inverse, record, relatedModel;</div><div class='line' id='LC12956'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;relatedModel = association.getRelatedModel();</div><div class='line' id='LC12957'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record = relatedModel.createFromJSON(data);</div><div class='line' id='LC12958'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (association.options.inverseOf) {</div><div class='line' id='LC12959'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (inverse = association.inverse()) {</div><div class='line' id='LC12960'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (inverse instanceof Batman.HasManyAssociation) {</div><div class='line' id='LC12961'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childRecord.set(association.foreignKey, record.get(association.primaryKey));</div><div class='line' id='LC12962'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC12963'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record.set(inverse.label, childRecord);</div><div class='line' id='LC12964'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12965'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12966'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12967'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childRecord.set(association.label, record);</div><div class='line' id='LC12968'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return record;</div><div class='line' id='LC12969'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12970'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12971'><br/></div><div class='line' id='LC12972'>&nbsp;&nbsp;&nbsp;&nbsp;BelongsToAssociation.prototype.apply = function(base) {</div><div class='line' id='LC12973'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var foreignValue, model;</div><div class='line' id='LC12974'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (model = base.get(this.label)) {</div><div class='line' id='LC12975'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreignValue = model.get(this.primaryKey);</div><div class='line' id='LC12976'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (foreignValue !== void 0) {</div><div class='line' id='LC12977'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return base.set(this.foreignKey, foreignValue);</div><div class='line' id='LC12978'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12979'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12980'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC12981'><br/></div><div class='line' id='LC12982'>&nbsp;&nbsp;&nbsp;&nbsp;return BelongsToAssociation;</div><div class='line' id='LC12983'><br/></div><div class='line' id='LC12984'>&nbsp;&nbsp;})(Batman.SingularAssociation);</div><div class='line' id='LC12985'><br/></div><div class='line' id='LC12986'>}).call(this);</div><div class='line' id='LC12987'><br/></div><div class='line' id='LC12988'>(function() {</div><div class='line' id='LC12989'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC12990'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC12991'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC12992'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC12993'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12994'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC12995'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC12996'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC12997'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC12998'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC12999'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC13000'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC13001'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13002'><br/></div><div class='line' id='LC13003'>&nbsp;&nbsp;Batman.PolymorphicBelongsToAssociation = (function(_super) {</div><div class='line' id='LC13004'><br/></div><div class='line' id='LC13005'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(PolymorphicBelongsToAssociation, _super);</div><div class='line' id='LC13006'><br/></div><div class='line' id='LC13007'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicBelongsToAssociation.prototype.isPolymorphic = true;</div><div class='line' id='LC13008'><br/></div><div class='line' id='LC13009'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicBelongsToAssociation.prototype.proxyClass = Batman.PolymorphicBelongsToProxy;</div><div class='line' id='LC13010'><br/></div><div class='line' id='LC13011'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicBelongsToAssociation.prototype.defaultOptions = Batman.mixin({}, Batman.BelongsToAssociation.prototype.defaultOptions, {</div><div class='line' id='LC13012'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;encodeForeignTypeKey: true</div><div class='line' id='LC13013'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC13014'><br/></div><div class='line' id='LC13015'>&nbsp;&nbsp;&nbsp;&nbsp;function PolymorphicBelongsToAssociation() {</div><div class='line' id='LC13016'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicBelongsToAssociation.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC13017'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.foreignTypeKey = this.options.foreignTypeKey || (&quot;&quot; + this.label + &quot;_type&quot;);</div><div class='line' id='LC13018'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.options.encodeForeignTypeKey) {</div><div class='line' id='LC13019'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.model.encode(this.foreignTypeKey);</div><div class='line' id='LC13020'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13021'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.typeIndicies = {};</div><div class='line' id='LC13022'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13023'><br/></div><div class='line' id='LC13024'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicBelongsToAssociation.prototype.getRelatedModel = false;</div><div class='line' id='LC13025'><br/></div><div class='line' id='LC13026'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicBelongsToAssociation.prototype.setIndex = false;</div><div class='line' id='LC13027'><br/></div><div class='line' id='LC13028'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicBelongsToAssociation.prototype.inverse = false;</div><div class='line' id='LC13029'><br/></div><div class='line' id='LC13030'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicBelongsToAssociation.prototype.apply = function(base) {</div><div class='line' id='LC13031'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var foreignTypeValue, instanceOrProxy;</div><div class='line' id='LC13032'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicBelongsToAssociation.__super__.apply.apply(this, arguments);</div><div class='line' id='LC13033'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (instanceOrProxy = base.get(this.label)) {</div><div class='line' id='LC13034'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreignTypeValue = instanceOrProxy instanceof Batman.PolymorphicBelongsToProxy ? instanceOrProxy.get(&#39;foreignTypeValue&#39;) : instanceOrProxy.constructor.get(&#39;resourceName&#39;);</div><div class='line' id='LC13035'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return base.set(this.foreignTypeKey, foreignTypeValue);</div><div class='line' id='LC13036'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13037'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13038'><br/></div><div class='line' id='LC13039'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicBelongsToAssociation.prototype.getAccessor = function(self, model, label) {</div><div class='line' id='LC13040'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var proxy, recordInAttributes;</div><div class='line' id='LC13041'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (recordInAttributes = self.getFromAttributes(this)) {</div><div class='line' id='LC13042'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return recordInAttributes;</div><div class='line' id='LC13043'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13044'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (self.getRelatedModelForType(this.get(self.foreignTypeKey))) {</div><div class='line' id='LC13045'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proxy = this.associationProxy(self);</div><div class='line' id='LC13046'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.Property.withoutTracking(function() {</div><div class='line' id='LC13047'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!proxy.get(&#39;loaded&#39;) &amp;&amp; self.options.autoload) {</div><div class='line' id='LC13048'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return proxy.load();</div><div class='line' id='LC13049'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13050'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC13051'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return proxy;</div><div class='line' id='LC13052'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13053'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13054'><br/></div><div class='line' id='LC13055'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicBelongsToAssociation.prototype.url = function(recordOptions) {</div><div class='line' id='LC13056'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var ending, helper, id, inverse, root, type, _ref, _ref1;</div><div class='line' id='LC13057'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type = (_ref = recordOptions.data) != null ? _ref[this.foreignTypeKey] : void 0;</div><div class='line' id='LC13058'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (type &amp;&amp; (inverse = this.inverseForType(type))) {</div><div class='line' id='LC13059'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;root = Batman.helpers.pluralize(type).toLowerCase();</div><div class='line' id='LC13060'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id = (_ref1 = recordOptions.data) != null ? _ref1[this.foreignKey] : void 0;</div><div class='line' id='LC13061'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;helper = inverse.isSingular ? &quot;singularize&quot; : &quot;pluralize&quot;;</div><div class='line' id='LC13062'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ending = Batman.helpers[helper](inverse.label);</div><div class='line' id='LC13063'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;/&quot; + root + &quot;/&quot; + id + &quot;/&quot; + ending;</div><div class='line' id='LC13064'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13065'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13066'><br/></div><div class='line' id='LC13067'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicBelongsToAssociation.prototype.getRelatedModelForType = function(type) {</div><div class='line' id='LC13068'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var relatedModel, scope;</div><div class='line' id='LC13069'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scope = this.options.namespace || Batman.currentApp;</div><div class='line' id='LC13070'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (type) {</div><div class='line' id='LC13071'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;relatedModel = scope != null ? scope[type] : void 0;</div><div class='line' id='LC13072'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;relatedModel || (relatedModel = scope != null ? scope[Batman.helpers.camelize(type)] : void 0);</div><div class='line' id='LC13073'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13074'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer[&quot;do&quot;](function() {</div><div class='line' id='LC13075'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((Batman.currentApp != null) &amp;&amp; !relatedModel) {</div><div class='line' id='LC13076'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.developer.warn(&quot;Related model &quot; + type + &quot; for polymorphic association not found.&quot;);</div><div class='line' id='LC13077'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13078'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC13079'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return relatedModel;</div><div class='line' id='LC13080'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13081'><br/></div><div class='line' id='LC13082'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicBelongsToAssociation.prototype.setIndexForType = function(type) {</div><div class='line' id='LC13083'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _base;</div><div class='line' id='LC13084'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(_base = this.typeIndicies)[type] || (_base[type] = new Batman.PolymorphicUniqueAssociationSetIndex(this, type, this.primaryKey));</div><div class='line' id='LC13085'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.typeIndicies[type];</div><div class='line' id='LC13086'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13087'><br/></div><div class='line' id='LC13088'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicBelongsToAssociation.prototype.inverseForType = function(type) {</div><div class='line' id='LC13089'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var inverse, relatedAssocs, _ref, _this = this;</div><div class='line' id='LC13090'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (relatedAssocs = (_ref = this.getRelatedModelForType(type)) != null ? _ref._batman.get(&#39;associations&#39;) : void 0) {</div><div class='line' id='LC13091'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.options.inverseOf) {</div><div class='line' id='LC13092'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return relatedAssocs.getByLabel(this.options.inverseOf);</div><div class='line' id='LC13093'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13094'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inverse = null;</div><div class='line' id='LC13095'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;relatedAssocs.forEach(function(label, assoc) {</div><div class='line' id='LC13096'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (assoc.getRelatedModel() === _this.model) {</div><div class='line' id='LC13097'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return inverse = assoc;</div><div class='line' id='LC13098'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13099'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC13100'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return inverse;</div><div class='line' id='LC13101'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13102'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13103'><br/></div><div class='line' id='LC13104'>&nbsp;&nbsp;&nbsp;&nbsp;PolymorphicBelongsToAssociation.prototype.decoder = function() {</div><div class='line' id='LC13105'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var association;</div><div class='line' id='LC13106'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;association = this;</div><div class='line' id='LC13107'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function(data, key, response, ___, childRecord) {</div><div class='line' id='LC13108'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var foreignTypeValue, inverse, record, relatedModel;</div><div class='line' id='LC13109'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreignTypeValue = response[association.foreignTypeKey] || childRecord.get(association.foreignTypeKey);</div><div class='line' id='LC13110'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;relatedModel = association.getRelatedModelForType(foreignTypeValue);</div><div class='line' id='LC13111'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record = relatedModel.createFromJSON(data);</div><div class='line' id='LC13112'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (association.options.inverseOf) {</div><div class='line' id='LC13113'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (inverse = association.inverseForType(foreignTypeValue)) {</div><div class='line' id='LC13114'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (inverse instanceof Batman.PolymorphicHasManyAssociation) {</div><div class='line' id='LC13115'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childRecord.set(association.foreignKey, record.get(association.primaryKey));</div><div class='line' id='LC13116'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childRecord.set(association.foreignTypeKey, foreignTypeValue);</div><div class='line' id='LC13117'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13118'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;record.set(inverse.label, childRecord);</div><div class='line' id='LC13119'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13120'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13121'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13122'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childRecord.set(association.label, record);</div><div class='line' id='LC13123'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return record;</div><div class='line' id='LC13124'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13125'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13126'><br/></div><div class='line' id='LC13127'>&nbsp;&nbsp;&nbsp;&nbsp;return PolymorphicBelongsToAssociation;</div><div class='line' id='LC13128'><br/></div><div class='line' id='LC13129'>&nbsp;&nbsp;})(Batman.BelongsToAssociation);</div><div class='line' id='LC13130'><br/></div><div class='line' id='LC13131'>}).call(this);</div><div class='line' id='LC13132'><br/></div><div class='line' id='LC13133'>(function() {</div><div class='line' id='LC13134'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC13135'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC13136'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC13137'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC13138'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13139'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC13140'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC13141'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13142'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC13143'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC13144'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC13145'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC13146'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC13147'>&nbsp;&nbsp;&nbsp;&nbsp;__slice = [].slice;</div><div class='line' id='LC13148'><br/></div><div class='line' id='LC13149'>&nbsp;&nbsp;Batman.Validator = (function(_super) {</div><div class='line' id='LC13150'><br/></div><div class='line' id='LC13151'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(Validator, _super);</div><div class='line' id='LC13152'><br/></div><div class='line' id='LC13153'>&nbsp;&nbsp;&nbsp;&nbsp;Validator.triggers = function() {</div><div class='line' id='LC13154'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var triggers;</div><div class='line' id='LC13155'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;triggers = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC13156'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this._triggers != null) {</div><div class='line' id='LC13157'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._triggers.concat(triggers);</div><div class='line' id='LC13158'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13159'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._triggers = triggers;</div><div class='line' id='LC13160'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13161'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13162'><br/></div><div class='line' id='LC13163'>&nbsp;&nbsp;&nbsp;&nbsp;Validator.options = function() {</div><div class='line' id='LC13164'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var options;</div><div class='line' id='LC13165'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC13166'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this._options != null) {</div><div class='line' id='LC13167'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._options.concat(options);</div><div class='line' id='LC13168'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13169'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._options = options;</div><div class='line' id='LC13170'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13171'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13172'><br/></div><div class='line' id='LC13173'>&nbsp;&nbsp;&nbsp;&nbsp;Validator.matches = function(options) {</div><div class='line' id='LC13174'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var key, results, shouldReturn, value, _ref, _ref1;</div><div class='line' id='LC13175'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;results = {};</div><div class='line' id='LC13176'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shouldReturn = false;</div><div class='line' id='LC13177'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (key in options) {</div><div class='line' id='LC13178'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = options[key];</div><div class='line' id='LC13179'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (~ ((_ref = this._options) != null ? _ref.indexOf(key) : void 0)) {</div><div class='line' id='LC13180'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;results[key] = value;</div><div class='line' id='LC13181'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13182'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (~ ((_ref1 = this._triggers) != null ? _ref1.indexOf(key) : void 0)) {</div><div class='line' id='LC13183'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;results[key] = value;</div><div class='line' id='LC13184'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shouldReturn = true;</div><div class='line' id='LC13185'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13186'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13187'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (shouldReturn) {</div><div class='line' id='LC13188'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return results;</div><div class='line' id='LC13189'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13190'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13191'><br/></div><div class='line' id='LC13192'>&nbsp;&nbsp;&nbsp;&nbsp;function Validator() {</div><div class='line' id='LC13193'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var mixins, options;</div><div class='line' id='LC13194'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options = arguments[0], mixins = 2 &lt;= arguments.length ? __slice.call(arguments, 1) : [];</div><div class='line' id='LC13195'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.options = options;</div><div class='line' id='LC13196'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Validator.__super__.constructor.apply(this, mixins);</div><div class='line' id='LC13197'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13198'><br/></div><div class='line' id='LC13199'>&nbsp;&nbsp;&nbsp;&nbsp;Validator.prototype.validate = function(record) {</div><div class='line' id='LC13200'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.developer.error(&quot;You must override validate in Batman.Validator subclasses.&quot;);</div><div class='line' id='LC13201'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13202'><br/></div><div class='line' id='LC13203'>&nbsp;&nbsp;&nbsp;&nbsp;Validator.prototype.format = function(key, messageKey, interpolations) {</div><div class='line' id='LC13204'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.t(&quot;errors.messages.&quot; + messageKey, interpolations);</div><div class='line' id='LC13205'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13206'><br/></div><div class='line' id='LC13207'>&nbsp;&nbsp;&nbsp;&nbsp;Validator.prototype.handleBlank = function(value) {</div><div class='line' id='LC13208'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.options.allowBlank &amp;&amp; !Batman.PresenceValidator.prototype.isPresent(value)) {</div><div class='line' id='LC13209'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC13210'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13211'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13212'><br/></div><div class='line' id='LC13213'>&nbsp;&nbsp;&nbsp;&nbsp;return Validator;</div><div class='line' id='LC13214'><br/></div><div class='line' id='LC13215'>&nbsp;&nbsp;})(Batman.Object);</div><div class='line' id='LC13216'><br/></div><div class='line' id='LC13217'>}).call(this);</div><div class='line' id='LC13218'><br/></div><div class='line' id='LC13219'>(function() {</div><div class='line' id='LC13220'><br/></div><div class='line' id='LC13221'>&nbsp;&nbsp;Batman.Validators = [];</div><div class='line' id='LC13222'><br/></div><div class='line' id='LC13223'>&nbsp;&nbsp;Batman.extend(Batman.translate.messages, {</div><div class='line' id='LC13224'>&nbsp;&nbsp;&nbsp;&nbsp;errors: {</div><div class='line' id='LC13225'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;format: &quot;%{attribute} %{message}&quot;,</div><div class='line' id='LC13226'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;messages: {</div><div class='line' id='LC13227'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;too_short: &quot;must be at least %{count} characters&quot;,</div><div class='line' id='LC13228'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;too_long: &quot;must be less than %{count} characters&quot;,</div><div class='line' id='LC13229'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wrong_length: &quot;must be %{count} characters&quot;,</div><div class='line' id='LC13230'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;blank: &quot;can&#39;t be blank&quot;,</div><div class='line' id='LC13231'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;not_numeric: &quot;must be a number&quot;,</div><div class='line' id='LC13232'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;greater_than: &quot;must be greater than %{count}&quot;,</div><div class='line' id='LC13233'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;greater_than_or_equal_to: &quot;must be greater than or equal to %{count}&quot;,</div><div class='line' id='LC13234'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;equal_to: &quot;must be equal to %{count}&quot;,</div><div class='line' id='LC13235'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;less_than: &quot;must be less than %{count}&quot;,</div><div class='line' id='LC13236'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;less_than_or_equal_to: &quot;must be less than or equal to %{count}&quot;,</div><div class='line' id='LC13237'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;not_matching: &quot;is not valid&quot;,</div><div class='line' id='LC13238'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;invalid_association: &quot;is not valid&quot;</div><div class='line' id='LC13239'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13240'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13241'>&nbsp;&nbsp;});</div><div class='line' id='LC13242'><br/></div><div class='line' id='LC13243'>}).call(this);</div><div class='line' id='LC13244'><br/></div><div class='line' id='LC13245'>(function() {</div><div class='line' id='LC13246'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC13247'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC13248'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC13249'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC13250'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13251'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC13252'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC13253'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13254'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC13255'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC13256'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC13257'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC13258'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13259'><br/></div><div class='line' id='LC13260'>&nbsp;&nbsp;Batman.RegExpValidator = (function(_super) {</div><div class='line' id='LC13261'><br/></div><div class='line' id='LC13262'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(RegExpValidator, _super);</div><div class='line' id='LC13263'><br/></div><div class='line' id='LC13264'>&nbsp;&nbsp;&nbsp;&nbsp;RegExpValidator.triggers(&#39;regexp&#39;, &#39;pattern&#39;);</div><div class='line' id='LC13265'><br/></div><div class='line' id='LC13266'>&nbsp;&nbsp;&nbsp;&nbsp;RegExpValidator.options(&#39;allowBlank&#39;);</div><div class='line' id='LC13267'><br/></div><div class='line' id='LC13268'>&nbsp;&nbsp;&nbsp;&nbsp;function RegExpValidator(options) {</div><div class='line' id='LC13269'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC13270'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.regexp = (_ref = options.regexp) != null ? _ref : options.pattern;</div><div class='line' id='LC13271'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RegExpValidator.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC13272'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13273'><br/></div><div class='line' id='LC13274'>&nbsp;&nbsp;&nbsp;&nbsp;RegExpValidator.prototype.validateEach = function(errors, record, key, callback) {</div><div class='line' id='LC13275'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var value;</div><div class='line' id='LC13276'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = record.get(key);</div><div class='line' id='LC13277'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.handleBlank(value)) {</div><div class='line' id='LC13278'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return callback();</div><div class='line' id='LC13279'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13280'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(value != null) || value === &#39;&#39; || !this.regexp.test(value)) {</div><div class='line' id='LC13281'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errors.add(key, this.format(key, &#39;not_matching&#39;));</div><div class='line' id='LC13282'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13283'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return callback();</div><div class='line' id='LC13284'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13285'><br/></div><div class='line' id='LC13286'>&nbsp;&nbsp;&nbsp;&nbsp;return RegExpValidator;</div><div class='line' id='LC13287'><br/></div><div class='line' id='LC13288'>&nbsp;&nbsp;})(Batman.Validator);</div><div class='line' id='LC13289'><br/></div><div class='line' id='LC13290'>&nbsp;&nbsp;Batman.Validators.push(Batman.RegExpValidator);</div><div class='line' id='LC13291'><br/></div><div class='line' id='LC13292'>}).call(this);</div><div class='line' id='LC13293'><br/></div><div class='line' id='LC13294'>(function() {</div><div class='line' id='LC13295'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC13296'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC13297'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC13298'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC13299'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13300'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC13301'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC13302'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13303'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC13304'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC13305'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC13306'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC13307'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13308'><br/></div><div class='line' id='LC13309'>&nbsp;&nbsp;Batman.PresenceValidator = (function(_super) {</div><div class='line' id='LC13310'><br/></div><div class='line' id='LC13311'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(PresenceValidator, _super);</div><div class='line' id='LC13312'><br/></div><div class='line' id='LC13313'>&nbsp;&nbsp;&nbsp;&nbsp;function PresenceValidator() {</div><div class='line' id='LC13314'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return PresenceValidator.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC13315'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13316'><br/></div><div class='line' id='LC13317'>&nbsp;&nbsp;&nbsp;&nbsp;PresenceValidator.triggers(&#39;presence&#39;);</div><div class='line' id='LC13318'><br/></div><div class='line' id='LC13319'>&nbsp;&nbsp;&nbsp;&nbsp;PresenceValidator.prototype.validateEach = function(errors, record, key, callback) {</div><div class='line' id='LC13320'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var value;</div><div class='line' id='LC13321'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = record.get(key);</div><div class='line' id='LC13322'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this.isPresent(value)) {</div><div class='line' id='LC13323'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errors.add(key, this.format(key, &#39;blank&#39;));</div><div class='line' id='LC13324'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13325'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return callback();</div><div class='line' id='LC13326'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13327'><br/></div><div class='line' id='LC13328'>&nbsp;&nbsp;&nbsp;&nbsp;PresenceValidator.prototype.isPresent = function(value) {</div><div class='line' id='LC13329'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (value != null) &amp;&amp; value !== &#39;&#39;;</div><div class='line' id='LC13330'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13331'><br/></div><div class='line' id='LC13332'>&nbsp;&nbsp;&nbsp;&nbsp;return PresenceValidator;</div><div class='line' id='LC13333'><br/></div><div class='line' id='LC13334'>&nbsp;&nbsp;})(Batman.Validator);</div><div class='line' id='LC13335'><br/></div><div class='line' id='LC13336'>&nbsp;&nbsp;Batman.Validators.push(Batman.PresenceValidator);</div><div class='line' id='LC13337'><br/></div><div class='line' id='LC13338'>}).call(this);</div><div class='line' id='LC13339'><br/></div><div class='line' id='LC13340'>(function() {</div><div class='line' id='LC13341'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC13342'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC13343'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC13344'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC13345'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13346'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC13347'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC13348'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13349'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC13350'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC13351'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC13352'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC13353'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13354'><br/></div><div class='line' id='LC13355'>&nbsp;&nbsp;Batman.NumericValidator = (function(_super) {</div><div class='line' id='LC13356'><br/></div><div class='line' id='LC13357'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(NumericValidator, _super);</div><div class='line' id='LC13358'><br/></div><div class='line' id='LC13359'>&nbsp;&nbsp;&nbsp;&nbsp;function NumericValidator() {</div><div class='line' id='LC13360'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return NumericValidator.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC13361'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13362'><br/></div><div class='line' id='LC13363'>&nbsp;&nbsp;&nbsp;&nbsp;NumericValidator.triggers(&#39;numeric&#39;, &#39;greaterThan&#39;, &#39;greaterThanOrEqualTo&#39;, &#39;equalTo&#39;, &#39;lessThan&#39;, &#39;lessThanOrEqualTo&#39;);</div><div class='line' id='LC13364'><br/></div><div class='line' id='LC13365'>&nbsp;&nbsp;&nbsp;&nbsp;NumericValidator.options(&#39;allowBlank&#39;);</div><div class='line' id='LC13366'><br/></div><div class='line' id='LC13367'>&nbsp;&nbsp;&nbsp;&nbsp;NumericValidator.prototype.validateEach = function(errors, record, key, callback) {</div><div class='line' id='LC13368'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var options, value;</div><div class='line' id='LC13369'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options = this.options;</div><div class='line' id='LC13370'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = record.get(key);</div><div class='line' id='LC13371'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.handleBlank(value)) {</div><div class='line' id='LC13372'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return callback();</div><div class='line' id='LC13373'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13374'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(value != null) || !(this.isNumeric(value) || this.canCoerceToNumeric(value))) {</div><div class='line' id='LC13375'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errors.add(key, this.format(key, &#39;not_numeric&#39;));</div><div class='line' id='LC13376'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13377'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (options.greaterThan &amp;&amp; value &lt;= options.greaterThan) {</div><div class='line' id='LC13378'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errors.add(key, this.format(key, &#39;greater_than&#39;, {</div><div class='line' id='LC13379'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count: options.greaterThan</div><div class='line' id='LC13380'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC13381'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13382'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (options.greaterThanOrEqualTo &amp;&amp; value &lt; options.greaterThanOrEqualTo) {</div><div class='line' id='LC13383'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errors.add(key, this.format(key, &#39;greater_than_or_equal_to&#39;, {</div><div class='line' id='LC13384'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count: options.greaterThanOrEqualTo</div><div class='line' id='LC13385'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC13386'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13387'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (options.equalTo &amp;&amp; value !== options.equalTo) {</div><div class='line' id='LC13388'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errors.add(key, this.format(key, &#39;equal_to&#39;, {</div><div class='line' id='LC13389'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count: options.equalTo</div><div class='line' id='LC13390'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC13391'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13392'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (options.lessThan &amp;&amp; value &gt;= options.lessThan) {</div><div class='line' id='LC13393'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errors.add(key, this.format(key, &#39;less_than&#39;, {</div><div class='line' id='LC13394'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count: options.lessThan</div><div class='line' id='LC13395'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC13396'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13397'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (options.lessThanOrEqualTo &amp;&amp; value &gt; options.lessThanOrEqualTo) {</div><div class='line' id='LC13398'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errors.add(key, this.format(key, &#39;less_than_or_equal_to&#39;, {</div><div class='line' id='LC13399'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count: options.lessThanOrEqualTo</div><div class='line' id='LC13400'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC13401'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13402'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13403'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return callback();</div><div class='line' id='LC13404'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13405'><br/></div><div class='line' id='LC13406'>&nbsp;&nbsp;&nbsp;&nbsp;NumericValidator.prototype.isNumeric = function(value) {</div><div class='line' id='LC13407'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return !isNaN(parseFloat(value)) &amp;&amp; isFinite(value);</div><div class='line' id='LC13408'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13409'><br/></div><div class='line' id='LC13410'>&nbsp;&nbsp;&nbsp;&nbsp;NumericValidator.prototype.canCoerceToNumeric = function(value) {</div><div class='line' id='LC13411'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (value - 0) == value &amp;&amp; value.length &gt; 0;</div><div class='line' id='LC13412'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13413'><br/></div><div class='line' id='LC13414'>&nbsp;&nbsp;&nbsp;&nbsp;return NumericValidator;</div><div class='line' id='LC13415'><br/></div><div class='line' id='LC13416'>&nbsp;&nbsp;})(Batman.Validator);</div><div class='line' id='LC13417'><br/></div><div class='line' id='LC13418'>&nbsp;&nbsp;Batman.Validators.push(Batman.NumericValidator);</div><div class='line' id='LC13419'><br/></div><div class='line' id='LC13420'>}).call(this);</div><div class='line' id='LC13421'><br/></div><div class='line' id='LC13422'>(function() {</div><div class='line' id='LC13423'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC13424'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC13425'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC13426'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC13427'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13428'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC13429'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC13430'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13431'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC13432'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC13433'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC13434'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC13435'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13436'><br/></div><div class='line' id='LC13437'>&nbsp;&nbsp;Batman.LengthValidator = (function(_super) {</div><div class='line' id='LC13438'><br/></div><div class='line' id='LC13439'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(LengthValidator, _super);</div><div class='line' id='LC13440'><br/></div><div class='line' id='LC13441'>&nbsp;&nbsp;&nbsp;&nbsp;LengthValidator.triggers(&#39;minLength&#39;, &#39;maxLength&#39;, &#39;length&#39;, &#39;lengthWithin&#39;, &#39;lengthIn&#39;);</div><div class='line' id='LC13442'><br/></div><div class='line' id='LC13443'>&nbsp;&nbsp;&nbsp;&nbsp;LengthValidator.options(&#39;allowBlank&#39;);</div><div class='line' id='LC13444'><br/></div><div class='line' id='LC13445'>&nbsp;&nbsp;&nbsp;&nbsp;function LengthValidator(options) {</div><div class='line' id='LC13446'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var range;</div><div class='line' id='LC13447'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (range = options.lengthIn || options.lengthWithin) {</div><div class='line' id='LC13448'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.minLength = range[0];</div><div class='line' id='LC13449'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.maxLength = range[1] || -1;</div><div class='line' id='LC13450'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete options.lengthWithin;</div><div class='line' id='LC13451'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete options.lengthIn;</div><div class='line' id='LC13452'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13453'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LengthValidator.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC13454'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13455'><br/></div><div class='line' id='LC13456'>&nbsp;&nbsp;&nbsp;&nbsp;LengthValidator.prototype.validateEach = function(errors, record, key, callback) {</div><div class='line' id='LC13457'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var options, value;</div><div class='line' id='LC13458'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options = this.options;</div><div class='line' id='LC13459'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = record.get(key);</div><div class='line' id='LC13460'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value !== &#39;&#39; &amp;&amp; this.handleBlank(value)) {</div><div class='line' id='LC13461'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return callback();</div><div class='line' id='LC13462'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13463'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value == null) {</div><div class='line' id='LC13464'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = [];</div><div class='line' id='LC13465'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13466'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (options.minLength &amp;&amp; value.length &lt; options.minLength) {</div><div class='line' id='LC13467'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errors.add(key, this.format(key, &#39;too_short&#39;, {</div><div class='line' id='LC13468'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count: options.minLength</div><div class='line' id='LC13469'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC13470'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13471'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (options.maxLength &amp;&amp; value.length &gt; options.maxLength) {</div><div class='line' id='LC13472'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errors.add(key, this.format(key, &#39;too_long&#39;, {</div><div class='line' id='LC13473'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count: options.maxLength</div><div class='line' id='LC13474'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC13475'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13476'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (options.length &amp;&amp; value.length !== options.length) {</div><div class='line' id='LC13477'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errors.add(key, this.format(key, &#39;wrong_length&#39;, {</div><div class='line' id='LC13478'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count: options.length</div><div class='line' id='LC13479'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC13480'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13481'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return callback();</div><div class='line' id='LC13482'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13483'><br/></div><div class='line' id='LC13484'>&nbsp;&nbsp;&nbsp;&nbsp;return LengthValidator;</div><div class='line' id='LC13485'><br/></div><div class='line' id='LC13486'>&nbsp;&nbsp;})(Batman.Validator);</div><div class='line' id='LC13487'><br/></div><div class='line' id='LC13488'>&nbsp;&nbsp;Batman.Validators.push(Batman.LengthValidator);</div><div class='line' id='LC13489'><br/></div><div class='line' id='LC13490'>}).call(this);</div><div class='line' id='LC13491'><br/></div><div class='line' id='LC13492'>(function() {</div><div class='line' id='LC13493'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC13494'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC13495'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC13496'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC13497'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13498'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC13499'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC13500'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13501'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC13502'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC13503'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC13504'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC13505'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13506'><br/></div><div class='line' id='LC13507'>&nbsp;&nbsp;Batman.AssociatedValidator = (function(_super) {</div><div class='line' id='LC13508'><br/></div><div class='line' id='LC13509'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(AssociatedValidator, _super);</div><div class='line' id='LC13510'><br/></div><div class='line' id='LC13511'>&nbsp;&nbsp;&nbsp;&nbsp;function AssociatedValidator() {</div><div class='line' id='LC13512'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return AssociatedValidator.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC13513'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13514'><br/></div><div class='line' id='LC13515'>&nbsp;&nbsp;&nbsp;&nbsp;AssociatedValidator.triggers(&#39;associated&#39;);</div><div class='line' id='LC13516'><br/></div><div class='line' id='LC13517'>&nbsp;&nbsp;&nbsp;&nbsp;AssociatedValidator.prototype.validateEach = function(errors, record, key, callback) {</div><div class='line' id='LC13518'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var childFinished, count, value, _this = this;</div><div class='line' id='LC13519'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = record.get(key);</div><div class='line' id='LC13520'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value != null) {</div><div class='line' id='LC13521'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value instanceof Batman.AssociationProxy) {</div><div class='line' id='LC13522'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = typeof value.get === &quot;function&quot; ? value.get(&#39;target&#39;) : void 0;</div><div class='line' id='LC13523'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13524'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count = 1;</div><div class='line' id='LC13525'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childFinished = function(err, childErrors) {</div><div class='line' id='LC13526'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (childErrors.length &gt; 0) {</div><div class='line' id='LC13527'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errors.add(key, _this.format(key, &#39;invalid_association&#39;));</div><div class='line' id='LC13528'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13529'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (--count === 0) {</div><div class='line' id='LC13530'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return callback();</div><div class='line' id='LC13531'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13532'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13533'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((value != null ? value.forEach : void 0) != null) {</div><div class='line' id='LC13534'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value.forEach(function(record) {</div><div class='line' id='LC13535'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count += 1;</div><div class='line' id='LC13536'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return record.validate(childFinished);</div><div class='line' id='LC13537'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC13538'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if ((value != null ? value.validate : void 0) != null) {</div><div class='line' id='LC13539'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count += 1;</div><div class='line' id='LC13540'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value.validate(childFinished);</div><div class='line' id='LC13541'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13542'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return childFinished(null, []);</div><div class='line' id='LC13543'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13544'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return callback();</div><div class='line' id='LC13545'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13546'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13547'><br/></div><div class='line' id='LC13548'>&nbsp;&nbsp;&nbsp;&nbsp;return AssociatedValidator;</div><div class='line' id='LC13549'><br/></div><div class='line' id='LC13550'>&nbsp;&nbsp;})(Batman.Validator);</div><div class='line' id='LC13551'><br/></div><div class='line' id='LC13552'>&nbsp;&nbsp;Batman.Validators.push(Batman.AssociatedValidator);</div><div class='line' id='LC13553'><br/></div><div class='line' id='LC13554'>}).call(this);</div><div class='line' id='LC13555'><br/></div><div class='line' id='LC13556'>(function() {</div><div class='line' id='LC13557'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC13558'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC13559'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC13560'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC13561'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13562'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC13563'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC13564'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13565'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC13566'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC13567'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC13568'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC13569'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13570'><br/></div><div class='line' id='LC13571'>&nbsp;&nbsp;Batman.ControllerActionFrame = (function(_super) {</div><div class='line' id='LC13572'><br/></div><div class='line' id='LC13573'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(ControllerActionFrame, _super);</div><div class='line' id='LC13574'><br/></div><div class='line' id='LC13575'>&nbsp;&nbsp;&nbsp;&nbsp;ControllerActionFrame.prototype.operationOccurred = false;</div><div class='line' id='LC13576'><br/></div><div class='line' id='LC13577'>&nbsp;&nbsp;&nbsp;&nbsp;ControllerActionFrame.prototype.remainingOperations = 0;</div><div class='line' id='LC13578'><br/></div><div class='line' id='LC13579'>&nbsp;&nbsp;&nbsp;&nbsp;ControllerActionFrame.prototype.event(&#39;complete&#39;).oneShot = true;</div><div class='line' id='LC13580'><br/></div><div class='line' id='LC13581'>&nbsp;&nbsp;&nbsp;&nbsp;function ControllerActionFrame(options, onComplete) {</div><div class='line' id='LC13582'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ControllerActionFrame.__super__.constructor.call(this, options);</div><div class='line' id='LC13583'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.once(&#39;complete&#39;, onComplete);</div><div class='line' id='LC13584'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13585'><br/></div><div class='line' id='LC13586'>&nbsp;&nbsp;&nbsp;&nbsp;ControllerActionFrame.prototype.startOperation = function(options) {</div><div class='line' id='LC13587'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (options == null) {</div><div class='line' id='LC13588'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options = {};</div><div class='line' id='LC13589'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13590'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!options.internal) {</div><div class='line' id='LC13591'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.operationOccurred = true;</div><div class='line' id='LC13592'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13593'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._changeOperationsCounter(1);</div><div class='line' id='LC13594'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC13595'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13596'><br/></div><div class='line' id='LC13597'>&nbsp;&nbsp;&nbsp;&nbsp;ControllerActionFrame.prototype.finishOperation = function() {</div><div class='line' id='LC13598'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._changeOperationsCounter(-1);</div><div class='line' id='LC13599'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC13600'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13601'><br/></div><div class='line' id='LC13602'>&nbsp;&nbsp;&nbsp;&nbsp;ControllerActionFrame.prototype.startAndFinishOperation = function(options) {</div><div class='line' id='LC13603'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.startOperation(options);</div><div class='line' id='LC13604'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.finishOperation(options);</div><div class='line' id='LC13605'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC13606'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13607'><br/></div><div class='line' id='LC13608'>&nbsp;&nbsp;&nbsp;&nbsp;ControllerActionFrame.prototype._changeOperationsCounter = function(delta) {</div><div class='line' id='LC13609'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC13610'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.remainingOperations += delta;</div><div class='line' id='LC13611'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.remainingOperations === 0) {</div><div class='line' id='LC13612'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fire(&#39;complete&#39;);</div><div class='line' id='LC13613'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13614'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = this.parentFrame) != null) {</div><div class='line' id='LC13615'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref._changeOperationsCounter(delta);</div><div class='line' id='LC13616'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13617'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13618'><br/></div><div class='line' id='LC13619'>&nbsp;&nbsp;&nbsp;&nbsp;return ControllerActionFrame;</div><div class='line' id='LC13620'><br/></div><div class='line' id='LC13621'>&nbsp;&nbsp;})(Batman.Object);</div><div class='line' id='LC13622'><br/></div><div class='line' id='LC13623'>}).call(this);</div><div class='line' id='LC13624'><br/></div><div class='line' id='LC13625'>(function() {</div><div class='line' id='LC13626'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC13627'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC13628'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC13629'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC13630'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13631'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC13632'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC13633'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13634'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC13635'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC13636'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC13637'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC13638'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13639'><br/></div><div class='line' id='LC13640'>&nbsp;&nbsp;Batman.DOM.InsertionBinding = (function(_super) {</div><div class='line' id='LC13641'><br/></div><div class='line' id='LC13642'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(InsertionBinding, _super);</div><div class='line' id='LC13643'><br/></div><div class='line' id='LC13644'>&nbsp;&nbsp;&nbsp;&nbsp;InsertionBinding.prototype.isTwoWay = false;</div><div class='line' id='LC13645'><br/></div><div class='line' id='LC13646'>&nbsp;&nbsp;&nbsp;&nbsp;InsertionBinding.prototype.bindImmediately = false;</div><div class='line' id='LC13647'><br/></div><div class='line' id='LC13648'>&nbsp;&nbsp;&nbsp;&nbsp;InsertionBinding.prototype.onlyObserve = Batman.BindingDefinitionOnlyObserve.Data;</div><div class='line' id='LC13649'><br/></div><div class='line' id='LC13650'>&nbsp;&nbsp;&nbsp;&nbsp;function InsertionBinding(definition) {</div><div class='line' id='LC13651'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC13652'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.invert = definition.invert;</div><div class='line' id='LC13653'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.placeholderNode = document.createComment(&quot;detached node &quot; + (this.get(&#39;_batmanID&#39;)));</div><div class='line' id='LC13654'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InsertionBinding.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC13655'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.onParseExit(this.node, function() {</div><div class='line' id='LC13656'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.bind();</div><div class='line' id='LC13657'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (_this.placeholderNode != null) {</div><div class='line' id='LC13658'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.trackBinding(_this, _this.placeholderNode);</div><div class='line' id='LC13659'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13660'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC13661'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13662'><br/></div><div class='line' id='LC13663'>&nbsp;&nbsp;&nbsp;&nbsp;InsertionBinding.prototype.dataChange = function(value) {</div><div class='line' id='LC13664'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var parentNode;</div><div class='line' id='LC13665'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parentNode = this.placeholderNode.parentNode || this.node.parentNode;</div><div class='line' id='LC13666'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( !! value === !this.invert) {</div><div class='line' id='LC13667'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(this.node.parentNode != null)) {</div><div class='line' id='LC13668'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.insertBefore(parentNode, this.node, this.placeholderNode);</div><div class='line' id='LC13669'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return parentNode.removeChild(this.placeholderNode);</div><div class='line' id='LC13670'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13671'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13672'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.node.parentNode != null) {</div><div class='line' id='LC13673'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parentNode.insertBefore(this.placeholderNode, this.node);</div><div class='line' id='LC13674'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.removeNode(this.node);</div><div class='line' id='LC13675'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13676'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13677'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13678'><br/></div><div class='line' id='LC13679'>&nbsp;&nbsp;&nbsp;&nbsp;InsertionBinding.prototype.die = function() {</div><div class='line' id='LC13680'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var filteredValue, node, placeholderNode;</div><div class='line' id='LC13681'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.dead) {</div><div class='line' id='LC13682'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC13683'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13684'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node = this.node, placeholderNode = this.placeholderNode;</div><div class='line' id='LC13685'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filteredValue = this.get(&#39;filteredValue&#39;);</div><div class='line' id='LC13686'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InsertionBinding.__super__.die.apply(this, arguments);</div><div class='line' id='LC13687'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( !! filteredValue === !this.invert) {</div><div class='line' id='LC13688'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.destroyNode(placeholderNode);</div><div class='line' id='LC13689'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13690'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.destroyNode(node);</div><div class='line' id='LC13691'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13692'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13693'><br/></div><div class='line' id='LC13694'>&nbsp;&nbsp;&nbsp;&nbsp;return InsertionBinding;</div><div class='line' id='LC13695'><br/></div><div class='line' id='LC13696'>&nbsp;&nbsp;})(Batman.DOM.AbstractBinding);</div><div class='line' id='LC13697'><br/></div><div class='line' id='LC13698'>}).call(this);</div><div class='line' id='LC13699'><br/></div><div class='line' id='LC13700'>(function() {</div><div class='line' id='LC13701'>&nbsp;&nbsp;var isEmptyDataObject;</div><div class='line' id='LC13702'><br/></div><div class='line' id='LC13703'>&nbsp;&nbsp;isEmptyDataObject = function(obj) {</div><div class='line' id='LC13704'>&nbsp;&nbsp;&nbsp;&nbsp;var name;</div><div class='line' id='LC13705'>&nbsp;&nbsp;&nbsp;&nbsp;for (name in obj) {</div><div class='line' id='LC13706'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC13707'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13708'>&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC13709'>&nbsp;&nbsp;};</div><div class='line' id='LC13710'><br/></div><div class='line' id='LC13711'>&nbsp;&nbsp;Batman.extend(Batman, {</div><div class='line' id='LC13712'>&nbsp;&nbsp;&nbsp;&nbsp;cache: {},</div><div class='line' id='LC13713'>&nbsp;&nbsp;&nbsp;&nbsp;uuid: 0,</div><div class='line' id='LC13714'>&nbsp;&nbsp;&nbsp;&nbsp;expando: &quot;batman&quot; + Math.random().toString().replace(/\D/g, &#39;&#39;),</div><div class='line' id='LC13715'>&nbsp;&nbsp;&nbsp;&nbsp;canDeleteExpando: (function() {</div><div class='line' id='LC13716'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var div;</div><div class='line' id='LC13717'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</div><div class='line' id='LC13718'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;div = document.createElement(&#39;div&#39;);</div><div class='line' id='LC13719'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return delete div.test;</div><div class='line' id='LC13720'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (e) {</div><div class='line' id='LC13721'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.canDeleteExpando = false;</div><div class='line' id='LC13722'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13723'>&nbsp;&nbsp;&nbsp;&nbsp;})(),</div><div class='line' id='LC13724'>&nbsp;&nbsp;&nbsp;&nbsp;noData: {</div><div class='line' id='LC13725'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;embed&quot;: true,</div><div class='line' id='LC13726'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;object&quot;: &quot;clsid:D27CDB6E-AE6D-11cf-96B8-444553540000&quot;,</div><div class='line' id='LC13727'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;applet&quot;: true</div><div class='line' id='LC13728'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC13729'>&nbsp;&nbsp;&nbsp;&nbsp;hasData: function(elem) {</div><div class='line' id='LC13730'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elem = (elem.nodeType ? Batman.cache[elem[Batman.expando]] : elem[Batman.expando]);</div><div class='line' id='LC13731'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return !!elem &amp;&amp; !isEmptyDataObject(elem);</div><div class='line' id='LC13732'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC13733'>&nbsp;&nbsp;&nbsp;&nbsp;data: function(elem, name, data, pvt) {</div><div class='line' id='LC13734'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var cache, getByName, id, internalKey, ret, thisCache;</div><div class='line' id='LC13735'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!Batman.acceptData(elem)) {</div><div class='line' id='LC13736'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC13737'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13738'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;internalKey = Batman.expando;</div><div class='line' id='LC13739'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getByName = typeof name === &quot;string&quot;;</div><div class='line' id='LC13740'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache = Batman.cache;</div><div class='line' id='LC13741'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id = elem[Batman.expando];</div><div class='line' id='LC13742'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((!id || (pvt &amp;&amp; id &amp;&amp; (cache[id] &amp;&amp; !cache[id][internalKey]))) &amp;&amp; getByName &amp;&amp; data === void 0) {</div><div class='line' id='LC13743'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC13744'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13745'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!id) {</div><div class='line' id='LC13746'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (elem.nodeType !== 3) {</div><div class='line' id='LC13747'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elem[Batman.expando] = id = ++Batman.uuid;</div><div class='line' id='LC13748'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13749'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id = Batman.expando;</div><div class='line' id='LC13750'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13751'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13752'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!cache[id]) {</div><div class='line' id='LC13753'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache[id] = {};</div><div class='line' id='LC13754'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13755'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof name === &quot;object&quot; || typeof name === &quot;function&quot;) {</div><div class='line' id='LC13756'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (pvt) {</div><div class='line' id='LC13757'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache[id][internalKey] = Batman.extend(cache[id][internalKey], name);</div><div class='line' id='LC13758'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13759'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache[id] = Batman.extend(cache[id], name);</div><div class='line' id='LC13760'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13761'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13762'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;thisCache = cache[id];</div><div class='line' id='LC13763'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (pvt) {</div><div class='line' id='LC13764'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;thisCache[internalKey] || (thisCache[internalKey] = {});</div><div class='line' id='LC13765'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;thisCache = thisCache[internalKey];</div><div class='line' id='LC13766'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13767'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (data !== void 0) {</div><div class='line' id='LC13768'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;thisCache[name] = data;</div><div class='line' id='LC13769'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13770'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (getByName) {</div><div class='line' id='LC13771'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ret = thisCache[name];</div><div class='line' id='LC13772'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13773'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ret = thisCache;</div><div class='line' id='LC13774'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13775'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ret;</div><div class='line' id='LC13776'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC13777'>&nbsp;&nbsp;&nbsp;&nbsp;removeData: function(elem, name, pvt) {</div><div class='line' id='LC13778'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var cache, id, internalCache, internalKey, isNode, thisCache;</div><div class='line' id='LC13779'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!Batman.acceptData(elem)) {</div><div class='line' id='LC13780'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC13781'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13782'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;internalKey = Batman.expando;</div><div class='line' id='LC13783'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isNode = elem.nodeType;</div><div class='line' id='LC13784'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache = Batman.cache;</div><div class='line' id='LC13785'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id = elem[Batman.expando];</div><div class='line' id='LC13786'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!cache[id]) {</div><div class='line' id='LC13787'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC13788'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13789'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (name) {</div><div class='line' id='LC13790'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;thisCache = pvt ? cache[id][internalKey] : cache[id];</div><div class='line' id='LC13791'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (thisCache) {</div><div class='line' id='LC13792'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete thisCache[name];</div><div class='line' id='LC13793'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!isEmptyDataObject(thisCache)) {</div><div class='line' id='LC13794'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC13795'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13796'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13797'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13798'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (pvt) {</div><div class='line' id='LC13799'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete cache[id][internalKey];</div><div class='line' id='LC13800'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!isEmptyDataObject(cache[id])) {</div><div class='line' id='LC13801'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC13802'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13803'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13804'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;internalCache = cache[id][internalKey];</div><div class='line' id='LC13805'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Batman.canDeleteExpando || !cache.setInterval) {</div><div class='line' id='LC13806'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete cache[id];</div><div class='line' id='LC13807'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13808'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache[id] = null;</div><div class='line' id='LC13809'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13810'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (internalCache) {</div><div class='line' id='LC13811'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cache[id] = {};</div><div class='line' id='LC13812'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return cache[id][internalKey] = internalCache;</div><div class='line' id='LC13813'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13814'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Batman.canDeleteExpando) {</div><div class='line' id='LC13815'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return delete elem[Batman.expando];</div><div class='line' id='LC13816'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (elem.removeAttribute) {</div><div class='line' id='LC13817'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return elem.removeAttribute(Batman.expando);</div><div class='line' id='LC13818'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13819'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return elem[Batman.expando] = null;</div><div class='line' id='LC13820'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13821'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13822'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC13823'>&nbsp;&nbsp;&nbsp;&nbsp;_data: function(elem, name, data) {</div><div class='line' id='LC13824'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.data(elem, name, data, true);</div><div class='line' id='LC13825'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC13826'>&nbsp;&nbsp;&nbsp;&nbsp;acceptData: function(elem) {</div><div class='line' id='LC13827'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var match;</div><div class='line' id='LC13828'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (elem.nodeName) {</div><div class='line' id='LC13829'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;match = Batman.noData[elem.nodeName.toLowerCase()];</div><div class='line' id='LC13830'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (match) {</div><div class='line' id='LC13831'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return !(match === true || elem.getAttribute(&quot;classid&quot;) !== match);</div><div class='line' id='LC13832'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13833'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13834'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC13835'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13836'>&nbsp;&nbsp;});</div><div class='line' id='LC13837'><br/></div><div class='line' id='LC13838'>}).call(this);</div><div class='line' id='LC13839'><br/></div><div class='line' id='LC13840'>(function() {</div><div class='line' id='LC13841'>&nbsp;&nbsp;var buntUndefined, defaultAndOr, __slice = [].slice;</div><div class='line' id='LC13842'><br/></div><div class='line' id='LC13843'>&nbsp;&nbsp;buntUndefined = function(f) {</div><div class='line' id='LC13844'>&nbsp;&nbsp;&nbsp;&nbsp;return function(value) {</div><div class='line' id='LC13845'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value == null) {</div><div class='line' id='LC13846'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return void 0;</div><div class='line' id='LC13847'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13848'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return f.apply(this, arguments);</div><div class='line' id='LC13849'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13850'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC13851'>&nbsp;&nbsp;};</div><div class='line' id='LC13852'><br/></div><div class='line' id='LC13853'>&nbsp;&nbsp;defaultAndOr = function(lhs, rhs) {</div><div class='line' id='LC13854'>&nbsp;&nbsp;&nbsp;&nbsp;return lhs || rhs;</div><div class='line' id='LC13855'>&nbsp;&nbsp;};</div><div class='line' id='LC13856'><br/></div><div class='line' id='LC13857'>&nbsp;&nbsp;Batman.Filters = {</div><div class='line' id='LC13858'>&nbsp;&nbsp;&nbsp;&nbsp;raw: buntUndefined(function(value, binding) {</div><div class='line' id='LC13859'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binding.escapeValue = false;</div><div class='line' id='LC13860'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value;</div><div class='line' id='LC13861'>&nbsp;&nbsp;&nbsp;&nbsp;}),</div><div class='line' id='LC13862'>&nbsp;&nbsp;&nbsp;&nbsp;get: buntUndefined(function(value, key) {</div><div class='line' id='LC13863'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value.get != null) {</div><div class='line' id='LC13864'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value.get(key);</div><div class='line' id='LC13865'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13866'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value[key];</div><div class='line' id='LC13867'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13868'>&nbsp;&nbsp;&nbsp;&nbsp;}),</div><div class='line' id='LC13869'>&nbsp;&nbsp;&nbsp;&nbsp;equals: buntUndefined(function(lhs, rhs, binding) {</div><div class='line' id='LC13870'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return lhs === rhs;</div><div class='line' id='LC13871'>&nbsp;&nbsp;&nbsp;&nbsp;}),</div><div class='line' id='LC13872'>&nbsp;&nbsp;&nbsp;&nbsp;and: function(lhs, rhs) {</div><div class='line' id='LC13873'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return lhs &amp;&amp; rhs;</div><div class='line' id='LC13874'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC13875'>&nbsp;&nbsp;&nbsp;&nbsp;or: function(lhs, rhs, binding) {</div><div class='line' id='LC13876'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return lhs || rhs;</div><div class='line' id='LC13877'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC13878'>&nbsp;&nbsp;&nbsp;&nbsp;not: function(value, binding) {</div><div class='line' id='LC13879'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return !value;</div><div class='line' id='LC13880'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC13881'>&nbsp;&nbsp;&nbsp;&nbsp;trim: buntUndefined(function(value, binding) {</div><div class='line' id='LC13882'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value.trim();</div><div class='line' id='LC13883'>&nbsp;&nbsp;&nbsp;&nbsp;}),</div><div class='line' id='LC13884'>&nbsp;&nbsp;&nbsp;&nbsp;matches: buntUndefined(function(value, searchFor) {</div><div class='line' id='LC13885'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value.indexOf(searchFor) !== -1;</div><div class='line' id='LC13886'>&nbsp;&nbsp;&nbsp;&nbsp;}),</div><div class='line' id='LC13887'>&nbsp;&nbsp;&nbsp;&nbsp;truncate: buntUndefined(function(value, length, end, binding) {</div><div class='line' id='LC13888'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (end == null) {</div><div class='line' id='LC13889'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end = &quot;...&quot;;</div><div class='line' id='LC13890'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13891'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!binding) {</div><div class='line' id='LC13892'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binding = end;</div><div class='line' id='LC13893'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end = &quot;...&quot;;</div><div class='line' id='LC13894'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13895'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (value.length &gt; length) {</div><div class='line' id='LC13896'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = value.substr(0, length - end.length) + end;</div><div class='line' id='LC13897'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13898'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value;</div><div class='line' id='LC13899'>&nbsp;&nbsp;&nbsp;&nbsp;}),</div><div class='line' id='LC13900'>&nbsp;&nbsp;&nbsp;&nbsp;&quot;default&quot;: function(value, defaultValue, binding) {</div><div class='line' id='LC13901'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((value != null) &amp;&amp; value !== &#39;&#39;) {</div><div class='line' id='LC13902'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value;</div><div class='line' id='LC13903'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13904'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return defaultValue;</div><div class='line' id='LC13905'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13906'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC13907'>&nbsp;&nbsp;&nbsp;&nbsp;prepend: function(value, string, binding) {</div><div class='line' id='LC13908'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (string != null ? string : &#39;&#39;) + (value != null ? value : &#39;&#39;);</div><div class='line' id='LC13909'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC13910'>&nbsp;&nbsp;&nbsp;&nbsp;append: function(value, string, binding) {</div><div class='line' id='LC13911'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (value != null ? value : &#39;&#39;) + (string != null ? string : &#39;&#39;);</div><div class='line' id='LC13912'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC13913'>&nbsp;&nbsp;&nbsp;&nbsp;replace: buntUndefined(function(value, searchFor, replaceWith, flags, binding) {</div><div class='line' id='LC13914'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!binding) {</div><div class='line' id='LC13915'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binding = flags;</div><div class='line' id='LC13916'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flags = void 0;</div><div class='line' id='LC13917'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13918'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (flags === void 0) {</div><div class='line' id='LC13919'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value.replace(searchFor, replaceWith);</div><div class='line' id='LC13920'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13921'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value.replace(searchFor, replaceWith, flags);</div><div class='line' id='LC13922'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13923'>&nbsp;&nbsp;&nbsp;&nbsp;}),</div><div class='line' id='LC13924'>&nbsp;&nbsp;&nbsp;&nbsp;downcase: buntUndefined(function(value) {</div><div class='line' id='LC13925'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value.toLowerCase();</div><div class='line' id='LC13926'>&nbsp;&nbsp;&nbsp;&nbsp;}),</div><div class='line' id='LC13927'>&nbsp;&nbsp;&nbsp;&nbsp;upcase: buntUndefined(function(value) {</div><div class='line' id='LC13928'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value.toUpperCase();</div><div class='line' id='LC13929'>&nbsp;&nbsp;&nbsp;&nbsp;}),</div><div class='line' id='LC13930'>&nbsp;&nbsp;&nbsp;&nbsp;pluralize: buntUndefined(function(string, count, includeCount, binding) {</div><div class='line' id='LC13931'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!binding) {</div><div class='line' id='LC13932'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binding = includeCount;</div><div class='line' id='LC13933'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;includeCount = true;</div><div class='line' id='LC13934'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!binding) {</div><div class='line' id='LC13935'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binding = count;</div><div class='line' id='LC13936'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count = void 0;</div><div class='line' id='LC13937'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13938'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13939'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (count != null) {</div><div class='line' id='LC13940'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.helpers.pluralize(count, string, void 0, includeCount);</div><div class='line' id='LC13941'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC13942'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.helpers.pluralize(string);</div><div class='line' id='LC13943'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13944'>&nbsp;&nbsp;&nbsp;&nbsp;}),</div><div class='line' id='LC13945'>&nbsp;&nbsp;&nbsp;&nbsp;humanize: buntUndefined(function(string, binding) {</div><div class='line' id='LC13946'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.helpers.humanize(string);</div><div class='line' id='LC13947'>&nbsp;&nbsp;&nbsp;&nbsp;}),</div><div class='line' id='LC13948'>&nbsp;&nbsp;&nbsp;&nbsp;join: buntUndefined(function(value, withWhat, binding) {</div><div class='line' id='LC13949'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (withWhat == null) {</div><div class='line' id='LC13950'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;withWhat = &#39;&#39;;</div><div class='line' id='LC13951'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13952'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!binding) {</div><div class='line' id='LC13953'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binding = withWhat;</div><div class='line' id='LC13954'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;withWhat = &#39;&#39;;</div><div class='line' id='LC13955'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13956'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value.join(withWhat);</div><div class='line' id='LC13957'>&nbsp;&nbsp;&nbsp;&nbsp;}),</div><div class='line' id='LC13958'>&nbsp;&nbsp;&nbsp;&nbsp;sort: buntUndefined(function(value) {</div><div class='line' id='LC13959'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value.sort();</div><div class='line' id='LC13960'>&nbsp;&nbsp;&nbsp;&nbsp;}),</div><div class='line' id='LC13961'>&nbsp;&nbsp;&nbsp;&nbsp;map: buntUndefined(function(value, key) {</div><div class='line' id='LC13962'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value.map(function(x) {</div><div class='line' id='LC13963'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.get(x, key);</div><div class='line' id='LC13964'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC13965'>&nbsp;&nbsp;&nbsp;&nbsp;}),</div><div class='line' id='LC13966'>&nbsp;&nbsp;&nbsp;&nbsp;has: function(set, item) {</div><div class='line' id='LC13967'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (set == null) {</div><div class='line' id='LC13968'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC13969'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13970'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.contains(set, item);</div><div class='line' id='LC13971'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC13972'>&nbsp;&nbsp;&nbsp;&nbsp;first: buntUndefined(function(value) {</div><div class='line' id='LC13973'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value[0];</div><div class='line' id='LC13974'>&nbsp;&nbsp;&nbsp;&nbsp;}),</div><div class='line' id='LC13975'>&nbsp;&nbsp;&nbsp;&nbsp;meta: buntUndefined(function(value, keypath) {</div><div class='line' id='LC13976'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer.assert(value.meta, &quot;Error, value doesn&#39;t have a meta to filter on!&quot;);</div><div class='line' id='LC13977'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return value.meta.get(keypath);</div><div class='line' id='LC13978'>&nbsp;&nbsp;&nbsp;&nbsp;}),</div><div class='line' id='LC13979'>&nbsp;&nbsp;&nbsp;&nbsp;interpolate: function(string, interpolationKeypaths, binding) {</div><div class='line' id='LC13980'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var k, v, values;</div><div class='line' id='LC13981'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!binding) {</div><div class='line' id='LC13982'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binding = interpolationKeypaths;</div><div class='line' id='LC13983'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interpolationKeypaths = void 0;</div><div class='line' id='LC13984'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13985'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!string) {</div><div class='line' id='LC13986'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC13987'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13988'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values = {};</div><div class='line' id='LC13989'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (k in interpolationKeypaths) {</div><div class='line' id='LC13990'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v = interpolationKeypaths[k];</div><div class='line' id='LC13991'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values[k] = this.get(v);</div><div class='line' id='LC13992'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(values[k] != null)) {</div><div class='line' id='LC13993'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.developer.warn(&quot;Warning! Undefined interpolation key &quot; + k + &quot; for interpolation&quot;, string);</div><div class='line' id='LC13994'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;values[k] = &#39;&#39;;</div><div class='line' id='LC13995'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13996'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC13997'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.helpers.interpolate(string, values);</div><div class='line' id='LC13998'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC13999'>&nbsp;&nbsp;&nbsp;&nbsp;withArguments: function() {</div><div class='line' id='LC14000'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var binding, block, curryArgs, _i;</div><div class='line' id='LC14001'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;block = arguments[0], curryArgs = 3 &lt;= arguments.length ? __slice.call(arguments, 1, _i = arguments.length - 1) : (_i = 1, []), binding = arguments[_i++];</div><div class='line' id='LC14002'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!block) {</div><div class='line' id='LC14003'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC14004'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14005'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function() {</div><div class='line' id='LC14006'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var regularArgs;</div><div class='line' id='LC14007'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;regularArgs = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC14008'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return block.call.apply(block, [this].concat(__slice.call(curryArgs), __slice.call(regularArgs)));</div><div class='line' id='LC14009'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14010'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC14011'>&nbsp;&nbsp;&nbsp;&nbsp;routeToAction: buntUndefined(function(model, action) {</div><div class='line' id='LC14012'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var params;</div><div class='line' id='LC14013'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params = Batman.Dispatcher.paramsFromArgument(model);</div><div class='line' id='LC14014'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.action = action;</div><div class='line' id='LC14015'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return params;</div><div class='line' id='LC14016'>&nbsp;&nbsp;&nbsp;&nbsp;}),</div><div class='line' id='LC14017'>&nbsp;&nbsp;&nbsp;&nbsp;escape: buntUndefined(Batman.escapeHTML)</div><div class='line' id='LC14018'>&nbsp;&nbsp;};</div><div class='line' id='LC14019'><br/></div><div class='line' id='LC14020'>&nbsp;&nbsp;(function() {</div><div class='line' id='LC14021'>&nbsp;&nbsp;&nbsp;&nbsp;var k, _i, _len, _ref, _results;</div><div class='line' id='LC14022'>&nbsp;&nbsp;&nbsp;&nbsp;_ref = [&#39;capitalize&#39;, &#39;singularize&#39;, &#39;underscore&#39;, &#39;camelize&#39;];</div><div class='line' id='LC14023'>&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC14024'>&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC14025'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k = _ref[_i];</div><div class='line' id='LC14026'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(Batman.Filters[k] = buntUndefined(Batman.helpers[k]));</div><div class='line' id='LC14027'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14028'>&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC14029'>&nbsp;&nbsp;})();</div><div class='line' id='LC14030'><br/></div><div class='line' id='LC14031'>&nbsp;&nbsp;Batman.developer.addFilters();</div><div class='line' id='LC14032'><br/></div><div class='line' id='LC14033'>}).call(this);</div><div class='line' id='LC14034'><br/></div><div class='line' id='LC14035'>(function() {</div><div class='line' id='LC14036'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC14037'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC14038'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC14039'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC14040'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14041'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC14042'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC14043'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14044'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC14045'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC14046'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC14047'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC14048'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14049'><br/></div><div class='line' id='LC14050'>&nbsp;&nbsp;Batman.RenderContext = (function() {</div><div class='line' id='LC14051'>&nbsp;&nbsp;&nbsp;&nbsp;var ContextProxy;</div><div class='line' id='LC14052'><br/></div><div class='line' id='LC14053'>&nbsp;&nbsp;&nbsp;&nbsp;RenderContext.deProxy = function(object) {</div><div class='line' id='LC14054'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((object != null) &amp;&amp; object.isContextProxy) {</div><div class='line' id='LC14055'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return object.get(&#39;proxiedObject&#39;);</div><div class='line' id='LC14056'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC14057'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return object;</div><div class='line' id='LC14058'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14059'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14060'><br/></div><div class='line' id='LC14061'>&nbsp;&nbsp;&nbsp;&nbsp;RenderContext.root = function() {</div><div class='line' id='LC14062'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var root;</div><div class='line' id='LC14063'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Batman.currentApp != null) {</div><div class='line' id='LC14064'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;root = Batman.currentApp.get(&#39;_renderContext&#39;);</div><div class='line' id='LC14065'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14066'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return root != null ? root : root = this.base;</div><div class='line' id='LC14067'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14068'><br/></div><div class='line' id='LC14069'>&nbsp;&nbsp;&nbsp;&nbsp;RenderContext.prototype.windowWrapper = {</div><div class='line' id='LC14070'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window: Batman.container</div><div class='line' id='LC14071'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14072'><br/></div><div class='line' id='LC14073'>&nbsp;&nbsp;&nbsp;&nbsp;function RenderContext(object, parent) {</div><div class='line' id='LC14074'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.object = object;</div><div class='line' id='LC14075'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.parent = parent;</div><div class='line' id='LC14076'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14077'><br/></div><div class='line' id='LC14078'>&nbsp;&nbsp;&nbsp;&nbsp;RenderContext.prototype.findKey = function(key) {</div><div class='line' id='LC14079'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var base, currentNode, val;</div><div class='line' id='LC14080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;base = key.split(&#39;.&#39;)[0].split(&#39;|&#39;)[0].trim();</div><div class='line' id='LC14081'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;currentNode = this;</div><div class='line' id='LC14082'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (currentNode) {</div><div class='line' id='LC14083'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;val = Batman.get(currentNode.object, base);</div><div class='line' id='LC14084'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof val !== &#39;undefined&#39;) {</div><div class='line' id='LC14085'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;val = Batman.get(currentNode.object, key);</div><div class='line' id='LC14086'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return [val, currentNode.object].map(this.constructor.deProxy);</div><div class='line' id='LC14087'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14088'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;currentNode = currentNode.parent;</div><div class='line' id='LC14089'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14090'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return [Batman.get(this.windowWrapper, key), this.windowWrapper];</div><div class='line' id='LC14091'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14092'><br/></div><div class='line' id='LC14093'>&nbsp;&nbsp;&nbsp;&nbsp;RenderContext.prototype.get = function(key) {</div><div class='line' id='LC14094'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.findKey(key)[0];</div><div class='line' id='LC14095'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14096'><br/></div><div class='line' id='LC14097'>&nbsp;&nbsp;&nbsp;&nbsp;RenderContext.prototype.contextForKey = function(key) {</div><div class='line' id='LC14098'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.findKey(key)[1];</div><div class='line' id='LC14099'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14100'><br/></div><div class='line' id='LC14101'>&nbsp;&nbsp;&nbsp;&nbsp;RenderContext.prototype.descend = function(object, scopedKey) {</div><div class='line' id='LC14102'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var oldObject;</div><div class='line' id='LC14103'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (scopedKey) {</div><div class='line' id='LC14104'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;oldObject = object;</div><div class='line' id='LC14105'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object = new Batman.Object();</div><div class='line' id='LC14106'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object[scopedKey] = oldObject;</div><div class='line' id='LC14107'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14108'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new this.constructor(object, this);</div><div class='line' id='LC14109'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14110'><br/></div><div class='line' id='LC14111'>&nbsp;&nbsp;&nbsp;&nbsp;RenderContext.prototype.descendWithDefinition = function(definition) {</div><div class='line' id='LC14112'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var proxy;</div><div class='line' id='LC14113'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proxy = new ContextProxy(definition);</div><div class='line' id='LC14114'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.descend(proxy, definition.attr);</div><div class='line' id='LC14115'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14116'><br/></div><div class='line' id='LC14117'>&nbsp;&nbsp;&nbsp;&nbsp;RenderContext.prototype.chain = function() {</div><div class='line' id='LC14118'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var parent, x;</div><div class='line' id='LC14119'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = [];</div><div class='line' id='LC14120'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parent = this;</div><div class='line' id='LC14121'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (parent) {</div><div class='line' id='LC14122'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x.push(parent.object);</div><div class='line' id='LC14123'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parent = parent.parent;</div><div class='line' id='LC14124'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14125'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return x;</div><div class='line' id='LC14126'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14127'><br/></div><div class='line' id='LC14128'>&nbsp;&nbsp;&nbsp;&nbsp;RenderContext.ContextProxy = ContextProxy = (function(_super) {</div><div class='line' id='LC14129'><br/></div><div class='line' id='LC14130'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__extends(ContextProxy, _super);</div><div class='line' id='LC14131'><br/></div><div class='line' id='LC14132'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ContextProxy.prototype.isContextProxy = true;</div><div class='line' id='LC14133'><br/></div><div class='line' id='LC14134'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ContextProxy.accessor(&#39;proxiedObject&#39;, function() {</div><div class='line' id='LC14135'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.binding.get(&#39;filteredValue&#39;);</div><div class='line' id='LC14136'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14137'><br/></div><div class='line' id='LC14138'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ContextProxy.accessor({</div><div class='line' id='LC14139'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function(key) {</div><div class='line' id='LC14140'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&quot;proxiedObject.&quot; + key);</div><div class='line' id='LC14141'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC14142'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set: function(key, value) {</div><div class='line' id='LC14143'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.set(&quot;proxiedObject.&quot; + key, value);</div><div class='line' id='LC14144'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC14145'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unset: function(key) {</div><div class='line' id='LC14146'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.unset(&quot;proxiedObject.&quot; + key);</div><div class='line' id='LC14147'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14148'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14149'><br/></div><div class='line' id='LC14150'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ContextProxy(definition) {</div><div class='line' id='LC14151'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.binding = new Batman.DOM.AbstractBinding(definition);</div><div class='line' id='LC14152'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14153'><br/></div><div class='line' id='LC14154'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ContextProxy;</div><div class='line' id='LC14155'><br/></div><div class='line' id='LC14156'>&nbsp;&nbsp;&nbsp;&nbsp;})(Batman.Object);</div><div class='line' id='LC14157'><br/></div><div class='line' id='LC14158'>&nbsp;&nbsp;&nbsp;&nbsp;return RenderContext;</div><div class='line' id='LC14159'><br/></div><div class='line' id='LC14160'>&nbsp;&nbsp;}).call(this);</div><div class='line' id='LC14161'><br/></div><div class='line' id='LC14162'>&nbsp;&nbsp;Batman.RenderContext.base = new Batman.RenderContext(Batman.RenderContext.prototype.windowWrapper);</div><div class='line' id='LC14163'><br/></div><div class='line' id='LC14164'>}).call(this);</div><div class='line' id='LC14165'><br/></div><div class='line' id='LC14166'>(function() {</div><div class='line' id='LC14167'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC14168'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC14169'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC14170'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC14171'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14172'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC14173'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC14174'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14175'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC14176'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC14177'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC14178'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC14179'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14180'><br/></div><div class='line' id='LC14181'>&nbsp;&nbsp;Batman.ViewStore = (function(_super) {</div><div class='line' id='LC14182'><br/></div><div class='line' id='LC14183'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(ViewStore, _super);</div><div class='line' id='LC14184'><br/></div><div class='line' id='LC14185'>&nbsp;&nbsp;&nbsp;&nbsp;function ViewStore() {</div><div class='line' id='LC14186'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ViewStore.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC14187'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._viewContents = {};</div><div class='line' id='LC14188'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._requestedPaths = new Batman.SimpleSet;</div><div class='line' id='LC14189'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14190'><br/></div><div class='line' id='LC14191'>&nbsp;&nbsp;&nbsp;&nbsp;ViewStore.prototype.propertyClass = Batman.Property;</div><div class='line' id='LC14192'><br/></div><div class='line' id='LC14193'>&nbsp;&nbsp;&nbsp;&nbsp;ViewStore.prototype.fetchView = function(path) {</div><div class='line' id='LC14194'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC14195'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.Request({</div><div class='line' id='LC14196'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url: Batman.Navigator.normalizePath(Batman.config.viewPrefix, &quot;&quot; + path + &quot;.html&quot;),</div><div class='line' id='LC14197'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type: &#39;html&#39;,</div><div class='line' id='LC14198'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;success: function(response) {</div><div class='line' id='LC14199'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.set(path, response);</div><div class='line' id='LC14200'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC14201'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error: function(response) {</div><div class='line' id='LC14202'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new Error(&quot;Could not load view from &quot; + path);</div><div class='line' id='LC14203'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14204'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14205'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14206'><br/></div><div class='line' id='LC14207'>&nbsp;&nbsp;&nbsp;&nbsp;ViewStore.accessor({</div><div class='line' id='LC14208'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;final&#39;: true,</div><div class='line' id='LC14209'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function(path) {</div><div class='line' id='LC14210'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var contents;</div><div class='line' id='LC14211'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (path.charAt(0) !== &#39;/&#39;) {</div><div class='line' id='LC14212'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&quot;/&quot; + path);</div><div class='line' id='LC14213'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14214'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this._viewContents[path]) {</div><div class='line' id='LC14215'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._viewContents[path];</div><div class='line' id='LC14216'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14217'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this._requestedPaths.has(path)) {</div><div class='line' id='LC14218'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC14219'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14220'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (contents = this._sourceFromDOM(path)) {</div><div class='line' id='LC14221'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return contents;</div><div class='line' id='LC14222'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14223'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Batman.config.fetchRemoteViews) {</div><div class='line' id='LC14224'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fetchView(path);</div><div class='line' id='LC14225'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC14226'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new Error(&quot;Couldn&#39;t find view source for \&#39;&quot; + path + &quot;\&#39;!&quot;);</div><div class='line' id='LC14227'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14228'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC14229'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set: function(path, content) {</div><div class='line' id='LC14230'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (path.charAt(0) !== &#39;/&#39;) {</div><div class='line' id='LC14231'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.set(&quot;/&quot; + path, content);</div><div class='line' id='LC14232'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14233'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._requestedPaths.add(path);</div><div class='line' id='LC14234'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._viewContents[path] = content;</div><div class='line' id='LC14235'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14236'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14237'><br/></div><div class='line' id='LC14238'>&nbsp;&nbsp;&nbsp;&nbsp;ViewStore.prototype.prefetch = function(path) {</div><div class='line' id='LC14239'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.get(path);</div><div class='line' id='LC14240'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC14241'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14242'><br/></div><div class='line' id='LC14243'>&nbsp;&nbsp;&nbsp;&nbsp;ViewStore.prototype._sourceFromDOM = function(path) {</div><div class='line' id='LC14244'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var node, relativePath;</div><div class='line' id='LC14245'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;relativePath = path.slice(1);</div><div class='line' id='LC14246'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (node = Batman.DOM.querySelector(document, &quot;[data-defineview*=&#39;&quot; + relativePath + &quot;&#39;]&quot;)) {</div><div class='line' id='LC14247'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.setImmediate(function() {</div><div class='line' id='LC14248'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC14249'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = node.parentNode) != null ? _ref.removeChild(node) : void 0;</div><div class='line' id='LC14250'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14251'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.defineView(path, node);</div><div class='line' id='LC14252'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14253'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14254'><br/></div><div class='line' id='LC14255'>&nbsp;&nbsp;&nbsp;&nbsp;return ViewStore;</div><div class='line' id='LC14256'><br/></div><div class='line' id='LC14257'>&nbsp;&nbsp;})(Batman.Object);</div><div class='line' id='LC14258'><br/></div><div class='line' id='LC14259'>}).call(this);</div><div class='line' id='LC14260'><br/></div><div class='line' id='LC14261'>(function() {</div><div class='line' id='LC14262'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC14263'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC14264'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC14265'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC14266'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14267'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC14268'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC14269'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14270'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC14271'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC14272'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC14273'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC14274'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC14275'>&nbsp;&nbsp;&nbsp;&nbsp;__slice = [].slice;</div><div class='line' id='LC14276'><br/></div><div class='line' id='LC14277'>&nbsp;&nbsp;Batman.View = (function(_super) {</div><div class='line' id='LC14278'><br/></div><div class='line' id='LC14279'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(View, _super);</div><div class='line' id='LC14280'><br/></div><div class='line' id='LC14281'>&nbsp;&nbsp;&nbsp;&nbsp;View.YieldStorage = (function(_super1) {</div><div class='line' id='LC14282'><br/></div><div class='line' id='LC14283'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__extends(YieldStorage, _super1);</div><div class='line' id='LC14284'><br/></div><div class='line' id='LC14285'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function YieldStorage() {</div><div class='line' id='LC14286'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return YieldStorage.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC14287'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14288'><br/></div><div class='line' id='LC14289'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;YieldStorage.wrapAccessor(function(core) {</div><div class='line' id='LC14290'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return {</div><div class='line' id='LC14291'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function(key) {</div><div class='line' id='LC14292'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var val;</div><div class='line' id='LC14293'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;val = core.get.call(this, key);</div><div class='line' id='LC14294'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(val != null)) {</div><div class='line' id='LC14295'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;val = this.set(key, []);</div><div class='line' id='LC14296'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14297'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return val;</div><div class='line' id='LC14298'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14299'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14300'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14301'><br/></div><div class='line' id='LC14302'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return YieldStorage;</div><div class='line' id='LC14303'><br/></div><div class='line' id='LC14304'>&nbsp;&nbsp;&nbsp;&nbsp;})(Batman.Hash);</div><div class='line' id='LC14305'><br/></div><div class='line' id='LC14306'>&nbsp;&nbsp;&nbsp;&nbsp;View.store = new Batman.ViewStore();</div><div class='line' id='LC14307'><br/></div><div class='line' id='LC14308'>&nbsp;&nbsp;&nbsp;&nbsp;View.option = function() {</div><div class='line' id='LC14309'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var keys;</div><div class='line' id='LC14310'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keys = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC14311'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.accessor.apply(this, __slice.call(keys).concat([{</div><div class='line' id='LC14312'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function(key) {</div><div class='line' id='LC14313'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC14314'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = this.get(&quot;argumentBindings.&quot; + key)) != null ? _ref.get(&#39;filteredValue&#39;) : void 0;</div><div class='line' id='LC14315'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC14316'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set: function(key, value) {</div><div class='line' id='LC14317'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC14318'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = this.get(&quot;argumentBindings.&quot; + key)) != null ? _ref.set(&#39;filteredValue&#39;, value) : void 0;</div><div class='line' id='LC14319'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC14320'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unset: function(key) {</div><div class='line' id='LC14321'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC14322'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (_ref = this.get(&quot;argumentBindings.&quot; + key)) != null ? _ref.unset(&#39;filteredValue&#39;) : void 0;</div><div class='line' id='LC14323'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14324'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}]));</div><div class='line' id='LC14325'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14326'><br/></div><div class='line' id='LC14327'>&nbsp;&nbsp;&nbsp;&nbsp;View.prototype.isView = true;</div><div class='line' id='LC14328'><br/></div><div class='line' id='LC14329'>&nbsp;&nbsp;&nbsp;&nbsp;View.prototype.cache = true;</div><div class='line' id='LC14330'><br/></div><div class='line' id='LC14331'>&nbsp;&nbsp;&nbsp;&nbsp;View.prototype._rendered = false;</div><div class='line' id='LC14332'><br/></div><div class='line' id='LC14333'>&nbsp;&nbsp;&nbsp;&nbsp;View.prototype.node = null;</div><div class='line' id='LC14334'><br/></div><div class='line' id='LC14335'>&nbsp;&nbsp;&nbsp;&nbsp;View.prototype.event(&#39;ready&#39;).oneShot = true;</div><div class='line' id='LC14336'><br/></div><div class='line' id='LC14337'>&nbsp;&nbsp;&nbsp;&nbsp;View.accessor(&#39;argumentBindings&#39;, function() {</div><div class='line' id='LC14338'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC14339'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Batman.TerminalAccessible(function(key) {</div><div class='line' id='LC14340'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var bindingKey, context, definition, keyPath, node, _ref;</div><div class='line' id='LC14341'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!((node = _this.get(&#39;node&#39;)) &amp;&amp; (context = _this.get(&#39;context&#39;)))) {</div><div class='line' id='LC14342'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC14343'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14344'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keyPath = node.getAttribute((&quot;data-view-&quot; + key).toLowerCase());</div><div class='line' id='LC14345'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (keyPath == null) {</div><div class='line' id='LC14346'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC14347'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14348'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bindingKey = &quot;_argumentBinding&quot; + key;</div><div class='line' id='LC14349'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = _this[bindingKey]) != null) {</div><div class='line' id='LC14350'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref.die();</div><div class='line' id='LC14351'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14352'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;definition = new Batman.DOM.ReaderBindingDefinition(node, keyPath, context);</div><div class='line' id='LC14353'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this[bindingKey] = new Batman.DOM.ViewArgumentBinding(definition);</div><div class='line' id='LC14354'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14355'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14356'><br/></div><div class='line' id='LC14357'>&nbsp;&nbsp;&nbsp;&nbsp;View.accessor(&#39;html&#39;, {</div><div class='line' id='LC14358'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function() {</div><div class='line' id='LC14359'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var source;</div><div class='line' id='LC14360'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.html &amp;&amp; this.html.length &gt; 0) {</div><div class='line' id='LC14361'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.html;</div><div class='line' id='LC14362'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14363'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(source = this.get(&#39;source&#39;))) {</div><div class='line' id='LC14364'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC14365'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14366'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;source = Batman.Navigator.normalizePath(source);</div><div class='line' id='LC14367'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.html = this.constructor.store.get(source);</div><div class='line' id='LC14368'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC14369'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set: function(_, html) {</div><div class='line' id='LC14370'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.html = html;</div><div class='line' id='LC14371'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14372'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14373'><br/></div><div class='line' id='LC14374'>&nbsp;&nbsp;&nbsp;&nbsp;View.accessor(&#39;node&#39;, {</div><div class='line' id='LC14375'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get: function() {</div><div class='line' id='LC14376'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var html;</div><div class='line' id='LC14377'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.node == null) {</div><div class='line' id='LC14378'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;html = this.get(&#39;html&#39;);</div><div class='line' id='LC14379'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(html &amp;&amp; html.length &gt; 0)) {</div><div class='line' id='LC14380'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC14381'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14382'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.node = document.createElement(&#39;div&#39;);</div><div class='line' id='LC14383'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._setNodeOwner(this.node);</div><div class='line' id='LC14384'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.setInnerHTML(this.node, html);</div><div class='line' id='LC14385'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14386'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.node;</div><div class='line' id='LC14387'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC14388'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set: function(_, node) {</div><div class='line' id='LC14389'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var updateHTML, _this = this;</div><div class='line' id='LC14390'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.node = node;</div><div class='line' id='LC14391'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._setNodeOwner(node);</div><div class='line' id='LC14392'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;updateHTML = function(html) {</div><div class='line' id='LC14393'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (html != null) {</div><div class='line' id='LC14394'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.setInnerHTML(_this.node, html);</div><div class='line' id='LC14395'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.forget(&#39;html&#39;, updateHTML);</div><div class='line' id='LC14396'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14397'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14398'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.observeAndFire(&#39;html&#39;, updateHTML);</div><div class='line' id='LC14399'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return node;</div><div class='line' id='LC14400'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14401'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14402'><br/></div><div class='line' id='LC14403'>&nbsp;&nbsp;&nbsp;&nbsp;View.accessor(&#39;yields&#39;, function() {</div><div class='line' id='LC14404'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new this.constructor.YieldStorage;</div><div class='line' id='LC14405'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14406'><br/></div><div class='line' id='LC14407'>&nbsp;&nbsp;&nbsp;&nbsp;View.accessor(&#39;fetched?&#39;, function() {</div><div class='line' id='LC14408'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&#39;source&#39;) != null;</div><div class='line' id='LC14409'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14410'><br/></div><div class='line' id='LC14411'>&nbsp;&nbsp;&nbsp;&nbsp;View.accessor(&#39;readyToRender&#39;, function() {</div><div class='line' id='LC14412'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC14413'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&#39;node&#39;) &amp;&amp; (this.get(&#39;fetched?&#39;) ? ((_ref = this.get(&#39;html&#39;)) != null ? _ref.length : void 0) &gt; 0 : true);</div><div class='line' id='LC14414'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14415'><br/></div><div class='line' id='LC14416'>&nbsp;&nbsp;&nbsp;&nbsp;function View(options) {</div><div class='line' id='LC14417'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var context, _this = this;</div><div class='line' id='LC14418'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (options == null) {</div><div class='line' id='LC14419'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options = {};</div><div class='line' id='LC14420'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14421'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;context = options.context;</div><div class='line' id='LC14422'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (context) {</div><div class='line' id='LC14423'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(context instanceof Batman.RenderContext)) {</div><div class='line' id='LC14424'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;context = Batman.RenderContext.root().descend(context);</div><div class='line' id='LC14425'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14426'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC14427'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;context = Batman.RenderContext.root();</div><div class='line' id='LC14428'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14429'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.context = context.descend(this);</div><div class='line' id='LC14430'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;View.__super__.constructor.call(this, options);</div><div class='line' id='LC14431'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.Property.withoutTracking(function() {</div><div class='line' id='LC14432'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.observeAndFire(&#39;readyToRender&#39;, function(ready) {</div><div class='line' id='LC14433'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (ready) {</div><div class='line' id='LC14434'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.render();</div><div class='line' id='LC14435'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14436'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14437'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14438'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14439'><br/></div><div class='line' id='LC14440'>&nbsp;&nbsp;&nbsp;&nbsp;View.prototype.render = function() {</div><div class='line' id='LC14441'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var node, _this = this;</div><div class='line' id='LC14442'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this._rendered) {</div><div class='line' id='LC14443'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC14444'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14445'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._rendered = true;</div><div class='line' id='LC14446'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._renderer = new Batman.Renderer(node = this.get(&#39;node&#39;), this.get(&#39;context&#39;), this);</div><div class='line' id='LC14447'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this._renderer.once(&#39;rendered&#39;, function() {</div><div class='line' id='LC14448'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.fire(&#39;ready&#39;, node);</div><div class='line' id='LC14449'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14450'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14451'><br/></div><div class='line' id='LC14452'>&nbsp;&nbsp;&nbsp;&nbsp;View.prototype.isInDOM = function() {</div><div class='line' id='LC14453'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var node;</div><div class='line' id='LC14454'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((node = this.get(&#39;node&#39;))) {</div><div class='line' id='LC14455'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (node.parentNode != null) || this.get(&#39;yields&#39;).some(function(name, nodes) {</div><div class='line' id='LC14456'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _i, _len;</div><div class='line' id='LC14457'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = nodes.length; _i &lt; _len; _i++) {</div><div class='line' id='LC14458'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node = nodes[_i].node;</div><div class='line' id='LC14459'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (node.parentNode != null) {</div><div class='line' id='LC14460'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC14461'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14462'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14463'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC14464'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14465'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC14466'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC14467'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14468'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14469'><br/></div><div class='line' id='LC14470'>&nbsp;&nbsp;&nbsp;&nbsp;View.prototype.die = function() {</div><div class='line' id='LC14471'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC14472'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fire(&#39;destroy&#39;, this.node);</div><div class='line' id='LC14473'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.forget();</div><div class='line' id='LC14474'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = this._batman.properties) != null) {</div><div class='line' id='LC14475'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref.forEach(function(key, property) {</div><div class='line' id='LC14476'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return property.die();</div><div class='line' id='LC14477'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14478'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14479'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&#39;yields&#39;).forEach(function(name, actions) {</div><div class='line' id='LC14480'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var node, _i, _len, _results;</div><div class='line' id='LC14481'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC14482'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = actions.length; _i &lt; _len; _i++) {</div><div class='line' id='LC14483'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node = actions[_i].node;</div><div class='line' id='LC14484'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(Batman.DOM.didDestroyNode(node));</div><div class='line' id='LC14485'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14486'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC14487'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14488'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14489'><br/></div><div class='line' id='LC14490'>&nbsp;&nbsp;&nbsp;&nbsp;View.prototype.applyYields = function() {</div><div class='line' id='LC14491'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&#39;yields&#39;).forEach(function(name, nodes) {</div><div class='line' id='LC14492'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var action, node, yieldObject, _i, _len, _ref, _results;</div><div class='line' id='LC14493'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;yieldObject = Batman.DOM.Yield.withName(name);</div><div class='line' id='LC14494'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC14495'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = nodes.length; _i &lt; _len; _i++) {</div><div class='line' id='LC14496'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = nodes[_i], node = _ref.node, action = _ref.action;</div><div class='line' id='LC14497'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(yieldObject[action](node));</div><div class='line' id='LC14498'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14499'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC14500'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14501'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14502'><br/></div><div class='line' id='LC14503'>&nbsp;&nbsp;&nbsp;&nbsp;View.prototype.retractYields = function() {</div><div class='line' id='LC14504'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&#39;yields&#39;).forEach(function(name, nodes) {</div><div class='line' id='LC14505'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var node, _i, _len, _ref, _results;</div><div class='line' id='LC14506'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC14507'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = nodes.length; _i &lt; _len; _i++) {</div><div class='line' id='LC14508'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node = nodes[_i].node;</div><div class='line' id='LC14509'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push((_ref = node.parentNode) != null ? _ref.removeChild(node) : void 0);</div><div class='line' id='LC14510'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14511'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC14512'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14513'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14514'><br/></div><div class='line' id='LC14515'>&nbsp;&nbsp;&nbsp;&nbsp;View.prototype.pushYieldAction = function(key, action, node) {</div><div class='line' id='LC14516'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._setNodeYielder(node);</div><div class='line' id='LC14517'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&quot;yields&quot;).get(key).push({</div><div class='line' id='LC14518'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node: node,</div><div class='line' id='LC14519'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;action: action</div><div class='line' id='LC14520'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14521'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14522'><br/></div><div class='line' id='LC14523'>&nbsp;&nbsp;&nbsp;&nbsp;View.prototype._setNodeOwner = function(node) {</div><div class='line' id='LC14524'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman._data(node, &#39;view&#39;, this);</div><div class='line' id='LC14525'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14526'><br/></div><div class='line' id='LC14527'>&nbsp;&nbsp;&nbsp;&nbsp;View.prototype._setNodeYielder = function(node) {</div><div class='line' id='LC14528'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman._data(node, &#39;yielder&#39;, this);</div><div class='line' id='LC14529'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14530'><br/></div><div class='line' id='LC14531'>&nbsp;&nbsp;&nbsp;&nbsp;View.prototype.on(&#39;ready&#39;, function() {</div><div class='line' id='LC14532'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return typeof this.ready === &quot;function&quot; ? this.ready.apply(this, arguments) : void 0;</div><div class='line' id='LC14533'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14534'><br/></div><div class='line' id='LC14535'>&nbsp;&nbsp;&nbsp;&nbsp;View.prototype.on(&#39;appear&#39;, function() {</div><div class='line' id='LC14536'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return typeof this.viewDidAppear === &quot;function&quot; ? this.viewDidAppear.apply(this, arguments) : void 0;</div><div class='line' id='LC14537'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14538'><br/></div><div class='line' id='LC14539'>&nbsp;&nbsp;&nbsp;&nbsp;View.prototype.on(&#39;disappear&#39;, function() {</div><div class='line' id='LC14540'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return typeof this.viewDidDisappear === &quot;function&quot; ? this.viewDidDisappear.apply(this, arguments) : void 0;</div><div class='line' id='LC14541'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14542'><br/></div><div class='line' id='LC14543'>&nbsp;&nbsp;&nbsp;&nbsp;View.prototype.on(&#39;beforeAppear&#39;, function() {</div><div class='line' id='LC14544'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return typeof this.viewWillAppear === &quot;function&quot; ? this.viewWillAppear.apply(this, arguments) : void 0;</div><div class='line' id='LC14545'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14546'><br/></div><div class='line' id='LC14547'>&nbsp;&nbsp;&nbsp;&nbsp;View.prototype.on(&#39;beforeDisappear&#39;, function() {</div><div class='line' id='LC14548'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return typeof this.viewWillDisappear === &quot;function&quot; ? this.viewWillDisappear.apply(this, arguments) : void 0;</div><div class='line' id='LC14549'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14550'><br/></div><div class='line' id='LC14551'>&nbsp;&nbsp;&nbsp;&nbsp;return View;</div><div class='line' id='LC14552'><br/></div><div class='line' id='LC14553'>&nbsp;&nbsp;}).call(this, Batman.Object);</div><div class='line' id='LC14554'><br/></div><div class='line' id='LC14555'>}).call(this);</div><div class='line' id='LC14556'><br/></div><div class='line' id='LC14557'>(function() {</div><div class='line' id='LC14558'>&nbsp;&nbsp;var Yield, __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC14559'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) {</div><div class='line' id='LC14560'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var key in parent) {</div><div class='line' id='LC14561'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (__hasProp.call(parent, key)) child[key] = parent[key];</div><div class='line' id='LC14562'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14563'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function ctor() {</div><div class='line' id='LC14564'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor = child;</div><div class='line' id='LC14565'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14566'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ctor.prototype = parent.prototype;</div><div class='line' id='LC14567'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.prototype = new ctor();</div><div class='line' id='LC14568'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child.__super__ = parent.prototype;</div><div class='line' id='LC14569'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return child;</div><div class='line' id='LC14570'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC14571'>&nbsp;&nbsp;&nbsp;&nbsp;__slice = [].slice;</div><div class='line' id='LC14572'><br/></div><div class='line' id='LC14573'>&nbsp;&nbsp;Batman.DOM.Yield = Yield = (function(_super) {</div><div class='line' id='LC14574'><br/></div><div class='line' id='LC14575'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(Yield, _super);</div><div class='line' id='LC14576'><br/></div><div class='line' id='LC14577'>&nbsp;&nbsp;&nbsp;&nbsp;Yield.yields = {};</div><div class='line' id='LC14578'><br/></div><div class='line' id='LC14579'>&nbsp;&nbsp;&nbsp;&nbsp;Yield.queued = function(fn) {</div><div class='line' id='LC14580'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function() {</div><div class='line' id='LC14581'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var args, handler, _this = this;</div><div class='line' id='LC14582'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args = 1 &lt;= arguments.length ? __slice.call(arguments, 0) : [];</div><div class='line' id='LC14583'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.containerNode != null) {</div><div class='line' id='LC14584'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return fn.apply(this, args);</div><div class='line' id='LC14585'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC14586'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return handler = this.observe(&#39;containerNode&#39;, function() {</div><div class='line' id='LC14587'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result;</div><div class='line' id='LC14588'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = fn.apply(_this, args);</div><div class='line' id='LC14589'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.forget(&#39;containerNode&#39;, handler);</div><div class='line' id='LC14590'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC14591'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14592'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14593'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14594'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14595'><br/></div><div class='line' id='LC14596'>&nbsp;&nbsp;&nbsp;&nbsp;Yield.reset = function() {</div><div class='line' id='LC14597'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.yields = {};</div><div class='line' id='LC14598'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14599'><br/></div><div class='line' id='LC14600'>&nbsp;&nbsp;&nbsp;&nbsp;Yield.withName = function(name) {</div><div class='line' id='LC14601'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _base;</div><div class='line' id='LC14602'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(_base = this.yields)[name] || (_base[name] = new this({</div><div class='line' id='LC14603'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: name</div><div class='line' id='LC14604'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}));</div><div class='line' id='LC14605'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.yields[name];</div><div class='line' id='LC14606'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14607'><br/></div><div class='line' id='LC14608'>&nbsp;&nbsp;&nbsp;&nbsp;Yield.forEach = function(f) {</div><div class='line' id='LC14609'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var name, yieldObject, _ref;</div><div class='line' id='LC14610'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this.yields;</div><div class='line' id='LC14611'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (name in _ref) {</div><div class='line' id='LC14612'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;yieldObject = _ref[name];</div><div class='line' id='LC14613'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f(yieldObject);</div><div class='line' id='LC14614'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14615'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14616'><br/></div><div class='line' id='LC14617'>&nbsp;&nbsp;&nbsp;&nbsp;Yield.clearAll = function() {</div><div class='line' id='LC14618'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.forEach(function(yieldObject) {</div><div class='line' id='LC14619'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return yieldObject.clear();</div><div class='line' id='LC14620'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14621'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14622'><br/></div><div class='line' id='LC14623'>&nbsp;&nbsp;&nbsp;&nbsp;Yield.cycleAll = function() {</div><div class='line' id='LC14624'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.forEach(function(yieldObject) {</div><div class='line' id='LC14625'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return yieldObject.cycle();</div><div class='line' id='LC14626'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14627'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14628'><br/></div><div class='line' id='LC14629'>&nbsp;&nbsp;&nbsp;&nbsp;Yield.clearAllStale = function() {</div><div class='line' id='LC14630'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.forEach(function(yieldObject) {</div><div class='line' id='LC14631'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return yieldObject.clearStale();</div><div class='line' id='LC14632'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14633'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14634'><br/></div><div class='line' id='LC14635'>&nbsp;&nbsp;&nbsp;&nbsp;function Yield() {</div><div class='line' id='LC14636'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cycle();</div><div class='line' id='LC14637'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14638'><br/></div><div class='line' id='LC14639'>&nbsp;&nbsp;&nbsp;&nbsp;Yield.prototype.cycle = function() {</div><div class='line' id='LC14640'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.currentVersionNodes = [];</div><div class='line' id='LC14641'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14642'><br/></div><div class='line' id='LC14643'>&nbsp;&nbsp;&nbsp;&nbsp;Yield.prototype.clear = Yield.queued(function() {</div><div class='line' id='LC14644'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var child, _i, _len, _ref, _results;</div><div class='line' id='LC14645'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cycle();</div><div class='line' id='LC14646'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = (function() {</div><div class='line' id='LC14647'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _j, _len, _ref, _results1;</div><div class='line' id='LC14648'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this.containerNode.childNodes;</div><div class='line' id='LC14649'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results1 = [];</div><div class='line' id='LC14650'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_j = 0, _len = _ref.length; _j &lt; _len; _j++) {</div><div class='line' id='LC14651'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child = _ref[_j];</div><div class='line' id='LC14652'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results1.push(child);</div><div class='line' id='LC14653'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14654'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results1;</div><div class='line' id='LC14655'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}).call(this);</div><div class='line' id='LC14656'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC14657'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC14658'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child = _ref[_i];</div><div class='line' id='LC14659'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(Batman.DOM.removeOrDestroyNode(child));</div><div class='line' id='LC14660'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14661'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC14662'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14663'><br/></div><div class='line' id='LC14664'>&nbsp;&nbsp;&nbsp;&nbsp;Yield.prototype.clearStale = Yield.queued(function() {</div><div class='line' id='LC14665'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var child, _i, _len, _ref, _results;</div><div class='line' id='LC14666'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = (function() {</div><div class='line' id='LC14667'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _j, _len, _ref, _results1;</div><div class='line' id='LC14668'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = this.containerNode.childNodes;</div><div class='line' id='LC14669'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results1 = [];</div><div class='line' id='LC14670'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_j = 0, _len = _ref.length; _j &lt; _len; _j++) {</div><div class='line' id='LC14671'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child = _ref[_j];</div><div class='line' id='LC14672'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results1.push(child);</div><div class='line' id='LC14673'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14674'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results1;</div><div class='line' id='LC14675'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}).call(this);</div><div class='line' id='LC14676'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC14677'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC14678'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child = _ref[_i];</div><div class='line' id='LC14679'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!~this.currentVersionNodes.indexOf(child)) {</div><div class='line' id='LC14680'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(Batman.DOM.removeOrDestroyNode(child));</div><div class='line' id='LC14681'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14682'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14683'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC14684'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14685'><br/></div><div class='line' id='LC14686'>&nbsp;&nbsp;&nbsp;&nbsp;Yield.prototype.append = Yield.queued(function(node) {</div><div class='line' id='LC14687'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.currentVersionNodes.push(node);</div><div class='line' id='LC14688'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.appendChild(this.containerNode, node, true);</div><div class='line' id='LC14689'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14690'><br/></div><div class='line' id='LC14691'>&nbsp;&nbsp;&nbsp;&nbsp;Yield.prototype.replace = Yield.queued(function(node) {</div><div class='line' id='LC14692'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.clear();</div><div class='line' id='LC14693'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.append(node);</div><div class='line' id='LC14694'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14695'><br/></div><div class='line' id='LC14696'>&nbsp;&nbsp;&nbsp;&nbsp;return Yield;</div><div class='line' id='LC14697'><br/></div><div class='line' id='LC14698'>&nbsp;&nbsp;})(Batman.Object);</div><div class='line' id='LC14699'><br/></div><div class='line' id='LC14700'>}).call(this);</div><div class='line' id='LC14701'><br/></div><div class='line' id='LC14702'>(function() {</div><div class='line' id='LC14703'><br/></div><div class='line' id='LC14704'><br/></div><div class='line' id='LC14705'><br/></div><div class='line' id='LC14706'>}).call(this);</div><div class='line' id='LC14707'>(function() {</div><div class='line' id='LC14708'><br/></div><div class='line' id='LC14709'>&nbsp;&nbsp;Batman.extend(Batman.DOM, {</div><div class='line' id='LC14710'>&nbsp;&nbsp;&nbsp;&nbsp;querySelectorAll: function(node, selector) {</div><div class='line' id='LC14711'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return jQuery(selector, node);</div><div class='line' id='LC14712'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC14713'>&nbsp;&nbsp;&nbsp;&nbsp;querySelector: function(node, selector) {</div><div class='line' id='LC14714'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return jQuery(selector, node)[0];</div><div class='line' id='LC14715'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC14716'>&nbsp;&nbsp;&nbsp;&nbsp;setInnerHTML: function(node, html) {</div><div class='line' id='LC14717'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var child, childNodes, result, _i, _j, _len, _len1;</div><div class='line' id='LC14718'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;childNodes = (function() {</div><div class='line' id='LC14719'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _i, _len, _ref, _results;</div><div class='line' id='LC14720'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = node.childNodes;</div><div class='line' id='LC14721'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC14722'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = _ref.length; _i &lt; _len; _i++) {</div><div class='line' id='LC14723'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child = _ref[_i];</div><div class='line' id='LC14724'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push(child);</div><div class='line' id='LC14725'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14726'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC14727'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})();</div><div class='line' id='LC14728'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_i = 0, _len = childNodes.length; _i &lt; _len; _i++) {</div><div class='line' id='LC14729'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child = childNodes[_i];</div><div class='line' id='LC14730'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.willRemoveNode(child);</div><div class='line' id='LC14731'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14732'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = jQuery(node).html(html);</div><div class='line' id='LC14733'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (_j = 0, _len1 = childNodes.length; _j &lt; _len1; _j++) {</div><div class='line' id='LC14734'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;child = childNodes[_j];</div><div class='line' id='LC14735'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.didRemoveNode(child);</div><div class='line' id='LC14736'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14737'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC14738'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC14739'>&nbsp;&nbsp;&nbsp;&nbsp;removeNode: function(node) {</div><div class='line' id='LC14740'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC14741'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.willRemoveNode(node);</div><div class='line' id='LC14742'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = node.parentNode) != null) {</div><div class='line' id='LC14743'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref.removeChild(node);</div><div class='line' id='LC14744'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14745'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.didRemoveNode(node);</div><div class='line' id='LC14746'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC14747'>&nbsp;&nbsp;&nbsp;&nbsp;destroyNode: function(node) {</div><div class='line' id='LC14748'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.willDestroyNode(node);</div><div class='line' id='LC14749'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.willRemoveNode(node);</div><div class='line' id='LC14750'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jQuery(node).remove();</div><div class='line' id='LC14751'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.didRemoveNode(node);</div><div class='line' id='LC14752'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.didDestroyNode(node);</div><div class='line' id='LC14753'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC14754'>&nbsp;&nbsp;&nbsp;&nbsp;appendChild: function(parent, child) {</div><div class='line' id='LC14755'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Batman.DOM.willInsertNode(child);</div><div class='line' id='LC14756'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jQuery(parent).append(child);</div><div class='line' id='LC14757'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.didInsertNode(child);</div><div class='line' id='LC14758'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC14759'>&nbsp;&nbsp;&nbsp;&nbsp;innerText: function(node) {</div><div class='line' id='LC14760'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return jQuery(node).text();</div><div class='line' id='LC14761'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14762'>&nbsp;&nbsp;});</div><div class='line' id='LC14763'><br/></div><div class='line' id='LC14764'>&nbsp;&nbsp;Batman.Request.prototype._parseResponseHeaders = function(xhr) {</div><div class='line' id='LC14765'>&nbsp;&nbsp;&nbsp;&nbsp;var headers;</div><div class='line' id='LC14766'>&nbsp;&nbsp;&nbsp;&nbsp;return headers = xhr.getAllResponseHeaders().split(&#39;\n&#39;).reduce(function(acc, header) {</div><div class='line' id='LC14767'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var key, matches, value;</div><div class='line' id='LC14768'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (matches = header.match(/([^:]*):\s*(.*)/)) {</div><div class='line' id='LC14769'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key = matches[1];</div><div class='line' id='LC14770'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value = matches[2];</div><div class='line' id='LC14771'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;acc[key] = value;</div><div class='line' id='LC14772'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14773'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return acc;</div><div class='line' id='LC14774'>&nbsp;&nbsp;&nbsp;&nbsp;}, {});</div><div class='line' id='LC14775'>&nbsp;&nbsp;};</div><div class='line' id='LC14776'><br/></div><div class='line' id='LC14777'>&nbsp;&nbsp;Batman.Request.prototype._prepareOptions = function(data) {</div><div class='line' id='LC14778'>&nbsp;&nbsp;&nbsp;&nbsp;var options, _ref, _this = this;</div><div class='line' id='LC14779'>&nbsp;&nbsp;&nbsp;&nbsp;options = {</div><div class='line' id='LC14780'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url: this.get(&#39;url&#39;),</div><div class='line' id='LC14781'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type: this.get(&#39;method&#39;),</div><div class='line' id='LC14782'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dataType: this.get(&#39;type&#39;),</div><div class='line' id='LC14783'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data: data || this.get(&#39;data&#39;),</div><div class='line' id='LC14784'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;username: this.get(&#39;username&#39;),</div><div class='line' id='LC14785'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;password: this.get(&#39;password&#39;),</div><div class='line' id='LC14786'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;headers: this.get(&#39;headers&#39;),</div><div class='line' id='LC14787'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;beforeSend: function() {</div><div class='line' id='LC14788'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.fire(&#39;loading&#39;);</div><div class='line' id='LC14789'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC14790'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;success: function(response, textStatus, xhr) {</div><div class='line' id='LC14791'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.mixin({</div><div class='line' id='LC14792'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xhr: xhr,</div><div class='line' id='LC14793'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;status: xhr.status,</div><div class='line' id='LC14794'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response: response,</div><div class='line' id='LC14795'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;responseHeaders: _this._parseResponseHeaders(xhr)</div><div class='line' id='LC14796'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14797'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.fire(&#39;success&#39;, response);</div><div class='line' id='LC14798'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC14799'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error: function(xhr, status, error) {</div><div class='line' id='LC14800'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.mixin({</div><div class='line' id='LC14801'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xhr: xhr,</div><div class='line' id='LC14802'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;status: xhr.status,</div><div class='line' id='LC14803'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response: xhr.responseText,</div><div class='line' id='LC14804'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;responseHeaders: _this._parseResponseHeaders(xhr)</div><div class='line' id='LC14805'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14806'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xhr.request = _this;</div><div class='line' id='LC14807'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.fire(&#39;error&#39;, xhr);</div><div class='line' id='LC14808'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC14809'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;complete: function() {</div><div class='line' id='LC14810'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.fire(&#39;loaded&#39;);</div><div class='line' id='LC14811'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14812'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14813'>&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = this.get(&#39;method&#39;)) === &#39;PUT&#39; || _ref === &#39;POST&#39;) {</div><div class='line' id='LC14814'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this.hasFileUploads()) {</div><div class='line' id='LC14815'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.contentType = this.get(&#39;contentType&#39;);</div><div class='line' id='LC14816'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof options.data === &#39;object&#39;) {</div><div class='line' id='LC14817'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.processData = false;</div><div class='line' id='LC14818'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.data = Batman.URI.queryFromParams(options.data);</div><div class='line' id='LC14819'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14820'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC14821'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.contentType = false;</div><div class='line' id='LC14822'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.processData = false;</div><div class='line' id='LC14823'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.data = this.constructor.objectToFormData(options.data);</div><div class='line' id='LC14824'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14825'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14826'>&nbsp;&nbsp;&nbsp;&nbsp;return options;</div><div class='line' id='LC14827'>&nbsp;&nbsp;};</div><div class='line' id='LC14828'><br/></div><div class='line' id='LC14829'>&nbsp;&nbsp;Batman.Request.prototype.send = function(data) {</div><div class='line' id='LC14830'>&nbsp;&nbsp;&nbsp;&nbsp;return jQuery.ajax(this._prepareOptions(data));</div><div class='line' id='LC14831'>&nbsp;&nbsp;};</div><div class='line' id='LC14832'><br/></div><div class='line' id='LC14833'>&nbsp;&nbsp;Batman.mixins.animation = {</div><div class='line' id='LC14834'>&nbsp;&nbsp;&nbsp;&nbsp;show: function(addToParent) {</div><div class='line' id='LC14835'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var jq, show, _ref, _ref1;</div><div class='line' id='LC14836'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jq = $(this);</div><div class='line' id='LC14837'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;show = function() {</div><div class='line' id='LC14838'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return jq.show(600);</div><div class='line' id='LC14839'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14840'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (addToParent) {</div><div class='line' id='LC14841'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = addToParent.append) != null) {</div><div class='line' id='LC14842'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref.appendChild(this);</div><div class='line' id='LC14843'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14844'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref1 = addToParent.before) != null) {</div><div class='line' id='LC14845'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref1.parentNode.insertBefore(this, addToParent.before);</div><div class='line' id='LC14846'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14847'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jq.hide();</div><div class='line' id='LC14848'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setTimeout(show, 0);</div><div class='line' id='LC14849'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC14850'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;show();</div><div class='line' id='LC14851'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14852'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC14853'>&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC14854'>&nbsp;&nbsp;&nbsp;&nbsp;hide: function(removeFromParent) {</div><div class='line' id='LC14855'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _this = this;</div><div class='line' id='LC14856'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(this).hide(600, function() {</div><div class='line' id='LC14857'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref;</div><div class='line' id='LC14858'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (removeFromParent) {</div><div class='line' id='LC14859'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((_ref = _this.parentNode) != null) {</div><div class='line' id='LC14860'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref.removeChild(_this);</div><div class='line' id='LC14861'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14862'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14863'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Batman.DOM.didRemoveNode(_this);</div><div class='line' id='LC14864'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14865'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC14866'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14867'>&nbsp;&nbsp;};</div><div class='line' id='LC14868'><br/></div><div class='line' id='LC14869'>}).call(this);</div><div class='line' id='LC14870'>(function() {</div><div class='line' id='LC14871'>&nbsp;&nbsp;var lastEvents, source, widgets, _ref,</div><div class='line' id='LC14872'>&nbsp;&nbsp;&nbsp;&nbsp;__hasProp = {}.hasOwnProperty,</div><div class='line' id='LC14873'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },</div><div class='line' id='LC14874'>&nbsp;&nbsp;&nbsp;&nbsp;__bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };</div><div class='line' id='LC14875'><br/></div><div class='line' id='LC14876'>&nbsp;&nbsp;Batman.Filters.prettyNumber = function(num) {</div><div class='line' id='LC14877'>&nbsp;&nbsp;&nbsp;&nbsp;if (!isNaN(num)) {</div><div class='line' id='LC14878'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, &quot;,&quot;);</div><div class='line' id='LC14879'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14880'>&nbsp;&nbsp;};</div><div class='line' id='LC14881'><br/></div><div class='line' id='LC14882'>&nbsp;&nbsp;Batman.Filters.dashize = function(str) {</div><div class='line' id='LC14883'>&nbsp;&nbsp;&nbsp;&nbsp;var dashes_rx1, dashes_rx2;</div><div class='line' id='LC14884'>&nbsp;&nbsp;&nbsp;&nbsp;dashes_rx1 = /([A-Z]+)([A-Z][a-z])/g;</div><div class='line' id='LC14885'>&nbsp;&nbsp;&nbsp;&nbsp;dashes_rx2 = /([a-z\d])([A-Z])/g;</div><div class='line' id='LC14886'>&nbsp;&nbsp;&nbsp;&nbsp;return str.replace(dashes_rx1, &#39;$1_$2&#39;).replace(dashes_rx2, &#39;$1_$2&#39;).replace(/_/g, &#39;-&#39;).toLowerCase();</div><div class='line' id='LC14887'>&nbsp;&nbsp;};</div><div class='line' id='LC14888'><br/></div><div class='line' id='LC14889'>&nbsp;&nbsp;Batman.Filters.shortenedNumber = function(num) {</div><div class='line' id='LC14890'>&nbsp;&nbsp;&nbsp;&nbsp;if (isNaN(num)) {</div><div class='line' id='LC14891'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return num;</div><div class='line' id='LC14892'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14893'>&nbsp;&nbsp;&nbsp;&nbsp;if (num &gt;= 1000000000) {</div><div class='line' id='LC14894'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (num / 1000000000).toFixed(1) + &#39;B&#39;;</div><div class='line' id='LC14895'>&nbsp;&nbsp;&nbsp;&nbsp;} else if (num &gt;= 1000000) {</div><div class='line' id='LC14896'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (num / 1000000).toFixed(1) + &#39;M&#39;;</div><div class='line' id='LC14897'>&nbsp;&nbsp;&nbsp;&nbsp;} else if (num &gt;= 1000) {</div><div class='line' id='LC14898'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (num / 1000).toFixed(1) + &#39;K&#39;;</div><div class='line' id='LC14899'>&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC14900'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return num;</div><div class='line' id='LC14901'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14902'>&nbsp;&nbsp;};</div><div class='line' id='LC14903'><br/></div><div class='line' id='LC14904'>&nbsp;&nbsp;window.Dashing = (function(_super) {</div><div class='line' id='LC14905'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(Dashing, _super);</div><div class='line' id='LC14906'><br/></div><div class='line' id='LC14907'>&nbsp;&nbsp;&nbsp;&nbsp;function Dashing() {</div><div class='line' id='LC14908'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = Dashing.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC14909'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _ref;</div><div class='line' id='LC14910'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14911'><br/></div><div class='line' id='LC14912'>&nbsp;&nbsp;&nbsp;&nbsp;Dashing.on(&#39;reload&#39;, function(data) {</div><div class='line' id='LC14913'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return window.location.reload(true);</div><div class='line' id='LC14914'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14915'><br/></div><div class='line' id='LC14916'>&nbsp;&nbsp;&nbsp;&nbsp;Dashing.root(function() {});</div><div class='line' id='LC14917'><br/></div><div class='line' id='LC14918'>&nbsp;&nbsp;&nbsp;&nbsp;return Dashing;</div><div class='line' id='LC14919'><br/></div><div class='line' id='LC14920'>&nbsp;&nbsp;})(Batman.App);</div><div class='line' id='LC14921'><br/></div><div class='line' id='LC14922'>&nbsp;&nbsp;Dashing.params = Batman.URI.paramsFromQuery(window.location.search.slice(1));</div><div class='line' id='LC14923'><br/></div><div class='line' id='LC14924'>&nbsp;&nbsp;Dashing.Widget = (function(_super) {</div><div class='line' id='LC14925'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(Widget, _super);</div><div class='line' id='LC14926'><br/></div><div class='line' id='LC14927'>&nbsp;&nbsp;&nbsp;&nbsp;function Widget() {</div><div class='line' id='LC14928'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.onData = __bind(this.onData, this);</div><div class='line' id='LC14929'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.receiveData = __bind(this.receiveData, this);</div><div class='line' id='LC14930'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var type, _base, _name;</div><div class='line' id='LC14931'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.constructor.prototype.source = Batman.Filters.underscore(this.constructor.name);</div><div class='line' id='LC14932'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Widget.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC14933'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.mixin($(this.node).data());</div><div class='line' id='LC14934'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(_base = Dashing.widgets)[_name = this.id] || (_base[_name] = []);</div><div class='line' id='LC14935'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dashing.widgets[this.id].push(this);</div><div class='line' id='LC14936'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.mixin(Dashing.lastEvents[this.id]);</div><div class='line' id='LC14937'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type = Batman.Filters.dashize(this.view);</div><div class='line' id='LC14938'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(this.node).addClass(&quot;widget widget-&quot; + type + &quot; &quot; + this.id);</div><div class='line' id='LC14939'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14940'><br/></div><div class='line' id='LC14941'>&nbsp;&nbsp;&nbsp;&nbsp;Widget.accessor(&#39;updatedAtMessage&#39;, function() {</div><div class='line' id='LC14942'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var hours, minutes, timestamp, updatedAt;</div><div class='line' id='LC14943'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (updatedAt = this.get(&#39;updatedAt&#39;)) {</div><div class='line' id='LC14944'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;timestamp = new Date(updatedAt * 1000);</div><div class='line' id='LC14945'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hours = timestamp.getHours();</div><div class='line' id='LC14946'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minutes = (&quot;0&quot; + timestamp.getMinutes()).slice(-2);</div><div class='line' id='LC14947'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;Last updated at &quot; + hours + &quot;:&quot; + minutes;</div><div class='line' id='LC14948'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14949'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14950'><br/></div><div class='line' id='LC14951'>&nbsp;&nbsp;&nbsp;&nbsp;Widget.prototype.on(&#39;ready&#39;, function() {</div><div class='line' id='LC14952'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Dashing.Widget.fire(&#39;ready&#39;);</div><div class='line' id='LC14953'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC14954'><br/></div><div class='line' id='LC14955'>&nbsp;&nbsp;&nbsp;&nbsp;Widget.prototype.receiveData = function(data) {</div><div class='line' id='LC14956'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.mixin(data);</div><div class='line' id='LC14957'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.onData(data);</div><div class='line' id='LC14958'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC14959'><br/></div><div class='line' id='LC14960'>&nbsp;&nbsp;&nbsp;&nbsp;Widget.prototype.onData = function(data) {};</div><div class='line' id='LC14961'><br/></div><div class='line' id='LC14962'>&nbsp;&nbsp;&nbsp;&nbsp;return Widget;</div><div class='line' id='LC14963'><br/></div><div class='line' id='LC14964'>&nbsp;&nbsp;})(Batman.View);</div><div class='line' id='LC14965'><br/></div><div class='line' id='LC14966'>&nbsp;&nbsp;Dashing.AnimatedValue = {</div><div class='line' id='LC14967'>&nbsp;&nbsp;&nbsp;&nbsp;get: Batman.Property.defaultAccessor.get,</div><div class='line' id='LC14968'>&nbsp;&nbsp;&nbsp;&nbsp;set: function(k, to) {</div><div class='line' id='LC14969'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var num, num_interval, timer, up,</div><div class='line' id='LC14970'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this = this;</div><div class='line' id='LC14971'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((to == null) || isNaN(to)) {</div><div class='line' id='LC14972'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this[k] = to;</div><div class='line' id='LC14973'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC14974'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;timer = &quot;interval_&quot; + k;</div><div class='line' id='LC14975'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num = !isNaN(this[k]) &amp;&amp; (this[k] != null) ? this[k] : 0;</div><div class='line' id='LC14976'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(this[timer] || num === to)) {</div><div class='line' id='LC14977'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to = parseFloat(to);</div><div class='line' id='LC14978'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num = parseFloat(num);</div><div class='line' id='LC14979'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;up = to &gt; num;</div><div class='line' id='LC14980'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num_interval = Math.abs(num - to) / 90;</div><div class='line' id='LC14981'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this[timer] = setInterval(function() {</div><div class='line' id='LC14982'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num = up ? Math.ceil(num + num_interval) : Math.floor(num - num_interval);</div><div class='line' id='LC14983'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((up &amp;&amp; num &gt; to) || (!up &amp;&amp; num &lt; to)) {</div><div class='line' id='LC14984'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num = to;</div><div class='line' id='LC14985'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clearInterval(_this[timer]);</div><div class='line' id='LC14986'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this[timer] = null;</div><div class='line' id='LC14987'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete _this[timer];</div><div class='line' id='LC14988'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14989'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this[k] = num;</div><div class='line' id='LC14990'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.set(k, to);</div><div class='line' id='LC14991'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, 10);</div><div class='line' id='LC14992'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14993'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this[k] = num;</div><div class='line' id='LC14994'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14995'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC14996'>&nbsp;&nbsp;};</div><div class='line' id='LC14997'><br/></div><div class='line' id='LC14998'>&nbsp;&nbsp;Dashing.widgets = widgets = {};</div><div class='line' id='LC14999'><br/></div><div class='line' id='LC15000'>&nbsp;&nbsp;Dashing.lastEvents = lastEvents = {};</div><div class='line' id='LC15001'><br/></div><div class='line' id='LC15002'>&nbsp;&nbsp;Dashing.debugMode = false;</div><div class='line' id='LC15003'><br/></div><div class='line' id='LC15004'>&nbsp;&nbsp;$(document).ready(function() {</div><div class='line' id='LC15005'>&nbsp;&nbsp;&nbsp;&nbsp;return Dashing.run();</div><div class='line' id='LC15006'>&nbsp;&nbsp;});</div><div class='line' id='LC15007'><br/></div><div class='line' id='LC15008'>}).call(this);</div><div class='line' id='LC15009'>d3=function(){function n(n){return null!=n&amp;&amp;!isNaN(n)}function t(n){return n.length}function e(n){for(var t=1;n*t%1;)t*=10;return t}function r(n,t){try{for(var e in t)Object.defineProperty(n.prototype,e,{value:t[e],enumerable:!1})}catch(r){n.prototype=t}}function i(){}function u(){}function a(n,t,e){return function(){var r=e.apply(t,arguments);return r===t?n:r}}function o(n,t){if(t in n)return t;t=t.charAt(0).toUpperCase()+t.substring(1);for(var e=0,r=Ca.length;r&gt;e;++e){var i=Ca[e]+t;if(i in n)return i}}function c(n){for(var t=n.length,e=new Array(t);t--;)e[t]=n[t];return e}function l(n){return Array.prototype.slice.call(n)}function s(){}function f(){}function h(n){function t(){for(var t,r=e,i=-1,u=r.length;++i&lt;u;)(t=r[i].on)&amp;&amp;t.apply(this,arguments);return n}var e=[],r=new i;return t.on=function(t,i){var u,a=r.get(t);return arguments.length&lt;2?a&amp;&amp;a.on:(a&amp;&amp;(a.on=null,e=e.slice(0,u=e.indexOf(a)).concat(e.slice(u+1)),r.remove(t)),i&amp;&amp;e.push(r.set(t,{on:i})),n)},t}function g(){ya.event.preventDefault()}function p(){for(var n,t=ya.event;n=t.sourceEvent;)t=n;return t}function m(n){for(var t=new f,e=0,r=arguments.length;++e&lt;r;)t[arguments[e]]=h(t);return t.of=function(e,r){return function(i){try{var u=i.sourceEvent=ya.event;i.target=n,ya.event=i,t[i.type].apply(e,r)}finally{ya.event=u}}},t}function d(n){return La(n,Ya),n}function v(n){return&quot;function&quot;==typeof n?n:function(){return Ha(n,this)}}function y(n){return&quot;function&quot;==typeof n?n:function(){return Fa(n,this)}}function M(n,t){function e(){this.removeAttribute(n)}function r(){this.removeAttributeNS(n.space,n.local)}function i(){this.setAttribute(n,t)}function u(){this.setAttributeNS(n.space,n.local,t)}function a(){var e=t.apply(this,arguments);null==e?this.removeAttribute(n):this.setAttribute(n,e)}function o(){var e=t.apply(this,arguments);null==e?this.removeAttributeNS(n.space,n.local):this.setAttributeNS(n.space,n.local,e)}return n=ya.ns.qualify(n),null==t?n.local?r:e:&quot;function&quot;==typeof t?n.local?o:a:n.local?u:i}function x(n){return n.trim().replace(/\s+/g,&quot; &quot;)}function b(n){return new RegExp(&quot;(?:^|\\s+)&quot;+ya.requote(n)+&quot;(?:\\s+|$)&quot;,&quot;g&quot;)}function _(n,t){function e(){for(var e=-1;++e&lt;i;)n[e](this,t)}function r(){for(var e=-1,r=t.apply(this,arguments);++e&lt;i;)n[e](this,r)}n=n.trim().split(/\s+/).map(w);var i=n.length;return&quot;function&quot;==typeof t?r:e}function w(n){var t=b(n);return function(e,r){if(i=e.classList)return r?i.add(n):i.remove(n);var i=e.getAttribute(&quot;class&quot;)||&quot;&quot;;r?(t.lastIndex=0,t.test(i)||e.setAttribute(&quot;class&quot;,x(i+&quot; &quot;+n))):e.setAttribute(&quot;class&quot;,x(i.replace(t,&quot; &quot;)))}}function S(n,t,e){function r(){this.style.removeProperty(n)}function i(){this.style.setProperty(n,t,e)}function u(){var r=t.apply(this,arguments);null==r?this.style.removeProperty(n):this.style.setProperty(n,r,e)}return null==t?r:&quot;function&quot;==typeof t?u:i}function E(n,t){function e(){delete this[n]}function r(){this[n]=t}function i(){var e=t.apply(this,arguments);null==e?delete this[n]:this[n]=e}return null==t?e:&quot;function&quot;==typeof t?i:r}function k(n){return&quot;function&quot;==typeof n?n:(n=ya.ns.qualify(n)).local?function(){return Ma.createElementNS(n.space,n.local)}:function(){return Ma.createElementNS(this.namespaceURI,n)}}function A(n){return{__data__:n}}function N(n){return function(){return Oa(this,n)}}function q(n){return arguments.length||(n=ya.ascending),function(t,e){return t&amp;&amp;e?n(t.__data__,e.__data__):!t-!e}}function T(n,t){for(var e=0,r=n.length;r&gt;e;e++)for(var i,u=n[e],a=0,o=u.length;o&gt;a;a++)(i=u[a])&amp;&amp;t(i,a,e);return n}function C(n){return La(n,Ua),n}function z(n){var t,e;return function(r,i,u){var a,o=n[u].update,c=o.length;for(u!=e&amp;&amp;(e=u,t=0),i&gt;=t&amp;&amp;(t=i+1);!(a=o[t])&amp;&amp;++t&lt;c;);return a}}function D(n,t,e){function r(){var t=this[a];t&amp;&amp;(this.removeEventListener(n,t,t.$),delete this[a])}function i(){var i=c(t,za(arguments));r.call(this),this.addEventListener(n,this[a]=i,i.$=e),i._=t}function u(){var t,e=new RegExp(&quot;^__on([^.]+)&quot;+ya.requote(n)+&quot;$&quot;);for(var r in this)if(t=r.match(e)){var i=this[r];this.removeEventListener(t[1],i,i.$),delete this[r]}}var a=&quot;__on&quot;+n,o=n.indexOf(&quot;.&quot;),c=j;o&gt;0&amp;&amp;(n=n.substring(0,o));var l=Va.get(n);return l&amp;&amp;(n=l,c=L),o?t?i:r:t?s:u}function j(n,t){return function(e){var r=ya.event;ya.event=e,t[0]=this.__data__;try{n.apply(this,t)}finally{ya.event=r}}}function L(n,t){var e=j(n,t);return function(n){var t=this,r=n.relatedTarget;r&amp;&amp;(r===t||8&amp;r.compareDocumentPosition(t))||e.call(t,n)}}function H(){var n=&quot;.dragsuppress-&quot;+ ++Za,t=&quot;touchmove&quot;+n,e=&quot;selectstart&quot;+n,r=&quot;dragstart&quot;+n,i=&quot;click&quot;+n,u=ya.select(ba).on(t,g).on(e,g).on(r,g),a=xa.style,o=a[Xa];return a[Xa]=&quot;none&quot;,function(t){function e(){u.on(i,null)}u.on(n,null),a[Xa]=o,t&amp;&amp;(u.on(i,function(){g(),e()},!0),setTimeout(e,0))}}function F(n,t){var e=n.ownerSVGElement||n;if(e.createSVGPoint){var r=e.createSVGPoint();if(0&gt;Ba&amp;&amp;(ba.scrollX||ba.scrollY)){e=ya.select(&quot;body&quot;).append(&quot;svg&quot;).style({position:&quot;absolute&quot;,top:0,left:0,margin:0,padding:0,border:&quot;none&quot;},&quot;important&quot;);var i=e[0][0].getScreenCTM();Ba=!(i.f||i.e),e.remove()}return Ba?(r.x=t.pageX,r.y=t.pageY):(r.x=t.clientX,r.y=t.clientY),r=r.matrixTransform(n.getScreenCTM().inverse()),[r.x,r.y]}var u=n.getBoundingClientRect();return[t.clientX-u.left-n.clientLeft,t.clientY-u.top-n.clientTop]}function P(){}function O(n,t,e){return new Y(n,t,e)}function Y(n,t,e){this.h=n,this.s=t,this.l=e}function R(n,t,e){function r(n){return n&gt;360?n-=360:0&gt;n&amp;&amp;(n+=360),60&gt;n?u+(a-u)*n/60:180&gt;n?a:240&gt;n?u+(a-u)*(240-n)/60:u}function i(n){return Math.round(255*r(n))}var u,a;return n=isNaN(n)?0:(n%=360)&lt;0?n+360:n,t=isNaN(t)?0:0&gt;t?0:t&gt;1?1:t,e=0&gt;e?0:e&gt;1?1:e,a=.5&gt;=e?e*(1+t):e+t-e*t,u=2*e-a,at(i(n+120),i(n),i(n-120))}function U(n){return n&gt;0?1:0&gt;n?-1:0}function I(n){return n&gt;1?0:-1&gt;n?Ka:Math.acos(n)}function V(n){return n&gt;1?Ka/2:-1&gt;n?-Ka/2:Math.asin(n)}function X(n){return(Math.exp(n)-Math.exp(-n))/2}function Z(n){return(Math.exp(n)+Math.exp(-n))/2}function B(n){return(n=Math.sin(n/2))*n}function $(n,t,e){return new W(n,t,e)}function W(n,t,e){this.h=n,this.c=t,this.l=e}function J(n,t,e){return isNaN(n)&amp;&amp;(n=0),isNaN(t)&amp;&amp;(t=0),G(e,Math.cos(n*=to)*t,Math.sin(n)*t)}function G(n,t,e){return new K(n,t,e)}function K(n,t,e){this.l=n,this.a=t,this.b=e}function Q(n,t,e){var r=(n+16)/116,i=r+t/500,u=r-e/200;return i=tt(i)*uo,r=tt(r)*ao,u=tt(u)*oo,at(rt(3.2404542*i-1.5371385*r-.4985314*u),rt(-.969266*i+1.8760108*r+.041556*u),rt(.0556434*i-.2040259*r+1.0572252*u))}function nt(n,t,e){return n&gt;0?$(Math.atan2(e,t)*eo,Math.sqrt(t*t+e*e),n):$(0/0,0/0,n)}function tt(n){return n&gt;.206893034?n*n*n:(n-4/29)/7.787037}function et(n){return n&gt;.008856?Math.pow(n,1/3):7.787037*n+4/29}function rt(n){return Math.round(255*(.00304&gt;=n?12.92*n:1.055*Math.pow(n,1/2.4)-.055))}function it(n){return at(n&gt;&gt;16,255&amp;n&gt;&gt;8,255&amp;n)}function ut(n){return it(n)+&quot;&quot;}function at(n,t,e){return new ot(n,t,e)}function ot(n,t,e){this.r=n,this.g=t,this.b=e}function ct(n){return 16&gt;n?&quot;0&quot;+Math.max(0,n).toString(16):Math.min(255,n).toString(16)}function lt(n,t,e){var r,i,u,a=0,o=0,c=0;if(r=/([a-z]+)\((.*)\)/i.exec(n))switch(i=r[2].split(&quot;,&quot;),r[1]){case&quot;hsl&quot;:return e(parseFloat(i[0]),parseFloat(i[1])/100,parseFloat(i[2])/100);case&quot;rgb&quot;:return t(gt(i[0]),gt(i[1]),gt(i[2]))}return(u=so.get(n))?t(u.r,u.g,u.b):(null!=n&amp;&amp;&quot;#&quot;===n.charAt(0)&amp;&amp;(4===n.length?(a=n.charAt(1),a+=a,o=n.charAt(2),o+=o,c=n.charAt(3),c+=c):7===n.length&amp;&amp;(a=n.substring(1,3),o=n.substring(3,5),c=n.substring(5,7)),a=parseInt(a,16),o=parseInt(o,16),c=parseInt(c,16)),t(a,o,c))}function st(n,t,e){var r,i,u=Math.min(n/=255,t/=255,e/=255),a=Math.max(n,t,e),o=a-u,c=(a+u)/2;return o?(i=.5&gt;c?o/(a+u):o/(2-a-u),r=n==a?(t-e)/o+(e&gt;t?6:0):t==a?(e-n)/o+2:(n-t)/o+4,r*=60):(r=0/0,i=c&gt;0&amp;&amp;1&gt;c?0:r),O(r,i,c)}function ft(n,t,e){n=ht(n),t=ht(t),e=ht(e);var r=et((.4124564*n+.3575761*t+.1804375*e)/uo),i=et((.2126729*n+.7151522*t+.072175*e)/ao),u=et((.0193339*n+.119192*t+.9503041*e)/oo);return G(116*i-16,500*(r-i),200*(i-u))}function ht(n){return(n/=255)&lt;=.04045?n/12.92:Math.pow((n+.055)/1.055,2.4)}function gt(n){var t=parseFloat(n);return&quot;%&quot;===n.charAt(n.length-1)?Math.round(2.55*t):t}function pt(n){return&quot;function&quot;==typeof n?n:function(){return n}}function mt(n){return n}function dt(n){return function(t,e,r){return 2===arguments.length&amp;&amp;&quot;function&quot;==typeof e&amp;&amp;(r=e,e=null),vt(t,e,n,r)}}function vt(n,t,e,r){function i(){var n,t=c.status;if(!t&amp;&amp;c.responseText||t&gt;=200&amp;&amp;300&gt;t||304===t){try{n=e.call(u,c)}catch(r){return a.error.call(u,r),void 0}a.load.call(u,n)}else a.error.call(u,c)}var u={},a=ya.dispatch(&quot;progress&quot;,&quot;load&quot;,&quot;error&quot;),o={},c=new XMLHttpRequest,l=null;return!ba.XDomainRequest||&quot;withCredentials&quot;in c||!/^(http(s)?:)?\/\//.test(n)||(c=new XDomainRequest),&quot;onload&quot;in c?c.onload=c.onerror=i:c.onreadystatechange=function(){c.readyState&gt;3&amp;&amp;i()},c.onprogress=function(n){var t=ya.event;ya.event=n;try{a.progress.call(u,c)}finally{ya.event=t}},u.header=function(n,t){return n=(n+&quot;&quot;).toLowerCase(),arguments.length&lt;2?o[n]:(null==t?delete o[n]:o[n]=t+&quot;&quot;,u)},u.mimeType=function(n){return arguments.length?(t=null==n?null:n+&quot;&quot;,u):t},u.responseType=function(n){return arguments.length?(l=n,u):l},u.response=function(n){return e=n,u},[&quot;get&quot;,&quot;post&quot;].forEach(function(n){u[n]=function(){return u.send.apply(u,[n].concat(za(arguments)))}}),u.send=function(e,r,i){if(2===arguments.length&amp;&amp;&quot;function&quot;==typeof r&amp;&amp;(i=r,r=null),c.open(e,n,!0),null==t||&quot;accept&quot;in o||(o.accept=t+&quot;,*/*&quot;),c.setRequestHeader)for(var a in o)c.setRequestHeader(a,o[a]);return null!=t&amp;&amp;c.overrideMimeType&amp;&amp;c.overrideMimeType(t),null!=l&amp;&amp;(c.responseType=l),null!=i&amp;&amp;u.on(&quot;error&quot;,i).on(&quot;load&quot;,function(n){i(null,n)}),c.send(null==r?null:r),u},u.abort=function(){return c.abort(),u},ya.rebind(u,a,&quot;on&quot;),null==r?u:u.get(yt(r))}function yt(n){return 1===n.length?function(t,e){n(null==t?e:null)}:n}function Mt(){var n=bt(),t=_t()-n;t&gt;24?(isFinite(t)&amp;&amp;(clearTimeout(po),po=setTimeout(Mt,t)),go=0):(go=1,vo(Mt))}function xt(n,t,e){var r=arguments.length;2&gt;r&amp;&amp;(t=0),3&gt;r&amp;&amp;(e=Date.now()),mo.callback=n,mo.time=e+t}function bt(){var n=Date.now();for(mo=fo;mo;)n&gt;=mo.time&amp;&amp;(mo.flush=mo.callback(n-mo.time)),mo=mo.next;return n}function _t(){for(var n,t=fo,e=1/0;t;)t.flush?t=n?n.next=t.next:fo=t.next:(t.time&lt;e&amp;&amp;(e=t.time),t=(n=t).next);return ho=n,e}function wt(n,t){var e=Math.pow(10,3*Math.abs(8-t));return{scale:t&gt;8?function(n){return n/e}:function(n){return n*e},symbol:n}}function St(n,t){return t-(n?Math.ceil(Math.log(n)/Math.LN10):1)}function Et(n){return n+&quot;&quot;}function kt(){}function At(n,t,e){var r=e.s=n+t,i=r-n,u=r-i;e.t=n-u+(t-i)}function Nt(n,t){n&amp;&amp;qo.hasOwnProperty(n.type)&amp;&amp;qo[n.type](n,t)}function qt(n,t,e){var r,i=-1,u=n.length-e;for(t.lineStart();++i&lt;u;)r=n[i],t.point(r[0],r[1]);t.lineEnd()}function Tt(n,t){var e=-1,r=n.length;for(t.polygonStart();++e&lt;r;)qt(n[e],t,1);t.polygonEnd()}function Ct(){function n(n,t){n*=to,t=t*to/2+Ka/4;var e=n-r,a=Math.cos(t),o=Math.sin(t),c=u*o,l=i*a+c*Math.cos(e),s=c*Math.sin(e);Co.add(Math.atan2(s,l)),r=n,i=a,u=o}var t,e,r,i,u;zo.point=function(a,o){zo.point=n,r=(t=a)*to,i=Math.cos(o=(e=o)*to/2+Ka/4),u=Math.sin(o)},zo.lineEnd=function(){n(t,e)}}function zt(n){var t=n[0],e=n[1],r=Math.cos(e);return[r*Math.cos(t),r*Math.sin(t),Math.sin(e)]}function Dt(n,t){return n[0]*t[0]+n[1]*t[1]+n[2]*t[2]}function jt(n,t){return[n[1]*t[2]-n[2]*t[1],n[2]*t[0]-n[0]*t[2],n[0]*t[1]-n[1]*t[0]]}function Lt(n,t){n[0]+=t[0],n[1]+=t[1],n[2]+=t[2]}function Ht(n,t){return[n[0]*t,n[1]*t,n[2]*t]}function Ft(n){var t=Math.sqrt(n[0]*n[0]+n[1]*n[1]+n[2]*n[2]);n[0]/=t,n[1]/=t,n[2]/=t}function Pt(n){return[Math.atan2(n[1],n[0]),V(n[2])]}function Ot(n,t){return Math.abs(n[0]-t[0])&lt;Qa&amp;&amp;Math.abs(n[1]-t[1])&lt;Qa}function Yt(n,t){n*=to;var e=Math.cos(t*=to);Rt(e*Math.cos(n),e*Math.sin(n),Math.sin(t))}function Rt(n,t,e){++Do,Lo+=(n-Lo)/Do,Ho+=(t-Ho)/Do,Fo+=(e-Fo)/Do}function Ut(){function n(n,i){n*=to;var u=Math.cos(i*=to),a=u*Math.cos(n),o=u*Math.sin(n),c=Math.sin(i),l=Math.atan2(Math.sqrt((l=e*c-r*o)*l+(l=r*a-t*c)*l+(l=t*o-e*a)*l),t*a+e*o+r*c);jo+=l,Po+=l*(t+(t=a)),Oo+=l*(e+(e=o)),Yo+=l*(r+(r=c)),Rt(t,e,r)}var t,e,r;Vo.point=function(i,u){i*=to;var a=Math.cos(u*=to);t=a*Math.cos(i),e=a*Math.sin(i),r=Math.sin(u),Vo.point=n,Rt(t,e,r)}}function It(){Vo.point=Yt}function Vt(){function n(n,t){n*=to;var e=Math.cos(t*=to),a=e*Math.cos(n),o=e*Math.sin(n),c=Math.sin(t),l=i*c-u*o,s=u*a-r*c,f=r*o-i*a,h=Math.sqrt(l*l+s*s+f*f),g=r*a+i*o+u*c,p=h&amp;&amp;-I(g)/h,m=Math.atan2(h,g);Ro+=p*l,Uo+=p*s,Io+=p*f,jo+=m,Po+=m*(r+(r=a)),Oo+=m*(i+(i=o)),Yo+=m*(u+(u=c)),Rt(r,i,u)}var t,e,r,i,u;Vo.point=function(a,o){t=a,e=o,Vo.point=n,a*=to;var c=Math.cos(o*=to);r=c*Math.cos(a),i=c*Math.sin(a),u=Math.sin(o),Rt(r,i,u)},Vo.lineEnd=function(){n(t,e),Vo.lineEnd=It,Vo.point=Yt}}function Xt(){return!0}function Zt(n,t,e,r,i){var u=[],a=[];if(n.forEach(function(n){if(!((t=n.length-1)&lt;=0)){var t,e=n[0],r=n[t];if(Ot(e,r)){i.lineStart();for(var o=0;t&gt;o;++o)i.point((e=n[o])[0],e[1]);return i.lineEnd(),void 0}var c={point:e,points:n,other:null,visited:!1,entry:!0,subject:!0},l={point:e,points:[e],other:c,visited:!1,entry:!1,subject:!1};c.other=l,u.push(c),a.push(l),c={point:r,points:[r],other:null,visited:!1,entry:!1,subject:!0},l={point:r,points:[r],other:c,visited:!1,entry:!0,subject:!1},c.other=l,u.push(c),a.push(l)}}),a.sort(t),Bt(u),Bt(a),u.length){if(e)for(var o=1,c=!e(a[0].point),l=a.length;l&gt;o;++o)a[o].entry=c=!c;for(var s,f,h,g=u[0];;){for(s=g;s.visited;)if((s=s.next)===g)return;f=s.points,i.lineStart();do{if(s.visited=s.other.visited=!0,s.entry){if(s.subject)for(var o=0;o&lt;f.length;o++)i.point((h=f[o])[0],h[1]);else r(s.point,s.next.point,1,i);s=s.next}else{if(s.subject){f=s.prev.points;for(var o=f.length;--o&gt;=0;)i.point((h=f[o])[0],h[1])}else r(s.point,s.prev.point,-1,i);s=s.prev}s=s.other,f=s.points}while(!s.visited);i.lineEnd()}}}function Bt(n){if(t=n.length){for(var t,e,r=0,i=n[0];++r&lt;t;)i.next=e=n[r],e.prev=i,i=e;i.next=e=n[0],e.prev=i}}function $t(n,t,e,r){return function(i){function u(t,e){n(t,e)&amp;&amp;i.point(t,e)}function a(n,t){m.point(n,t)}function o(){d.point=a,m.lineStart()}function c(){d.point=u,m.lineEnd()}function l(n,t){y.point(n,t),p.push([n,t])}function s(){y.lineStart(),p=[]}function f(){l(p[0][0],p[0][1]),y.lineEnd();var n,t=y.clean(),e=v.buffer(),r=e.length;if(p.pop(),g.push(p),p=null,r){if(1&amp;t){n=e[0];var u,r=n.length-1,a=-1;for(i.lineStart();++a&lt;r;)i.point((u=n[a])[0],u[1]);return i.lineEnd(),void 0}r&gt;1&amp;&amp;2&amp;t&amp;&amp;e.push(e.pop().concat(e.shift())),h.push(e.filter(Wt))}}var h,g,p,m=t(i),d={point:u,lineStart:o,lineEnd:c,polygonStart:function(){d.point=l,d.lineStart=s,d.lineEnd=f,h=[],g=[],i.polygonStart()},polygonEnd:function(){d.point=u,d.lineStart=o,d.lineEnd=c,h=ya.merge(h),h.length?Zt(h,Gt,null,e,i):r(g)&amp;&amp;(i.lineStart(),e(null,null,1,i),i.lineEnd()),i.polygonEnd(),h=g=null},sphere:function(){i.polygonStart(),i.lineStart(),e(null,null,1,i),i.lineEnd(),i.polygonEnd()}},v=Jt(),y=t(v);return d}}function Wt(n){return n.length&gt;1}function Jt(){var n,t=[];return{lineStart:function(){t.push(n=[])},point:function(t,e){n.push([t,e])},lineEnd:s,buffer:function(){var e=t;return t=[],n=null,e},rejoin:function(){t.length&gt;1&amp;&amp;t.push(t.pop().concat(t.shift()))}}}function Gt(n,t){return((n=n.point)[0]&lt;0?n[1]-Ka/2-Qa:Ka/2-n[1])-((t=t.point)[0]&lt;0?t[1]-Ka/2-Qa:Ka/2-t[1])}function Kt(n,t){var e=n[0],r=n[1],i=[Math.sin(e),-Math.cos(e),0],u=0,a=!1,o=!1,c=0;Co.reset();for(var l=0,s=t.length;s&gt;l;++l){var f=t[l],h=f.length;if(h){for(var g=f[0],p=g[0],m=g[1]/2+Ka/4,d=Math.sin(m),v=Math.cos(m),y=1;;){y===h&amp;&amp;(y=0),n=f[y];var M=n[0],x=n[1]/2+Ka/4,b=Math.sin(x),_=Math.cos(x),w=M-p,S=Math.abs(w)&gt;Ka,E=d*b;if(Co.add(Math.atan2(E*Math.sin(w),v*_+E*Math.cos(w))),Math.abs(x)&lt;Qa&amp;&amp;(o=!0),u+=S?w+(w&gt;=0?2:-2)*Ka:w,S^p&gt;=e^M&gt;=e){var k=jt(zt(g),zt(n));Ft(k);var A=jt(i,k);Ft(A);var N=(S^w&gt;=0?-1:1)*V(A[2]);r&gt;N&amp;&amp;(c+=S^w&gt;=0?1:-1)}if(!y++)break;p=M,d=b,v=_,g=n}Math.abs(u)&gt;Qa&amp;&amp;(a=!0)}}return(!o&amp;&amp;!a&amp;&amp;0&gt;Co||-Qa&gt;u)^1&amp;c}function Qt(n){var t,e=0/0,r=0/0,i=0/0;return{lineStart:function(){n.lineStart(),t=1},point:function(u,a){var o=u&gt;0?Ka:-Ka,c=Math.abs(u-e);Math.abs(c-Ka)&lt;Qa?(n.point(e,r=(r+a)/2&gt;0?Ka/2:-Ka/2),n.point(i,r),n.lineEnd(),n.lineStart(),n.point(o,r),n.point(u,r),t=0):i!==o&amp;&amp;c&gt;=Ka&amp;&amp;(Math.abs(e-i)&lt;Qa&amp;&amp;(e-=i*Qa),Math.abs(u-o)&lt;Qa&amp;&amp;(u-=o*Qa),r=ne(e,r,u,a),n.point(i,r),n.lineEnd(),n.lineStart(),n.point(o,r),t=0),n.point(e=u,r=a),i=o},lineEnd:function(){n.lineEnd(),e=r=0/0},clean:function(){return 2-t}}}function ne(n,t,e,r){var i,u,a=Math.sin(n-e);return Math.abs(a)&gt;Qa?Math.atan((Math.sin(t)*(u=Math.cos(r))*Math.sin(e)-Math.sin(r)*(i=Math.cos(t))*Math.sin(n))/(i*u*a)):(t+r)/2}function te(n,t,e,r){var i;if(null==n)i=e*Ka/2,r.point(-Ka,i),r.point(0,i),r.point(Ka,i),r.point(Ka,0),r.point(Ka,-i),r.point(0,-i),r.point(-Ka,-i),r.point(-Ka,0),r.point(-Ka,i);else if(Math.abs(n[0]-t[0])&gt;Qa){var u=(n[0]&lt;t[0]?1:-1)*Ka;i=e*u/2,r.point(-u,i),r.point(0,i),r.point(u,i)}else r.point(t[0],t[1])}function ee(n){return Kt(Zo,n)}function re(n){function t(n,t){return Math.cos(n)*Math.cos(t)&gt;a}function e(n){var e,u,a,c,s;return{lineStart:function(){c=a=!1,s=1},point:function(f,h){var g,p=[f,h],m=t(f,h),d=o?m?0:i(f,h):m?i(f+(0&gt;f?Ka:-Ka),h):0;if(!e&amp;&amp;(c=a=m)&amp;&amp;n.lineStart(),m!==a&amp;&amp;(g=r(e,p),(Ot(e,g)||Ot(p,g))&amp;&amp;(p[0]+=Qa,p[1]+=Qa,m=t(p[0],p[1]))),m!==a)s=0,m?(n.lineStart(),g=r(p,e),n.point(g[0],g[1])):(g=r(e,p),n.point(g[0],g[1]),n.lineEnd()),e=g;else if(l&amp;&amp;e&amp;&amp;o^m){var v;d&amp;u||!(v=r(p,e,!0))||(s=0,o?(n.lineStart(),n.point(v[0][0],v[0][1]),n.point(v[1][0],v[1][1]),n.lineEnd()):(n.point(v[1][0],v[1][1]),n.lineEnd(),n.lineStart(),n.point(v[0][0],v[0][1])))}!m||e&amp;&amp;Ot(e,p)||n.point(p[0],p[1]),e=p,a=m,u=d},lineEnd:function(){a&amp;&amp;n.lineEnd(),e=null},clean:function(){return s|(c&amp;&amp;a)&lt;&lt;1}}}function r(n,t,e){var r=zt(n),i=zt(t),u=[1,0,0],o=jt(r,i),c=Dt(o,o),l=o[0],s=c-l*l;if(!s)return!e&amp;&amp;n;var f=a*c/s,h=-a*l/s,g=jt(u,o),p=Ht(u,f),m=Ht(o,h);Lt(p,m);var d=g,v=Dt(p,d),y=Dt(d,d),M=v*v-y*(Dt(p,p)-1);if(!(0&gt;M)){var x=Math.sqrt(M),b=Ht(d,(-v-x)/y);if(Lt(b,p),b=Pt(b),!e)return b;var _,w=n[0],S=t[0],E=n[1],k=t[1];w&gt;S&amp;&amp;(_=w,w=S,S=_);var A=S-w,N=Math.abs(A-Ka)&lt;Qa,q=N||Qa&gt;A;if(!N&amp;&amp;E&gt;k&amp;&amp;(_=E,E=k,k=_),q?N?E+k&gt;0^b[1]&lt;(Math.abs(b[0]-w)&lt;Qa?E:k):E&lt;=b[1]&amp;&amp;b[1]&lt;=k:A&gt;Ka^(w&lt;=b[0]&amp;&amp;b[0]&lt;=S)){var T=Ht(d,(-v+x)/y);return Lt(T,p),[b,Pt(T)]}}}function i(t,e){var r=o?n:Ka-n,i=0;return-r&gt;t?i|=1:t&gt;r&amp;&amp;(i|=2),-r&gt;e?i|=4:e&gt;r&amp;&amp;(i|=8),i}function u(n){return Kt(c,n)}var a=Math.cos(n),o=a&gt;0,c=[n,0],l=Math.abs(a)&gt;Qa,s=Ne(n,6*to);return $t(t,e,s,u)}function ie(n,t,e,r){function i(r,i){return Math.abs(r[0]-n)&lt;Qa?i&gt;0?0:3:Math.abs(r[0]-e)&lt;Qa?i&gt;0?2:1:Math.abs(r[1]-t)&lt;Qa?i&gt;0?1:0:i&gt;0?3:2}function u(n,t){return a(n.point,t.point)}function a(n,t){var e=i(n,1),r=i(t,1);return e!==r?e-r:0===e?t[1]-n[1]:1===e?n[0]-t[0]:2===e?n[1]-t[1]:t[0]-n[0]}function o(i,u){var a=u[0]-i[0],o=u[1]-i[1],c=[0,1];return Math.abs(a)&lt;Qa&amp;&amp;Math.abs(o)&lt;Qa?n&lt;=i[0]&amp;&amp;i[0]&lt;=e&amp;&amp;t&lt;=i[1]&amp;&amp;i[1]&lt;=r:ue(n-i[0],a,c)&amp;&amp;ue(i[0]-e,-a,c)&amp;&amp;ue(t-i[1],o,c)&amp;&amp;ue(i[1]-r,-o,c)?(c[1]&lt;1&amp;&amp;(u[0]=i[0]+c[1]*a,u[1]=i[1]+c[1]*o),c[0]&gt;0&amp;&amp;(i[0]+=c[0]*a,i[1]+=c[0]*o),!0):!1}return function(c){function l(u){var a=i(u,-1),o=s([0===a||3===a?n:e,a&gt;1?r:t]);return o}function s(n){for(var t=0,e=M.length,r=n[1],i=0;e&gt;i;++i)for(var u,a=1,o=M[i],c=o.length,l=o[0];c&gt;a;++a)u=o[a],l[1]&lt;=r?u[1]&gt;r&amp;&amp;f(l,u,n)&gt;0&amp;&amp;++t:u[1]&lt;=r&amp;&amp;f(l,u,n)&lt;0&amp;&amp;--t,l=u;return 0!==t}function f(n,t,e){return(t[0]-n[0])*(e[1]-n[1])-(e[0]-n[0])*(t[1]-n[1])}function h(u,o,c,l){var s=0,f=0;if(null==u||(s=i(u,c))!==(f=i(o,c))||a(u,o)&lt;0^c&gt;0){do l.point(0===s||3===s?n:e,s&gt;1?r:t);while((s=(s+c+4)%4)!==f)}else l.point(o[0],o[1])}function g(i,u){return i&gt;=n&amp;&amp;e&gt;=i&amp;&amp;u&gt;=t&amp;&amp;r&gt;=u}function p(n,t){g(n,t)&amp;&amp;c.point(n,t)}function m(){T.point=v,M&amp;&amp;M.push(x=[]),A=!0,k=!1,S=E=0/0}function d(){y&amp;&amp;(v(b,_),w&amp;&amp;k&amp;&amp;q.rejoin(),y.push(q.buffer())),T.point=p,k&amp;&amp;c.lineEnd()}function v(n,t){n=Math.max(-Bo,Math.min(Bo,n)),t=Math.max(-Bo,Math.min(Bo,t));var e=g(n,t);if(M&amp;&amp;x.push([n,t]),A)b=n,_=t,w=e,A=!1,e&amp;&amp;(c.lineStart(),c.point(n,t));else if(e&amp;&amp;k)c.point(n,t);else{var r=[S,E],i=[n,t];o(r,i)?(k||(c.lineStart(),c.point(r[0],r[1])),c.point(i[0],i[1]),e||c.lineEnd()):e&amp;&amp;(c.lineStart(),c.point(n,t))}S=n,E=t,k=e}var y,M,x,b,_,w,S,E,k,A,N=c,q=Jt(),T={point:p,lineStart:m,lineEnd:d,polygonStart:function(){c=q,y=[],M=[]},polygonEnd:function(){c=N,(y=ya.merge(y)).length?(c.polygonStart(),Zt(y,u,l,h,c),c.polygonEnd()):s([n,t])&amp;&amp;(c.polygonStart(),c.lineStart(),h(null,null,1,c),c.lineEnd(),c.polygonEnd()),y=M=x=null}};return T}}function ue(n,t,e){if(Math.abs(t)&lt;Qa)return 0&gt;=n;var r=n/t;if(t&gt;0){if(r&gt;e[1])return!1;r&gt;e[0]&amp;&amp;(e[0]=r)}else{if(r&lt;e[0])return!1;r&lt;e[1]&amp;&amp;(e[1]=r)}return!0}function ae(n,t){function e(e,r){return e=n(e,r),t(e[0],e[1])}return n.invert&amp;&amp;t.invert&amp;&amp;(e.invert=function(e,r){return e=t.invert(e,r),e&amp;&amp;n.invert(e[0],e[1])}),e}function oe(n){var t=0,e=Ka/3,r=be(n),i=r(t,e);return i.parallels=function(n){return arguments.length?r(t=n[0]*Ka/180,e=n[1]*Ka/180):[180*(t/Ka),180*(e/Ka)]},i}function ce(n,t){function e(n,t){var e=Math.sqrt(u-2*i*Math.sin(t))/i;return[e*Math.sin(n*=i),a-e*Math.cos(n)]}var r=Math.sin(n),i=(r+Math.sin(t))/2,u=1+r*(2*i-r),a=Math.sqrt(u)/i;return e.invert=function(n,t){var e=a-t;return[Math.atan2(n,e)/i,V((u-(n*n+e*e)*i*i)/(2*i))]},e}function le(){function n(n,t){Wo+=i*n-r*t,r=n,i=t}var t,e,r,i;nc.point=function(u,a){nc.point=n,t=r=u,e=i=a},nc.lineEnd=function(){n(t,e)}}function se(n,t){Jo&gt;n&amp;&amp;(Jo=n),n&gt;Ko&amp;&amp;(Ko=n),Go&gt;t&amp;&amp;(Go=t),t&gt;Qo&amp;&amp;(Qo=t)}function fe(){function n(n,t){a.push(&quot;M&quot;,n,&quot;,&quot;,t,u)}function t(n,t){a.push(&quot;M&quot;,n,&quot;,&quot;,t),o.point=e}function e(n,t){a.push(&quot;L&quot;,n,&quot;,&quot;,t)}function r(){o.point=n}function i(){a.push(&quot;Z&quot;)}var u=he(4.5),a=[],o={point:n,lineStart:function(){o.point=t},lineEnd:r,polygonStart:function(){o.lineEnd=i},polygonEnd:function(){o.lineEnd=r,o.point=n},pointRadius:function(n){return u=he(n),o},result:function(){if(a.length){var n=a.join(&quot;&quot;);return a=[],n}}};return o}function he(n){return&quot;m0,&quot;+n+&quot;a&quot;+n+&quot;,&quot;+n+&quot; 0 1,1 0,&quot;+-2*n+&quot;a&quot;+n+&quot;,&quot;+n+&quot; 0 1,1 0,&quot;+2*n+&quot;z&quot;}function ge(n,t){Lo+=n,Ho+=t,++Fo}function pe(){function n(n,r){var i=n-t,u=r-e,a=Math.sqrt(i*i+u*u);Po+=a*(t+n)/2,Oo+=a*(e+r)/2,Yo+=a,ge(t=n,e=r)}var t,e;ec.point=function(r,i){ec.point=n,ge(t=r,e=i)}}function me(){ec.point=ge}function de(){function n(n,t){var e=n-r,u=t-i,a=Math.sqrt(e*e+u*u);Po+=a*(r+n)/2,Oo+=a*(i+t)/2,Yo+=a,a=i*n-r*t,Ro+=a*(r+n),Uo+=a*(i+t),Io+=3*a,ge(r=n,i=t)}var t,e,r,i;ec.point=function(u,a){ec.point=n,ge(t=r=u,e=i=a)},ec.lineEnd=function(){n(t,e)}}function ve(n){function t(t,e){n.moveTo(t,e),n.arc(t,e,a,0,2*Ka)}function e(t,e){n.moveTo(t,e),o.point=r}function r(t,e){n.lineTo(t,e)}function i(){o.point=t}function u(){n.closePath()}var a=4.5,o={point:t,lineStart:function(){o.point=e},lineEnd:i,polygonStart:function(){o.lineEnd=u},polygonEnd:function(){o.lineEnd=i,o.point=t},pointRadius:function(n){return a=n,o},result:s};return o}function ye(n){function t(t){function r(e,r){e=n(e,r),t.point(e[0],e[1])}function i(){M=0/0,S.point=a,t.lineStart()}function a(r,i){var a=zt([r,i]),o=n(r,i);e(M,x,y,b,_,w,M=o[0],x=o[1],y=r,b=a[0],_=a[1],w=a[2],u,t),t.point(M,x)}function o(){S.point=r,t.lineEnd()}function c(){i(),S.point=l,S.lineEnd=s}function l(n,t){a(f=n,h=t),g=M,p=x,m=b,d=_,v=w,S.point=a}function s(){e(M,x,y,b,_,w,g,p,f,m,d,v,u,t),S.lineEnd=o,o()}var f,h,g,p,m,d,v,y,M,x,b,_,w,S={point:r,lineStart:i,lineEnd:o,polygonStart:function(){t.polygonStart(),S.lineStart=c},polygonEnd:function(){t.polygonEnd(),S.lineStart=i}};return S}function e(t,u,a,o,c,l,s,f,h,g,p,m,d,v){var y=s-t,M=f-u,x=y*y+M*M;if(x&gt;4*r&amp;&amp;d--){var b=o+g,_=c+p,w=l+m,S=Math.sqrt(b*b+_*_+w*w),E=Math.asin(w/=S),k=Math.abs(Math.abs(w)-1)&lt;Qa?(a+h)/2:Math.atan2(_,b),A=n(k,E),N=A[0],q=A[1],T=N-t,C=q-u,z=M*T-y*C;(z*z/x&gt;r||Math.abs((y*T+M*C)/x-.5)&gt;.3||i&gt;o*g+c*p+l*m)&amp;&amp;(e(t,u,a,o,c,l,N,q,k,b/=S,_/=S,w,d,v),v.point(N,q),e(N,q,k,b,_,w,s,f,h,g,p,m,d,v))}}var r=.5,i=Math.cos(30*to),u=16;return t.precision=function(n){return arguments.length?(u=(r=n*n)&gt;0&amp;&amp;16,t):Math.sqrt(r)},t}function Me(n){var t=ye(function(t,e){return n([t*eo,e*eo])});return function(n){return n=t(n),{point:function(t,e){n.point(t*to,e*to)},sphere:function(){n.sphere()},lineStart:function(){n.lineStart()},lineEnd:function(){n.lineEnd()},polygonStart:function(){n.polygonStart()},polygonEnd:function(){n.polygonEnd()}}}}function xe(n){return be(function(){return n})()}function be(n){function t(n){return n=o(n[0]*to,n[1]*to),[n[0]*h+c,l-n[1]*h]}function e(n){return n=o.invert((n[0]-c)/h,(l-n[1])/h),n&amp;&amp;[n[0]*eo,n[1]*eo]}function r(){o=ae(a=Se(v,y,M),u);var n=u(m,d);return c=g-n[0]*h,l=p+n[1]*h,i()}function i(){return s&amp;&amp;(s.valid=!1,s=null),t}var u,a,o,c,l,s,f=ye(function(n,t){return n=u(n,t),[n[0]*h+c,l-n[1]*h]}),h=150,g=480,p=250,m=0,d=0,v=0,y=0,M=0,x=Xo,b=mt,_=null,w=null;return t.stream=function(n){return s&amp;&amp;(s.valid=!1),s=_e(a,x(f(b(n)))),s.valid=!0,s},t.clipAngle=function(n){return arguments.length?(x=null==n?(_=n,Xo):re((_=+n)*to),i()):_},t.clipExtent=function(n){return arguments.length?(w=n,b=null==n?mt:ie(n[0][0],n[0][1],n[1][0],n[1][1]),i()):w},t.scale=function(n){return arguments.length?(h=+n,r()):h},t.translate=function(n){return arguments.length?(g=+n[0],p=+n[1],r()):[g,p]},t.center=function(n){return arguments.length?(m=n[0]%360*to,d=n[1]%360*to,r()):[m*eo,d*eo]},t.rotate=function(n){return arguments.length?(v=n[0]%360*to,y=n[1]%360*to,M=n.length&gt;2?n[2]%360*to:0,r()):[v*eo,y*eo,M*eo]},ya.rebind(t,f,&quot;precision&quot;),function(){return u=n.apply(this,arguments),t.invert=u.invert&amp;&amp;e,r()}}function _e(n,t){return{point:function(e,r){r=n(e*to,r*to),e=r[0],t.point(e&gt;Ka?e-2*Ka:-Ka&gt;e?e+2*Ka:e,r[1])},sphere:function(){t.sphere()},lineStart:function(){t.lineStart()},lineEnd:function(){t.lineEnd()},polygonStart:function(){t.polygonStart()},polygonEnd:function(){t.polygonEnd()}}}function we(n,t){return[n,t]}function Se(n,t,e){return n?t||e?ae(ke(n),Ae(t,e)):ke(n):t||e?Ae(t,e):we}function Ee(n){return function(t,e){return t+=n,[t&gt;Ka?t-2*Ka:-Ka&gt;t?t+2*Ka:t,e]}}function ke(n){var t=Ee(n);return t.invert=Ee(-n),t}function Ae(n,t){function e(n,t){var e=Math.cos(t),o=Math.cos(n)*e,c=Math.sin(n)*e,l=Math.sin(t),s=l*r+o*i;return[Math.atan2(c*u-s*a,o*r-l*i),V(s*u+c*a)]}var r=Math.cos(n),i=Math.sin(n),u=Math.cos(t),a=Math.sin(t);return e.invert=function(n,t){var e=Math.cos(t),o=Math.cos(n)*e,c=Math.sin(n)*e,l=Math.sin(t),s=l*u-c*a;return[Math.atan2(c*u+l*a,o*r+s*i),V(s*r-o*i)]},e}function Ne(n,t){var e=Math.cos(n),r=Math.sin(n);return function(i,u,a,o){null!=i?(i=qe(e,i),u=qe(e,u),(a&gt;0?u&gt;i:i&gt;u)&amp;&amp;(i+=2*a*Ka)):(i=n+2*a*Ka,u=n);for(var c,l=a*t,s=i;a&gt;0?s&gt;u:u&gt;s;s-=l)o.point((c=Pt([e,-r*Math.cos(s),-r*Math.sin(s)]))[0],c[1])}}function qe(n,t){var e=zt(t);e[0]-=n,Ft(e);var r=I(-e[1]);return((-e[2]&lt;0?-r:r)+2*Math.PI-Qa)%(2*Math.PI)}function Te(n,t,e){var r=ya.range(n,t-Qa,e).concat(t);return function(n){return r.map(function(t){return[n,t]})}}function Ce(n,t,e){var r=ya.range(n,t-Qa,e).concat(t);return function(n){return r.map(function(t){return[t,n]})}}function ze(n){return n.source}function De(n){return n.target}function je(n,t,e,r){var i=Math.cos(t),u=Math.sin(t),a=Math.cos(r),o=Math.sin(r),c=i*Math.cos(n),l=i*Math.sin(n),s=a*Math.cos(e),f=a*Math.sin(e),h=2*Math.asin(Math.sqrt(B(r-t)+i*a*B(e-n))),g=1/Math.sin(h),p=h?function(n){var t=Math.sin(n*=h)*g,e=Math.sin(h-n)*g,r=e*c+t*s,i=e*l+t*f,a=e*u+t*o;return[Math.atan2(i,r)*eo,Math.atan2(a,Math.sqrt(r*r+i*i))*eo]}:function(){return[n*eo,t*eo]};return p.distance=h,p}function Le(){function n(n,i){var u=Math.sin(i*=to),a=Math.cos(i),o=Math.abs((n*=to)-t),c=Math.cos(o);rc+=Math.atan2(Math.sqrt((o=a*Math.sin(o))*o+(o=r*u-e*a*c)*o),e*u+r*a*c),t=n,e=u,r=a}var t,e,r;ic.point=function(i,u){t=i*to,e=Math.sin(u*=to),r=Math.cos(u),ic.point=n},ic.lineEnd=function(){ic.point=ic.lineEnd=s}}function He(n,t){function e(t,e){var r=Math.cos(t),i=Math.cos(e),u=n(r*i);return[u*i*Math.sin(t),u*Math.sin(e)]}return e.invert=function(n,e){var r=Math.sqrt(n*n+e*e),i=t(r),u=Math.sin(i),a=Math.cos(i);return[Math.atan2(n*u,r*a),Math.asin(r&amp;&amp;e*u/r)]},e}function Fe(n,t){function e(n,t){var e=Math.abs(Math.abs(t)-Ka/2)&lt;Qa?0:a/Math.pow(i(t),u);return[e*Math.sin(u*n),a-e*Math.cos(u*n)]}var r=Math.cos(n),i=function(n){return Math.tan(Ka/4+n/2)},u=n===t?Math.sin(n):Math.log(r/Math.cos(t))/Math.log(i(t)/i(n)),a=r*Math.pow(i(n),u)/u;return u?(e.invert=function(n,t){var e=a-t,r=U(u)*Math.sqrt(n*n+e*e);return[Math.atan2(n,e)/u,2*Math.atan(Math.pow(a/r,1/u))-Ka/2]},e):Oe}function Pe(n,t){function e(n,t){var e=u-t;return[e*Math.sin(i*n),u-e*Math.cos(i*n)]}var r=Math.cos(n),i=n===t?Math.sin(n):(r-Math.cos(t))/(t-n),u=r/i+n;return Math.abs(i)&lt;Qa?we:(e.invert=function(n,t){var e=u-t;return[Math.atan2(n,e)/i,u-U(i)*Math.sqrt(n*n+e*e)]},e)}function Oe(n,t){return[n,Math.log(Math.tan(Ka/4+t/2))]}function Ye(n){var t,e=xe(n),r=e.scale,i=e.translate,u=e.clipExtent;return e.scale=function(){var n=r.apply(e,arguments);return n===e?t?e.clipExtent(null):e:n},e.translate=function(){var n=i.apply(e,arguments);return n===e?t?e.clipExtent(null):e:n},e.clipExtent=function(n){var a=u.apply(e,arguments);if(a===e){if(t=null==n){var o=Ka*r(),c=i();u([[c[0]-o,c[1]-o],[c[0]+o,c[1]+o]])}}else t&amp;&amp;(a=null);return a},e.clipExtent(null)}function Re(n,t){var e=Math.cos(t)*Math.sin(n);return[Math.log((1+e)/(1-e))/2,Math.atan2(Math.tan(t),Math.cos(n))]}function Ue(n){function t(t){function a(){l.push(&quot;M&quot;,u(n(s),o))}for(var c,l=[],s=[],f=-1,h=t.length,g=pt(e),p=pt(r);++f&lt;h;)i.call(this,c=t[f],f)?s.push([+g.call(this,c,f),+p.call(this,c,f)]):s.length&amp;&amp;(a(),s=[]);return s.length&amp;&amp;a(),l.length?l.join(&quot;&quot;):null}var e=Ie,r=Ve,i=Xt,u=Xe,a=u.key,o=.7;return t.x=function(n){return arguments.length?(e=n,t):e},t.y=function(n){return arguments.length?(r=n,t):r},t.defined=function(n){return arguments.length?(i=n,t):i},t.interpolate=function(n){return arguments.length?(a=&quot;function&quot;==typeof n?u=n:(u=sc.get(n)||Xe).key,t):a},t.tension=function(n){return arguments.length?(o=n,t):o},t}function Ie(n){return n[0]}function Ve(n){return n[1]}function Xe(n){return n.join(&quot;L&quot;)}function Ze(n){return Xe(n)+&quot;Z&quot;}function Be(n){for(var t=0,e=n.length,r=n[0],i=[r[0],&quot;,&quot;,r[1]];++t&lt;e;)i.push(&quot;H&quot;,(r[0]+(r=n[t])[0])/2,&quot;V&quot;,r[1]);return e&gt;1&amp;&amp;i.push(&quot;H&quot;,r[0]),i.join(&quot;&quot;)}function $e(n){for(var t=0,e=n.length,r=n[0],i=[r[0],&quot;,&quot;,r[1]];++t&lt;e;)i.push(&quot;V&quot;,(r=n[t])[1],&quot;H&quot;,r[0]);return i.join(&quot;&quot;)}function We(n){for(var t=0,e=n.length,r=n[0],i=[r[0],&quot;,&quot;,r[1]];++t&lt;e;)i.push(&quot;H&quot;,(r=n[t])[0],&quot;V&quot;,r[1]);return i.join(&quot;&quot;)}function Je(n,t){return n.length&lt;4?Xe(n):n[1]+Qe(n.slice(1,n.length-1),nr(n,t))}function Ge(n,t){return n.length&lt;3?Xe(n):n[0]+Qe((n.push(n[0]),n),nr([n[n.length-2]].concat(n,[n[1]]),t))}function Ke(n,t){return n.length&lt;3?Xe(n):n[0]+Qe(n,nr(n,t))}function Qe(n,t){if(t.length&lt;1||n.length!=t.length&amp;&amp;n.length!=t.length+2)return Xe(n);var e=n.length!=t.length,r=&quot;&quot;,i=n[0],u=n[1],a=t[0],o=a,c=1;if(e&amp;&amp;(r+=&quot;Q&quot;+(u[0]-2*a[0]/3)+&quot;,&quot;+(u[1]-2*a[1]/3)+&quot;,&quot;+u[0]+&quot;,&quot;+u[1],i=n[1],c=2),t.length&gt;1){o=t[1],u=n[c],c++,r+=&quot;C&quot;+(i[0]+a[0])+&quot;,&quot;+(i[1]+a[1])+&quot;,&quot;+(u[0]-o[0])+&quot;,&quot;+(u[1]-o[1])+&quot;,&quot;+u[0]+&quot;,&quot;+u[1];for(var l=2;l&lt;t.length;l++,c++)u=n[c],o=t[l],r+=&quot;S&quot;+(u[0]-o[0])+&quot;,&quot;+(u[1]-o[1])+&quot;,&quot;+u[0]+&quot;,&quot;+u[1]}if(e){var s=n[c];r+=&quot;Q&quot;+(u[0]+2*o[0]/3)+&quot;,&quot;+(u[1]+2*o[1]/3)+&quot;,&quot;+s[0]+&quot;,&quot;+s[1]}return r}function nr(n,t){for(var e,r=[],i=(1-t)/2,u=n[0],a=n[1],o=1,c=n.length;++o&lt;c;)e=u,u=a,a=n[o],r.push([i*(a[0]-e[0]),i*(a[1]-e[1])]);return r}function tr(n){if(n.length&lt;3)return Xe(n);var t=1,e=n.length,r=n[0],i=r[0],u=r[1],a=[i,i,i,(r=n[1])[0]],o=[u,u,u,r[1]],c=[i,&quot;,&quot;,u,&quot;L&quot;,ur(gc,a),&quot;,&quot;,ur(gc,o)];for(n.push(n[e-1]);++t&lt;=e;)r=n[t],a.shift(),a.push(r[0]),o.shift(),o.push(r[1]),ar(c,a,o);return n.pop(),c.push(&quot;L&quot;,r),c.join(&quot;&quot;)}function er(n){if(n.length&lt;4)return Xe(n);for(var t,e=[],r=-1,i=n.length,u=[0],a=[0];++r&lt;3;)t=n[r],u.push(t[0]),a.push(t[1]);for(e.push(ur(gc,u)+&quot;,&quot;+ur(gc,a)),--r;++r&lt;i;)t=n[r],u.shift(),u.push(t[0]),a.shift(),a.push(t[1]),ar(e,u,a);return e.join(&quot;&quot;)}function rr(n){for(var t,e,r=-1,i=n.length,u=i+4,a=[],o=[];++r&lt;4;)e=n[r%i],a.push(e[0]),o.push(e[1]);for(t=[ur(gc,a),&quot;,&quot;,ur(gc,o)],--r;++r&lt;u;)e=n[r%i],a.shift(),a.push(e[0]),o.shift(),o.push(e[1]),ar(t,a,o);return t.join(&quot;&quot;)}function ir(n,t){var e=n.length-1;if(e)for(var r,i,u=n[0][0],a=n[0][1],o=n[e][0]-u,c=n[e][1]-a,l=-1;++l&lt;=e;)r=n[l],i=l/e,r[0]=t*r[0]+(1-t)*(u+i*o),r[1]=t*r[1]+(1-t)*(a+i*c);return tr(n)}function ur(n,t){return n[0]*t[0]+n[1]*t[1]+n[2]*t[2]+n[3]*t[3]</div><div class='line' id='LC15010'>}function ar(n,t,e){n.push(&quot;C&quot;,ur(fc,t),&quot;,&quot;,ur(fc,e),&quot;,&quot;,ur(hc,t),&quot;,&quot;,ur(hc,e),&quot;,&quot;,ur(gc,t),&quot;,&quot;,ur(gc,e))}function or(n,t){return(t[1]-n[1])/(t[0]-n[0])}function cr(n){for(var t=0,e=n.length-1,r=[],i=n[0],u=n[1],a=r[0]=or(i,u);++t&lt;e;)r[t]=(a+(a=or(i=u,u=n[t+1])))/2;return r[t]=a,r}function lr(n){for(var t,e,r,i,u=[],a=cr(n),o=-1,c=n.length-1;++o&lt;c;)t=or(n[o],n[o+1]),Math.abs(t)&lt;1e-6?a[o]=a[o+1]=0:(e=a[o]/t,r=a[o+1]/t,i=e*e+r*r,i&gt;9&amp;&amp;(i=3*t/Math.sqrt(i),a[o]=i*e,a[o+1]=i*r));for(o=-1;++o&lt;=c;)i=(n[Math.min(c,o+1)][0]-n[Math.max(0,o-1)][0])/(6*(1+a[o]*a[o])),u.push([i||0,a[o]*i||0]);return u}function sr(n){return n.length&lt;3?Xe(n):n[0]+Qe(n,lr(n))}function fr(n,t,e,r){var i,u,a,o,c,l,s;return i=r[n],u=i[0],a=i[1],i=r[t],o=i[0],c=i[1],i=r[e],l=i[0],s=i[1],(s-a)*(o-u)-(c-a)*(l-u)&gt;0}function hr(n,t,e){return(e[0]-t[0])*(n[1]-t[1])&lt;(e[1]-t[1])*(n[0]-t[0])}function gr(n,t,e,r){var i=n[0],u=e[0],a=t[0]-i,o=r[0]-u,c=n[1],l=e[1],s=t[1]-c,f=r[1]-l,h=(o*(c-l)-f*(i-u))/(f*a-o*s);return[i+h*a,c+h*s]}function pr(n){var t=n[0],e=n[n.length-1];return!(t[0]-e[0]||t[1]-e[1])}function mr(n,t){var e={list:n.map(function(n,t){return{index:t,x:n[0],y:n[1]}}).sort(function(n,t){return n.y&lt;t.y?-1:n.y&gt;t.y?1:n.x&lt;t.x?-1:n.x&gt;t.x?1:0}),bottomSite:null},r={list:[],leftEnd:null,rightEnd:null,init:function(){r.leftEnd=r.createHalfEdge(null,&quot;l&quot;),r.rightEnd=r.createHalfEdge(null,&quot;l&quot;),r.leftEnd.r=r.rightEnd,r.rightEnd.l=r.leftEnd,r.list.unshift(r.leftEnd,r.rightEnd)},createHalfEdge:function(n,t){return{edge:n,side:t,vertex:null,l:null,r:null}},insert:function(n,t){t.l=n,t.r=n.r,n.r.l=t,n.r=t},leftBound:function(n){var t=r.leftEnd;do t=t.r;while(t!=r.rightEnd&amp;&amp;i.rightOf(t,n));return t=t.l},del:function(n){n.l.r=n.r,n.r.l=n.l,n.edge=null},right:function(n){return n.r},left:function(n){return n.l},leftRegion:function(n){return null==n.edge?e.bottomSite:n.edge.region[n.side]},rightRegion:function(n){return null==n.edge?e.bottomSite:n.edge.region[mc[n.side]]}},i={bisect:function(n,t){var e={region:{l:n,r:t},ep:{l:null,r:null}},r=t.x-n.x,i=t.y-n.y,u=r&gt;0?r:-r,a=i&gt;0?i:-i;return e.c=n.x*r+n.y*i+.5*(r*r+i*i),u&gt;a?(e.a=1,e.b=i/r,e.c/=r):(e.b=1,e.a=r/i,e.c/=i),e},intersect:function(n,t){var e=n.edge,r=t.edge;if(!e||!r||e.region.r==r.region.r)return null;var i=e.a*r.b-e.b*r.a;if(Math.abs(i)&lt;1e-10)return null;var u,a,o=(e.c*r.b-r.c*e.b)/i,c=(r.c*e.a-e.c*r.a)/i,l=e.region.r,s=r.region.r;l.y&lt;s.y||l.y==s.y&amp;&amp;l.x&lt;s.x?(u=n,a=e):(u=t,a=r);var f=o&gt;=a.region.r.x;return f&amp;&amp;&quot;l&quot;===u.side||!f&amp;&amp;&quot;r&quot;===u.side?null:{x:o,y:c}},rightOf:function(n,t){var e=n.edge,r=e.region.r,i=t.x&gt;r.x;if(i&amp;&amp;&quot;l&quot;===n.side)return 1;if(!i&amp;&amp;&quot;r&quot;===n.side)return 0;if(1===e.a){var u=t.y-r.y,a=t.x-r.x,o=0,c=0;if(!i&amp;&amp;e.b&lt;0||i&amp;&amp;e.b&gt;=0?c=o=u&gt;=e.b*a:(c=t.x+t.y*e.b&gt;e.c,e.b&lt;0&amp;&amp;(c=!c),c||(o=1)),!o){var l=r.x-e.region.l.x;c=e.b*(a*a-u*u)&lt;l*u*(1+2*a/l+e.b*e.b),e.b&lt;0&amp;&amp;(c=!c)}}else{var s=e.c-e.a*t.x,f=t.y-s,h=t.x-r.x,g=s-r.y;c=f*f&gt;h*h+g*g}return&quot;l&quot;===n.side?c:!c},endPoint:function(n,e,r){n.ep[e]=r,n.ep[mc[e]]&amp;&amp;t(n)},distance:function(n,t){var e=n.x-t.x,r=n.y-t.y;return Math.sqrt(e*e+r*r)}},u={list:[],insert:function(n,t,e){n.vertex=t,n.ystar=t.y+e;for(var r=0,i=u.list,a=i.length;a&gt;r;r++){var o=i[r];if(!(n.ystar&gt;o.ystar||n.ystar==o.ystar&amp;&amp;t.x&gt;o.vertex.x))break}i.splice(r,0,n)},del:function(n){for(var t=0,e=u.list,r=e.length;r&gt;t&amp;&amp;e[t]!=n;++t);e.splice(t,1)},empty:function(){return 0===u.list.length},nextEvent:function(n){for(var t=0,e=u.list,r=e.length;r&gt;t;++t)if(e[t]==n)return e[t+1];return null},min:function(){var n=u.list[0];return{x:n.vertex.x,y:n.ystar}},extractMin:function(){return u.list.shift()}};r.init(),e.bottomSite=e.list.shift();for(var a,o,c,l,s,f,h,g,p,m,d,v,y,M=e.list.shift();;)if(u.empty()||(a=u.min()),M&amp;&amp;(u.empty()||M.y&lt;a.y||M.y==a.y&amp;&amp;M.x&lt;a.x))o=r.leftBound(M),c=r.right(o),h=r.rightRegion(o),v=i.bisect(h,M),f=r.createHalfEdge(v,&quot;l&quot;),r.insert(o,f),m=i.intersect(o,f),m&amp;&amp;(u.del(o),u.insert(o,m,i.distance(m,M))),o=f,f=r.createHalfEdge(v,&quot;r&quot;),r.insert(o,f),m=i.intersect(f,c),m&amp;&amp;u.insert(f,m,i.distance(m,M)),M=e.list.shift();else{if(u.empty())break;o=u.extractMin(),l=r.left(o),c=r.right(o),s=r.right(c),h=r.leftRegion(o),g=r.rightRegion(c),d=o.vertex,i.endPoint(o.edge,o.side,d),i.endPoint(c.edge,c.side,d),r.del(o),u.del(c),r.del(c),y=&quot;l&quot;,h.y&gt;g.y&amp;&amp;(p=h,h=g,g=p,y=&quot;r&quot;),v=i.bisect(h,g),f=r.createHalfEdge(v,y),r.insert(l,f),i.endPoint(v,mc[y],d),m=i.intersect(l,f),m&amp;&amp;(u.del(l),u.insert(l,m,i.distance(m,h))),m=i.intersect(f,s),m&amp;&amp;u.insert(f,m,i.distance(m,h))}for(o=r.right(r.leftEnd);o!=r.rightEnd;o=r.right(o))t(o.edge)}function dr(n){return n.x}function vr(n){return n.y}function yr(){return{leaf:!0,nodes:[],point:null,x:null,y:null}}function Mr(n,t,e,r,i,u){if(!n(t,e,r,i,u)){var a=.5*(e+i),o=.5*(r+u),c=t.nodes;c[0]&amp;&amp;Mr(n,c[0],e,r,a,o),c[1]&amp;&amp;Mr(n,c[1],a,r,i,o),c[2]&amp;&amp;Mr(n,c[2],e,o,a,u),c[3]&amp;&amp;Mr(n,c[3],a,o,i,u)}}function xr(n,t){n=ya.rgb(n),t=ya.rgb(t);var e=n.r,r=n.g,i=n.b,u=t.r-e,a=t.g-r,o=t.b-i;return function(n){return&quot;#&quot;+ct(Math.round(e+u*n))+ct(Math.round(r+a*n))+ct(Math.round(i+o*n))}}function br(n,t){var e,r={},i={};for(e in n)e in t?r[e]=Sr(n[e],t[e]):i[e]=n[e];for(e in t)e in n||(i[e]=t[e]);return function(n){for(e in r)i[e]=r[e](n);return i}}function _r(n,t){return t-=n=+n,function(e){return n+t*e}}function wr(n,t){var e,r,i,u,a,o=0,c=0,l=[],s=[];for(n+=&quot;&quot;,t+=&quot;&quot;,dc.lastIndex=0,r=0;e=dc.exec(t);++r)e.index&amp;&amp;l.push(t.substring(o,c=e.index)),s.push({i:l.length,x:e[0]}),l.push(null),o=dc.lastIndex;for(o&lt;t.length&amp;&amp;l.push(t.substring(o)),r=0,u=s.length;(e=dc.exec(n))&amp;&amp;u&gt;r;++r)if(a=s[r],a.x==e[0]){if(a.i)if(null==l[a.i+1])for(l[a.i-1]+=a.x,l.splice(a.i,1),i=r+1;u&gt;i;++i)s[i].i--;else for(l[a.i-1]+=a.x+l[a.i+1],l.splice(a.i,2),i=r+1;u&gt;i;++i)s[i].i-=2;else if(null==l[a.i+1])l[a.i]=a.x;else for(l[a.i]=a.x+l[a.i+1],l.splice(a.i+1,1),i=r+1;u&gt;i;++i)s[i].i--;s.splice(r,1),u--,r--}else a.x=_r(parseFloat(e[0]),parseFloat(a.x));for(;u&gt;r;)a=s.pop(),null==l[a.i+1]?l[a.i]=a.x:(l[a.i]=a.x+l[a.i+1],l.splice(a.i+1,1)),u--;return 1===l.length?null==l[0]?(a=s[0].x,function(n){return a(n)+&quot;&quot;}):function(){return t}:function(n){for(r=0;u&gt;r;++r)l[(a=s[r]).i]=a.x(n);return l.join(&quot;&quot;)}}function Sr(n,t){for(var e,r=ya.interpolators.length;--r&gt;=0&amp;&amp;!(e=ya.interpolators[r](n,t)););return e}function Er(n,t){var e,r=[],i=[],u=n.length,a=t.length,o=Math.min(n.length,t.length);for(e=0;o&gt;e;++e)r.push(Sr(n[e],t[e]));for(;u&gt;e;++e)i[e]=n[e];for(;a&gt;e;++e)i[e]=t[e];return function(n){for(e=0;o&gt;e;++e)i[e]=r[e](n);return i}}function kr(n){return function(t){return 0&gt;=t?0:t&gt;=1?1:n(t)}}function Ar(n){return function(t){return 1-n(1-t)}}function Nr(n){return function(t){return.5*(.5&gt;t?n(2*t):2-n(2-2*t))}}function qr(n){return n*n}function Tr(n){return n*n*n}function Cr(n){if(0&gt;=n)return 0;if(n&gt;=1)return 1;var t=n*n,e=t*n;return 4*(.5&gt;n?e:3*(n-t)+e-.75)}function zr(n){return function(t){return Math.pow(t,n)}}function Dr(n){return 1-Math.cos(n*Ka/2)}function jr(n){return Math.pow(2,10*(n-1))}function Lr(n){return 1-Math.sqrt(1-n*n)}function Hr(n,t){var e;return arguments.length&lt;2&amp;&amp;(t=.45),arguments.length?e=t/(2*Ka)*Math.asin(1/n):(n=1,e=t/4),function(r){return 1+n*Math.pow(2,10*-r)*Math.sin(2*(r-e)*Ka/t)}}function Fr(n){return n||(n=1.70158),function(t){return t*t*((n+1)*t-n)}}function Pr(n){return 1/2.75&gt;n?7.5625*n*n:2/2.75&gt;n?7.5625*(n-=1.5/2.75)*n+.75:2.5/2.75&gt;n?7.5625*(n-=2.25/2.75)*n+.9375:7.5625*(n-=2.625/2.75)*n+.984375}function Or(n,t){n=ya.hcl(n),t=ya.hcl(t);var e=n.h,r=n.c,i=n.l,u=t.h-e,a=t.c-r,o=t.l-i;return isNaN(a)&amp;&amp;(a=0,r=isNaN(r)?t.c:r),isNaN(u)?(u=0,e=isNaN(e)?t.h:e):u&gt;180?u-=360:-180&gt;u&amp;&amp;(u+=360),function(n){return J(e+u*n,r+a*n,i+o*n)+&quot;&quot;}}function Yr(n,t){n=ya.hsl(n),t=ya.hsl(t);var e=n.h,r=n.s,i=n.l,u=t.h-e,a=t.s-r,o=t.l-i;return isNaN(a)&amp;&amp;(a=0,r=isNaN(r)?t.s:r),isNaN(u)?(u=0,e=isNaN(e)?t.h:e):u&gt;180?u-=360:-180&gt;u&amp;&amp;(u+=360),function(n){return R(e+u*n,r+a*n,i+o*n)+&quot;&quot;}}function Rr(n,t){n=ya.lab(n),t=ya.lab(t);var e=n.l,r=n.a,i=n.b,u=t.l-e,a=t.a-r,o=t.b-i;return function(n){return Q(e+u*n,r+a*n,i+o*n)+&quot;&quot;}}function Ur(n,t){return t-=n,function(e){return Math.round(n+t*e)}}function Ir(n){var t=[n.a,n.b],e=[n.c,n.d],r=Xr(t),i=Vr(t,e),u=Xr(Zr(e,t,-i))||0;t[0]*e[1]&lt;e[0]*t[1]&amp;&amp;(t[0]*=-1,t[1]*=-1,r*=-1,i*=-1),this.rotate=(r?Math.atan2(t[1],t[0]):Math.atan2(-e[0],e[1]))*eo,this.translate=[n.e,n.f],this.scale=[r,u],this.skew=u?Math.atan2(i,u)*eo:0}function Vr(n,t){return n[0]*t[0]+n[1]*t[1]}function Xr(n){var t=Math.sqrt(Vr(n,n));return t&amp;&amp;(n[0]/=t,n[1]/=t),t}function Zr(n,t,e){return n[0]+=e*t[0],n[1]+=e*t[1],n}function Br(n,t){var e,r=[],i=[],u=ya.transform(n),a=ya.transform(t),o=u.translate,c=a.translate,l=u.rotate,s=a.rotate,f=u.skew,h=a.skew,g=u.scale,p=a.scale;return o[0]!=c[0]||o[1]!=c[1]?(r.push(&quot;translate(&quot;,null,&quot;,&quot;,null,&quot;)&quot;),i.push({i:1,x:_r(o[0],c[0])},{i:3,x:_r(o[1],c[1])})):c[0]||c[1]?r.push(&quot;translate(&quot;+c+&quot;)&quot;):r.push(&quot;&quot;),l!=s?(l-s&gt;180?s+=360:s-l&gt;180&amp;&amp;(l+=360),i.push({i:r.push(r.pop()+&quot;rotate(&quot;,null,&quot;)&quot;)-2,x:_r(l,s)})):s&amp;&amp;r.push(r.pop()+&quot;rotate(&quot;+s+&quot;)&quot;),f!=h?i.push({i:r.push(r.pop()+&quot;skewX(&quot;,null,&quot;)&quot;)-2,x:_r(f,h)}):h&amp;&amp;r.push(r.pop()+&quot;skewX(&quot;+h+&quot;)&quot;),g[0]!=p[0]||g[1]!=p[1]?(e=r.push(r.pop()+&quot;scale(&quot;,null,&quot;,&quot;,null,&quot;)&quot;),i.push({i:e-4,x:_r(g[0],p[0])},{i:e-2,x:_r(g[1],p[1])})):(1!=p[0]||1!=p[1])&amp;&amp;r.push(r.pop()+&quot;scale(&quot;+p+&quot;)&quot;),e=i.length,function(n){for(var t,u=-1;++u&lt;e;)r[(t=i[u]).i]=t.x(n);return r.join(&quot;&quot;)}}function $r(n,t){return t=t-(n=+n)?1/(t-n):0,function(e){return(e-n)*t}}function Wr(n,t){return t=t-(n=+n)?1/(t-n):0,function(e){return Math.max(0,Math.min(1,(e-n)*t))}}function Jr(n){for(var t=n.source,e=n.target,r=Kr(t,e),i=[t];t!==r;)t=t.parent,i.push(t);for(var u=i.length;e!==r;)i.splice(u,0,e),e=e.parent;return i}function Gr(n){for(var t=[],e=n.parent;null!=e;)t.push(n),n=e,e=e.parent;return t.push(n),t}function Kr(n,t){if(n===t)return n;for(var e=Gr(n),r=Gr(t),i=e.pop(),u=r.pop(),a=null;i===u;)a=i,i=e.pop(),u=r.pop();return a}function Qr(n){n.fixed|=2}function ni(n){n.fixed&amp;=-7}function ti(n){n.fixed|=4,n.px=n.x,n.py=n.y}function ei(n){n.fixed&amp;=-5}function ri(n,t,e){var r=0,i=0;if(n.charge=0,!n.leaf)for(var u,a=n.nodes,o=a.length,c=-1;++c&lt;o;)u=a[c],null!=u&amp;&amp;(ri(u,t,e),n.charge+=u.charge,r+=u.charge*u.cx,i+=u.charge*u.cy);if(n.point){n.leaf||(n.point.x+=Math.random()-.5,n.point.y+=Math.random()-.5);var l=t*e[n.point.index];n.charge+=n.pointCharge=l,r+=l*n.point.x,i+=l*n.point.y}n.cx=r/n.charge,n.cy=i/n.charge}function ii(n,t){return ya.rebind(n,t,&quot;sort&quot;,&quot;children&quot;,&quot;value&quot;),n.nodes=n,n.links=ci,n}function ui(n){return n.children}function ai(n){return n.value}function oi(n,t){return t.value-n.value}function ci(n){return ya.merge(n.map(function(n){return(n.children||[]).map(function(t){return{source:n,target:t}})}))}function li(n){return n.x}function si(n){return n.y}function fi(n,t,e){n.y0=t,n.y=e}function hi(n){return ya.range(n.length)}function gi(n){for(var t=-1,e=n[0].length,r=[];++t&lt;e;)r[t]=0;return r}function pi(n){for(var t,e=1,r=0,i=n[0][1],u=n.length;u&gt;e;++e)(t=n[e][1])&gt;i&amp;&amp;(r=e,i=t);return r}function mi(n){return n.reduce(di,0)}function di(n,t){return n+t[1]}function vi(n,t){return yi(n,Math.ceil(Math.log(t.length)/Math.LN2+1))}function yi(n,t){for(var e=-1,r=+n[0],i=(n[1]-r)/t,u=[];++e&lt;=t;)u[e]=i*e+r;return u}function Mi(n){return[ya.min(n),ya.max(n)]}function xi(n,t){return n.parent==t.parent?1:2}function bi(n){var t=n.children;return t&amp;&amp;t.length?t[0]:n._tree.thread}function _i(n){var t,e=n.children;return e&amp;&amp;(t=e.length)?e[t-1]:n._tree.thread}function wi(n,t){var e=n.children;if(e&amp;&amp;(i=e.length))for(var r,i,u=-1;++u&lt;i;)t(r=wi(e[u],t),n)&gt;0&amp;&amp;(n=r);return n}function Si(n,t){return n.x-t.x}function Ei(n,t){return t.x-n.x}function ki(n,t){return n.depth-t.depth}function Ai(n,t){function e(n,r){var i=n.children;if(i&amp;&amp;(a=i.length))for(var u,a,o=null,c=-1;++c&lt;a;)u=i[c],e(u,o),o=u;t(n,r)}e(n,null)}function Ni(n){for(var t,e=0,r=0,i=n.children,u=i.length;--u&gt;=0;)t=i[u]._tree,t.prelim+=e,t.mod+=e,e+=t.shift+(r+=t.change)}function qi(n,t,e){n=n._tree,t=t._tree;var r=e/(t.number-n.number);n.change+=r,t.change-=r,t.shift+=e,t.prelim+=e,t.mod+=e}function Ti(n,t,e){return n._tree.ancestor.parent==t.parent?n._tree.ancestor:e}function Ci(n,t){return n.value-t.value}function zi(n,t){var e=n._pack_next;n._pack_next=t,t._pack_prev=n,t._pack_next=e,e._pack_prev=t}function Di(n,t){n._pack_next=t,t._pack_prev=n}function ji(n,t){var e=t.x-n.x,r=t.y-n.y,i=n.r+t.r;return.999*i*i&gt;e*e+r*r}function Li(n){function t(n){s=Math.min(n.x-n.r,s),f=Math.max(n.x+n.r,f),h=Math.min(n.y-n.r,h),g=Math.max(n.y+n.r,g)}if((e=n.children)&amp;&amp;(l=e.length)){var e,r,i,u,a,o,c,l,s=1/0,f=-1/0,h=1/0,g=-1/0;if(e.forEach(Hi),r=e[0],r.x=-r.r,r.y=0,t(r),l&gt;1&amp;&amp;(i=e[1],i.x=i.r,i.y=0,t(i),l&gt;2))for(u=e[2],Oi(r,i,u),t(u),zi(r,u),r._pack_prev=u,zi(u,i),i=r._pack_next,a=3;l&gt;a;a++){Oi(r,i,u=e[a]);var p=0,m=1,d=1;for(o=i._pack_next;o!==i;o=o._pack_next,m++)if(ji(o,u)){p=1;break}if(1==p)for(c=r._pack_prev;c!==o._pack_prev&amp;&amp;!ji(c,u);c=c._pack_prev,d++);p?(d&gt;m||m==d&amp;&amp;i.r&lt;r.r?Di(r,i=o):Di(r=c,i),a--):(zi(r,u),i=u,t(u))}var v=(s+f)/2,y=(h+g)/2,M=0;for(a=0;l&gt;a;a++)u=e[a],u.x-=v,u.y-=y,M=Math.max(M,u.r+Math.sqrt(u.x*u.x+u.y*u.y));n.r=M,e.forEach(Fi)}}function Hi(n){n._pack_next=n._pack_prev=n}function Fi(n){delete n._pack_next,delete n._pack_prev}function Pi(n,t,e,r){var i=n.children;if(n.x=t+=r*n.x,n.y=e+=r*n.y,n.r*=r,i)for(var u=-1,a=i.length;++u&lt;a;)Pi(i[u],t,e,r)}function Oi(n,t,e){var r=n.r+e.r,i=t.x-n.x,u=t.y-n.y;if(r&amp;&amp;(i||u)){var a=t.r+e.r,o=i*i+u*u;a*=a,r*=r;var c=.5+(r-a)/(2*o),l=Math.sqrt(Math.max(0,2*a*(r+o)-(r-=o)*r-a*a))/(2*o);e.x=n.x+c*i+l*u,e.y=n.y+c*u-l*i}else e.x=n.x+r,e.y=n.y}function Yi(n){return 1+ya.max(n,function(n){return n.y})}function Ri(n){return n.reduce(function(n,t){return n+t.x},0)/n.length}function Ui(n){var t=n.children;return t&amp;&amp;t.length?Ui(t[0]):n}function Ii(n){var t,e=n.children;return e&amp;&amp;(t=e.length)?Ii(e[t-1]):n}function Vi(n){return{x:n.x,y:n.y,dx:n.dx,dy:n.dy}}function Xi(n,t){var e=n.x+t[3],r=n.y+t[0],i=n.dx-t[1]-t[3],u=n.dy-t[0]-t[2];return 0&gt;i&amp;&amp;(e+=i/2,i=0),0&gt;u&amp;&amp;(r+=u/2,u=0),{x:e,y:r,dx:i,dy:u}}function Zi(n){var t=n[0],e=n[n.length-1];return e&gt;t?[t,e]:[e,t]}function Bi(n){return n.rangeExtent?n.rangeExtent():Zi(n.range())}function $i(n,t,e,r){var i=e(n[0],n[1]),u=r(t[0],t[1]);return function(n){return u(i(n))}}function Wi(n,t){var e,r=0,i=n.length-1,u=n[r],a=n[i];return u&gt;a&amp;&amp;(e=r,r=i,i=e,e=u,u=a,a=e),n[r]=t.floor(u),n[i]=t.ceil(a),n}function Ji(n){return n?{floor:function(t){return Math.floor(t/n)*n},ceil:function(t){return Math.ceil(t/n)*n}}:kc}function Gi(n,t,e,r){var i=[],u=[],a=0,o=Math.min(n.length,t.length)-1;for(n[o]&lt;n[0]&amp;&amp;(n=n.slice().reverse(),t=t.slice().reverse());++a&lt;=o;)i.push(e(n[a-1],n[a])),u.push(r(t[a-1],t[a]));return function(t){var e=ya.bisect(n,t,1,o)-1;return u[e](i[e](t))}}function Ki(n,t,e,r){function i(){var i=Math.min(n.length,t.length)&gt;2?Gi:$i,c=r?Wr:$r;return a=i(n,t,c,e),o=i(t,n,c,Sr),u}function u(n){return a(n)}var a,o;return u.invert=function(n){return o(n)},u.domain=function(t){return arguments.length?(n=t.map(Number),i()):n},u.range=function(n){return arguments.length?(t=n,i()):t},u.rangeRound=function(n){return u.range(n).interpolate(Ur)},u.clamp=function(n){return arguments.length?(r=n,i()):r},u.interpolate=function(n){return arguments.length?(e=n,i()):e},u.ticks=function(t){return ru(n,t)},u.tickFormat=function(t,e){return iu(n,t,e)},u.nice=function(t){return nu(n,t),i()},u.copy=function(){return Ki(n,t,e,r)},i()}function Qi(n,t){return ya.rebind(n,t,&quot;range&quot;,&quot;rangeRound&quot;,&quot;interpolate&quot;,&quot;clamp&quot;)}function nu(n,t){return Wi(n,Ji(t?eu(n,t)[2]:tu(n)))}function tu(n){var t=Zi(n),e=t[1]-t[0];return Math.pow(10,Math.round(Math.log(e)/Math.LN10)-1)}function eu(n,t){var e=Zi(n),r=e[1]-e[0],i=Math.pow(10,Math.floor(Math.log(r/t)/Math.LN10)),u=t/r*i;return.15&gt;=u?i*=10:.35&gt;=u?i*=5:.75&gt;=u&amp;&amp;(i*=2),e[0]=Math.ceil(e[0]/i)*i,e[1]=Math.floor(e[1]/i)*i+.5*i,e[2]=i,e}function ru(n,t){return ya.range.apply(ya,eu(n,t))}function iu(n,t,e){var r=-Math.floor(Math.log(eu(n,t)[2])/Math.LN10+.01);return ya.format(e?e.replace(wo,function(n,t,e,i,u,a,o,c,l,s){return[t,e,i,u,a,o,c,l||&quot;.&quot;+(r-2*(&quot;%&quot;===s)),s].join(&quot;&quot;)}):&quot;,.&quot;+r+&quot;f&quot;)}function uu(n,t,e,r){function i(n){return(e?Math.log(0&gt;n?0:n):-Math.log(n&gt;0?0:-n))/Math.log(t)}function u(n){return e?Math.pow(t,n):-Math.pow(t,-n)}function a(t){return n(i(t))}return a.invert=function(t){return u(n.invert(t))},a.domain=function(t){return arguments.length?(e=t[0]&gt;=0,n.domain((r=t.map(Number)).map(i)),a):r},a.base=function(e){return arguments.length?(t=+e,n.domain(r.map(i)),a):t},a.nice=function(){var t=Wi(r.map(i),e?Math:Nc);return n.domain(t),r=t.map(u),a},a.ticks=function(){var n=Zi(r),a=[],o=n[0],c=n[1],l=Math.floor(i(o)),s=Math.ceil(i(c)),f=t%1?2:t;if(isFinite(s-l)){if(e){for(;s&gt;l;l++)for(var h=1;f&gt;h;h++)a.push(u(l)*h);a.push(u(l))}else for(a.push(u(l));l++&lt;s;)for(var h=f-1;h&gt;0;h--)a.push(u(l)*h);for(l=0;a[l]&lt;o;l++);for(s=a.length;a[s-1]&gt;c;s--);a=a.slice(l,s)}return a},a.tickFormat=function(n,t){if(!arguments.length)return Ac;arguments.length&lt;2?t=Ac:&quot;function&quot;!=typeof t&amp;&amp;(t=ya.format(t));var r,o=Math.max(.1,n/a.ticks().length),c=e?(r=1e-12,Math.ceil):(r=-1e-12,Math.floor);return function(n){return n/u(c(i(n)+r))&lt;=o?t(n):&quot;&quot;}},a.copy=function(){return uu(n.copy(),t,e,r)},Qi(a,n)}function au(n,t,e){function r(t){return n(i(t))}var i=ou(t),u=ou(1/t);return r.invert=function(t){return u(n.invert(t))},r.domain=function(t){return arguments.length?(n.domain((e=t.map(Number)).map(i)),r):e},r.ticks=function(n){return ru(e,n)},r.tickFormat=function(n,t){return iu(e,n,t)},r.nice=function(n){return r.domain(nu(e,n))},r.exponent=function(a){return arguments.length?(i=ou(t=a),u=ou(1/t),n.domain(e.map(i)),r):t},r.copy=function(){return au(n.copy(),t,e)},Qi(r,n)}function ou(n){return function(t){return 0&gt;t?-Math.pow(-t,n):Math.pow(t,n)}}function cu(n,t){function e(t){return a[((u.get(t)||u.set(t,n.push(t)))-1)%a.length]}function r(t,e){return ya.range(n.length).map(function(n){return t+e*n})}var u,a,o;return e.domain=function(r){if(!arguments.length)return n;n=[],u=new i;for(var a,o=-1,c=r.length;++o&lt;c;)u.has(a=r[o])||u.set(a,n.push(a));return e[t.t].apply(e,t.a)},e.range=function(n){return arguments.length?(a=n,o=0,t={t:&quot;range&quot;,a:arguments},e):a},e.rangePoints=function(i,u){arguments.length&lt;2&amp;&amp;(u=0);var c=i[0],l=i[1],s=(l-c)/(Math.max(1,n.length-1)+u);return a=r(n.length&lt;2?(c+l)/2:c+s*u/2,s),o=0,t={t:&quot;rangePoints&quot;,a:arguments},e},e.rangeBands=function(i,u,c){arguments.length&lt;2&amp;&amp;(u=0),arguments.length&lt;3&amp;&amp;(c=u);var l=i[1]&lt;i[0],s=i[l-0],f=i[1-l],h=(f-s)/(n.length-u+2*c);return a=r(s+h*c,h),l&amp;&amp;a.reverse(),o=h*(1-u),t={t:&quot;rangeBands&quot;,a:arguments},e},e.rangeRoundBands=function(i,u,c){arguments.length&lt;2&amp;&amp;(u=0),arguments.length&lt;3&amp;&amp;(c=u);var l=i[1]&lt;i[0],s=i[l-0],f=i[1-l],h=Math.floor((f-s)/(n.length-u+2*c)),g=f-s-(n.length-u)*h;return a=r(s+Math.round(g/2),h),l&amp;&amp;a.reverse(),o=Math.round(h*(1-u)),t={t:&quot;rangeRoundBands&quot;,a:arguments},e},e.rangeBand=function(){return o},e.rangeExtent=function(){return Zi(t.a[0])},e.copy=function(){return cu(n,t)},e.domain(n)}function lu(n,t){function e(){var e=0,u=t.length;for(i=[];++e&lt;u;)i[e-1]=ya.quantile(n,e/u);return r}function r(n){return isNaN(n=+n)?void 0:t[ya.bisect(i,n)]}var i;return r.domain=function(t){return arguments.length?(n=t.filter(function(n){return!isNaN(n)}).sort(ya.ascending),e()):n},r.range=function(n){return arguments.length?(t=n,e()):t},r.quantiles=function(){return i},r.invertExtent=function(e){return e=t.indexOf(e),0&gt;e?[0/0,0/0]:[e&gt;0?i[e-1]:n[0],e&lt;i.length?i[e]:n[n.length-1]]},r.copy=function(){return lu(n,t)},e()}function su(n,t,e){function r(t){return e[Math.max(0,Math.min(a,Math.floor(u*(t-n))))]}function i(){return u=e.length/(t-n),a=e.length-1,r}var u,a;return r.domain=function(e){return arguments.length?(n=+e[0],t=+e[e.length-1],i()):[n,t]},r.range=function(n){return arguments.length?(e=n,i()):e},r.invertExtent=function(t){return t=e.indexOf(t),t=0&gt;t?0/0:t/u+n,[t,t+1/u]},r.copy=function(){return su(n,t,e)},i()}function fu(n,t){function e(e){return e&gt;=e?t[ya.bisect(n,e)]:void 0}return e.domain=function(t){return arguments.length?(n=t,e):n},e.range=function(n){return arguments.length?(t=n,e):t},e.invertExtent=function(e){return e=t.indexOf(e),[n[e-1],n[e]]},e.copy=function(){return fu(n,t)},e}function hu(n){function t(n){return+n}return t.invert=t,t.domain=t.range=function(e){return arguments.length?(n=e.map(t),t):n},t.ticks=function(t){return ru(n,t)},t.tickFormat=function(t,e){return iu(n,t,e)},t.copy=function(){return hu(n)},t}function gu(n){return n.innerRadius}function pu(n){return n.outerRadius}function mu(n){return n.startAngle}function du(n){return n.endAngle}function vu(n){for(var t,e,r,i=-1,u=n.length;++i&lt;u;)t=n[i],e=t[0],r=t[1]+Dc,t[0]=e*Math.cos(r),t[1]=e*Math.sin(r);return n}function yu(n){function t(t){function c(){m.push(&quot;M&quot;,o(n(v),f),s,l(n(d.reverse()),f),&quot;Z&quot;)}for(var h,g,p,m=[],d=[],v=[],y=-1,M=t.length,x=pt(e),b=pt(i),_=e===r?function(){return g}:pt(r),w=i===u?function(){return p}:pt(u);++y&lt;M;)a.call(this,h=t[y],y)?(d.push([g=+x.call(this,h,y),p=+b.call(this,h,y)]),v.push([+_.call(this,h,y),+w.call(this,h,y)])):d.length&amp;&amp;(c(),d=[],v=[]);return d.length&amp;&amp;c(),m.length?m.join(&quot;&quot;):null}var e=Ie,r=Ie,i=0,u=Ve,a=Xt,o=Xe,c=o.key,l=o,s=&quot;L&quot;,f=.7;return t.x=function(n){return arguments.length?(e=r=n,t):r},t.x0=function(n){return arguments.length?(e=n,t):e},t.x1=function(n){return arguments.length?(r=n,t):r},t.y=function(n){return arguments.length?(i=u=n,t):u},t.y0=function(n){return arguments.length?(i=n,t):i},t.y1=function(n){return arguments.length?(u=n,t):u},t.defined=function(n){return arguments.length?(a=n,t):a},t.interpolate=function(n){return arguments.length?(c=&quot;function&quot;==typeof n?o=n:(o=sc.get(n)||Xe).key,l=o.reverse||o,s=o.closed?&quot;M&quot;:&quot;L&quot;,t):c},t.tension=function(n){return arguments.length?(f=n,t):f},t}function Mu(n){return n.radius}function xu(n){return[n.x,n.y]}function bu(n){return function(){var t=n.apply(this,arguments),e=t[0],r=t[1]+Dc;return[e*Math.cos(r),e*Math.sin(r)]}}function _u(){return 64}function wu(){return&quot;circle&quot;}function Su(n){var t=Math.sqrt(n/Ka);return&quot;M0,&quot;+t+&quot;A&quot;+t+&quot;,&quot;+t+&quot; 0 1,1 0,&quot;+-t+&quot;A&quot;+t+&quot;,&quot;+t+&quot; 0 1,1 0,&quot;+t+&quot;Z&quot;}function Eu(n,t){return La(n,Yc),n.id=t,n}function ku(n,t,e,r){var i=n.id;return T(n,&quot;function&quot;==typeof e?function(n,u,a){n.__transition__[i].tween.set(t,r(e.call(n,n.__data__,u,a)))}:(e=r(e),function(n){n.__transition__[i].tween.set(t,e)}))}function Au(n){return null==n&amp;&amp;(n=&quot;&quot;),function(){this.textContent=n}}function Nu(n,t,e,r){var u=n.__transition__||(n.__transition__={active:0,count:0}),a=u[e];if(!a){var o=r.time;a=u[e]={tween:new i,time:o,ease:r.ease,delay:r.delay,duration:r.duration},++u.count,ya.timer(function(r){function i(r){return u.active&gt;e?l():(u.active=e,a.event&amp;&amp;a.event.start.call(n,s,t),a.tween.forEach(function(e,r){(r=r.call(n,s,t))&amp;&amp;p.push(r)}),c(r)?1:(xt(c,0,o),void 0))}function c(r){if(u.active!==e)return l();for(var i=(r-h)/g,o=f(i),c=p.length;c&gt;0;)p[--c].call(n,o);return i&gt;=1?(l(),a.event&amp;&amp;a.event.end.call(n,s,t),1):void 0}function l(){return--u.count?delete u[e]:delete n.__transition__,1}var s=n.__data__,f=a.ease,h=a.delay,g=a.duration,p=[];return r&gt;=h?i(r):(xt(i,h,o),void 0)},0,o)}}function qu(n,t){n.attr(&quot;transform&quot;,function(n){return&quot;translate(&quot;+t(n)+&quot;,0)&quot;})}function Tu(n,t){n.attr(&quot;transform&quot;,function(n){return&quot;translate(0,&quot;+t(n)+&quot;)&quot;})}function Cu(n,t,e){if(r=[],e&amp;&amp;t.length&gt;1){for(var r,i,u,a=Zi(n.domain()),o=-1,c=t.length,l=(t[1]-t[0])/++e;++o&lt;c;)for(i=e;--i&gt;0;)(u=+t[o]-i*l)&gt;=a[0]&amp;&amp;r.push(u);for(--o,i=0;++i&lt;e&amp;&amp;(u=+t[o]+i*l)&lt;a[1];)r.push(u)}return r}function zu(){this._=new Date(arguments.length&gt;1?Date.UTC.apply(this,arguments):arguments[0])}function Du(n,t,e){function r(t){var e=n(t),r=u(e,1);return r-t&gt;t-e?e:r}function i(e){return t(e=n(new Zc(e-1)),1),e}function u(n,e){return t(n=new Zc(+n),e),n}function a(n,r,u){var a=i(n),o=[];if(u&gt;1)for(;r&gt;a;)e(a)%u||o.push(new Date(+a)),t(a,1);else for(;r&gt;a;)o.push(new Date(+a)),t(a,1);return o}function o(n,t,e){try{Zc=zu;var r=new zu;return r._=n,a(r,t,e)}finally{Zc=Date}}n.floor=n,n.round=r,n.ceil=i,n.offset=u,n.range=a;var c=n.utc=ju(n);return c.floor=c,c.round=ju(r),c.ceil=ju(i),c.offset=ju(u),c.range=o,n}function ju(n){return function(t,e){try{Zc=zu;var r=new zu;return r._=t,n(r,e)._}finally{Zc=Date}}}function Lu(n,t,e,r){for(var i,u,a=0,o=t.length,c=e.length;o&gt;a;){if(r&gt;=c)return-1;if(i=t.charCodeAt(a++),37===i){if(u=gl[t.charAt(a++)],!u||(r=u(n,e,r))&lt;0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}function Hu(n){return new RegExp(&quot;^(?:&quot;+n.map(ya.requote).join(&quot;|&quot;)+&quot;)&quot;,&quot;i&quot;)}function Fu(n){for(var t=new i,e=-1,r=n.length;++e&lt;r;)t.set(n[e].toLowerCase(),e);return t}function Pu(n,t,e){var r=0&gt;n?&quot;-&quot;:&quot;&quot;,i=(r?-n:n)+&quot;&quot;,u=i.length;return r+(e&gt;u?new Array(e-u+1).join(t)+i:i)}function Ou(n,t,e){il.lastIndex=0;var r=il.exec(t.substring(e));return r?(n.w=ul.get(r[0].toLowerCase()),e+r[0].length):-1}function Yu(n,t,e){el.lastIndex=0;var r=el.exec(t.substring(e));return r?(n.w=rl.get(r[0].toLowerCase()),e+r[0].length):-1}function Ru(n,t,e){pl.lastIndex=0;var r=pl.exec(t.substring(e,e+1));return r?(n.w=+r[0],e+r[0].length):-1}function Uu(n,t,e){pl.lastIndex=0;var r=pl.exec(t.substring(e));return r?(n.U=+r[0],e+r[0].length):-1}function Iu(n,t,e){pl.lastIndex=0;var r=pl.exec(t.substring(e));return r?(n.W=+r[0],e+r[0].length):-1}function Vu(n,t,e){cl.lastIndex=0;var r=cl.exec(t.substring(e));return r?(n.m=ll.get(r[0].toLowerCase()),e+r[0].length):-1}function Xu(n,t,e){al.lastIndex=0;var r=al.exec(t.substring(e));return r?(n.m=ol.get(r[0].toLowerCase()),e+r[0].length):-1}function Zu(n,t,e){return Lu(n,hl.c.toString(),t,e)}function Bu(n,t,e){return Lu(n,hl.x.toString(),t,e)}function $u(n,t,e){return Lu(n,hl.X.toString(),t,e)}function Wu(n,t,e){pl.lastIndex=0;var r=pl.exec(t.substring(e,e+4));return r?(n.y=+r[0],e+r[0].length):-1}function Ju(n,t,e){pl.lastIndex=0;var r=pl.exec(t.substring(e,e+2));return r?(n.y=Gu(+r[0]),e+r[0].length):-1}function Gu(n){return n+(n&gt;68?1900:2e3)}function Ku(n,t,e){pl.lastIndex=0;var r=pl.exec(t.substring(e,e+2));return r?(n.m=r[0]-1,e+r[0].length):-1}function Qu(n,t,e){pl.lastIndex=0;var r=pl.exec(t.substring(e,e+2));return r?(n.d=+r[0],e+r[0].length):-1}function na(n,t,e){pl.lastIndex=0;var r=pl.exec(t.substring(e,e+3));return r?(n.j=+r[0],e+r[0].length):-1}function ta(n,t,e){pl.lastIndex=0;var r=pl.exec(t.substring(e,e+2));return r?(n.H=+r[0],e+r[0].length):-1}function ea(n,t,e){pl.lastIndex=0;var r=pl.exec(t.substring(e,e+2));return r?(n.M=+r[0],e+r[0].length):-1}function ra(n,t,e){pl.lastIndex=0;var r=pl.exec(t.substring(e,e+2));return r?(n.S=+r[0],e+r[0].length):-1}function ia(n,t,e){pl.lastIndex=0;var r=pl.exec(t.substring(e,e+3));return r?(n.L=+r[0],e+r[0].length):-1}function ua(n,t,e){var r=ml.get(t.substring(e,e+=2).toLowerCase());return null==r?-1:(n.p=r,e)}function aa(n){var t=n.getTimezoneOffset(),e=t&gt;0?&quot;-&quot;:&quot;+&quot;,r=~~(Math.abs(t)/60),i=Math.abs(t)%60;return e+Pu(r,&quot;0&quot;,2)+Pu(i,&quot;0&quot;,2)}function oa(n,t,e){sl.lastIndex=0;var r=sl.exec(t.substring(e,e+1));return r?e+r[0].length:-1}function ca(n){return n.toISOString()}function la(n,t,e){function r(t){return n(t)}return r.invert=function(t){return sa(n.invert(t))},r.domain=function(t){return arguments.length?(n.domain(t),r):n.domain().map(sa)},r.nice=function(n){return r.domain(Wi(r.domain(),n))},r.ticks=function(e,i){var u=Zi(r.domain());if(&quot;function&quot;!=typeof e){var a=u[1]-u[0],o=a/e,c=ya.bisect(vl,o);if(c==vl.length)return t.year(u,e);if(!c)return n.ticks(e).map(sa);o/vl[c-1]&lt;vl[c]/o&amp;&amp;--c,e=t[c],i=e[1],e=e[0].range}return e(u[0],new Date(+u[1]+1),i)},r.tickFormat=function(){return e},r.copy=function(){return la(n.copy(),t,e)},Qi(r,n)}function sa(n){return new Date(n)}function fa(n){return function(t){for(var e=n.length-1,r=n[e];!r[1](t);)r=n[--e];return r[0](t)}}function ha(n){var t=new Date(n,0,1);return t.setFullYear(n),t}function ga(n){var t=n.getFullYear(),e=ha(t),r=ha(t+1);return t+(n-e)/(r-e)}function pa(n){var t=new Date(Date.UTC(n,0,1));return t.setUTCFullYear(n),t}function ma(n){var t=n.getUTCFullYear(),e=pa(t),r=pa(t+1);return t+(n-e)/(r-e)}function da(n){return JSON.parse(n.responseText)}function va(n){var t=Ma.createRange();return t.selectNode(Ma.body),t.createContextualFragment(n.responseText)}var ya={version:&quot;3.2.8&quot;};Date.now||(Date.now=function(){return+new Date});var Ma=document,xa=Ma.documentElement,ba=window;try{Ma.createElement(&quot;div&quot;).style.setProperty(&quot;opacity&quot;,0,&quot;&quot;)}catch(_a){var wa=ba.Element.prototype,Sa=wa.setAttribute,Ea=wa.setAttributeNS,ka=ba.CSSStyleDeclaration.prototype,Aa=ka.setProperty;wa.setAttribute=function(n,t){Sa.call(this,n,t+&quot;&quot;)},wa.setAttributeNS=function(n,t,e){Ea.call(this,n,t,e+&quot;&quot;)},ka.setProperty=function(n,t,e){Aa.call(this,n,t+&quot;&quot;,e)}}ya.ascending=function(n,t){return t&gt;n?-1:n&gt;t?1:n&gt;=t?0:0/0},ya.descending=function(n,t){return n&gt;t?-1:t&gt;n?1:t&gt;=n?0:0/0},ya.min=function(n,t){var e,r,i=-1,u=n.length;if(1===arguments.length){for(;++i&lt;u&amp;&amp;!(null!=(e=n[i])&amp;&amp;e&gt;=e);)e=void 0;for(;++i&lt;u;)null!=(r=n[i])&amp;&amp;e&gt;r&amp;&amp;(e=r)}else{for(;++i&lt;u&amp;&amp;!(null!=(e=t.call(n,n[i],i))&amp;&amp;e&gt;=e);)e=void 0;for(;++i&lt;u;)null!=(r=t.call(n,n[i],i))&amp;&amp;e&gt;r&amp;&amp;(e=r)}return e},ya.max=function(n,t){var e,r,i=-1,u=n.length;if(1===arguments.length){for(;++i&lt;u&amp;&amp;!(null!=(e=n[i])&amp;&amp;e&gt;=e);)e=void 0;for(;++i&lt;u;)null!=(r=n[i])&amp;&amp;r&gt;e&amp;&amp;(e=r)}else{for(;++i&lt;u&amp;&amp;!(null!=(e=t.call(n,n[i],i))&amp;&amp;e&gt;=e);)e=void 0;for(;++i&lt;u;)null!=(r=t.call(n,n[i],i))&amp;&amp;r&gt;e&amp;&amp;(e=r)}return e},ya.extent=function(n,t){var e,r,i,u=-1,a=n.length;if(1===arguments.length){for(;++u&lt;a&amp;&amp;!(null!=(e=i=n[u])&amp;&amp;e&gt;=e);)e=i=void 0;for(;++u&lt;a;)null!=(r=n[u])&amp;&amp;(e&gt;r&amp;&amp;(e=r),r&gt;i&amp;&amp;(i=r))}else{for(;++u&lt;a&amp;&amp;!(null!=(e=i=t.call(n,n[u],u))&amp;&amp;e&gt;=e);)e=void 0;for(;++u&lt;a;)null!=(r=t.call(n,n[u],u))&amp;&amp;(e&gt;r&amp;&amp;(e=r),r&gt;i&amp;&amp;(i=r))}return[e,i]},ya.sum=function(n,t){var e,r=0,i=n.length,u=-1;if(1===arguments.length)for(;++u&lt;i;)isNaN(e=+n[u])||(r+=e);else for(;++u&lt;i;)isNaN(e=+t.call(n,n[u],u))||(r+=e);return r},ya.mean=function(t,e){var r,i=t.length,u=0,a=-1,o=0;if(1===arguments.length)for(;++a&lt;i;)n(r=t[a])&amp;&amp;(u+=(r-u)/++o);else for(;++a&lt;i;)n(r=e.call(t,t[a],a))&amp;&amp;(u+=(r-u)/++o);return o?u:void 0},ya.quantile=function(n,t){var e=(n.length-1)*t+1,r=Math.floor(e),i=+n[r-1],u=e-r;return u?i+u*(n[r]-i):i},ya.median=function(t,e){return arguments.length&gt;1&amp;&amp;(t=t.map(e)),t=t.filter(n),t.length?ya.quantile(t.sort(ya.ascending),.5):void 0},ya.bisector=function(n){return{left:function(t,e,r,i){for(arguments.length&lt;3&amp;&amp;(r=0),arguments.length&lt;4&amp;&amp;(i=t.length);i&gt;r;){var u=r+i&gt;&gt;&gt;1;n.call(t,t[u],u)&lt;e?r=u+1:i=u}return r},right:function(t,e,r,i){for(arguments.length&lt;3&amp;&amp;(r=0),arguments.length&lt;4&amp;&amp;(i=t.length);i&gt;r;){var u=r+i&gt;&gt;&gt;1;e&lt;n.call(t,t[u],u)?i=u:r=u+1}return r}}};var Na=ya.bisector(function(n){return n});ya.bisectLeft=Na.left,ya.bisect=ya.bisectRight=Na.right,ya.shuffle=function(n){for(var t,e,r=n.length;r;)e=0|Math.random()*r--,t=n[r],n[r]=n[e],n[e]=t;return n},ya.permute=function(n,t){for(var e=t.length,r=new Array(e);e--;)r[e]=n[t[e]];return r},ya.zip=function(){if(!(i=arguments.length))return[];for(var n=-1,e=ya.min(arguments,t),r=new Array(e);++n&lt;e;)for(var i,u=-1,a=r[n]=new Array(i);++u&lt;i;)a[u]=arguments[u][n];return r},ya.transpose=function(n){return ya.zip.apply(ya,n)},ya.keys=function(n){var t=[];for(var e in n)t.push(e);return t},ya.values=function(n){var t=[];for(var e in n)t.push(n[e]);return t},ya.entries=function(n){var t=[];for(var e in n)t.push({key:e,value:n[e]});return t},ya.merge=function(n){return Array.prototype.concat.apply([],n)},ya.range=function(n,t,r){if(arguments.length&lt;3&amp;&amp;(r=1,arguments.length&lt;2&amp;&amp;(t=n,n=0)),1/0===(t-n)/r)throw new Error(&quot;infinite range&quot;);var i,u=[],a=e(Math.abs(r)),o=-1;if(n*=a,t*=a,r*=a,0&gt;r)for(;(i=n+r*++o)&gt;t;)u.push(i/a);else for(;(i=n+r*++o)&lt;t;)u.push(i/a);return u},ya.map=function(n){var t=new i;if(n instanceof i)n.forEach(function(n,e){t.set(n,e)});else for(var e in n)t.set(e,n[e]);return t},r(i,{has:function(n){return qa+n in this},get:function(n){return this[qa+n]},set:function(n,t){return this[qa+n]=t},remove:function(n){return n=qa+n,n in this&amp;&amp;delete this[n]},keys:function(){var n=[];return this.forEach(function(t){n.push(t)}),n},values:function(){var n=[];return this.forEach(function(t,e){n.push(e)}),n},entries:function(){var n=[];</div><div class='line' id='LC15011'>return this.forEach(function(t,e){n.push({key:t,value:e})}),n},forEach:function(n){for(var t in this)t.charCodeAt(0)===Ta&amp;&amp;n.call(this,t.substring(1),this[t])}});var qa=&quot;\0&quot;,Ta=qa.charCodeAt(0);ya.nest=function(){function n(t,o,c){if(c&gt;=a.length)return r?r.call(u,o):e?o.sort(e):o;for(var l,s,f,h,g=-1,p=o.length,m=a[c++],d=new i;++g&lt;p;)(h=d.get(l=m(s=o[g])))?h.push(s):d.set(l,[s]);return t?(s=t(),f=function(e,r){s.set(e,n(t,r,c))}):(s={},f=function(e,r){s[e]=n(t,r,c)}),d.forEach(f),s}function t(n,e){if(e&gt;=a.length)return n;var r=[],i=o[e++];return n.forEach(function(n,i){r.push({key:n,values:t(i,e)})}),i?r.sort(function(n,t){return i(n.key,t.key)}):r}var e,r,u={},a=[],o=[];return u.map=function(t,e){return n(e,t,0)},u.entries=function(e){return t(n(ya.map,e,0),0)},u.key=function(n){return a.push(n),u},u.sortKeys=function(n){return o[a.length-1]=n,u},u.sortValues=function(n){return e=n,u},u.rollup=function(n){return r=n,u},u},ya.set=function(n){var t=new u;if(n)for(var e=0,r=n.length;r&gt;e;++e)t.add(n[e]);return t},r(u,{has:function(n){return qa+n in this},add:function(n){return this[qa+n]=!0,n},remove:function(n){return n=qa+n,n in this&amp;&amp;delete this[n]},values:function(){var n=[];return this.forEach(function(t){n.push(t)}),n},forEach:function(n){for(var t in this)t.charCodeAt(0)===Ta&amp;&amp;n.call(this,t.substring(1))}}),ya.behavior={},ya.rebind=function(n,t){for(var e,r=1,i=arguments.length;++r&lt;i;)n[e=arguments[r]]=a(n,t,t[e]);return n};var Ca=[&quot;webkit&quot;,&quot;ms&quot;,&quot;moz&quot;,&quot;Moz&quot;,&quot;o&quot;,&quot;O&quot;],za=l;try{za(xa.childNodes)[0].nodeType}catch(Da){za=c}ya.dispatch=function(){for(var n=new f,t=-1,e=arguments.length;++t&lt;e;)n[arguments[t]]=h(n);return n},f.prototype.on=function(n,t){var e=n.indexOf(&quot;.&quot;),r=&quot;&quot;;if(e&gt;=0&amp;&amp;(r=n.substring(e+1),n=n.substring(0,e)),n)return arguments.length&lt;2?this[n].on(r):this[n].on(r,t);if(2===arguments.length){if(null==t)for(n in this)this.hasOwnProperty(n)&amp;&amp;this[n].on(r,null);return this}},ya.event=null,ya.requote=function(n){return n.replace(ja,&quot;\\$&amp;&quot;)};var ja=/[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g,La={}.__proto__?function(n,t){n.__proto__=t}:function(n,t){for(var e in t)n[e]=t[e]},Ha=function(n,t){return t.querySelector(n)},Fa=function(n,t){return t.querySelectorAll(n)},Pa=xa[o(xa,&quot;matchesSelector&quot;)],Oa=function(n,t){return Pa.call(n,t)};&quot;function&quot;==typeof Sizzle&amp;&amp;(Ha=function(n,t){return Sizzle(n,t)[0]||null},Fa=function(n,t){return Sizzle.uniqueSort(Sizzle(n,t))},Oa=Sizzle.matchesSelector),ya.selection=function(){return Ia};var Ya=ya.selection.prototype=[];Ya.select=function(n){var t,e,r,i,u=[];n=v(n);for(var a=-1,o=this.length;++a&lt;o;){u.push(t=[]),t.parentNode=(r=this[a]).parentNode;for(var c=-1,l=r.length;++c&lt;l;)(i=r[c])?(t.push(e=n.call(i,i.__data__,c,a)),e&amp;&amp;&quot;__data__&quot;in i&amp;&amp;(e.__data__=i.__data__)):t.push(null)}return d(u)},Ya.selectAll=function(n){var t,e,r=[];n=y(n);for(var i=-1,u=this.length;++i&lt;u;)for(var a=this[i],o=-1,c=a.length;++o&lt;c;)(e=a[o])&amp;&amp;(r.push(t=za(n.call(e,e.__data__,o,i))),t.parentNode=e);return d(r)};var Ra={svg:&quot;http://www.w3.org/2000/svg&quot;,xhtml:&quot;http://www.w3.org/1999/xhtml&quot;,xlink:&quot;http://www.w3.org/1999/xlink&quot;,xml:&quot;http://www.w3.org/XML/1998/namespace&quot;,xmlns:&quot;http://www.w3.org/2000/xmlns/&quot;};ya.ns={prefix:Ra,qualify:function(n){var t=n.indexOf(&quot;:&quot;),e=n;return t&gt;=0&amp;&amp;(e=n.substring(0,t),n=n.substring(t+1)),Ra.hasOwnProperty(e)?{space:Ra[e],local:n}:n}},Ya.attr=function(n,t){if(arguments.length&lt;2){if(&quot;string&quot;==typeof n){var e=this.node();return n=ya.ns.qualify(n),n.local?e.getAttributeNS(n.space,n.local):e.getAttribute(n)}for(t in n)this.each(M(t,n[t]));return this}return this.each(M(n,t))},Ya.classed=function(n,t){if(arguments.length&lt;2){if(&quot;string&quot;==typeof n){var e=this.node(),r=(n=n.trim().split(/^|\s+/g)).length,i=-1;if(t=e.classList){for(;++i&lt;r;)if(!t.contains(n[i]))return!1}else for(t=e.getAttribute(&quot;class&quot;);++i&lt;r;)if(!b(n[i]).test(t))return!1;return!0}for(t in n)this.each(_(t,n[t]));return this}return this.each(_(n,t))},Ya.style=function(n,t,e){var r=arguments.length;if(3&gt;r){if(&quot;string&quot;!=typeof n){2&gt;r&amp;&amp;(t=&quot;&quot;);for(e in n)this.each(S(e,n[e],t));return this}if(2&gt;r)return ba.getComputedStyle(this.node(),null).getPropertyValue(n);e=&quot;&quot;}return this.each(S(n,t,e))},Ya.property=function(n,t){if(arguments.length&lt;2){if(&quot;string&quot;==typeof n)return this.node()[n];for(t in n)this.each(E(t,n[t]));return this}return this.each(E(n,t))},Ya.text=function(n){return arguments.length?this.each(&quot;function&quot;==typeof n?function(){var t=n.apply(this,arguments);this.textContent=null==t?&quot;&quot;:t}:null==n?function(){this.textContent=&quot;&quot;}:function(){this.textContent=n}):this.node().textContent},Ya.html=function(n){return arguments.length?this.each(&quot;function&quot;==typeof n?function(){var t=n.apply(this,arguments);this.innerHTML=null==t?&quot;&quot;:t}:null==n?function(){this.innerHTML=&quot;&quot;}:function(){this.innerHTML=n}):this.node().innerHTML},Ya.append=function(n){return n=k(n),this.select(function(){return this.appendChild(n.apply(this,arguments))})},Ya.insert=function(n,t){return n=k(n),t=v(t),this.select(function(){return this.insertBefore(n.apply(this,arguments),t.apply(this,arguments))})},Ya.remove=function(){return this.each(function(){var n=this.parentNode;n&amp;&amp;n.removeChild(this)})},Ya.data=function(n,t){function e(n,e){var r,u,a,o=n.length,f=e.length,h=Math.min(o,f),g=new Array(f),p=new Array(f),m=new Array(o);if(t){var d,v=new i,y=new i,M=[];for(r=-1;++r&lt;o;)d=t.call(u=n[r],u.__data__,r),v.has(d)?m[r]=u:v.set(d,u),M.push(d);for(r=-1;++r&lt;f;)d=t.call(e,a=e[r],r),(u=v.get(d))?(g[r]=u,u.__data__=a):y.has(d)||(p[r]=A(a)),y.set(d,a),v.remove(d);for(r=-1;++r&lt;o;)v.has(M[r])&amp;&amp;(m[r]=n[r])}else{for(r=-1;++r&lt;h;)u=n[r],a=e[r],u?(u.__data__=a,g[r]=u):p[r]=A(a);for(;f&gt;r;++r)p[r]=A(e[r]);for(;o&gt;r;++r)m[r]=n[r]}p.update=g,p.parentNode=g.parentNode=m.parentNode=n.parentNode,c.push(p),l.push(g),s.push(m)}var r,u,a=-1,o=this.length;if(!arguments.length){for(n=new Array(o=(r=this[0]).length);++a&lt;o;)(u=r[a])&amp;&amp;(n[a]=u.__data__);return n}var c=C([]),l=d([]),s=d([]);if(&quot;function&quot;==typeof n)for(;++a&lt;o;)e(r=this[a],n.call(r,r.parentNode.__data__,a));else for(;++a&lt;o;)e(r=this[a],n);return l.enter=function(){return c},l.exit=function(){return s},l},Ya.datum=function(n){return arguments.length?this.property(&quot;__data__&quot;,n):this.property(&quot;__data__&quot;)},Ya.filter=function(n){var t,e,r,i=[];&quot;function&quot;!=typeof n&amp;&amp;(n=N(n));for(var u=0,a=this.length;a&gt;u;u++){i.push(t=[]),t.parentNode=(e=this[u]).parentNode;for(var o=0,c=e.length;c&gt;o;o++)(r=e[o])&amp;&amp;n.call(r,r.__data__,o)&amp;&amp;t.push(r)}return d(i)},Ya.order=function(){for(var n=-1,t=this.length;++n&lt;t;)for(var e,r=this[n],i=r.length-1,u=r[i];--i&gt;=0;)(e=r[i])&amp;&amp;(u&amp;&amp;u!==e.nextSibling&amp;&amp;u.parentNode.insertBefore(e,u),u=e);return this},Ya.sort=function(n){n=q.apply(this,arguments);for(var t=-1,e=this.length;++t&lt;e;)this[t].sort(n);return this.order()},Ya.each=function(n){return T(this,function(t,e,r){n.call(t,t.__data__,e,r)})},Ya.call=function(n){var t=za(arguments);return n.apply(t[0]=this,t),this},Ya.empty=function(){return!this.node()},Ya.node=function(){for(var n=0,t=this.length;t&gt;n;n++)for(var e=this[n],r=0,i=e.length;i&gt;r;r++){var u=e[r];if(u)return u}return null},Ya.size=function(){var n=0;return this.each(function(){++n}),n};var Ua=[];ya.selection.enter=C,ya.selection.enter.prototype=Ua,Ua.append=Ya.append,Ua.empty=Ya.empty,Ua.node=Ya.node,Ua.call=Ya.call,Ua.size=Ya.size,Ua.select=function(n){for(var t,e,r,i,u,a=[],o=-1,c=this.length;++o&lt;c;){r=(i=this[o]).update,a.push(t=[]),t.parentNode=i.parentNode;for(var l=-1,s=i.length;++l&lt;s;)(u=i[l])?(t.push(r[l]=e=n.call(i.parentNode,u.__data__,l,o)),e.__data__=u.__data__):t.push(null)}return d(a)},Ua.insert=function(n,t){return arguments.length&lt;2&amp;&amp;(t=z(this)),Ya.insert.call(this,n,t)},Ya.transition=function(){for(var n,t,e=Hc||++Rc,r=[],i=Fc||{time:Date.now(),ease:Cr,delay:0,duration:250},u=-1,a=this.length;++u&lt;a;){r.push(n=[]);for(var o=this[u],c=-1,l=o.length;++c&lt;l;)(t=o[c])&amp;&amp;Nu(t,c,e,i),n.push(t)}return Eu(r,e)},ya.select=function(n){var t=[&quot;string&quot;==typeof n?Ha(n,Ma):n];return t.parentNode=xa,d([t])},ya.selectAll=function(n){var t=za(&quot;string&quot;==typeof n?Fa(n,Ma):n);return t.parentNode=xa,d([t])};var Ia=ya.select(xa);Ya.on=function(n,t,e){var r=arguments.length;if(3&gt;r){if(&quot;string&quot;!=typeof n){2&gt;r&amp;&amp;(t=!1);for(e in n)this.each(D(e,n[e],t));return this}if(2&gt;r)return(r=this.node()[&quot;__on&quot;+n])&amp;&amp;r._;e=!1}return this.each(D(n,t,e))};var Va=ya.map({mouseenter:&quot;mouseover&quot;,mouseleave:&quot;mouseout&quot;});Va.forEach(function(n){&quot;on&quot;+n in Ma&amp;&amp;Va.remove(n)});var Xa=o(xa.style,&quot;userSelect&quot;),Za=0;ya.mouse=function(n){return F(n,p())};var Ba=/WebKit/.test(ba.navigator.userAgent)?-1:0;ya.touches=function(n,t){return arguments.length&lt;2&amp;&amp;(t=p().touches),t?za(t).map(function(t){var e=F(n,t);return e.identifier=t.identifier,e}):[]},ya.behavior.drag=function(){function n(){this.on(&quot;mousedown.drag&quot;,a).on(&quot;touchstart.drag&quot;,o)}function t(){return ya.event.changedTouches[0].identifier}function e(n,t){return ya.touches(n).filter(function(n){return n.identifier===t})[0]}function r(n,t,e,r){return function(){function a(){if(!s)return o();var n=t(s,g),e=n[0]-m[0],r=n[1]-m[1];d|=e|r,m=n,f({type:&quot;drag&quot;,x:n[0]+c[0],y:n[1]+c[1],dx:e,dy:r})}function o(){v.on(e+&quot;.&quot;+p,null).on(r+&quot;.&quot;+p,null),y(d&amp;&amp;ya.event.target===h),f({type:&quot;dragend&quot;})}var c,l=this,s=l.parentNode,f=i.of(l,arguments),h=ya.event.target,g=n(),p=null==g?&quot;drag&quot;:&quot;drag-&quot;+g,m=t(s,g),d=0,v=ya.select(ba).on(e+&quot;.&quot;+p,a).on(r+&quot;.&quot;+p,o),y=H();u?(c=u.apply(l,arguments),c=[c.x-m[0],c.y-m[1]]):c=[0,0],f({type:&quot;dragstart&quot;})}}var i=m(n,&quot;drag&quot;,&quot;dragstart&quot;,&quot;dragend&quot;),u=null,a=r(s,ya.mouse,&quot;mousemove&quot;,&quot;mouseup&quot;),o=r(t,e,&quot;touchmove&quot;,&quot;touchend&quot;);return n.origin=function(t){return arguments.length?(u=t,n):u},ya.rebind(n,i,&quot;on&quot;)},ya.behavior.zoom=function(){function n(){this.on(w,o).on(Ja+&quot;.zoom&quot;,l).on(S,s).on(&quot;dblclick.zoom&quot;,f).on(k,c)}function t(n){return[(n[0]-x[0])/b,(n[1]-x[1])/b]}function e(n){return[n[0]*b+x[0],n[1]*b+x[1]]}function r(n){b=Math.max(_[0],Math.min(_[1],n))}function i(n,t){t=e(t),x[0]+=n[0]-t[0],x[1]+=n[1]-t[1]}function u(){v&amp;&amp;v.domain(d.range().map(function(n){return(n-x[0])/b}).map(d.invert)),M&amp;&amp;M.domain(y.range().map(function(n){return(n-x[1])/b}).map(y.invert))}function a(n){u(),n({type:&quot;zoom&quot;,scale:b,translate:x})}function o(){function n(){c=1,i(ya.mouse(r),f),a(u)}function e(){l.on(S,ba===r?s:null).on(E,null),h(c&amp;&amp;ya.event.target===o)}var r=this,u=q.of(r,arguments),o=ya.event.target,c=0,l=ya.select(ba).on(S,n).on(E,e),f=t(ya.mouse(r)),h=H()}function c(){function n(){var n=ya.touches(h);return f=b,s={},n.forEach(function(n){s[n.identifier]=t(n)}),n}function e(){var t=Date.now(),e=n();if(1===e.length){if(500&gt;t-p){var u=e[0],o=s[u.identifier];r(2*b),i(u,o),g(),a(m)}p=t}else if(e.length&gt;1){var u=e[0],c=e[1],l=u[0]-c[0],f=u[1]-c[1];d=l*l+f*f}}function u(){var n=ya.touches(h),t=n[0],e=s[t.identifier];if(u=n[1]){var u,o=s[u.identifier],c=ya.event.scale;if(null==c){var l=(l=u[0]-t[0])*l+(l=u[1]-t[1])*l;c=d&amp;&amp;Math.sqrt(l/d)}t=[(t[0]+u[0])/2,(t[1]+u[1])/2],e=[(e[0]+o[0])/2,(e[1]+o[1])/2],r(c*f)}p=null,i(t,e),a(m)}function l(){ya.event.touches.length?n():(v.on(A,null).on(N,null),y.on(w,o).on(k,c),M())}var s,f,h=this,m=q.of(h,arguments),d=0,v=ya.select(ba).on(A,u).on(N,l),y=ya.select(h).on(w,null).on(k,e),M=H();e()}function l(){g(),h||(h=t(ya.mouse(this))),r(Math.pow(2,.002*$a())*b),i(ya.mouse(this),h),a(q.of(this,arguments))}function s(){h=null}function f(){var n=ya.mouse(this),e=t(n),u=Math.log(b)/Math.LN2;r(Math.pow(2,ya.event.shiftKey?Math.ceil(u)-1:Math.floor(u)+1)),i(n,e),a(q.of(this,arguments))}var h,p,d,v,y,M,x=[0,0],b=1,_=Wa,w=&quot;mousedown.zoom&quot;,S=&quot;mousemove.zoom&quot;,E=&quot;mouseup.zoom&quot;,k=&quot;touchstart.zoom&quot;,A=&quot;touchmove.zoom&quot;,N=&quot;touchend.zoom&quot;,q=m(n,&quot;zoom&quot;);return n.translate=function(t){return arguments.length?(x=t.map(Number),u(),n):x},n.scale=function(t){return arguments.length?(b=+t,u(),n):b},n.scaleExtent=function(t){return arguments.length?(_=null==t?Wa:t.map(Number),n):_},n.x=function(t){return arguments.length?(v=t,d=t.copy(),x=[0,0],b=1,n):v},n.y=function(t){return arguments.length?(M=t,y=t.copy(),x=[0,0],b=1,n):M},ya.rebind(n,q,&quot;on&quot;)};var $a,Wa=[0,1/0],Ja=&quot;onwheel&quot;in Ma?($a=function(){return-ya.event.deltaY*(ya.event.deltaMode?120:1)},&quot;wheel&quot;):&quot;onmousewheel&quot;in Ma?($a=function(){return ya.event.wheelDelta},&quot;mousewheel&quot;):($a=function(){return-ya.event.detail},&quot;MozMousePixelScroll&quot;);P.prototype.toString=function(){return this.rgb()+&quot;&quot;},ya.hsl=function(n,t,e){return 1===arguments.length?n instanceof Y?O(n.h,n.s,n.l):lt(&quot;&quot;+n,st,O):O(+n,+t,+e)};var Ga=Y.prototype=new P;Ga.brighter=function(n){return n=Math.pow(.7,arguments.length?n:1),O(this.h,this.s,this.l/n)},Ga.darker=function(n){return n=Math.pow(.7,arguments.length?n:1),O(this.h,this.s,n*this.l)},Ga.rgb=function(){return R(this.h,this.s,this.l)};var Ka=Math.PI,Qa=1e-6,no=Qa*Qa,to=Ka/180,eo=180/Ka;ya.hcl=function(n,t,e){return 1===arguments.length?n instanceof W?$(n.h,n.c,n.l):n instanceof K?nt(n.l,n.a,n.b):nt((n=ft((n=ya.rgb(n)).r,n.g,n.b)).l,n.a,n.b):$(+n,+t,+e)};var ro=W.prototype=new P;ro.brighter=function(n){return $(this.h,this.c,Math.min(100,this.l+io*(arguments.length?n:1)))},ro.darker=function(n){return $(this.h,this.c,Math.max(0,this.l-io*(arguments.length?n:1)))},ro.rgb=function(){return J(this.h,this.c,this.l).rgb()},ya.lab=function(n,t,e){return 1===arguments.length?n instanceof K?G(n.l,n.a,n.b):n instanceof W?J(n.l,n.c,n.h):ft((n=ya.rgb(n)).r,n.g,n.b):G(+n,+t,+e)};var io=18,uo=.95047,ao=1,oo=1.08883,co=K.prototype=new P;co.brighter=function(n){return G(Math.min(100,this.l+io*(arguments.length?n:1)),this.a,this.b)},co.darker=function(n){return G(Math.max(0,this.l-io*(arguments.length?n:1)),this.a,this.b)},co.rgb=function(){return Q(this.l,this.a,this.b)},ya.rgb=function(n,t,e){return 1===arguments.length?n instanceof ot?at(n.r,n.g,n.b):lt(&quot;&quot;+n,at,R):at(~~n,~~t,~~e)};var lo=ot.prototype=new P;lo.brighter=function(n){n=Math.pow(.7,arguments.length?n:1);var t=this.r,e=this.g,r=this.b,i=30;return t||e||r?(t&amp;&amp;i&gt;t&amp;&amp;(t=i),e&amp;&amp;i&gt;e&amp;&amp;(e=i),r&amp;&amp;i&gt;r&amp;&amp;(r=i),at(Math.min(255,~~(t/n)),Math.min(255,~~(e/n)),Math.min(255,~~(r/n)))):at(i,i,i)},lo.darker=function(n){return n=Math.pow(.7,arguments.length?n:1),at(~~(n*this.r),~~(n*this.g),~~(n*this.b))},lo.hsl=function(){return st(this.r,this.g,this.b)},lo.toString=function(){return&quot;#&quot;+ct(this.r)+ct(this.g)+ct(this.b)};var so=ya.map({aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074});so.forEach(function(n,t){so.set(n,it(t))}),ya.functor=pt,ya.xhr=dt(mt),ya.dsv=function(n,t){function e(n,e,u){arguments.length&lt;3&amp;&amp;(u=e,e=null);var a=ya.xhr(n,t,u);return a.row=function(n){return arguments.length?a.response(null==(e=n)?r:i(n)):e},a.row(e)}function r(n){return e.parse(n.responseText)}function i(n){return function(t){return e.parse(t.responseText,n)}}function a(t){return t.map(o).join(n)}function o(n){return c.test(n)?&#39;&quot;&#39;+n.replace(/\&quot;/g,&#39;&quot;&quot;&#39;)+&#39;&quot;&#39;:n}var c=new RegExp(&#39;[&quot;&#39;+n+&quot;\n]&quot;),l=n.charCodeAt(0);return e.parse=function(n,t){var r;return e.parseRows(n,function(n,e){if(r)return r(n,e-1);var i=new Function(&quot;d&quot;,&quot;return {&quot;+n.map(function(n,t){return JSON.stringify(n)+&quot;: d[&quot;+t+&quot;]&quot;}).join(&quot;,&quot;)+&quot;}&quot;);r=t?function(n,e){return t(i(n),e)}:i})},e.parseRows=function(n,t){function e(){if(s&gt;=c)return a;if(i)return i=!1,u;var t=s;if(34===n.charCodeAt(t)){for(var e=t;e++&lt;c;)if(34===n.charCodeAt(e)){if(34!==n.charCodeAt(e+1))break;++e}s=e+2;var r=n.charCodeAt(e+1);return 13===r?(i=!0,10===n.charCodeAt(e+2)&amp;&amp;++s):10===r&amp;&amp;(i=!0),n.substring(t+1,e).replace(/&quot;&quot;/g,&#39;&quot;&#39;)}for(;c&gt;s;){var r=n.charCodeAt(s++),o=1;if(10===r)i=!0;else if(13===r)i=!0,10===n.charCodeAt(s)&amp;&amp;(++s,++o);else if(r!==l)continue;return n.substring(t,s-o)}return n.substring(t)}for(var r,i,u={},a={},o=[],c=n.length,s=0,f=0;(r=e())!==a;){for(var h=[];r!==u&amp;&amp;r!==a;)h.push(r),r=e();(!t||(h=t(h,f++)))&amp;&amp;o.push(h)}return o},e.format=function(t){if(Array.isArray(t[0]))return e.formatRows(t);var r=new u,i=[];return t.forEach(function(n){for(var t in n)r.has(t)||i.push(r.add(t))}),[i.map(o).join(n)].concat(t.map(function(t){return i.map(function(n){return o(t[n])}).join(n)})).join(&quot;\n&quot;)},e.formatRows=function(n){return n.map(a).join(&quot;\n&quot;)},e},ya.csv=ya.dsv(&quot;,&quot;,&quot;text/csv&quot;),ya.tsv=ya.dsv(&quot;  &quot;,&quot;text/tab-separated-values&quot;);var fo,ho,go,po,mo,vo=ba[o(ba,&quot;requestAnimationFrame&quot;)]||function(n){setTimeout(n,17)};ya.timer=function(n,t,e){var r=arguments.length;2&gt;r&amp;&amp;(t=0),3&gt;r&amp;&amp;(e=Date.now());var i=e+t,u={callback:n,time:i,next:null};ho?ho.next=u:fo=u,ho=u,go||(po=clearTimeout(po),go=1,vo(Mt))},ya.timer.flush=function(){bt(),_t()};var yo=&quot;.&quot;,Mo=&quot;,&quot;,xo=[3,3],bo=&quot;$&quot;,_o=[&quot;y&quot;,&quot;z&quot;,&quot;a&quot;,&quot;f&quot;,&quot;p&quot;,&quot;n&quot;,&quot;Âµ&quot;,&quot;m&quot;,&quot;&quot;,&quot;k&quot;,&quot;M&quot;,&quot;G&quot;,&quot;T&quot;,&quot;P&quot;,&quot;E&quot;,&quot;Z&quot;,&quot;Y&quot;].map(wt);ya.formatPrefix=function(n,t){var e=0;return n&amp;&amp;(0&gt;n&amp;&amp;(n*=-1),t&amp;&amp;(n=ya.round(n,St(n,t))),e=1+Math.floor(1e-12+Math.log(n)/Math.LN10),e=Math.max(-24,Math.min(24,3*Math.floor((0&gt;=e?e+1:e-1)/3)))),_o[8+e/3]},ya.round=function(n,t){return t?Math.round(n*(t=Math.pow(10,t)))/t:Math.round(n)},ya.format=function(n){var t=wo.exec(n),e=t[1]||&quot; &quot;,r=t[2]||&quot;&gt;&quot;,i=t[3]||&quot;&quot;,u=t[4]||&quot;&quot;,a=t[5],o=+t[6],c=t[7],l=t[8],s=t[9],f=1,h=&quot;&quot;,g=!1;switch(l&amp;&amp;(l=+l.substring(1)),(a||&quot;0&quot;===e&amp;&amp;&quot;=&quot;===r)&amp;&amp;(a=e=&quot;0&quot;,r=&quot;=&quot;,c&amp;&amp;(o-=Math.floor((o-1)/4))),s){case&quot;n&quot;:c=!0,s=&quot;g&quot;;break;case&quot;%&quot;:f=100,h=&quot;%&quot;,s=&quot;f&quot;;break;case&quot;p&quot;:f=100,h=&quot;%&quot;,s=&quot;r&quot;;break;case&quot;b&quot;:case&quot;o&quot;:case&quot;x&quot;:case&quot;X&quot;:&quot;#&quot;===u&amp;&amp;(u=&quot;0&quot;+s.toLowerCase());case&quot;c&quot;:case&quot;d&quot;:g=!0,l=0;break;case&quot;s&quot;:f=-1,s=&quot;r&quot;}&quot;#&quot;===u?u=&quot;&quot;:&quot;$&quot;===u&amp;&amp;(u=bo),&quot;r&quot;!=s||l||(s=&quot;g&quot;),null!=l&amp;&amp;(&quot;g&quot;==s?l=Math.max(1,Math.min(21,l)):(&quot;e&quot;==s||&quot;f&quot;==s)&amp;&amp;(l=Math.max(0,Math.min(20,l)))),s=So.get(s)||Et;var p=a&amp;&amp;c;return function(n){if(g&amp;&amp;n%1)return&quot;&quot;;var t=0&gt;n||0===n&amp;&amp;0&gt;1/n?(n=-n,&quot;-&quot;):i;if(0&gt;f){var m=ya.formatPrefix(n,l);n=m.scale(n),h=m.symbol}else n*=f;n=s(n,l);var d=n.lastIndexOf(&quot;.&quot;),v=0&gt;d?n:n.substring(0,d),y=0&gt;d?&quot;&quot;:yo+n.substring(d+1);!a&amp;&amp;c&amp;&amp;(v=Eo(v));var M=u.length+v.length+y.length+(p?0:t.length),x=o&gt;M?new Array(M=o-M+1).join(e):&quot;&quot;;return p&amp;&amp;(v=Eo(x+v)),t+=u,n=v+y,(&quot;&lt;&quot;===r?t+n+x:&quot;&gt;&quot;===r?x+t+n:&quot;^&quot;===r?x.substring(0,M&gt;&gt;=1)+t+n+x.substring(M):t+(p?n:x+n))+h}};var wo=/(?:([^{])?([&lt;&gt;=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i,So=ya.map({b:function(n){return n.toString(2)},c:function(n){return String.fromCharCode(n)},o:function(n){return n.toString(8)},x:function(n){return n.toString(16)},X:function(n){return n.toString(16).toUpperCase()},g:function(n,t){return n.toPrecision(t)},e:function(n,t){return n.toExponential(t)},f:function(n,t){return n.toFixed(t)},r:function(n,t){return(n=ya.round(n,St(n,t))).toFixed(Math.max(0,Math.min(20,St(n*(1+1e-15),t))))}}),Eo=mt;if(xo){var ko=xo.length;Eo=function(n){for(var t=n.length,e=[],r=0,i=xo[0];t&gt;0&amp;&amp;i&gt;0;)e.push(n.substring(t-=i,t+i)),i=xo[r=(r+1)%ko];return e.reverse().join(Mo)}}ya.geo={},kt.prototype={s:0,t:0,add:function(n){At(n,this.t,Ao),At(Ao.s,this.s,this),this.s?this.t+=Ao.t:this.s=Ao.t},reset:function(){this.s=this.t=0},valueOf:function(){return this.s}};var Ao=new kt;ya.geo.stream=function(n,t){n&amp;&amp;No.hasOwnProperty(n.type)?No[n.type](n,t):Nt(n,t)};var No={Feature:function(n,t){Nt(n.geometry,t)},FeatureCollection:function(n,t){for(var e=n.features,r=-1,i=e.length;++r&lt;i;)Nt(e[r].geometry,t)}},qo={Sphere:function(n,t){t.sphere()},Point:function(n,t){var e=n.coordinates;t.point(e[0],e[1])},MultiPoint:function(n,t){for(var e,r=n.coordinates,i=-1,u=r.length;++i&lt;u;)e=r[i],t.point(e[0],e[1])},LineString:function(n,t){qt(n.coordinates,t,0)},MultiLineString:function(n,t){for(var e=n.coordinates,r=-1,i=e.length;++r&lt;i;)qt(e[r],t,0)},Polygon:function(n,t){Tt(n.coordinates,t)},MultiPolygon:function(n,t){for(var e=n.coordinates,r=-1,i=e.length;++r&lt;i;)Tt(e[r],t)},GeometryCollection:function(n,t){for(var e=n.geometries,r=-1,i=e.length;++r&lt;i;)Nt(e[r],t)}};ya.geo.area=function(n){return To=0,ya.geo.stream(n,zo),To};var To,Co=new kt,zo={sphere:function(){To+=4*Ka},point:s,lineStart:s,lineEnd:s,polygonStart:function(){Co.reset(),zo.lineStart=Ct},polygonEnd:function(){var n=2*Co;To+=0&gt;n?4*Ka+n:n,zo.lineStart=zo.lineEnd=zo.point=s}};ya.geo.bounds=function(){function n(n,t){M.push(x=[s=n,h=n]),f&gt;t&amp;&amp;(f=t),t&gt;g&amp;&amp;(g=t)}function t(t,e){var r=zt([t*to,e*to]);if(v){var i=jt(v,r),u=[i[1],-i[0],0],a=jt(u,i);Ft(a),a=Pt(a);var c=t-p,l=c&gt;0?1:-1,m=a[0]*eo*l,d=Math.abs(c)&gt;180;if(d^(m&gt;l*p&amp;&amp;l*t&gt;m)){var y=a[1]*eo;y&gt;g&amp;&amp;(g=y)}else if(m=(m+360)%360-180,d^(m&gt;l*p&amp;&amp;l*t&gt;m)){var y=-a[1]*eo;f&gt;y&amp;&amp;(f=y)}else f&gt;e&amp;&amp;(f=e),e&gt;g&amp;&amp;(g=e);d?p&gt;t?o(s,t)&gt;o(s,h)&amp;&amp;(h=t):o(t,h)&gt;o(s,h)&amp;&amp;(s=t):h&gt;=s?(s&gt;t&amp;&amp;(s=t),t&gt;h&amp;&amp;(h=t)):t&gt;p?o(s,t)&gt;o(s,h)&amp;&amp;(h=t):o(t,h)&gt;o(s,h)&amp;&amp;(s=t)}else n(t,e);v=r,p=t}function e(){b.point=t}function r(){x[0]=s,x[1]=h,b.point=n,v=null}function i(n,e){if(v){var r=n-p;y+=Math.abs(r)&gt;180?r+(r&gt;0?360:-360):r}else m=n,d=e;zo.point(n,e),t(n,e)}function u(){zo.lineStart()}function a(){i(m,d),zo.lineEnd(),Math.abs(y)&gt;Qa&amp;&amp;(s=-(h=180)),x[0]=s,x[1]=h,v=null}function o(n,t){return(t-=n)&lt;0?t+360:t}function c(n,t){return n[0]-t[0]}function l(n,t){return t[0]&lt;=t[1]?t[0]&lt;=n&amp;&amp;n&lt;=t[1]:n&lt;t[0]||t[1]&lt;n}var s,f,h,g,p,m,d,v,y,M,x,b={point:n,lineStart:e,lineEnd:r,polygonStart:function(){b.point=i,b.lineStart=u,b.lineEnd=a,y=0,zo.polygonStart()},polygonEnd:function(){zo.polygonEnd(),b.point=n,b.lineStart=e,b.lineEnd=r,0&gt;Co?(s=-(h=180),f=-(g=90)):y&gt;Qa?g=90:-Qa&gt;y&amp;&amp;(f=-90),x[0]=s,x[1]=h}};return function(n){g=h=-(s=f=1/0),M=[],ya.geo.stream(n,b);var t=M.length;if(t){M.sort(c);for(var e,r=1,i=M[0],u=[i];t&gt;r;++r)e=M[r],l(e[0],i)||l(e[1],i)?(o(i[0],e[1])&gt;o(i[0],i[1])&amp;&amp;(i[1]=e[1]),o(e[0],i[1])&gt;o(i[0],i[1])&amp;&amp;(i[0]=e[0])):u.push(i=e);for(var a,e,p=-1/0,t=u.length-1,r=0,i=u[t];t&gt;=r;i=e,++r)e=u[r],(a=o(i[1],e[0]))&gt;p&amp;&amp;(p=a,s=e[0],h=i[1])}return M=x=null,1/0===s||1/0===f?[[0/0,0/0],[0/0,0/0]]:[[s,f],[h,g]]}}(),ya.geo.centroid=function(n){Do=jo=Lo=Ho=Fo=Po=Oo=Yo=Ro=Uo=Io=0,ya.geo.stream(n,Vo);var t=Ro,e=Uo,r=Io,i=t*t+e*e+r*r;return no&gt;i&amp;&amp;(t=Po,e=Oo,r=Yo,Qa&gt;jo&amp;&amp;(t=Lo,e=Ho,r=Fo),i=t*t+e*e+r*r,no&gt;i)?[0/0,0/0]:[Math.atan2(e,t)*eo,V(r/Math.sqrt(i))*eo]};var Do,jo,Lo,Ho,Fo,Po,Oo,Yo,Ro,Uo,Io,Vo={sphere:s,point:Yt,lineStart:Ut,lineEnd:It,polygonStart:function(){Vo.lineStart=Vt},polygonEnd:function(){Vo.lineStart=Ut}},Xo=$t(Xt,Qt,te,ee),Zo=[-Ka,0],Bo=1e9;(ya.geo.conicEqualArea=function(){return oe(ce)}).raw=ce,ya.geo.albers=function(){return ya.geo.conicEqualArea().rotate([96,0]).center([-.6,38.7]).parallels([29.5,45.5]).scale(1070)},ya.geo.albersUsa=function(){function n(n){var u=n[0],a=n[1];return t=null,e(u,a),t||(r(u,a),t)||i(u,a),t}var t,e,r,i,u=ya.geo.albers(),a=ya.geo.conicEqualArea().rotate([154,0]).center([-2,58.5]).parallels([55,65]),o=ya.geo.conicEqualArea().rotate([157,0]).center([-3,19.9]).parallels([8,18]),c={point:function(n,e){t=[n,e]}};return n.invert=function(n){var t=u.scale(),e=u.translate(),r=(n[0]-e[0])/t,i=(n[1]-e[1])/t;return(i&gt;=.12&amp;&amp;.234&gt;i&amp;&amp;r&gt;=-.425&amp;&amp;-.214&gt;r?a:i&gt;=.166&amp;&amp;.234&gt;i&amp;&amp;r&gt;=-.214&amp;&amp;-.115&gt;r?o:u).invert(n)},n.stream=function(n){var t=u.stream(n),e=a.stream(n),r=o.stream(n);return{point:function(n,i){t.point(n,i),e.point(n,i),r.point(n,i)},sphere:function(){t.sphere(),e.sphere(),r.sphere()},lineStart:function(){t.lineStart(),e.lineStart(),r.lineStart()},lineEnd:function(){t.lineEnd(),e.lineEnd(),r.lineEnd()},polygonStart:function(){t.polygonStart(),e.polygonStart(),r.polygonStart()},polygonEnd:function(){t.polygonEnd(),e.polygonEnd(),r.polygonEnd()}}},n.precision=function(t){return arguments.length?(u.precision(t),a.precision(t),o.precision(t),n):u.precision()},n.scale=function(t){return arguments.length?(u.scale(t),a.scale(.35*t),o.scale(t),n.translate(u.translate())):u.scale()},n.translate=function(t){if(!arguments.length)return u.translate();var l=u.scale(),s=+t[0],f=+t[1];return e=u.translate(t).clipExtent([[s-.455*l,f-.238*l],[s+.455*l,f+.238*l]]).stream(c).point,r=a.translate([s-.307*l,f+.201*l]).clipExtent([[s-.425*l+Qa,f+.12*l+Qa],[s-.214*l-Qa,f+.234*l-Qa]]).stream(c).point,i=o.translate([s-.205*l,f+.212*l]).clipExtent([[s-.214*l+Qa,f+.166*l+Qa],[s-.115*l-Qa,f+.234*l-Qa]]).stream(c).point,n},n.scale(1070)};var $o,Wo,Jo,Go,Ko,Qo,nc={point:s,lineStart:s,lineEnd:s,polygonStart:function(){Wo=0,nc.lineStart=le},polygonEnd:function(){nc.lineStart=nc.lineEnd=nc.point=s,$o+=Math.abs(Wo/2)}},tc={point:se,lineStart:s,lineEnd:s,polygonStart:s,polygonEnd:s},ec={point:ge,lineStart:pe,lineEnd:me,polygonStart:function(){ec.lineStart=de},polygonEnd:function(){ec.point=ge,ec.lineStart=pe,ec.lineEnd=me}};ya.geo.path=function(){function n(n){return n&amp;&amp;(&quot;function&quot;==typeof o&amp;&amp;u.pointRadius(+o.apply(this,arguments)),a&amp;&amp;a.valid||(a=i(u)),ya.geo.stream(n,a)),u.result()}function t(){return a=null,n}var e,r,i,u,a,o=4.5;return n.area=function(n){return $o=0,ya.geo.stream(n,i(nc)),$o},n.centroid=function(n){return Lo=Ho=Fo=Po=Oo=Yo=Ro=Uo=Io=0,ya.geo.stream(n,i(ec)),Io?[Ro/Io,Uo/Io]:Yo?[Po/Yo,Oo/Yo]:Fo?[Lo/Fo,Ho/Fo]:[0/0,0/0]},n.bounds=function(n){return Ko=Qo=-(Jo=Go=1/0),ya.geo.stream(n,i(tc)),[[Jo,Go],[Ko,Qo]]},n.projection=function(n){return arguments.length?(i=(e=n)?n.stream||Me(n):mt,t()):e},n.context=function(n){return arguments.length?(u=null==(r=n)?new fe:new ve(n),&quot;function&quot;!=typeof o&amp;&amp;u.pointRadius(o),t()):r},n.pointRadius=function(t){return arguments.length?(o=&quot;function&quot;==typeof t?t:(u.pointRadius(+t),+t),n):o},n.projection(ya.geo.albersUsa()).context(null)},ya.geo.projection=xe,ya.geo.projectionMutator=be,(ya.geo.equirectangular=function(){return xe(we)}).raw=we.invert=we,ya.geo.rotation=function(n){function t(t){return t=n(t[0]*to,t[1]*to),t[0]*=eo,t[1]*=eo,t}return n=Se(n[0]%360*to,n[1]*to,n.length&gt;2?n[2]*to:0),t.invert=function(t){return t=n.invert(t[0]*to,t[1]*to),t[0]*=eo,t[1]*=eo,t},t},ya.geo.circle=function(){function n(){var n=&quot;function&quot;==typeof r?r.apply(this,arguments):r,t=Se(-n[0]*to,-n[1]*to,0).invert,i=[];return e(null,null,1,{point:function(n,e){i.push(n=t(n,e)),n[0]*=eo,n[1]*=eo}}),{type:&quot;Polygon&quot;,coordinates:[i]}}var t,e,r=[0,0],i=6;return n.origin=function(t){return arguments.length?(r=t,n):r},n.angle=function(r){return arguments.length?(e=Ne((t=+r)*to,i*to),n):t},n.precision=function(r){return arguments.length?(e=Ne(t*to,(i=+r)*to),n):i},n.angle(90)},ya.geo.distance=function(n,t){var e,r=(t[0]-n[0])*to,i=n[1]*to,u=t[1]*to,a=Math.sin(r),o=Math.cos(r),c=Math.sin(i),l=Math.cos(i),s=Math.sin(u),f=Math.cos(u);return Math.atan2(Math.sqrt((e=f*a)*e+(e=l*s-c*f*o)*e),c*s+l*f*o)},ya.geo.graticule=function(){function n(){return{type:&quot;MultiLineString&quot;,coordinates:t()}}function t(){return ya.range(Math.ceil(u/d)*d,i,d).map(h).concat(ya.range(Math.ceil(l/v)*v,c,v).map(g)).concat(ya.range(Math.ceil(r/p)*p,e,p).filter(function(n){return Math.abs(n%d)&gt;Qa}).map(s)).concat(ya.range(Math.ceil(o/m)*m,a,m).filter(function(n){return Math.abs(n%v)&gt;Qa}).map(f))}var e,r,i,u,a,o,c,l,s,f,h,g,p=10,m=p,d=90,v=360,y=2.5;return n.lines=function(){return t().map(function(n){return{type:&quot;LineString&quot;,coordinates:n}})},n.outline=function(){return{type:&quot;Polygon&quot;,coordinates:[h(u).concat(g(c).slice(1),h(i).reverse().slice(1),g(l).reverse().slice(1))]}},n.extent=function(t){return arguments.length?n.majorExtent(t).minorExtent(t):n.minorExtent()},n.majorExtent=function(t){return arguments.length?(u=+t[0][0],i=+t[1][0],l=+t[0][1],c=+t[1][1],u&gt;i&amp;&amp;(t=u,u=i,i=t),l&gt;c&amp;&amp;(t=l,l=c,c=t),n.precision(y)):[[u,l],[i,c]]},n.minorExtent=function(t){return arguments.length?(r=+t[0][0],e=+t[1][0],o=+t[0][1],a=+t[1][1],r&gt;e&amp;&amp;(t=r,r=e,e=t),o&gt;a&amp;&amp;(t=o,o=a,a=t),n.precision(y)):[[r,o],[e,a]]},n.step=function(t){return arguments.length?n.majorStep(t).minorStep(t):n.minorStep()},n.majorStep=function(t){return arguments.length?(d=+t[0],v=+t[1],n):[d,v]},n.minorStep=function(t){return arguments.length?(p=+t[0],m=+t[1],n):[p,m]},n.precision=function(t){return arguments.length?(y=+t,s=Te(o,a,90),f=Ce(r,e,y),h=Te(l,c,90),g=Ce(u,i,y),n):y},n.majorExtent([[-180,-90+Qa],[180,90-Qa]]).minorExtent([[-180,-80-Qa],[180,80+Qa]])},ya.geo.greatArc=function(){function n(){return{type:&quot;LineString&quot;,coordinates:[t||r.apply(this,arguments),e||i.apply(this,arguments)]}}var t,e,r=ze,i=De;return n.distance=function(){return ya.geo.distance(t||r.apply(this,arguments),e||i.apply(this,arguments))},n.source=function(e){return arguments.length?(r=e,t=&quot;function&quot;==typeof e?null:e,n):r},n.target=function(t){return arguments.length?(i=t,e=&quot;function&quot;==typeof t?null:t,n):i},n.precision=function(){return arguments.length?n:0},n},ya.geo.interpolate=function(n,t){return je(n[0]*to,n[1]*to,t[0]*to,t[1]*to)},ya.geo.length=function(n){return rc=0,ya.geo.stream(n,ic),rc};var rc,ic={sphere:s,point:s,lineStart:Le,lineEnd:s,polygonStart:s,polygonEnd:s},uc=He(function(n){return Math.sqrt(2/(1+n))},function(n){return 2*Math.asin(n/2)});(ya.geo.azimuthalEqualArea=function(){return xe(uc)}).raw=uc;var ac=He(function(n){var t=Math.acos(n);return t&amp;&amp;t/Math.sin(t)},mt);(ya.geo.azimuthalEquidistant=function(){return xe(ac)}).raw=ac,(ya.geo.conicConformal=function(){return oe(Fe)}).raw=Fe,(ya.geo.conicEquidistant=function(){return oe(Pe)}).raw=Pe;var oc=He(function(n){return 1/n},Math.atan);(ya.geo.gnomonic=function(){return xe(oc)}).raw=oc,Oe.invert=function(n,t){return[n,2*Math.atan(Math.exp(t))-Ka/2]},(ya.geo.mercator=function(){return Ye(Oe)}).raw=Oe;var cc=He(function(){return 1},Math.asin);(ya.geo.orthographic=function(){return xe(cc)}).raw=cc;var lc=He(function(n){return 1/(1+n)},function(n){return 2*Math.atan(n)});(ya.geo.stereographic=function(){return xe(lc)}).raw=lc,Re.invert=function(n,t){return[Math.atan2(X(n),Math.cos(t)),V(Math.sin(t)/Z(n))]},(ya.geo.transverseMercator=function(){return Ye(Re)}).raw=Re,ya.geom={},ya.svg={},ya.svg.line=function(){return Ue(mt)};var sc=ya.map({linear:Xe,&quot;linear-closed&quot;:Ze,step:Be,&quot;step-before&quot;:$e,&quot;step-after&quot;:We,basis:tr,&quot;basis-open&quot;:er,&quot;basis-closed&quot;:rr,bundle:ir,cardinal:Ke,&quot;cardinal-open&quot;:Je,&quot;cardinal-closed&quot;:Ge,monotone:sr});</div><div class='line' id='LC15012'>sc.forEach(function(n,t){t.key=n,t.closed=/-closed$/.test(n)});var fc=[0,2/3,1/3,0],hc=[0,1/3,2/3,0],gc=[0,1/6,2/3,1/6];ya.geom.hull=function(n){function t(n){if(n.length&lt;3)return[];var t,i,u,a,o,c,l,s,f,h,g,p,m=pt(e),d=pt(r),v=n.length,y=v-1,M=[],x=[],b=0;if(m===Ie&amp;&amp;r===Ve)t=n;else for(u=0,t=[];v&gt;u;++u)t.push([+m.call(this,i=n[u],u),+d.call(this,i,u)]);for(u=1;v&gt;u;++u)(t[u][1]&lt;t[b][1]||t[u][1]==t[b][1]&amp;&amp;t[u][0]&lt;t[b][0])&amp;&amp;(b=u);for(u=0;v&gt;u;++u)u!==b&amp;&amp;(c=t[u][1]-t[b][1],o=t[u][0]-t[b][0],M.push({angle:Math.atan2(c,o),index:u}));for(M.sort(function(n,t){return n.angle-t.angle}),g=M[0].angle,h=M[0].index,f=0,u=1;y&gt;u;++u){if(a=M[u].index,g==M[u].angle){if(o=t[h][0]-t[b][0],c=t[h][1]-t[b][1],l=t[a][0]-t[b][0],s=t[a][1]-t[b][1],o*o+c*c&gt;=l*l+s*s){M[u].index=-1;continue}M[f].index=-1}g=M[u].angle,f=u,h=a}for(x.push(b),u=0,a=0;2&gt;u;++a)M[a].index&gt;-1&amp;&amp;(x.push(M[a].index),u++);for(p=x.length;y&gt;a;++a)if(!(M[a].index&lt;0)){for(;!fr(x[p-2],x[p-1],M[a].index,t);)--p;x[p++]=M[a].index}var _=[];for(u=p-1;u&gt;=0;--u)_.push(n[x[u]]);return _}var e=Ie,r=Ve;return arguments.length?t(n):(t.x=function(n){return arguments.length?(e=n,t):e},t.y=function(n){return arguments.length?(r=n,t):r},t)},ya.geom.polygon=function(n){return La(n,pc),n};var pc=ya.geom.polygon.prototype=[];pc.area=function(){for(var n,t=-1,e=this.length,r=this[e-1],i=0;++t&lt;e;)n=r,r=this[t],i+=n[1]*r[0]-n[0]*r[1];return.5*i},pc.centroid=function(n){var t,e,r=-1,i=this.length,u=0,a=0,o=this[i-1];for(arguments.length||(n=-1/(6*this.area()));++r&lt;i;)t=o,o=this[r],e=t[0]*o[1]-o[0]*t[1],u+=(t[0]+o[0])*e,a+=(t[1]+o[1])*e;return[u*n,a*n]},pc.clip=function(n){for(var t,e,r,i,u,a,o=pr(n),c=-1,l=this.length-pr(this),s=this[l-1];++c&lt;l;){for(t=n.slice(),n.length=0,i=this[c],u=t[(r=t.length-o)-1],e=-1;++e&lt;r;)a=t[e],hr(a,s,i)?(hr(u,s,i)||n.push(gr(u,a,s,i)),n.push(a)):hr(u,s,i)&amp;&amp;n.push(gr(u,a,s,i)),u=a;o&amp;&amp;n.push(n[0]),s=i}return n},ya.geom.delaunay=function(n){var t=n.map(function(){return[]}),e=[];return mr(n,function(e){t[e.region.l.index].push(n[e.region.r.index])}),t.forEach(function(t,r){var i=n[r],u=i[0],a=i[1];t.forEach(function(n){n.angle=Math.atan2(n[0]-u,n[1]-a)}),t.sort(function(n,t){return n.angle-t.angle});for(var o=0,c=t.length-1;c&gt;o;o++)e.push([i,t[o],t[o+1]])}),e},ya.geom.voronoi=function(n){function t(n){var t,u,a,o=n.map(function(){return[]}),c=pt(e),l=pt(r),s=n.length,f=1e6;if(c===Ie&amp;&amp;l===Ve)t=n;else for(t=new Array(s),a=0;s&gt;a;++a)t[a]=[+c.call(this,u=n[a],a),+l.call(this,u,a)];if(mr(t,function(n){var t,e,r,i,u,a;1===n.a&amp;&amp;n.b&gt;=0?(t=n.ep.r,e=n.ep.l):(t=n.ep.l,e=n.ep.r),1===n.a?(u=t?t.y:-f,r=n.c-n.b*u,a=e?e.y:f,i=n.c-n.b*a):(r=t?t.x:-f,u=n.c-n.a*r,i=e?e.x:f,a=n.c-n.a*i);var c=[r,u],l=[i,a];o[n.region.l.index].push(c,l),o[n.region.r.index].push(c,l)}),o=o.map(function(n,e){var r=t[e][0],i=t[e][1],u=n.map(function(n){return Math.atan2(n[0]-r,n[1]-i)}),a=ya.range(n.length).sort(function(n,t){return u[n]-u[t]});return a.filter(function(n,t){return!t||u[n]-u[a[t-1]]&gt;Qa}).map(function(t){return n[t]})}),o.forEach(function(n,e){var r=n.length;if(!r)return n.push([-f,-f],[-f,f],[f,f],[f,-f]);if(!(r&gt;2)){var i=t[e],u=n[0],a=n[1],o=i[0],c=i[1],l=u[0],s=u[1],h=a[0],g=a[1],p=Math.abs(h-l),m=g-s;if(Math.abs(m)&lt;Qa){var d=s&gt;c?-f:f;n.push([-f,d],[f,d])}else if(Qa&gt;p){var v=l&gt;o?-f:f;n.push([v,-f],[v,f])}else{var d=(l-o)*(g-s)&gt;(h-l)*(s-c)?f:-f,y=Math.abs(m)-p;Math.abs(y)&lt;Qa?n.push([0&gt;m?d:-d,d]):(y&gt;0&amp;&amp;(d*=-1),n.push([-f,d],[f,d]))}}}),i)for(a=0;s&gt;a;++a)i.clip(o[a]);for(a=0;s&gt;a;++a)o[a].point=n[a];return o}var e=Ie,r=Ve,i=null;return arguments.length?t(n):(t.x=function(n){return arguments.length?(e=n,t):e},t.y=function(n){return arguments.length?(r=n,t):r},t.clipExtent=function(n){if(!arguments.length)return i&amp;&amp;[i[0],i[2]];if(null==n)i=null;else{var e=+n[0][0],r=+n[0][1],u=+n[1][0],a=+n[1][1];i=ya.geom.polygon([[e,r],[e,a],[u,a],[u,r]])}return t},t.size=function(n){return arguments.length?t.clipExtent(n&amp;&amp;[[0,0],n]):i&amp;&amp;i[2]},t.links=function(n){var t,i,u,a=n.map(function(){return[]}),o=[],c=pt(e),l=pt(r),s=n.length;if(c===Ie&amp;&amp;l===Ve)t=n;else for(t=new Array(s),u=0;s&gt;u;++u)t[u]=[+c.call(this,i=n[u],u),+l.call(this,i,u)];return mr(t,function(t){var e=t.region.l.index,r=t.region.r.index;a[e][r]||(a[e][r]=a[r][e]=!0,o.push({source:n[e],target:n[r]}))}),o},t.triangles=function(n){if(e===Ie&amp;&amp;r===Ve)return ya.geom.delaunay(n);for(var t,i=new Array(c),u=pt(e),a=pt(r),o=-1,c=n.length;++o&lt;c;)(i[o]=[+u.call(this,t=n[o],o),+a.call(this,t,o)]).data=t;return ya.geom.delaunay(i).map(function(n){return n.map(function(n){return n.data})})},t)};var mc={l:&quot;r&quot;,r:&quot;l&quot;};ya.geom.quadtree=function(n,t,e,r,i){function u(n){function u(n,t,e,r,i,u,a,o){if(!isNaN(e)&amp;&amp;!isNaN(r))if(n.leaf){var c=n.x,s=n.y;if(null!=c)if(Math.abs(c-e)+Math.abs(s-r)&lt;.01)l(n,t,e,r,i,u,a,o);else{var f=n.point;n.x=n.y=n.point=null,l(n,f,c,s,i,u,a,o),l(n,t,e,r,i,u,a,o)}else n.x=e,n.y=r,n.point=t}else l(n,t,e,r,i,u,a,o)}function l(n,t,e,r,i,a,o,c){var l=.5*(i+o),s=.5*(a+c),f=e&gt;=l,h=r&gt;=s,g=(h&lt;&lt;1)+f;n.leaf=!1,n=n.nodes[g]||(n.nodes[g]=yr()),f?i=l:o=l,h?a=s:c=s,u(n,t,e,r,i,a,o,c)}var s,f,h,g,p,m,d,v,y,M=pt(o),x=pt(c);if(null!=t)m=t,d=e,v=r,y=i;else if(v=y=-(m=d=1/0),f=[],h=[],p=n.length,a)for(g=0;p&gt;g;++g)s=n[g],s.x&lt;m&amp;&amp;(m=s.x),s.y&lt;d&amp;&amp;(d=s.y),s.x&gt;v&amp;&amp;(v=s.x),s.y&gt;y&amp;&amp;(y=s.y),f.push(s.x),h.push(s.y);else for(g=0;p&gt;g;++g){var b=+M(s=n[g],g),_=+x(s,g);m&gt;b&amp;&amp;(m=b),d&gt;_&amp;&amp;(d=_),b&gt;v&amp;&amp;(v=b),_&gt;y&amp;&amp;(y=_),f.push(b),h.push(_)}var w=v-m,S=y-d;w&gt;S?y=d+w:v=m+S;var E=yr();if(E.add=function(n){u(E,n,+M(n,++g),+x(n,g),m,d,v,y)},E.visit=function(n){Mr(n,E,m,d,v,y)},g=-1,null==t){for(;++g&lt;p;)u(E,n[g],f[g],h[g],m,d,v,y);--g}else n.forEach(E.add);return f=h=n=s=null,E}var a,o=Ie,c=Ve;return(a=arguments.length)?(o=dr,c=vr,3===a&amp;&amp;(i=e,r=t,e=t=0),u(n)):(u.x=function(n){return arguments.length?(o=n,u):o},u.y=function(n){return arguments.length?(c=n,u):c},u.extent=function(n){return arguments.length?(null==n?t=e=r=i=null:(t=+n[0][0],e=+n[0][1],r=+n[1][0],i=+n[1][1]),u):null==t?null:[[t,e],[r,i]]},u.size=function(n){return arguments.length?(null==n?t=e=r=i=null:(t=e=0,r=+n[0],i=+n[1]),u):null==t?null:[r-t,i-e]},u)},ya.interpolateRgb=xr,ya.interpolateObject=br,ya.interpolateNumber=_r,ya.interpolateString=wr;var dc=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;ya.interpolate=Sr,ya.interpolators=[function(n,t){var e=typeof t;return(&quot;string&quot;===e?so.has(t)||/^(#|rgb\(|hsl\()/.test(t)?xr:wr:t instanceof P?xr:&quot;object&quot;===e?Array.isArray(t)?Er:br:_r)(n,t)}],ya.interpolateArray=Er;var vc=function(){return mt},yc=ya.map({linear:vc,poly:zr,quad:function(){return qr},cubic:function(){return Tr},sin:function(){return Dr},exp:function(){return jr},circle:function(){return Lr},elastic:Hr,back:Fr,bounce:function(){return Pr}}),Mc=ya.map({&quot;in&quot;:mt,out:Ar,&quot;in-out&quot;:Nr,&quot;out-in&quot;:function(n){return Nr(Ar(n))}});ya.ease=function(n){var t=n.indexOf(&quot;-&quot;),e=t&gt;=0?n.substring(0,t):n,r=t&gt;=0?n.substring(t+1):&quot;in&quot;;return e=yc.get(e)||vc,r=Mc.get(r)||mt,kr(r(e.apply(null,Array.prototype.slice.call(arguments,1))))},ya.interpolateHcl=Or,ya.interpolateHsl=Yr,ya.interpolateLab=Rr,ya.interpolateRound=Ur,ya.transform=function(n){var t=Ma.createElementNS(ya.ns.prefix.svg,&quot;g&quot;);return(ya.transform=function(n){if(null!=n){t.setAttribute(&quot;transform&quot;,n);var e=t.transform.baseVal.consolidate()}return new Ir(e?e.matrix:xc)})(n)},Ir.prototype.toString=function(){return&quot;translate(&quot;+this.translate+&quot;)rotate(&quot;+this.rotate+&quot;)skewX(&quot;+this.skew+&quot;)scale(&quot;+this.scale+&quot;)&quot;};var xc={a:1,b:0,c:0,d:1,e:0,f:0};ya.interpolateTransform=Br,ya.layout={},ya.layout.bundle=function(){return function(n){for(var t=[],e=-1,r=n.length;++e&lt;r;)t.push(Jr(n[e]));return t}},ya.layout.chord=function(){function n(){var n,l,f,h,g,p={},m=[],d=ya.range(u),v=[];for(e=[],r=[],n=0,h=-1;++h&lt;u;){for(l=0,g=-1;++g&lt;u;)l+=i[h][g];m.push(l),v.push(ya.range(u)),n+=l}for(a&amp;&amp;d.sort(function(n,t){return a(m[n],m[t])}),o&amp;&amp;v.forEach(function(n,t){n.sort(function(n,e){return o(i[t][n],i[t][e])})}),n=(2*Ka-s*u)/n,l=0,h=-1;++h&lt;u;){for(f=l,g=-1;++g&lt;u;){var y=d[h],M=v[y][g],x=i[y][M],b=l,_=l+=x*n;p[y+&quot;-&quot;+M]={index:y,subindex:M,startAngle:b,endAngle:_,value:x}}r[y]={index:y,startAngle:f,endAngle:l,value:(l-f)/n},l+=s}for(h=-1;++h&lt;u;)for(g=h-1;++g&lt;u;){var w=p[h+&quot;-&quot;+g],S=p[g+&quot;-&quot;+h];(w.value||S.value)&amp;&amp;e.push(w.value&lt;S.value?{source:S,target:w}:{source:w,target:S})}c&amp;&amp;t()}function t(){e.sort(function(n,t){return c((n.source.value+n.target.value)/2,(t.source.value+t.target.value)/2)})}var e,r,i,u,a,o,c,l={},s=0;return l.matrix=function(n){return arguments.length?(u=(i=n)&amp;&amp;i.length,e=r=null,l):i},l.padding=function(n){return arguments.length?(s=n,e=r=null,l):s},l.sortGroups=function(n){return arguments.length?(a=n,e=r=null,l):a},l.sortSubgroups=function(n){return arguments.length?(o=n,e=null,l):o},l.sortChords=function(n){return arguments.length?(c=n,e&amp;&amp;t(),l):c},l.chords=function(){return e||n(),e},l.groups=function(){return r||n(),r},l},ya.layout.force=function(){function n(n){return function(t,e,r,i){if(t.point!==n){var u=t.cx-n.x,a=t.cy-n.y,o=1/Math.sqrt(u*u+a*a);if(m&gt;(i-e)*o){var c=t.charge*o*o;return n.px-=u*c,n.py-=a*c,!0}if(t.point&amp;&amp;isFinite(o)){var c=t.pointCharge*o*o;n.px-=u*c,n.py-=a*c}}return!t.charge}}function t(n){n.px=ya.event.x,n.py=ya.event.y,o.resume()}var e,r,i,u,a,o={},c=ya.dispatch(&quot;start&quot;,&quot;tick&quot;,&quot;end&quot;),l=[1,1],s=.9,f=bc,h=_c,g=-30,p=.1,m=.8,d=[],v=[];return o.tick=function(){if((r*=.99)&lt;.005)return c.end({type:&quot;end&quot;,alpha:r=0}),!0;var t,e,o,f,h,m,y,M,x,b=d.length,_=v.length;for(e=0;_&gt;e;++e)o=v[e],f=o.source,h=o.target,M=h.x-f.x,x=h.y-f.y,(m=M*M+x*x)&amp;&amp;(m=r*u[e]*((m=Math.sqrt(m))-i[e])/m,M*=m,x*=m,h.x-=M*(y=f.weight/(h.weight+f.weight)),h.y-=x*y,f.x+=M*(y=1-y),f.y+=x*y);if((y=r*p)&amp;&amp;(M=l[0]/2,x=l[1]/2,e=-1,y))for(;++e&lt;b;)o=d[e],o.x+=(M-o.x)*y,o.y+=(x-o.y)*y;if(g)for(ri(t=ya.geom.quadtree(d),r,a),e=-1;++e&lt;b;)(o=d[e]).fixed||t.visit(n(o));for(e=-1;++e&lt;b;)o=d[e],o.fixed?(o.x=o.px,o.y=o.py):(o.x-=(o.px-(o.px=o.x))*s,o.y-=(o.py-(o.py=o.y))*s);c.tick({type:&quot;tick&quot;,alpha:r})},o.nodes=function(n){return arguments.length?(d=n,o):d},o.links=function(n){return arguments.length?(v=n,o):v},o.size=function(n){return arguments.length?(l=n,o):l},o.linkDistance=function(n){return arguments.length?(f=&quot;function&quot;==typeof n?n:+n,o):f},o.distance=o.linkDistance,o.linkStrength=function(n){return arguments.length?(h=&quot;function&quot;==typeof n?n:+n,o):h},o.friction=function(n){return arguments.length?(s=+n,o):s},o.charge=function(n){return arguments.length?(g=&quot;function&quot;==typeof n?n:+n,o):g},o.gravity=function(n){return arguments.length?(p=+n,o):p},o.theta=function(n){return arguments.length?(m=+n,o):m},o.alpha=function(n){return arguments.length?(n=+n,r?r=n&gt;0?n:0:n&gt;0&amp;&amp;(c.start({type:&quot;start&quot;,alpha:r=n}),ya.timer(o.tick)),o):r},o.start=function(){function n(n,r){for(var i,u=t(e),a=-1,o=u.length;++a&lt;o;)if(!isNaN(i=u[a][n]))return i;return Math.random()*r}function t(){if(!c){for(c=[],r=0;p&gt;r;++r)c[r]=[];for(r=0;m&gt;r;++r){var n=v[r];c[n.source.index].push(n.target),c[n.target.index].push(n.source)}}return c[e]}var e,r,c,s,p=d.length,m=v.length,y=l[0],M=l[1];for(e=0;p&gt;e;++e)(s=d[e]).index=e,s.weight=0;for(e=0;m&gt;e;++e)s=v[e],&quot;number&quot;==typeof s.source&amp;&amp;(s.source=d[s.source]),&quot;number&quot;==typeof s.target&amp;&amp;(s.target=d[s.target]),++s.source.weight,++s.target.weight;for(e=0;p&gt;e;++e)s=d[e],isNaN(s.x)&amp;&amp;(s.x=n(&quot;x&quot;,y)),isNaN(s.y)&amp;&amp;(s.y=n(&quot;y&quot;,M)),isNaN(s.px)&amp;&amp;(s.px=s.x),isNaN(s.py)&amp;&amp;(s.py=s.y);if(i=[],&quot;function&quot;==typeof f)for(e=0;m&gt;e;++e)i[e]=+f.call(this,v[e],e);else for(e=0;m&gt;e;++e)i[e]=f;if(u=[],&quot;function&quot;==typeof h)for(e=0;m&gt;e;++e)u[e]=+h.call(this,v[e],e);else for(e=0;m&gt;e;++e)u[e]=h;if(a=[],&quot;function&quot;==typeof g)for(e=0;p&gt;e;++e)a[e]=+g.call(this,d[e],e);else for(e=0;p&gt;e;++e)a[e]=g;return o.resume()},o.resume=function(){return o.alpha(.1)},o.stop=function(){return o.alpha(0)},o.drag=function(){return e||(e=ya.behavior.drag().origin(mt).on(&quot;dragstart.force&quot;,Qr).on(&quot;drag.force&quot;,t).on(&quot;dragend.force&quot;,ni)),arguments.length?(this.on(&quot;mouseover.force&quot;,ti).on(&quot;mouseout.force&quot;,ei).call(e),void 0):e},ya.rebind(o,c,&quot;on&quot;)};var bc=20,_c=1;ya.layout.hierarchy=function(){function n(t,a,o){var c=i.call(e,t,a);if(t.depth=a,o.push(t),c&amp;&amp;(l=c.length)){for(var l,s,f=-1,h=t.children=[],g=0,p=a+1;++f&lt;l;)s=n(c[f],p,o),s.parent=t,h.push(s),g+=s.value;r&amp;&amp;h.sort(r),u&amp;&amp;(t.value=g)}else u&amp;&amp;(t.value=+u.call(e,t,a)||0);return t}function t(n,r){var i=n.children,a=0;if(i&amp;&amp;(o=i.length))for(var o,c=-1,l=r+1;++c&lt;o;)a+=t(i[c],l);else u&amp;&amp;(a=+u.call(e,n,r)||0);return u&amp;&amp;(n.value=a),a}function e(t){var e=[];return n(t,0,e),e}var r=oi,i=ui,u=ai;return e.sort=function(n){return arguments.length?(r=n,e):r},e.children=function(n){return arguments.length?(i=n,e):i},e.value=function(n){return arguments.length?(u=n,e):u},e.revalue=function(n){return t(n,0),n},e},ya.layout.partition=function(){function n(t,e,r,i){var u=t.children;if(t.x=e,t.y=t.depth*i,t.dx=r,t.dy=i,u&amp;&amp;(a=u.length)){var a,o,c,l=-1;for(r=t.value?r/t.value:0;++l&lt;a;)n(o=u[l],e,c=o.value*r,i),e+=c}}function t(n){var e=n.children,r=0;if(e&amp;&amp;(i=e.length))for(var i,u=-1;++u&lt;i;)r=Math.max(r,t(e[u]));return 1+r}function e(e,u){var a=r.call(this,e,u);return n(a[0],0,i[0],i[1]/t(a[0])),a}var r=ya.layout.hierarchy(),i=[1,1];return e.size=function(n){return arguments.length?(i=n,e):i},ii(e,r)},ya.layout.pie=function(){function n(u){var a=u.map(function(e,r){return+t.call(n,e,r)}),o=+(&quot;function&quot;==typeof r?r.apply(this,arguments):r),c=((&quot;function&quot;==typeof i?i.apply(this,arguments):i)-o)/ya.sum(a),l=ya.range(u.length);null!=e&amp;&amp;l.sort(e===wc?function(n,t){return a[t]-a[n]}:function(n,t){return e(u[n],u[t])});var s=[];return l.forEach(function(n){var t;s[n]={data:u[n],value:t=a[n],startAngle:o,endAngle:o+=t*c}}),s}var t=Number,e=wc,r=0,i=2*Ka;return n.value=function(e){return arguments.length?(t=e,n):t},n.sort=function(t){return arguments.length?(e=t,n):e},n.startAngle=function(t){return arguments.length?(r=t,n):r},n.endAngle=function(t){return arguments.length?(i=t,n):i},n};var wc={};ya.layout.stack=function(){function n(o,c){var l=o.map(function(e,r){return t.call(n,e,r)}),s=l.map(function(t){return t.map(function(t,e){return[u.call(n,t,e),a.call(n,t,e)]})}),f=e.call(n,s,c);l=ya.permute(l,f),s=ya.permute(s,f);var h,g,p,m=r.call(n,s,c),d=l.length,v=l[0].length;for(g=0;v&gt;g;++g)for(i.call(n,l[0][g],p=m[g],s[0][g][1]),h=1;d&gt;h;++h)i.call(n,l[h][g],p+=s[h-1][g][1],s[h][g][1]);return o}var t=mt,e=hi,r=gi,i=fi,u=li,a=si;return n.values=function(e){return arguments.length?(t=e,n):t},n.order=function(t){return arguments.length?(e=&quot;function&quot;==typeof t?t:Sc.get(t)||hi,n):e},n.offset=function(t){return arguments.length?(r=&quot;function&quot;==typeof t?t:Ec.get(t)||gi,n):r},n.x=function(t){return arguments.length?(u=t,n):u},n.y=function(t){return arguments.length?(a=t,n):a},n.out=function(t){return arguments.length?(i=t,n):i},n};var Sc=ya.map({&quot;inside-out&quot;:function(n){var t,e,r=n.length,i=n.map(pi),u=n.map(mi),a=ya.range(r).sort(function(n,t){return i[n]-i[t]}),o=0,c=0,l=[],s=[];for(t=0;r&gt;t;++t)e=a[t],c&gt;o?(o+=u[e],l.push(e)):(c+=u[e],s.push(e));return s.reverse().concat(l)},reverse:function(n){return ya.range(n.length).reverse()},&quot;default&quot;:hi}),Ec=ya.map({silhouette:function(n){var t,e,r,i=n.length,u=n[0].length,a=[],o=0,c=[];for(e=0;u&gt;e;++e){for(t=0,r=0;i&gt;t;t++)r+=n[t][e][1];r&gt;o&amp;&amp;(o=r),a.push(r)}for(e=0;u&gt;e;++e)c[e]=(o-a[e])/2;return c},wiggle:function(n){var t,e,r,i,u,a,o,c,l,s=n.length,f=n[0],h=f.length,g=[];for(g[0]=c=l=0,e=1;h&gt;e;++e){for(t=0,i=0;s&gt;t;++t)i+=n[t][e][1];for(t=0,u=0,o=f[e][0]-f[e-1][0];s&gt;t;++t){for(r=0,a=(n[t][e][1]-n[t][e-1][1])/(2*o);t&gt;r;++r)a+=(n[r][e][1]-n[r][e-1][1])/o;u+=a*n[t][e][1]}g[e]=c-=i?u/i*o:0,l&gt;c&amp;&amp;(l=c)}for(e=0;h&gt;e;++e)g[e]-=l;return g},expand:function(n){var t,e,r,i=n.length,u=n[0].length,a=1/i,o=[];for(e=0;u&gt;e;++e){for(t=0,r=0;i&gt;t;t++)r+=n[t][e][1];if(r)for(t=0;i&gt;t;t++)n[t][e][1]/=r;else for(t=0;i&gt;t;t++)n[t][e][1]=a}for(e=0;u&gt;e;++e)o[e]=0;return o},zero:gi});ya.layout.histogram=function(){function n(n,u){for(var a,o,c=[],l=n.map(e,this),s=r.call(this,l,u),f=i.call(this,s,l,u),u=-1,h=l.length,g=f.length-1,p=t?1:1/h;++u&lt;g;)a=c[u]=[],a.dx=f[u+1]-(a.x=f[u]),a.y=0;if(g&gt;0)for(u=-1;++u&lt;h;)o=l[u],o&gt;=s[0]&amp;&amp;o&lt;=s[1]&amp;&amp;(a=c[ya.bisect(f,o,1,g)-1],a.y+=p,a.push(n[u]));return c}var t=!0,e=Number,r=Mi,i=vi;return n.value=function(t){return arguments.length?(e=t,n):e},n.range=function(t){return arguments.length?(r=pt(t),n):r},n.bins=function(t){return arguments.length?(i=&quot;number&quot;==typeof t?function(n){return yi(n,t)}:pt(t),n):i},n.frequency=function(e){return arguments.length?(t=!!e,n):t},n},ya.layout.tree=function(){function n(n,u){function a(n,t){var r=n.children,i=n._tree;if(r&amp;&amp;(u=r.length)){for(var u,o,l,s=r[0],f=s,h=-1;++h&lt;u;)l=r[h],a(l,o),f=c(l,o,f),o=l;Ni(n);var g=.5*(s._tree.prelim+l._tree.prelim);t?(i.prelim=t._tree.prelim+e(n,t),i.mod=i.prelim-g):i.prelim=g}else t&amp;&amp;(i.prelim=t._tree.prelim+e(n,t))}function o(n,t){n.x=n._tree.prelim+t;var e=n.children;if(e&amp;&amp;(r=e.length)){var r,i=-1;for(t+=n._tree.mod;++i&lt;r;)o(e[i],t)}}function c(n,t,r){if(t){for(var i,u=n,a=n,o=t,c=n.parent.children[0],l=u._tree.mod,s=a._tree.mod,f=o._tree.mod,h=c._tree.mod;o=_i(o),u=bi(u),o&amp;&amp;u;)c=bi(c),a=_i(a),a._tree.ancestor=n,i=o._tree.prelim+f-u._tree.prelim-l+e(o,u),i&gt;0&amp;&amp;(qi(Ti(o,n,r),n,i),l+=i,s+=i),f+=o._tree.mod,l+=u._tree.mod,h+=c._tree.mod,s+=a._tree.mod;o&amp;&amp;!_i(a)&amp;&amp;(a._tree.thread=o,a._tree.mod+=f-s),u&amp;&amp;!bi(c)&amp;&amp;(c._tree.thread=u,c._tree.mod+=l-h,r=n)}return r}var l=t.call(this,n,u),s=l[0];Ai(s,function(n,t){n._tree={ancestor:n,prelim:0,mod:0,change:0,shift:0,number:t?t._tree.number+1:0}}),a(s),o(s,-s._tree.prelim);var f=wi(s,Ei),h=wi(s,Si),g=wi(s,ki),p=f.x-e(f,h)/2,m=h.x+e(h,f)/2,d=g.depth||1;return Ai(s,i?function(n){n.x*=r[0],n.y=n.depth*r[1],delete n._tree}:function(n){n.x=(n.x-p)/(m-p)*r[0],n.y=n.depth/d*r[1],delete n._tree}),l}var t=ya.layout.hierarchy().sort(null).value(null),e=xi,r=[1,1],i=!1;return n.separation=function(t){return arguments.length?(e=t,n):e},n.size=function(t){return arguments.length?(i=null==(r=t),n):i?null:r},n.nodeSize=function(t){return arguments.length?(i=null!=(r=t),n):i?r:null},ii(n,t)},ya.layout.pack=function(){function n(n,u){var a=e.call(this,n,u),o=a[0],c=i[0],l=i[1],s=null==t?Math.sqrt:&quot;function&quot;==typeof t?t:function(){return t};if(o.x=o.y=0,Ai(o,function(n){n.r=+s(n.value)}),Ai(o,Li),r){var f=r*(t?1:Math.max(2*o.r/c,2*o.r/l))/2;Ai(o,function(n){n.r+=f}),Ai(o,Li),Ai(o,function(n){n.r-=f})}return Pi(o,c/2,l/2,t?1:1/Math.max(2*o.r/c,2*o.r/l)),a}var t,e=ya.layout.hierarchy().sort(Ci),r=0,i=[1,1];return n.size=function(t){return arguments.length?(i=t,n):i},n.radius=function(e){return arguments.length?(t=null==e||&quot;function&quot;==typeof e?e:+e,n):t},n.padding=function(t){return arguments.length?(r=+t,n):r},ii(n,e)},ya.layout.cluster=function(){function n(n,u){var a,o=t.call(this,n,u),c=o[0],l=0;Ai(c,function(n){var t=n.children;t&amp;&amp;t.length?(n.x=Ri(t),n.y=Yi(t)):(n.x=a?l+=e(n,a):0,n.y=0,a=n)});var s=Ui(c),f=Ii(c),h=s.x-e(s,f)/2,g=f.x+e(f,s)/2;return Ai(c,i?function(n){n.x=(n.x-c.x)*r[0],n.y=(c.y-n.y)*r[1]}:function(n){n.x=(n.x-h)/(g-h)*r[0],n.y=(1-(c.y?n.y/c.y:1))*r[1]}),o}var t=ya.layout.hierarchy().sort(null).value(null),e=xi,r=[1,1],i=!1;return n.separation=function(t){return arguments.length?(e=t,n):e},n.size=function(t){return arguments.length?(i=null==(r=t),n):i?null:r},n.nodeSize=function(t){return arguments.length?(i=null!=(r=t),n):i?r:null},ii(n,t)},ya.layout.treemap=function(){function n(n,t){for(var e,r,i=-1,u=n.length;++i&lt;u;)r=(e=n[i]).value*(0&gt;t?0:t),e.area=isNaN(r)||0&gt;=r?0:r}function t(e){var u=e.children;if(u&amp;&amp;u.length){var a,o,c,l=f(e),s=[],h=u.slice(),p=1/0,m=&quot;slice&quot;===g?l.dx:&quot;dice&quot;===g?l.dy:&quot;slice-dice&quot;===g?1&amp;e.depth?l.dy:l.dx:Math.min(l.dx,l.dy);for(n(h,l.dx*l.dy/e.value),s.area=0;(c=h.length)&gt;0;)s.push(a=h[c-1]),s.area+=a.area,&quot;squarify&quot;!==g||(o=r(s,m))&lt;=p?(h.pop(),p=o):(s.area-=s.pop().area,i(s,m,l,!1),m=Math.min(l.dx,l.dy),s.length=s.area=0,p=1/0);s.length&amp;&amp;(i(s,m,l,!0),s.length=s.area=0),u.forEach(t)}}function e(t){var r=t.children;if(r&amp;&amp;r.length){var u,a=f(t),o=r.slice(),c=[];for(n(o,a.dx*a.dy/t.value),c.area=0;u=o.pop();)c.push(u),c.area+=u.area,null!=u.z&amp;&amp;(i(c,u.z?a.dx:a.dy,a,!o.length),c.length=c.area=0);r.forEach(e)}}function r(n,t){for(var e,r=n.area,i=0,u=1/0,a=-1,o=n.length;++a&lt;o;)(e=n[a].area)&amp;&amp;(u&gt;e&amp;&amp;(u=e),e&gt;i&amp;&amp;(i=e));return r*=r,t*=t,r?Math.max(t*i*p/r,r/(t*u*p)):1/0}function i(n,t,e,r){var i,u=-1,a=n.length,o=e.x,l=e.y,s=t?c(n.area/t):0;if(t==e.dx){for((r||s&gt;e.dy)&amp;&amp;(s=e.dy);++u&lt;a;)i=n[u],i.x=o,i.y=l,i.dy=s,o+=i.dx=Math.min(e.x+e.dx-o,s?c(i.area/s):0);i.z=!0,i.dx+=e.x+e.dx-o,e.y+=s,e.dy-=s}else{for((r||s&gt;e.dx)&amp;&amp;(s=e.dx);++u&lt;a;)i=n[u],i.x=o,i.y=l,i.dx=s,l+=i.dy=Math.min(e.y+e.dy-l,s?c(i.area/s):0);i.z=!1,i.dy+=e.y+e.dy-l,e.x+=s,e.dx-=s}}function u(r){var i=a||o(r),u=i[0];return u.x=0,u.y=0,u.dx=l[0],u.dy=l[1],a&amp;&amp;o.revalue(u),n([u],u.dx*u.dy/u.value),(a?e:t)(u),h&amp;&amp;(a=i),i}var a,o=ya.layout.hierarchy(),c=Math.round,l=[1,1],s=null,f=Vi,h=!1,g=&quot;squarify&quot;,p=.5*(1+Math.sqrt(5));return u.size=function(n){return arguments.length?(l=n,u):l},u.padding=function(n){function t(t){var e=n.call(u,t,t.depth);return null==e?Vi(t):Xi(t,&quot;number&quot;==typeof e?[e,e,e,e]:e)}function e(t){return Xi(t,n)}if(!arguments.length)return s;var r;return f=null==(s=n)?Vi:&quot;function&quot;==(r=typeof n)?t:&quot;number&quot;===r?(n=[n,n,n,n],e):e,u},u.round=function(n){return arguments.length?(c=n?Math.round:Number,u):c!=Number},u.sticky=function(n){return arguments.length?(h=n,a=null,u):h},u.ratio=function(n){return arguments.length?(p=n,u):p},u.mode=function(n){return arguments.length?(g=n+&quot;&quot;,u):g},ii(u,o)},ya.random={normal:function(n,t){var e=arguments.length;return 2&gt;e&amp;&amp;(t=1),1&gt;e&amp;&amp;(n=0),function(){var e,r,i;do e=2*Math.random()-1,r=2*Math.random()-1,i=e*e+r*r;while(!i||i&gt;1);return n+t*e*Math.sqrt(-2*Math.log(i)/i)}},logNormal:function(){var n=ya.random.normal.apply(ya,arguments);return function(){return Math.exp(n())}},irwinHall:function(n){return function(){for(var t=0,e=0;n&gt;e;e++)t+=Math.random();return t/n}}},ya.scale={};var kc={floor:mt,ceil:mt};ya.scale.linear=function(){return Ki([0,1],[0,1],Sr,!1)},ya.scale.log=function(){return uu(ya.scale.linear().domain([0,1]),10,!0,[1,10])};var Ac=ya.format(&quot;.0e&quot;),Nc={floor:function(n){return-Math.ceil(-n)},ceil:function(n){return-Math.floor(-n)}};ya.scale.pow=function(){return au(ya.scale.linear(),1,[0,1])},ya.scale.sqrt=function(){return ya.scale.pow().exponent(.5)},ya.scale.ordinal=function(){return cu([],{t:&quot;range&quot;,a:[[]]})},ya.scale.category10=function(){return ya.scale.ordinal().range(qc)},ya.scale.category20=function(){return ya.scale.ordinal().range(Tc)},ya.scale.category20b=function(){return ya.scale.ordinal().range(Cc)},ya.scale.category20c=function(){return ya.scale.ordinal().range(zc)};var qc=[2062260,16744206,2924588,14034728,9725885,9197131,14907330,8355711,12369186,1556175].map(ut),Tc=[2062260,11454440,16744206,16759672,2924588,10018698,14034728,16750742,9725885,12955861,9197131,12885140,14907330,16234194,8355711,13092807,12369186,14408589,1556175,10410725].map(ut),Cc=[3750777,5395619,7040719,10264286,6519097,9216594,11915115,13556636,9202993,12426809,15186514,15190932,8666169,11356490,14049643,15177372,8077683,10834324,13528509,14589654].map(ut),zc=[3244733,7057110,10406625,13032431,15095053,16616764,16625259,16634018,3253076,7652470,10607003,13101504,7695281,10394312,12369372,14342891,6513507,9868950,12434877,14277081].map(ut);ya.scale.quantile=function(){return lu([],[])},ya.scale.quantize=function(){return su(0,1,[0,1])},ya.scale.threshold=function(){return fu([.5],[0,1])},ya.scale.identity=function(){return hu([0,1])},ya.svg.arc=function(){function n(){var n=t.apply(this,arguments),u=e.apply(this,arguments),a=r.apply(this,arguments)+Dc,o=i.apply(this,arguments)+Dc,c=(a&gt;o&amp;&amp;(c=a,a=o,o=c),o-a),l=Ka&gt;c?&quot;0&quot;:&quot;1&quot;,s=Math.cos(a),f=Math.sin(a),h=Math.cos(o),g=Math.sin(o);return c&gt;=jc?n?&quot;M0,&quot;+u+&quot;A&quot;+u+&quot;,&quot;+u+&quot; 0 1,1 0,&quot;+-u+&quot;A&quot;+u+&quot;,&quot;+u+&quot; 0 1,1 0,&quot;+u+&quot;M0,&quot;+n+&quot;A&quot;+n+&quot;,&quot;+n+&quot; 0 1,0 0,&quot;+-n+&quot;A&quot;+n+&quot;,&quot;+n+&quot; 0 1,0 0,&quot;+n+&quot;Z&quot;:&quot;M0,&quot;+u+&quot;A&quot;+u+&quot;,&quot;+u+&quot; 0 1,1 0,&quot;+-u+&quot;A&quot;+u+&quot;,&quot;+u+&quot; 0 1,1 0,&quot;+u+&quot;Z&quot;:n?&quot;M&quot;+u*s+&quot;,&quot;+u*f+&quot;A&quot;+u+&quot;,&quot;+u+&quot; 0 &quot;+l+&quot;,1 &quot;+u*h+&quot;,&quot;+u*g+&quot;L&quot;+n*h+&quot;,&quot;+n*g+&quot;A&quot;+n+&quot;,&quot;+n+&quot; 0 &quot;+l+&quot;,0 &quot;+n*s+&quot;,&quot;+n*f+&quot;Z&quot;:&quot;M&quot;+u*s+&quot;,&quot;+u*f+&quot;A&quot;+u+&quot;,&quot;+u+&quot; 0 &quot;+l+&quot;,1 &quot;+u*h+&quot;,&quot;+u*g+&quot;L0,0&quot;+&quot;Z&quot;}var t=gu,e=pu,r=mu,i=du;return n.innerRadius=function(e){return arguments.length?(t=pt(e),n):t},n.outerRadius=function(t){return arguments.length?(e=pt(t),n):e},n.startAngle=function(t){return arguments.length?(r=pt(t),n):r},n.endAngle=function(t){return arguments.length?(i=pt(t),n):i},n.centroid=function(){var n=(t.apply(this,arguments)+e.apply(this,arguments))/2,u=(r.apply(this,arguments)+i.apply(this,arguments))/2+Dc;return[Math.cos(u)*n,Math.sin(u)*n]},n};var Dc=-Ka/2,jc=2*Ka-1e-6;ya.svg.line.radial=function(){var n=Ue(vu);return n.radius=n.x,delete n.x,n.angle=n.y,delete n.y,n},$e.reverse=We,We.reverse=$e,ya.svg.area=function(){return yu(mt)},ya.svg.area.radial=function(){var n=yu(vu);return n.radius=n.x,delete n.x,n.innerRadius=n.x0,delete n.x0,n.outerRadius=n.x1,delete n.x1,n.angle=n.y,delete n.y,n.startAngle=n.y0,delete n.y0,n.endAngle=n.y1,delete n.y1,n},ya.svg.chord=function(){function n(n,o){var c=t(this,u,n,o),l=t(this,a,n,o);return&quot;M&quot;+c.p0+r(c.r,c.p1,c.a1-c.a0)+(e(c,l)?i(c.r,c.p1,c.r,c.p0):i(c.r,c.p1,l.r,l.p0)+r(l.r,l.p1,l.a1-l.a0)+i(l.r,l.p1,c.r,c.p0))+&quot;Z&quot;}function t(n,t,e,r){var i=t.call(n,e,r),u=o.call(n,i,r),a=c.call(n,i,r)+Dc,s=l.call(n,i,r)+Dc;return{r:u,a0:a,a1:s,p0:[u*Math.cos(a),u*Math.sin(a)],p1:[u*Math.cos(s),u*Math.sin(s)]}}function e(n,t){return n.a0==t.a0&amp;&amp;n.a1==t.a1}function r(n,t,e){return&quot;A&quot;+n+&quot;,&quot;+n+&quot; 0 &quot;+ +(e&gt;Ka)+&quot;,1 &quot;+t}function i(n,t,e,r){return&quot;Q 0,0 &quot;+r}var u=ze,a=De,o=Mu,c=mu,l=du;return n.radius=function(t){return arguments.length?(o=pt(t),n):o},n.source=function(t){return arguments.length?(u=pt(t),n):u},n.target=function(t){return arguments.length?(a=pt(t),n):a},n.startAngle=function(t){return arguments.length?(c=pt(t),n):c},n.endAngle=function(t){return arguments.length?(l=pt(t),n):l},n},ya.svg.diagonal=function(){function n(n,i){var u=t.call(this,n,i),a=e.call(this,n,i),o=(u.y+a.y)/2,c=[u,{x:u.x,y:o},{x:a.x,y:o},a];return c=c.map(r),&quot;M&quot;+c[0]+&quot;C&quot;+c[1]+&quot; &quot;+c[2]+&quot; &quot;+c[3]}var t=ze,e=De,r=xu;return n.source=function(e){return arguments.length?(t=pt(e),n):t},n.target=function(t){return arguments.length?(e=pt(t),n):e},n.projection=function(t){return arguments.length?(r=t,n):r},n},ya.svg.diagonal.radial=function(){var n=ya.svg.diagonal(),t=xu,e=n.projection;return n.projection=function(n){return arguments.length?e(bu(t=n)):t},n},ya.svg.symbol=function(){function n(n,r){return(Lc.get(t.call(this,n,r))||Su)(e.call(this,n,r))}var t=wu,e=_u;return n.type=function(e){return arguments.length?(t=pt(e),n):t},n.size=function(t){return arguments.length?(e=pt(t),n):e},n};var Lc=ya.map({circle:Su,cross:function(n){var t=Math.sqrt(n/5)/2;return&quot;M&quot;+-3*t+&quot;,&quot;+-t+&quot;H&quot;+-t+&quot;V&quot;+-3*t+&quot;H&quot;+t+&quot;V&quot;+-t+&quot;H&quot;+3*t+&quot;V&quot;+t+&quot;H&quot;+t+&quot;V&quot;+3*t+&quot;H&quot;+-t+&quot;V&quot;+t+&quot;H&quot;+-3*t+&quot;Z&quot;},diamond:function(n){var t=Math.sqrt(n/(2*Oc)),e=t*Oc;return&quot;M0,&quot;+-t+&quot;L&quot;+e+&quot;,0&quot;+&quot; 0,&quot;+t+&quot; &quot;+-e+&quot;,0&quot;+&quot;Z&quot;},square:function(n){var t=Math.sqrt(n)/2;return&quot;M&quot;+-t+&quot;,&quot;+-t+&quot;L&quot;+t+&quot;,&quot;+-t+&quot; &quot;+t+&quot;,&quot;+t+&quot; &quot;+-t+&quot;,&quot;+t+&quot;Z&quot;},&quot;triangle-down&quot;:function(n){var t=Math.sqrt(n/Pc),e=t*Pc/2;return&quot;M0,&quot;+e+&quot;L&quot;+t+&quot;,&quot;+-e+&quot; &quot;+-t+&quot;,&quot;+-e+&quot;Z&quot;},&quot;triangle-up&quot;:function(n){var t=Math.sqrt(n/Pc),e=t*Pc/2;return&quot;M0,&quot;+-e+&quot;L&quot;+t+&quot;,&quot;+e+&quot; &quot;+-t+&quot;,&quot;+e+&quot;Z&quot;}});ya.svg.symbolTypes=Lc.keys();var Hc,Fc,Pc=Math.sqrt(3),Oc=Math.tan(30*to),Yc=[],Rc=0;Yc.call=Ya.call,Yc.empty=Ya.empty,Yc.node=Ya.node,Yc.size=Ya.size,ya.transition=function(n){return arguments.length?Hc?n.transition():n:Ia.transition()},ya.transition.prototype=Yc,Yc.select=function(n){var t,e,r,i=this.id,u=[];n=v(n);for(var a=-1,o=this.length;++a&lt;o;){u.push(t=[]);for(var c=this[a],l=-1,s=c.length;++l&lt;s;)(r=c[l])&amp;&amp;(e=n.call(r,r.__data__,l,a))?(&quot;__data__&quot;in r&amp;&amp;(e.__data__=r.__data__),Nu(e,l,i,r.__transition__[i]),t.push(e)):t.push(null)}return Eu(u,i)},Yc.selectAll=function(n){var t,e,r,i,u,a=this.id,o=[];n=y(n);for(var c=-1,l=this.length;++c&lt;l;)for(var s=this[c],f=-1,h=s.length;++f&lt;h;)if(r=s[f]){u=r.__transition__[a],e=n.call(r,r.__data__,f,c),o.push(t=[]);for(var g=-1,p=e.length;++g&lt;p;)(i=e[g])&amp;&amp;Nu(i,g,a,u),t.push(i)}return Eu(o,a)},Yc.filter=function(n){var t,e,r,i=[];&quot;function&quot;!=typeof n&amp;&amp;(n=N(n));for(var u=0,a=this.length;a&gt;u;u++){i.push(t=[]);for(var e=this[u],o=0,c=e.length;c&gt;o;o++)(r=e[o])&amp;&amp;n.call(r,r.__data__,o)&amp;&amp;t.push(r)}return Eu(i,this.id)},Yc.tween=function(n,t){var e=this.id;return arguments.length&lt;2?this.node().__transition__[e].tween.get(n):T(this,null==t?function(t){t.__transition__[e].tween.remove(n)}:function(r){r.__transition__[e].tween.set(n,t)})},Yc.attr=function(n,t){function e(){this.removeAttribute(o)}function r(){this.removeAttributeNS(o.space,o.local)}function i(n){return null==n?e:(n+=&quot;&quot;,function(){var t,e=this.getAttribute(o);return e!==n&amp;&amp;(t=a(e,n),function(n){this.setAttribute(o,t(n))})})}function u(n){return null==n?r:(n+=&quot;&quot;,function(){var t,e=this.getAttributeNS(o.space,o.local);return e!==n&amp;&amp;(t=a(e,n),function(n){this.setAttributeNS(o.space,o.local,t(n))})})}if(arguments.length&lt;2){for(t in n)this.attr(t,n[t]);return this}var a=&quot;transform&quot;==n?Br:Sr,o=ya.ns.qualify(n);return ku(this,&quot;attr.&quot;+n,t,o.local?u:i)},Yc.attrTween=function(n,t){function e(n,e){var r=t.call(this,n,e,this.getAttribute(i));return r&amp;&amp;function(n){this.setAttribute(i,r(n))}}function r(n,e){var r=t.call(this,n,e,this.getAttributeNS(i.space,i.local));return r&amp;&amp;function(n){this.setAttributeNS(i.space,i.local,r(n))}}var i=ya.ns.qualify(n);return this.tween(&quot;attr.&quot;+n,i.local?r:e)},Yc.style=function(n,t,e){function r(){this.style.removeProperty(n)}function i(t){return null==t?r:(t+=&quot;&quot;,function(){var r,i=ba.getComputedStyle(this,null).getPropertyValue(n);return i!==t&amp;&amp;(r=Sr(i,t),function(t){this.style.setProperty(n,r(t),e)})})}var u=arguments.length;if(3&gt;u){if(&quot;string&quot;!=typeof n){2&gt;u&amp;&amp;(t=&quot;&quot;);for(e in n)this.style(e,n[e],t);return this}e=&quot;&quot;}return ku(this,&quot;style.&quot;+n,t,i)},Yc.styleTween=function(n,t,e){function r(r,i){var u=t.call(this,r,i,ba.getComputedStyle(this,null).getPropertyValue(n));return u&amp;&amp;function(t){this.style.setProperty(n,u(t),e)}}return arguments.length&lt;3&amp;&amp;(e=&quot;&quot;),this.tween(&quot;style.&quot;+n,r)},Yc.text=function(n){return ku(this,&quot;text&quot;,n,Au)},Yc.remove=function(){return this.each(&quot;end.transition&quot;,function(){var n;!this.__transition__&amp;&amp;(n=this.parentNode)&amp;&amp;n.removeChild(this)})},Yc.ease=function(n){var t=this.id;return arguments.length&lt;1?this.node().__transition__[t].ease:(&quot;function&quot;!=typeof n&amp;&amp;(n=ya.ease.apply(ya,arguments)),T(this,function(e){e.__transition__[t].ease=n}))},Yc.delay=function(n){var t=this.id;return T(this,&quot;function&quot;==typeof n?function(e,r,i){e.__transition__[t].delay=0|n.call(e,e.__data__,r,i)}:(n|=0,function(e){e.__transition__[t].delay=n}))},Yc.duration=function(n){var t=this.id;return T(this,&quot;function&quot;==typeof n?function(e,r,i){e.__transition__[t].duration=Math.max(1,0|n.call(e,e.__data__,r,i))}:(n=Math.max(1,0|n),function(e){e.__transition__[t].duration=n}))},Yc.each=function(n,t){var e=this.id;if(arguments.length&lt;2){var r=Fc,i=Hc;Hc=e,T(this,function(t,r,i){Fc=t.__transition__[e],n.call(t,t.__data__,r,i)}),Fc=r,Hc=i}else T(this,function(r){var i=r.__transition__[e];(i.event||(i.event=ya.dispatch(&quot;start&quot;,&quot;end&quot;))).on(n,t)});return this},Yc.transition=function(){for(var n,t,e,r,i=this.id,u=++Rc,a=[],o=0,c=this.length;c&gt;o;o++){a.push(n=[]);for(var t=this[o],l=0,s=t.length;s&gt;l;l++)(e=t[l])&amp;&amp;(r=Object.create(e.__transition__[i]),r.delay+=r.duration,Nu(e,l,u,r)),n.push(e)}return Eu(a,u)},ya.svg.axis=function(){function n(n){n.each(function(){var n,f=ya.select(this),h=null==l?e.ticks?e.ticks.apply(e,c):e.domain():l,g=null==t?e.tickFormat?e.tickFormat.apply(e,c):String:t,p=Cu(e,h,s),m=f.selectAll(&quot;.tick.minor&quot;).data(p,String),d=m.enter().insert(&quot;line&quot;,&quot;.tick&quot;).attr(&quot;class&quot;,&quot;tick minor&quot;).style(&quot;opacity&quot;,1e-6),v=ya.transition(m.exit()).style(&quot;opacity&quot;,1e-6).remove(),y=ya.transition(m).style(&quot;opacity&quot;,1),M=f.selectAll(&quot;.tick.major&quot;).data(h,String),x=M.enter().insert(&quot;g&quot;,&quot;.domain&quot;).attr(&quot;class&quot;,&quot;tick major&quot;).style(&quot;opacity&quot;,1e-6),b=ya.transition(M.exit()).style(&quot;opacity&quot;,1e-6).remove(),_=ya.transition(M).style(&quot;opacity&quot;,1),w=Bi(e),S=f.selectAll(&quot;.domain&quot;).data([0]),E=(S.enter().append(&quot;path&quot;).attr(&quot;class&quot;,&quot;domain&quot;),ya.transition(S)),k=e.copy(),A=this.__chart__||k;</div><div class='line' id='LC15013'>this.__chart__=k,x.append(&quot;line&quot;),x.append(&quot;text&quot;);var N=x.select(&quot;line&quot;),q=_.select(&quot;line&quot;),T=M.select(&quot;text&quot;).text(g),C=x.select(&quot;text&quot;),z=_.select(&quot;text&quot;);switch(r){case&quot;bottom&quot;:n=qu,d.attr(&quot;y2&quot;,u),y.attr(&quot;x2&quot;,0).attr(&quot;y2&quot;,u),N.attr(&quot;y2&quot;,i),C.attr(&quot;y&quot;,Math.max(i,0)+o),q.attr(&quot;x2&quot;,0).attr(&quot;y2&quot;,i),z.attr(&quot;x&quot;,0).attr(&quot;y&quot;,Math.max(i,0)+o),T.attr(&quot;dy&quot;,&quot;.71em&quot;).style(&quot;text-anchor&quot;,&quot;middle&quot;),E.attr(&quot;d&quot;,&quot;M&quot;+w[0]+&quot;,&quot;+a+&quot;V0H&quot;+w[1]+&quot;V&quot;+a);break;case&quot;top&quot;:n=qu,d.attr(&quot;y2&quot;,-u),y.attr(&quot;x2&quot;,0).attr(&quot;y2&quot;,-u),N.attr(&quot;y2&quot;,-i),C.attr(&quot;y&quot;,-(Math.max(i,0)+o)),q.attr(&quot;x2&quot;,0).attr(&quot;y2&quot;,-i),z.attr(&quot;x&quot;,0).attr(&quot;y&quot;,-(Math.max(i,0)+o)),T.attr(&quot;dy&quot;,&quot;0em&quot;).style(&quot;text-anchor&quot;,&quot;middle&quot;),E.attr(&quot;d&quot;,&quot;M&quot;+w[0]+&quot;,&quot;+-a+&quot;V0H&quot;+w[1]+&quot;V&quot;+-a);break;case&quot;left&quot;:n=Tu,d.attr(&quot;x2&quot;,-u),y.attr(&quot;x2&quot;,-u).attr(&quot;y2&quot;,0),N.attr(&quot;x2&quot;,-i),C.attr(&quot;x&quot;,-(Math.max(i,0)+o)),q.attr(&quot;x2&quot;,-i).attr(&quot;y2&quot;,0),z.attr(&quot;x&quot;,-(Math.max(i,0)+o)).attr(&quot;y&quot;,0),T.attr(&quot;dy&quot;,&quot;.32em&quot;).style(&quot;text-anchor&quot;,&quot;end&quot;),E.attr(&quot;d&quot;,&quot;M&quot;+-a+&quot;,&quot;+w[0]+&quot;H0V&quot;+w[1]+&quot;H&quot;+-a);break;case&quot;right&quot;:n=Tu,d.attr(&quot;x2&quot;,u),y.attr(&quot;x2&quot;,u).attr(&quot;y2&quot;,0),N.attr(&quot;x2&quot;,i),C.attr(&quot;x&quot;,Math.max(i,0)+o),q.attr(&quot;x2&quot;,i).attr(&quot;y2&quot;,0),z.attr(&quot;x&quot;,Math.max(i,0)+o).attr(&quot;y&quot;,0),T.attr(&quot;dy&quot;,&quot;.32em&quot;).style(&quot;text-anchor&quot;,&quot;start&quot;),E.attr(&quot;d&quot;,&quot;M&quot;+a+&quot;,&quot;+w[0]+&quot;H0V&quot;+w[1]+&quot;H&quot;+a)}if(e.rangeBand){var D=k.rangeBand()/2,j=function(n){return k(n)+D};x.call(n,j),_.call(n,j)}else x.call(n,A),_.call(n,k),b.call(n,k),d.call(n,A),y.call(n,k),v.call(n,k)})}var t,e=ya.scale.linear(),r=Uc,i=6,u=6,a=6,o=3,c=[10],l=null,s=0;return n.scale=function(t){return arguments.length?(e=t,n):e},n.orient=function(t){return arguments.length?(r=t in Ic?t+&quot;&quot;:Uc,n):r},n.ticks=function(){return arguments.length?(c=arguments,n):c},n.tickValues=function(t){return arguments.length?(l=t,n):l},n.tickFormat=function(e){return arguments.length?(t=e,n):t},n.tickSize=function(t,e){if(!arguments.length)return i;var r=arguments.length-1;return i=+t,u=r&gt;1?+e:i,a=r&gt;0?+arguments[r]:i,n},n.tickPadding=function(t){return arguments.length?(o=+t,n):o},n.tickSubdivide=function(t){return arguments.length?(s=+t,n):s},n};var Uc=&quot;bottom&quot;,Ic={top:1,right:1,bottom:1,left:1};ya.svg.brush=function(){function n(u){u.each(function(){var u,a=ya.select(this),s=a.selectAll(&quot;.background&quot;).data([0]),f=a.selectAll(&quot;.extent&quot;).data([0]),h=a.selectAll(&quot;.resize&quot;).data(l,String);a.style(&quot;pointer-events&quot;,&quot;all&quot;).on(&quot;mousedown.brush&quot;,i).on(&quot;touchstart.brush&quot;,i),s.enter().append(&quot;rect&quot;).attr(&quot;class&quot;,&quot;background&quot;).style(&quot;visibility&quot;,&quot;hidden&quot;).style(&quot;cursor&quot;,&quot;crosshair&quot;),f.enter().append(&quot;rect&quot;).attr(&quot;class&quot;,&quot;extent&quot;).style(&quot;cursor&quot;,&quot;move&quot;),h.enter().append(&quot;g&quot;).attr(&quot;class&quot;,function(n){return&quot;resize &quot;+n}).style(&quot;cursor&quot;,function(n){return Vc[n]}).append(&quot;rect&quot;).attr(&quot;x&quot;,function(n){return/[ew]$/.test(n)?-3:null}).attr(&quot;y&quot;,function(n){return/^[ns]/.test(n)?-3:null}).attr(&quot;width&quot;,6).attr(&quot;height&quot;,6).style(&quot;visibility&quot;,&quot;hidden&quot;),h.style(&quot;display&quot;,n.empty()?&quot;none&quot;:null),h.exit().remove(),o&amp;&amp;(u=Bi(o),s.attr(&quot;x&quot;,u[0]).attr(&quot;width&quot;,u[1]-u[0]),e(a)),c&amp;&amp;(u=Bi(c),s.attr(&quot;y&quot;,u[0]).attr(&quot;height&quot;,u[1]-u[0]),r(a)),t(a)})}function t(n){n.selectAll(&quot;.resize&quot;).attr(&quot;transform&quot;,function(n){return&quot;translate(&quot;+s[+/e$/.test(n)][0]+&quot;,&quot;+s[+/^s/.test(n)][1]+&quot;)&quot;})}function e(n){n.select(&quot;.extent&quot;).attr(&quot;x&quot;,s[0][0]),n.selectAll(&quot;.extent,.n&gt;rect,.s&gt;rect&quot;).attr(&quot;width&quot;,s[1][0]-s[0][0])}function r(n){n.select(&quot;.extent&quot;).attr(&quot;y&quot;,s[0][1]),n.selectAll(&quot;.extent,.e&gt;rect,.w&gt;rect&quot;).attr(&quot;height&quot;,s[1][1]-s[0][1])}function i(){function i(){var n=ya.event.changedTouches;return n?ya.touches(M,n)[0]:ya.mouse(M)}function l(){32==ya.event.keyCode&amp;&amp;(k||(v=null,N[0]-=s[1][0],N[1]-=s[1][1],k=2),g())}function h(){32==ya.event.keyCode&amp;&amp;2==k&amp;&amp;(N[0]+=s[1][0],N[1]+=s[1][1],k=0,g())}function p(){var n=i(),u=!1;y&amp;&amp;(n[0]+=y[0],n[1]+=y[1]),k||(ya.event.altKey?(v||(v=[(s[0][0]+s[1][0])/2,(s[0][1]+s[1][1])/2]),N[0]=s[+(n[0]&lt;v[0])][0],N[1]=s[+(n[1]&lt;v[1])][1]):v=null),S&amp;&amp;m(n,o,0)&amp;&amp;(e(_),u=!0),E&amp;&amp;m(n,c,1)&amp;&amp;(r(_),u=!0),u&amp;&amp;(t(_),b({type:&quot;brush&quot;,mode:k?&quot;move&quot;:&quot;resize&quot;}))}function m(n,t,e){var r,i,a=Bi(t),o=a[0],c=a[1],l=N[e],h=s[1][e]-s[0][e];return k&amp;&amp;(o-=l,c-=h+l),r=f[e]?Math.max(o,Math.min(c,n[e])):n[e],k?i=(r+=l)+h:(v&amp;&amp;(l=Math.max(o,Math.min(c,2*v[e]-r))),r&gt;l?(i=r,r=l):i=l),s[0][e]!==r||s[1][e]!==i?(u=null,s[0][e]=r,s[1][e]=i,!0):void 0}function d(){p(),_.style(&quot;pointer-events&quot;,&quot;all&quot;).selectAll(&quot;.resize&quot;).style(&quot;display&quot;,n.empty()?&quot;none&quot;:null),ya.select(&quot;body&quot;).style(&quot;cursor&quot;,null),q.on(&quot;mousemove.brush&quot;,null).on(&quot;mouseup.brush&quot;,null).on(&quot;touchmove.brush&quot;,null).on(&quot;touchend.brush&quot;,null).on(&quot;keydown.brush&quot;,null).on(&quot;keyup.brush&quot;,null),A(),b({type:&quot;brushend&quot;})}var v,y,M=this,x=ya.select(ya.event.target),b=a.of(M,arguments),_=ya.select(M),w=x.datum(),S=!/^(n|s)$/.test(w)&amp;&amp;o,E=!/^(e|w)$/.test(w)&amp;&amp;c,k=x.classed(&quot;extent&quot;),A=H(),N=i(),q=ya.select(ba).on(&quot;keydown.brush&quot;,l).on(&quot;keyup.brush&quot;,h);if(ya.event.changedTouches?q.on(&quot;touchmove.brush&quot;,p).on(&quot;touchend.brush&quot;,d):q.on(&quot;mousemove.brush&quot;,p).on(&quot;mouseup.brush&quot;,d),k)N[0]=s[0][0]-N[0],N[1]=s[0][1]-N[1];else if(w){var T=+/w$/.test(w),C=+/^n/.test(w);y=[s[1-T][0]-N[0],s[1-C][1]-N[1]],N[0]=s[T][0],N[1]=s[C][1]}else ya.event.altKey&amp;&amp;(v=N.slice());_.style(&quot;pointer-events&quot;,&quot;none&quot;).selectAll(&quot;.resize&quot;).style(&quot;display&quot;,null),ya.select(&quot;body&quot;).style(&quot;cursor&quot;,x.style(&quot;cursor&quot;)),b({type:&quot;brushstart&quot;}),p()}var u,a=m(n,&quot;brushstart&quot;,&quot;brush&quot;,&quot;brushend&quot;),o=null,c=null,l=Xc[0],s=[[0,0],[0,0]],f=[!0,!0];return n.x=function(t){return arguments.length?(o=t,l=Xc[!o&lt;&lt;1|!c],n):o},n.y=function(t){return arguments.length?(c=t,l=Xc[!o&lt;&lt;1|!c],n):c},n.clamp=function(t){return arguments.length?(o&amp;&amp;c?f=[!!t[0],!!t[1]]:(o||c)&amp;&amp;(f[+!o]=!!t),n):o&amp;&amp;c?f:o||c?f[+!o]:null},n.extent=function(t){var e,r,i,a,l;return arguments.length?(u=[[0,0],[0,0]],o&amp;&amp;(e=t[0],r=t[1],c&amp;&amp;(e=e[0],r=r[0]),u[0][0]=e,u[1][0]=r,o.invert&amp;&amp;(e=o(e),r=o(r)),e&gt;r&amp;&amp;(l=e,e=r,r=l),s[0][0]=0|e,s[1][0]=0|r),c&amp;&amp;(i=t[0],a=t[1],o&amp;&amp;(i=i[1],a=a[1]),u[0][1]=i,u[1][1]=a,c.invert&amp;&amp;(i=c(i),a=c(a)),i&gt;a&amp;&amp;(l=i,i=a,a=l),s[0][1]=0|i,s[1][1]=0|a),n):(t=u||s,o&amp;&amp;(e=t[0][0],r=t[1][0],u||(e=s[0][0],r=s[1][0],o.invert&amp;&amp;(e=o.invert(e),r=o.invert(r)),e&gt;r&amp;&amp;(l=e,e=r,r=l))),c&amp;&amp;(i=t[0][1],a=t[1][1],u||(i=s[0][1],a=s[1][1],c.invert&amp;&amp;(i=c.invert(i),a=c.invert(a)),i&gt;a&amp;&amp;(l=i,i=a,a=l))),o&amp;&amp;c?[[e,i],[r,a]]:o?[e,r]:c&amp;&amp;[i,a])},n.clear=function(){return u=null,s[0][0]=s[0][1]=s[1][0]=s[1][1]=0,n},n.empty=function(){return o&amp;&amp;s[0][0]===s[1][0]||c&amp;&amp;s[0][1]===s[1][1]},ya.rebind(n,a,&quot;on&quot;)};var Vc={n:&quot;ns-resize&quot;,e:&quot;ew-resize&quot;,s:&quot;ns-resize&quot;,w:&quot;ew-resize&quot;,nw:&quot;nwse-resize&quot;,ne:&quot;nesw-resize&quot;,se:&quot;nwse-resize&quot;,sw:&quot;nesw-resize&quot;},Xc=[[&quot;n&quot;,&quot;e&quot;,&quot;s&quot;,&quot;w&quot;,&quot;nw&quot;,&quot;ne&quot;,&quot;se&quot;,&quot;sw&quot;],[&quot;e&quot;,&quot;w&quot;],[&quot;n&quot;,&quot;s&quot;],[]];ya.time={};var Zc=Date,Bc=[&quot;Sunday&quot;,&quot;Monday&quot;,&quot;Tuesday&quot;,&quot;Wednesday&quot;,&quot;Thursday&quot;,&quot;Friday&quot;,&quot;Saturday&quot;];zu.prototype={getDate:function(){return this._.getUTCDate()},getDay:function(){return this._.getUTCDay()},getFullYear:function(){return this._.getUTCFullYear()},getHours:function(){return this._.getUTCHours()},getMilliseconds:function(){return this._.getUTCMilliseconds()},getMinutes:function(){return this._.getUTCMinutes()},getMonth:function(){return this._.getUTCMonth()},getSeconds:function(){return this._.getUTCSeconds()},getTime:function(){return this._.getTime()},getTimezoneOffset:function(){return 0},valueOf:function(){return this._.valueOf()},setDate:function(){$c.setUTCDate.apply(this._,arguments)},setDay:function(){$c.setUTCDay.apply(this._,arguments)},setFullYear:function(){$c.setUTCFullYear.apply(this._,arguments)},setHours:function(){$c.setUTCHours.apply(this._,arguments)},setMilliseconds:function(){$c.setUTCMilliseconds.apply(this._,arguments)},setMinutes:function(){$c.setUTCMinutes.apply(this._,arguments)},setMonth:function(){$c.setUTCMonth.apply(this._,arguments)},setSeconds:function(){$c.setUTCSeconds.apply(this._,arguments)},setTime:function(){$c.setTime.apply(this._,arguments)}};var $c=Date.prototype,Wc=&quot;%a %b %e %X %Y&quot;,Jc=&quot;%m/%d/%Y&quot;,Gc=&quot;%H:%M:%S&quot;,Kc=[&quot;Sunday&quot;,&quot;Monday&quot;,&quot;Tuesday&quot;,&quot;Wednesday&quot;,&quot;Thursday&quot;,&quot;Friday&quot;,&quot;Saturday&quot;],Qc=[&quot;Sun&quot;,&quot;Mon&quot;,&quot;Tue&quot;,&quot;Wed&quot;,&quot;Thu&quot;,&quot;Fri&quot;,&quot;Sat&quot;],nl=[&quot;January&quot;,&quot;February&quot;,&quot;March&quot;,&quot;April&quot;,&quot;May&quot;,&quot;June&quot;,&quot;July&quot;,&quot;August&quot;,&quot;September&quot;,&quot;October&quot;,&quot;November&quot;,&quot;December&quot;],tl=[&quot;Jan&quot;,&quot;Feb&quot;,&quot;Mar&quot;,&quot;Apr&quot;,&quot;May&quot;,&quot;Jun&quot;,&quot;Jul&quot;,&quot;Aug&quot;,&quot;Sep&quot;,&quot;Oct&quot;,&quot;Nov&quot;,&quot;Dec&quot;];ya.time.year=Du(function(n){return n=ya.time.day(n),n.setMonth(0,1),n},function(n,t){n.setFullYear(n.getFullYear()+t)},function(n){return n.getFullYear()}),ya.time.years=ya.time.year.range,ya.time.years.utc=ya.time.year.utc.range,ya.time.day=Du(function(n){var t=new Zc(2e3,0);return t.setFullYear(n.getFullYear(),n.getMonth(),n.getDate()),t},function(n,t){n.setDate(n.getDate()+t)},function(n){return n.getDate()-1}),ya.time.days=ya.time.day.range,ya.time.days.utc=ya.time.day.utc.range,ya.time.dayOfYear=function(n){var t=ya.time.year(n);return Math.floor((n-t-6e4*(n.getTimezoneOffset()-t.getTimezoneOffset()))/864e5)},Bc.forEach(function(n,t){n=n.toLowerCase(),t=7-t;var e=ya.time[n]=Du(function(n){return(n=ya.time.day(n)).setDate(n.getDate()-(n.getDay()+t)%7),n},function(n,t){n.setDate(n.getDate()+7*Math.floor(t))},function(n){var e=ya.time.year(n).getDay();return Math.floor((ya.time.dayOfYear(n)+(e+t)%7)/7)-(e!==t)});ya.time[n+&quot;s&quot;]=e.range,ya.time[n+&quot;s&quot;].utc=e.utc.range,ya.time[n+&quot;OfYear&quot;]=function(n){var e=ya.time.year(n).getDay();return Math.floor((ya.time.dayOfYear(n)+(e+t)%7)/7)}}),ya.time.week=ya.time.sunday,ya.time.weeks=ya.time.sunday.range,ya.time.weeks.utc=ya.time.sunday.utc.range,ya.time.weekOfYear=ya.time.sundayOfYear,ya.time.format=function(n){function t(t){for(var r,i,u,a=[],o=-1,c=0;++o&lt;e;)37===n.charCodeAt(o)&amp;&amp;(a.push(n.substring(c,o)),null!=(i=fl[r=n.charAt(++o)])&amp;&amp;(r=n.charAt(++o)),(u=hl[r])&amp;&amp;(r=u(t,null==i?&quot;e&quot;===r?&quot; &quot;:&quot;0&quot;:i)),a.push(r),c=o+1);return a.push(n.substring(c,o)),a.join(&quot;&quot;)}var e=n.length;return t.parse=function(t){var e={y:1900,m:0,d:1,H:0,M:0,S:0,L:0},r=Lu(e,n,t,0);if(r!=t.length)return null;&quot;p&quot;in e&amp;&amp;(e.H=e.H%12+12*e.p);var i=new Zc;return&quot;j&quot;in e?i.setFullYear(e.y,0,e.j):&quot;w&quot;in e&amp;&amp;(&quot;W&quot;in e||&quot;U&quot;in e)?(i.setFullYear(e.y,0,1),i.setFullYear(e.y,0,&quot;W&quot;in e?(e.w+6)%7+7*e.W-(i.getDay()+5)%7:e.w+7*e.U-(i.getDay()+6)%7)):i.setFullYear(e.y,e.m,e.d),i.setHours(e.H,e.M,e.S,e.L),i},t.toString=function(){return n},t};var el=Hu(Kc),rl=Fu(Kc),il=Hu(Qc),ul=Fu(Qc),al=Hu(nl),ol=Fu(nl),cl=Hu(tl),ll=Fu(tl),sl=/^%/,fl={&quot;-&quot;:&quot;&quot;,_:&quot; &quot;,0:&quot;0&quot;},hl={a:function(n){return Qc[n.getDay()]},A:function(n){return Kc[n.getDay()]},b:function(n){return tl[n.getMonth()]},B:function(n){return nl[n.getMonth()]},c:ya.time.format(Wc),d:function(n,t){return Pu(n.getDate(),t,2)},e:function(n,t){return Pu(n.getDate(),t,2)},H:function(n,t){return Pu(n.getHours(),t,2)},I:function(n,t){return Pu(n.getHours()%12||12,t,2)},j:function(n,t){return Pu(1+ya.time.dayOfYear(n),t,3)},L:function(n,t){return Pu(n.getMilliseconds(),t,3)},m:function(n,t){return Pu(n.getMonth()+1,t,2)},M:function(n,t){return Pu(n.getMinutes(),t,2)},p:function(n){return n.getHours()&gt;=12?&quot;PM&quot;:&quot;AM&quot;},S:function(n,t){return Pu(n.getSeconds(),t,2)},U:function(n,t){return Pu(ya.time.sundayOfYear(n),t,2)},w:function(n){return n.getDay()},W:function(n,t){return Pu(ya.time.mondayOfYear(n),t,2)},x:ya.time.format(Jc),X:ya.time.format(Gc),y:function(n,t){return Pu(n.getFullYear()%100,t,2)},Y:function(n,t){return Pu(n.getFullYear()%1e4,t,4)},Z:aa,&quot;%&quot;:function(){return&quot;%&quot;}},gl={a:Ou,A:Yu,b:Vu,B:Xu,c:Zu,d:Qu,e:Qu,H:ta,I:ta,j:na,L:ia,m:Ku,M:ea,p:ua,S:ra,U:Uu,w:Ru,W:Iu,x:Bu,X:$u,y:Ju,Y:Wu,&quot;%&quot;:oa},pl=/^\s*\d+/,ml=ya.map({am:0,pm:1});ya.time.format.utc=function(n){function t(n){try{Zc=zu;var t=new Zc;return t._=n,e(t)}finally{Zc=Date}}var e=ya.time.format(n);return t.parse=function(n){try{Zc=zu;var t=e.parse(n);return t&amp;&amp;t._}finally{Zc=Date}},t.toString=e.toString,t};var dl=ya.time.format.utc(&quot;%Y-%m-%dT%H:%M:%S.%LZ&quot;);ya.time.format.iso=Date.prototype.toISOString&amp;&amp;+new Date(&quot;2000-01-01T00:00:00.000Z&quot;)?ca:dl,ca.parse=function(n){var t=new Date(n);return isNaN(t)?null:t},ca.toString=dl.toString,ya.time.second=Du(function(n){return new Zc(1e3*Math.floor(n/1e3))},function(n,t){n.setTime(n.getTime()+1e3*Math.floor(t))},function(n){return n.getSeconds()}),ya.time.seconds=ya.time.second.range,ya.time.seconds.utc=ya.time.second.utc.range,ya.time.minute=Du(function(n){return new Zc(6e4*Math.floor(n/6e4))},function(n,t){n.setTime(n.getTime()+6e4*Math.floor(t))},function(n){return n.getMinutes()}),ya.time.minutes=ya.time.minute.range,ya.time.minutes.utc=ya.time.minute.utc.range,ya.time.hour=Du(function(n){var t=n.getTimezoneOffset()/60;return new Zc(36e5*(Math.floor(n/36e5-t)+t))},function(n,t){n.setTime(n.getTime()+36e5*Math.floor(t))},function(n){return n.getHours()}),ya.time.hours=ya.time.hour.range,ya.time.hours.utc=ya.time.hour.utc.range,ya.time.month=Du(function(n){return n=ya.time.day(n),n.setDate(1),n},function(n,t){n.setMonth(n.getMonth()+t)},function(n){return n.getMonth()}),ya.time.months=ya.time.month.range,ya.time.months.utc=ya.time.month.utc.range;var vl=[1e3,5e3,15e3,3e4,6e4,3e5,9e5,18e5,36e5,108e5,216e5,432e5,864e5,1728e5,6048e5,2592e6,7776e6,31536e6],yl=[[ya.time.second,1],[ya.time.second,5],[ya.time.second,15],[ya.time.second,30],[ya.time.minute,1],[ya.time.minute,5],[ya.time.minute,15],[ya.time.minute,30],[ya.time.hour,1],[ya.time.hour,3],[ya.time.hour,6],[ya.time.hour,12],[ya.time.day,1],[ya.time.day,2],[ya.time.week,1],[ya.time.month,1],[ya.time.month,3],[ya.time.year,1]],Ml=[[ya.time.format(&quot;%Y&quot;),Xt],[ya.time.format(&quot;%B&quot;),function(n){return n.getMonth()}],[ya.time.format(&quot;%b %d&quot;),function(n){return 1!=n.getDate()}],[ya.time.format(&quot;%a %d&quot;),function(n){return n.getDay()&amp;&amp;1!=n.getDate()}],[ya.time.format(&quot;%I %p&quot;),function(n){return n.getHours()}],[ya.time.format(&quot;%I:%M&quot;),function(n){return n.getMinutes()}],[ya.time.format(&quot;:%S&quot;),function(n){return n.getSeconds()}],[ya.time.format(&quot;.%L&quot;),function(n){return n.getMilliseconds()}]],xl=ya.scale.linear(),bl=fa(Ml);yl.year=function(n,t){return xl.domain(n.map(ga)).ticks(t).map(ha)},ya.time.scale=function(){return la(ya.scale.linear(),yl,bl)};var _l=yl.map(function(n){return[n[0].utc,n[1]]}),wl=[[ya.time.format.utc(&quot;%Y&quot;),Xt],[ya.time.format.utc(&quot;%B&quot;),function(n){return n.getUTCMonth()}],[ya.time.format.utc(&quot;%b %d&quot;),function(n){return 1!=n.getUTCDate()}],[ya.time.format.utc(&quot;%a %d&quot;),function(n){return n.getUTCDay()&amp;&amp;1!=n.getUTCDate()}],[ya.time.format.utc(&quot;%I %p&quot;),function(n){return n.getUTCHours()}],[ya.time.format.utc(&quot;%I:%M&quot;),function(n){return n.getUTCMinutes()}],[ya.time.format.utc(&quot;:%S&quot;),function(n){return n.getUTCSeconds()}],[ya.time.format.utc(&quot;.%L&quot;),function(n){return n.getUTCMilliseconds()}]],Sl=fa(wl);return _l.year=function(n,t){return xl.domain(n.map(ma)).ticks(t).map(pa)},ya.time.scale.utc=function(){return la(ya.scale.linear(),_l,Sl)},ya.text=dt(function(n){return n.responseText}),ya.json=function(n,t){return vt(n,&quot;application/json&quot;,da,t)},ya.html=function(n,t){return vt(n,&quot;text/html&quot;,va,t)},ya.xml=dt(function(n){return n.responseXML}),ya}();</div><div class='line' id='LC15014'>/*! gridster.js - v0.1.0 - 2013-02-15</div><div class='line' id='LC15015'>* http://gridster.net/</div><div class='line' id='LC15016'>* Copyright (c) 2013 ducksboard; Licensed MIT */</div><div class='line' id='LC15017'><br/></div><div class='line' id='LC15018'><br/></div><div class='line' id='LC15019'>;(function($, window, document, undefined){</div><div class='line' id='LC15020'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC15021'>&nbsp;&nbsp;&nbsp;&nbsp;* Creates objects with coordinates (x1, y1, x2, y2, cx, cy, width, height)</div><div class='line' id='LC15022'>&nbsp;&nbsp;&nbsp;&nbsp;* to simulate DOM elements on the screen.</div><div class='line' id='LC15023'>&nbsp;&nbsp;&nbsp;&nbsp;* Coords is used by Gridster to create a faux grid with any DOM element can</div><div class='line' id='LC15024'>&nbsp;&nbsp;&nbsp;&nbsp;* collide.</div><div class='line' id='LC15025'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC15026'>&nbsp;&nbsp;&nbsp;&nbsp;* @class Coords</div><div class='line' id='LC15027'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {HTMLElement|Object} obj The jQuery HTMLElement or a object with: left,</div><div class='line' id='LC15028'>&nbsp;&nbsp;&nbsp;&nbsp;* top, width and height properties.</div><div class='line' id='LC15029'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Object} Coords instance.</div><div class='line' id='LC15030'>&nbsp;&nbsp;&nbsp;&nbsp;* @constructor</div><div class='line' id='LC15031'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC15032'>&nbsp;&nbsp;&nbsp;&nbsp;function Coords(obj) {</div><div class='line' id='LC15033'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (obj[0] &amp;&amp; $.isPlainObject(obj[0])) {</div><div class='line' id='LC15034'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.data = obj[0];</div><div class='line' id='LC15035'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else {</div><div class='line' id='LC15036'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.el = obj;</div><div class='line' id='LC15037'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15038'><br/></div><div class='line' id='LC15039'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.isCoords = true;</div><div class='line' id='LC15040'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.coords = {};</div><div class='line' id='LC15041'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.init();</div><div class='line' id='LC15042'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC15043'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15044'><br/></div><div class='line' id='LC15045'><br/></div><div class='line' id='LC15046'>&nbsp;&nbsp;&nbsp;&nbsp;var fn = Coords.prototype;</div><div class='line' id='LC15047'><br/></div><div class='line' id='LC15048'><br/></div><div class='line' id='LC15049'>&nbsp;&nbsp;&nbsp;&nbsp;fn.init = function(){</div><div class='line' id='LC15050'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set();</div><div class='line' id='LC15051'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.original_coords = this.get();</div><div class='line' id='LC15052'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15053'><br/></div><div class='line' id='LC15054'><br/></div><div class='line' id='LC15055'>&nbsp;&nbsp;&nbsp;&nbsp;fn.set = function(update, not_update_offsets) {</div><div class='line' id='LC15056'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var el = this.el;</div><div class='line' id='LC15057'><br/></div><div class='line' id='LC15058'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (el &amp;&amp; !update) {</div><div class='line' id='LC15059'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.data = el.offset();</div><div class='line' id='LC15060'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.data.width = el.width();</div><div class='line' id='LC15061'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.data.height = el.height();</div><div class='line' id='LC15062'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15063'><br/></div><div class='line' id='LC15064'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (el &amp;&amp; update &amp;&amp; !not_update_offsets) {</div><div class='line' id='LC15065'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var offset = el.offset();</div><div class='line' id='LC15066'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.data.top = offset.top;</div><div class='line' id='LC15067'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.data.left = offset.left;</div><div class='line' id='LC15068'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15069'><br/></div><div class='line' id='LC15070'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var d = this.data;</div><div class='line' id='LC15071'><br/></div><div class='line' id='LC15072'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.coords.x1 = d.left;</div><div class='line' id='LC15073'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.coords.y1 = d.top;</div><div class='line' id='LC15074'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.coords.x2 = d.left + d.width;</div><div class='line' id='LC15075'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.coords.y2 = d.top + d.height;</div><div class='line' id='LC15076'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.coords.cx = d.left + (d.width / 2);</div><div class='line' id='LC15077'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.coords.cy = d.top + (d.height / 2);</div><div class='line' id='LC15078'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.coords.width  = d.width;</div><div class='line' id='LC15079'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.coords.height = d.height;</div><div class='line' id='LC15080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.coords.el  = el || false ;</div><div class='line' id='LC15081'><br/></div><div class='line' id='LC15082'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC15083'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15084'><br/></div><div class='line' id='LC15085'><br/></div><div class='line' id='LC15086'>&nbsp;&nbsp;&nbsp;&nbsp;fn.update = function(data){</div><div class='line' id='LC15087'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!data &amp;&amp; !this.el) {</div><div class='line' id='LC15088'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC15089'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15090'><br/></div><div class='line' id='LC15091'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (data) {</div><div class='line' id='LC15092'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var new_data = $.extend({}, this.data, data);</div><div class='line' id='LC15093'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.data = new_data;</div><div class='line' id='LC15094'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.set(true, true);</div><div class='line' id='LC15095'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15096'><br/></div><div class='line' id='LC15097'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set(true);</div><div class='line' id='LC15098'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC15099'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15100'><br/></div><div class='line' id='LC15101'><br/></div><div class='line' id='LC15102'>&nbsp;&nbsp;&nbsp;&nbsp;fn.get = function(){</div><div class='line' id='LC15103'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.coords;</div><div class='line' id='LC15104'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15105'><br/></div><div class='line' id='LC15106'><br/></div><div class='line' id='LC15107'>&nbsp;&nbsp;&nbsp;&nbsp;//jQuery adapter</div><div class='line' id='LC15108'>&nbsp;&nbsp;&nbsp;&nbsp;$.fn.coords = function() {</div><div class='line' id='LC15109'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.data(&#39;coords&#39;) ) {</div><div class='line' id='LC15110'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.data(&#39;coords&#39;);</div><div class='line' id='LC15111'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15112'><br/></div><div class='line' id='LC15113'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var ins = new Coords(this, arguments[0]);</div><div class='line' id='LC15114'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.data(&#39;coords&#39;, ins);</div><div class='line' id='LC15115'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ins;</div><div class='line' id='LC15116'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15117'><br/></div><div class='line' id='LC15118'>}(jQuery, window, document));</div><div class='line' id='LC15119'><br/></div><div class='line' id='LC15120'>;(function($, window, document, undefined){</div><div class='line' id='LC15121'><br/></div><div class='line' id='LC15122'>&nbsp;&nbsp;&nbsp;&nbsp;var defaults = {</div><div class='line' id='LC15123'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colliders_context: document.body</div><div class='line' id='LC15124'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// ,on_overlap: function(collider_data){},</div><div class='line' id='LC15125'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// on_overlap_start : function(collider_data){},</div><div class='line' id='LC15126'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// on_overlap_stop : function(collider_data){}</div><div class='line' id='LC15127'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15128'><br/></div><div class='line' id='LC15129'><br/></div><div class='line' id='LC15130'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC15131'>&nbsp;&nbsp;&nbsp;&nbsp;* Detects collisions between a DOM element against other DOM elements or</div><div class='line' id='LC15132'>&nbsp;&nbsp;&nbsp;&nbsp;* Coords objects.</div><div class='line' id='LC15133'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC15134'>&nbsp;&nbsp;&nbsp;&nbsp;* @class Collision</div><div class='line' id='LC15135'>&nbsp;&nbsp;&nbsp;&nbsp;* @uses Coords</div><div class='line' id='LC15136'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {HTMLElement} el The jQuery wrapped HTMLElement.</div><div class='line' id='LC15137'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {HTMLElement|Array} colliders Can be a jQuery collection</div><div class='line' id='LC15138'>&nbsp;&nbsp;&nbsp;&nbsp;*  of HTMLElements or an Array of Coords instances.</div><div class='line' id='LC15139'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object} [options] An Object with all options you want to</div><div class='line' id='LC15140'>&nbsp;&nbsp;&nbsp;&nbsp;*        overwrite:</div><div class='line' id='LC15141'>&nbsp;&nbsp;&nbsp;&nbsp;*   @param {Function} [options.on_overlap_start] Executes a function the first</div><div class='line' id='LC15142'>&nbsp;&nbsp;&nbsp;&nbsp;*    time each `collider ` is overlapped.</div><div class='line' id='LC15143'>&nbsp;&nbsp;&nbsp;&nbsp;*   @param {Function} [options.on_overlap_stop] Executes a function when a</div><div class='line' id='LC15144'>&nbsp;&nbsp;&nbsp;&nbsp;*    `collider` is no longer collided.</div><div class='line' id='LC15145'>&nbsp;&nbsp;&nbsp;&nbsp;*   @param {Function} [options.on_overlap] Executes a function when the</div><div class='line' id='LC15146'>&nbsp;&nbsp;&nbsp;&nbsp;* mouse is moved during the collision.</div><div class='line' id='LC15147'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Object} Collision instance.</div><div class='line' id='LC15148'>&nbsp;&nbsp;&nbsp;&nbsp;* @constructor</div><div class='line' id='LC15149'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC15150'>&nbsp;&nbsp;&nbsp;&nbsp;function Collision(el, colliders, options) {</div><div class='line' id='LC15151'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.options = $.extend(defaults, options);</div><div class='line' id='LC15152'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$element = el;</div><div class='line' id='LC15153'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.last_colliders = [];</div><div class='line' id='LC15154'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.last_colliders_coords = [];</div><div class='line' id='LC15155'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof colliders === &#39;string&#39; || colliders instanceof jQuery) {</div><div class='line' id='LC15156'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$colliders = $(colliders,</div><div class='line' id='LC15157'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.options.colliders_context).not(this.$element);</div><div class='line' id='LC15158'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{</div><div class='line' id='LC15159'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.colliders = $(colliders);</div><div class='line' id='LC15160'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15161'><br/></div><div class='line' id='LC15162'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.init();</div><div class='line' id='LC15163'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15164'><br/></div><div class='line' id='LC15165'><br/></div><div class='line' id='LC15166'>&nbsp;&nbsp;&nbsp;&nbsp;var fn = Collision.prototype;</div><div class='line' id='LC15167'><br/></div><div class='line' id='LC15168'><br/></div><div class='line' id='LC15169'>&nbsp;&nbsp;&nbsp;&nbsp;fn.init = function() {</div><div class='line' id='LC15170'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.find_collisions();</div><div class='line' id='LC15171'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15172'><br/></div><div class='line' id='LC15173'><br/></div><div class='line' id='LC15174'>&nbsp;&nbsp;&nbsp;&nbsp;fn.overlaps = function(a, b) {</div><div class='line' id='LC15175'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var x = false;</div><div class='line' id='LC15176'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var y = false;</div><div class='line' id='LC15177'><br/></div><div class='line' id='LC15178'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((b.x1 &gt;= a.x1 &amp;&amp; b.x1 &lt;= a.x2) ||</div><div class='line' id='LC15179'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(b.x2 &gt;= a.x1 &amp;&amp; b.x2 &lt;= a.x2) ||</div><div class='line' id='LC15180'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(a.x1 &gt;= b.x1 &amp;&amp; a.x2 &lt;= b.x2)</div><div class='line' id='LC15181'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) { x = true; }</div><div class='line' id='LC15182'><br/></div><div class='line' id='LC15183'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((b.y1 &gt;= a.y1 &amp;&amp; b.y1 &lt;= a.y2) ||</div><div class='line' id='LC15184'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(b.y2 &gt;= a.y1 &amp;&amp; b.y2 &lt;= a.y2) ||</div><div class='line' id='LC15185'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(a.y1 &gt;= b.y1 &amp;&amp; a.y2 &lt;= b.y2)</div><div class='line' id='LC15186'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) { y = true; }</div><div class='line' id='LC15187'><br/></div><div class='line' id='LC15188'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (x &amp;&amp; y);</div><div class='line' id='LC15189'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15190'><br/></div><div class='line' id='LC15191'><br/></div><div class='line' id='LC15192'>&nbsp;&nbsp;&nbsp;&nbsp;fn.detect_overlapping_region = function(a, b){</div><div class='line' id='LC15193'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var regionX = &#39;&#39;;</div><div class='line' id='LC15194'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var regionY = &#39;&#39;;</div><div class='line' id='LC15195'><br/></div><div class='line' id='LC15196'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a.y1 &gt; b.cy &amp;&amp; a.y1 &lt; b.y2) { regionX = &#39;N&#39;; }</div><div class='line' id='LC15197'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a.y2 &gt; b.y1 &amp;&amp; a.y2 &lt; b.cy) { regionX = &#39;S&#39;; }</div><div class='line' id='LC15198'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a.x1 &gt; b.cx &amp;&amp; a.x1 &lt; b.x2) { regionY = &#39;W&#39;; }</div><div class='line' id='LC15199'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a.x2 &gt; b.x1 &amp;&amp; a.x2 &lt; b.cx) { regionY = &#39;E&#39;; }</div><div class='line' id='LC15200'><br/></div><div class='line' id='LC15201'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (regionX + regionY) || &#39;C&#39;;</div><div class='line' id='LC15202'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15203'><br/></div><div class='line' id='LC15204'><br/></div><div class='line' id='LC15205'>&nbsp;&nbsp;&nbsp;&nbsp;fn.calculate_overlapped_area_coords = function(a, b){</div><div class='line' id='LC15206'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var x1 = Math.max(a.x1, b.x1);</div><div class='line' id='LC15207'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var y1 = Math.max(a.y1, b.y1);</div><div class='line' id='LC15208'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var x2 = Math.min(a.x2, b.x2);</div><div class='line' id='LC15209'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var y2 = Math.min(a.y2, b.y2);</div><div class='line' id='LC15210'><br/></div><div class='line' id='LC15211'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $({</div><div class='line' id='LC15212'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left: x1,</div><div class='line' id='LC15213'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top: y1,</div><div class='line' id='LC15214'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;width : (x2 - x1),</div><div class='line' id='LC15215'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;height: (y2 - y1)</div><div class='line' id='LC15216'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}).coords().get();</div><div class='line' id='LC15217'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15218'><br/></div><div class='line' id='LC15219'><br/></div><div class='line' id='LC15220'>&nbsp;&nbsp;&nbsp;&nbsp;fn.calculate_overlapped_area = function(coords){</div><div class='line' id='LC15221'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (coords.width * coords.height);</div><div class='line' id='LC15222'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15223'><br/></div><div class='line' id='LC15224'><br/></div><div class='line' id='LC15225'>&nbsp;&nbsp;&nbsp;&nbsp;fn.manage_colliders_start_stop = function(new_colliders_coords, start_callback, stop_callback){</div><div class='line' id='LC15226'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var last = this.last_colliders_coords;</div><div class='line' id='LC15227'><br/></div><div class='line' id='LC15228'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var i = 0, il = last.length; i &lt; il; i++) {</div><div class='line' id='LC15229'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($.inArray(last[i], new_colliders_coords) === -1) {</div><div class='line' id='LC15230'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start_callback.call(this, last[i]);</div><div class='line' id='LC15231'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15232'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15233'><br/></div><div class='line' id='LC15234'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var j = 0, jl = new_colliders_coords.length; j &lt; jl; j++) {</div><div class='line' id='LC15235'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($.inArray(new_colliders_coords[j], last) === -1) {</div><div class='line' id='LC15236'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop_callback.call(this, new_colliders_coords[j]);</div><div class='line' id='LC15237'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15238'><br/></div><div class='line' id='LC15239'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15240'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15241'><br/></div><div class='line' id='LC15242'><br/></div><div class='line' id='LC15243'>&nbsp;&nbsp;&nbsp;&nbsp;fn.find_collisions = function(player_data_coords){</div><div class='line' id='LC15244'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var self = this;</div><div class='line' id='LC15245'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var colliders_coords = [];</div><div class='line' id='LC15246'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var colliders_data = [];</div><div class='line' id='LC15247'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $colliders = (this.colliders || this.$colliders);</div><div class='line' id='LC15248'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var count = $colliders.length;</div><div class='line' id='LC15249'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var player_coords = self.$element.coords()</div><div class='line' id='LC15250'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.update(player_data_coords || false).get();</div><div class='line' id='LC15251'><br/></div><div class='line' id='LC15252'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(count--){</div><div class='line' id='LC15253'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $collider = self.$colliders ?</div><div class='line' id='LC15254'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$($colliders[count]) : $colliders[count];</div><div class='line' id='LC15255'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $collider_coords_ins = ($collider.isCoords) ?</div><div class='line' id='LC15256'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$collider : $collider.coords();</div><div class='line' id='LC15257'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var collider_coords = $collider_coords_ins.get();</div><div class='line' id='LC15258'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var overlaps = self.overlaps(player_coords, collider_coords);</div><div class='line' id='LC15259'><br/></div><div class='line' id='LC15260'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!overlaps) {</div><div class='line' id='LC15261'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;</div><div class='line' id='LC15262'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15263'><br/></div><div class='line' id='LC15264'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var region = self.detect_overlapping_region(</div><div class='line' id='LC15265'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;player_coords, collider_coords);</div><div class='line' id='LC15266'><br/></div><div class='line' id='LC15267'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//todo: make this an option</div><div class='line' id='LC15268'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (region === &#39;C&#39;){</div><div class='line' id='LC15269'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var area_coords = self.calculate_overlapped_area_coords(</div><div class='line' id='LC15270'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;player_coords, collider_coords);</div><div class='line' id='LC15271'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var area = self.calculate_overlapped_area(area_coords);</div><div class='line' id='LC15272'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var collider_data = {</div><div class='line' id='LC15273'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;area: area,</div><div class='line' id='LC15274'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;area_coords : area_coords,</div><div class='line' id='LC15275'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;region: region,</div><div class='line' id='LC15276'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;coords: collider_coords,</div><div class='line' id='LC15277'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;player_coords: player_coords,</div><div class='line' id='LC15278'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;el: $collider</div><div class='line' id='LC15279'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15280'><br/></div><div class='line' id='LC15281'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (self.options.on_overlap) {</div><div class='line' id='LC15282'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.options.on_overlap.call(this, collider_data);</div><div class='line' id='LC15283'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15284'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colliders_coords.push($collider_coords_ins);</div><div class='line' id='LC15285'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colliders_data.push(collider_data);</div><div class='line' id='LC15286'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15287'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15288'><br/></div><div class='line' id='LC15289'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (self.options.on_overlap_stop || self.options.on_overlap_start) {</div><div class='line' id='LC15290'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.manage_colliders_start_stop(colliders_coords,</div><div class='line' id='LC15291'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.options.on_overlap_stop, self.options.on_overlap_start);</div><div class='line' id='LC15292'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15293'><br/></div><div class='line' id='LC15294'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.last_colliders_coords = colliders_coords;</div><div class='line' id='LC15295'><br/></div><div class='line' id='LC15296'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return colliders_data;</div><div class='line' id='LC15297'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15298'><br/></div><div class='line' id='LC15299'><br/></div><div class='line' id='LC15300'>&nbsp;&nbsp;&nbsp;&nbsp;fn.get_closest_colliders = function(player_data_coords){</div><div class='line' id='LC15301'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var colliders = this.find_collisions(player_data_coords);</div><div class='line' id='LC15302'><br/></div><div class='line' id='LC15303'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colliders.sort(function(a, b) {</div><div class='line' id='LC15304'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* if colliders are being overlapped by the &quot;C&quot; (center) region,</div><div class='line' id='LC15305'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* we have to set a lower index in the array to which they are placed</div><div class='line' id='LC15306'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* above in the grid. */</div><div class='line' id='LC15307'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a.region === &#39;C&#39; &amp;&amp; b.region === &#39;C&#39;) {</div><div class='line' id='LC15308'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a.coords.y1 &lt; b.coords.y1 || a.coords.x1 &lt; b.coords.x1) {</div><div class='line' id='LC15309'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return - 1;</div><div class='line' id='LC15310'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{</div><div class='line' id='LC15311'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 1;</div><div class='line' id='LC15312'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15313'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15314'><br/></div><div class='line' id='LC15315'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a.area &lt; b.area) {</div><div class='line' id='LC15316'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 1;</div><div class='line' id='LC15317'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15318'><br/></div><div class='line' id='LC15319'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 1;</div><div class='line' id='LC15320'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC15321'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return colliders;</div><div class='line' id='LC15322'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15323'><br/></div><div class='line' id='LC15324'><br/></div><div class='line' id='LC15325'>&nbsp;&nbsp;&nbsp;&nbsp;//jQuery adapter</div><div class='line' id='LC15326'>&nbsp;&nbsp;&nbsp;&nbsp;$.fn.collision = function(collider, options) {</div><div class='line' id='LC15327'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new Collision( this, collider, options );</div><div class='line' id='LC15328'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15329'><br/></div><div class='line' id='LC15330'><br/></div><div class='line' id='LC15331'>}(jQuery, window, document));</div><div class='line' id='LC15332'><br/></div><div class='line' id='LC15333'>;(function(window, undefined) {</div><div class='line' id='LC15334'>&nbsp;&nbsp;&nbsp;&nbsp;/* Debounce and throttle functions taken from underscore.js */</div><div class='line' id='LC15335'>&nbsp;&nbsp;&nbsp;&nbsp;window.debounce = function(func, wait, immediate) {</div><div class='line' id='LC15336'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var timeout;</div><div class='line' id='LC15337'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function() {</div><div class='line' id='LC15338'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var context = this, args = arguments;</div><div class='line' id='LC15339'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var later = function() {</div><div class='line' id='LC15340'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;timeout = null;</div><div class='line' id='LC15341'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!immediate) func.apply(context, args);</div><div class='line' id='LC15342'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15343'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (immediate &amp;&amp; !timeout) func.apply(context, args);</div><div class='line' id='LC15344'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clearTimeout(timeout);</div><div class='line' id='LC15345'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;timeout = setTimeout(later, wait);</div><div class='line' id='LC15346'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15347'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15348'><br/></div><div class='line' id='LC15349'><br/></div><div class='line' id='LC15350'>&nbsp;&nbsp;&nbsp;&nbsp;window.throttle = function(func, wait) {</div><div class='line' id='LC15351'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var context, args, timeout, throttling, more, result;</div><div class='line' id='LC15352'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var whenDone = debounce(</div><div class='line' id='LC15353'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function(){ more = throttling = false; }, wait);</div><div class='line' id='LC15354'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return function() {</div><div class='line' id='LC15355'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;context = this; args = arguments;</div><div class='line' id='LC15356'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var later = function() {</div><div class='line' id='LC15357'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;timeout = null;</div><div class='line' id='LC15358'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (more) func.apply(context, args);</div><div class='line' id='LC15359'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;whenDone();</div><div class='line' id='LC15360'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15361'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!timeout) timeout = setTimeout(later, wait);</div><div class='line' id='LC15362'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (throttling) {</div><div class='line' id='LC15363'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;more = true;</div><div class='line' id='LC15364'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC15365'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = func.apply(context, args);</div><div class='line' id='LC15366'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15367'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;whenDone();</div><div class='line' id='LC15368'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throttling = true;</div><div class='line' id='LC15369'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC15370'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15371'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15372'><br/></div><div class='line' id='LC15373'>})(window);</div><div class='line' id='LC15374'><br/></div><div class='line' id='LC15375'>;(function($, window, document, undefined){</div><div class='line' id='LC15376'><br/></div><div class='line' id='LC15377'>&nbsp;&nbsp;&nbsp;&nbsp;var defaults = {</div><div class='line' id='LC15378'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;items: &#39;.gs_w&#39;,</div><div class='line' id='LC15379'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;distance: 1,</div><div class='line' id='LC15380'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;limit: true,</div><div class='line' id='LC15381'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;offset_left: 0,</div><div class='line' id='LC15382'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;autoscroll: true,</div><div class='line' id='LC15383'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ignore_dragging: [&#39;INPUT&#39;, &#39;TEXTAREA&#39;, &#39;SELECT&#39;, &#39;BUTTON&#39;],</div><div class='line' id='LC15384'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handle: null</div><div class='line' id='LC15385'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// drag: function(e){},</div><div class='line' id='LC15386'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// start : function(e, ui){},</div><div class='line' id='LC15387'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// stop : function(e){}</div><div class='line' id='LC15388'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15389'><br/></div><div class='line' id='LC15390'>&nbsp;&nbsp;&nbsp;&nbsp;var $window = $(window);</div><div class='line' id='LC15391'>&nbsp;&nbsp;&nbsp;&nbsp;var isTouch = !!(&#39;ontouchstart&#39; in window);</div><div class='line' id='LC15392'>&nbsp;&nbsp;&nbsp;&nbsp;var pointer_events = {</div><div class='line' id='LC15393'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start: isTouch ? &#39;touchstart&#39; : &#39;mousedown.draggable&#39;,</div><div class='line' id='LC15394'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move: isTouch ? &#39;touchmove&#39; : &#39;mousemove.draggable&#39;,</div><div class='line' id='LC15395'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end: isTouch ? &#39;touchend&#39; : &#39;mouseup.draggable&#39;</div><div class='line' id='LC15396'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15397'><br/></div><div class='line' id='LC15398'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC15399'>&nbsp;&nbsp;&nbsp;&nbsp;* Basic drag implementation for DOM elements inside a container.</div><div class='line' id='LC15400'>&nbsp;&nbsp;&nbsp;&nbsp;* Provide start/stop/drag callbacks.</div><div class='line' id='LC15401'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC15402'>&nbsp;&nbsp;&nbsp;&nbsp;* @class Draggable</div><div class='line' id='LC15403'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {HTMLElement} el The HTMLelement that contains all the widgets</div><div class='line' id='LC15404'>&nbsp;&nbsp;&nbsp;&nbsp;*  to be dragged.</div><div class='line' id='LC15405'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object} [options] An Object with all options you want to</div><div class='line' id='LC15406'>&nbsp;&nbsp;&nbsp;&nbsp;*        overwrite:</div><div class='line' id='LC15407'>&nbsp;&nbsp;&nbsp;&nbsp;*    @param {HTMLElement|String} [options.items] Define who will</div><div class='line' id='LC15408'>&nbsp;&nbsp;&nbsp;&nbsp;*     be the draggable items. Can be a CSS Selector String or a</div><div class='line' id='LC15409'>&nbsp;&nbsp;&nbsp;&nbsp;*     collection of HTMLElements.</div><div class='line' id='LC15410'>&nbsp;&nbsp;&nbsp;&nbsp;*    @param {Number} [options.distance] Distance in pixels after mousedown</div><div class='line' id='LC15411'>&nbsp;&nbsp;&nbsp;&nbsp;*     the mouse must move before dragging should start.</div><div class='line' id='LC15412'>&nbsp;&nbsp;&nbsp;&nbsp;*    @param {Boolean} [options.limit] Constrains dragging to the width of</div><div class='line' id='LC15413'>&nbsp;&nbsp;&nbsp;&nbsp;*     the container</div><div class='line' id='LC15414'>&nbsp;&nbsp;&nbsp;&nbsp;*    @param {offset_left} [options.offset_left] Offset added to the item</div><div class='line' id='LC15415'>&nbsp;&nbsp;&nbsp;&nbsp;*     that is being dragged.</div><div class='line' id='LC15416'>&nbsp;&nbsp;&nbsp;&nbsp;*    @param {Number} [options.drag] Executes a callback when the mouse is</div><div class='line' id='LC15417'>&nbsp;&nbsp;&nbsp;&nbsp;*     moved during the dragging.</div><div class='line' id='LC15418'>&nbsp;&nbsp;&nbsp;&nbsp;*    @param {Number} [options.start] Executes a callback when the drag</div><div class='line' id='LC15419'>&nbsp;&nbsp;&nbsp;&nbsp;*     starts.</div><div class='line' id='LC15420'>&nbsp;&nbsp;&nbsp;&nbsp;*    @param {Number} [options.stop] Executes a callback when the drag stops.</div><div class='line' id='LC15421'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Object} Returns `el`.</div><div class='line' id='LC15422'>&nbsp;&nbsp;&nbsp;&nbsp;* @constructor</div><div class='line' id='LC15423'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC15424'>&nbsp;&nbsp;&nbsp;&nbsp;function Draggable(el, options) {</div><div class='line' id='LC15425'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.options = $.extend({}, defaults, options);</div><div class='line' id='LC15426'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$body = $(document.body);</div><div class='line' id='LC15427'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$container = $(el);</div><div class='line' id='LC15428'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$dragitems = $(this.options.items, this.$container);</div><div class='line' id='LC15429'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.is_dragging = false;</div><div class='line' id='LC15430'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.player_min_left = 0 + this.options.offset_left;</div><div class='line' id='LC15431'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.init();</div><div class='line' id='LC15432'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15433'><br/></div><div class='line' id='LC15434'>&nbsp;&nbsp;&nbsp;&nbsp;var fn = Draggable.prototype;</div><div class='line' id='LC15435'><br/></div><div class='line' id='LC15436'>&nbsp;&nbsp;&nbsp;&nbsp;fn.init = function() {</div><div class='line' id='LC15437'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.calculate_positions();</div><div class='line' id='LC15438'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$container.css(&#39;position&#39;, &#39;relative&#39;);</div><div class='line' id='LC15439'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.disabled = false;</div><div class='line' id='LC15440'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.events();</div><div class='line' id='LC15441'><br/></div><div class='line' id='LC15442'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.on_window_resize = throttle($.proxy(this.calculate_positions, this), 200);</div><div class='line' id='LC15443'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(window).bind(&#39;resize&#39;, this.on_window_resize);</div><div class='line' id='LC15444'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15445'><br/></div><div class='line' id='LC15446'>&nbsp;&nbsp;&nbsp;&nbsp;fn.events = function() {</div><div class='line' id='LC15447'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.proxied_on_select_start = $.proxy(this.on_select_start, this);</div><div class='line' id='LC15448'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$container.on(&#39;selectstart&#39;, this.proxied_on_select_start);</div><div class='line' id='LC15449'><br/></div><div class='line' id='LC15450'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.proxied_drag_handler = $.proxy(this.drag_handler, this);</div><div class='line' id='LC15451'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$container.on(pointer_events.start, this.options.items, this.proxied_drag_handler);</div><div class='line' id='LC15452'><br/></div><div class='line' id='LC15453'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.proxied_pointer_events_end = $.proxy(function(e) {</div><div class='line' id='LC15454'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.is_dragging = false;</div><div class='line' id='LC15455'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.disabled) { return; }</div><div class='line' id='LC15456'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$body.off(pointer_events.move);</div><div class='line' id='LC15457'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.drag_start) {</div><div class='line' id='LC15458'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.on_dragstop(e);</div><div class='line' id='LC15459'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15460'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, this);</div><div class='line' id='LC15461'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$body.on(pointer_events.end, this.proxied_pointer_events_end);</div><div class='line' id='LC15462'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15463'><br/></div><div class='line' id='LC15464'>&nbsp;&nbsp;&nbsp;&nbsp;fn.get_actual_pos = function($el) {</div><div class='line' id='LC15465'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var pos = $el.position();</div><div class='line' id='LC15466'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return pos;</div><div class='line' id='LC15467'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15468'><br/></div><div class='line' id='LC15469'><br/></div><div class='line' id='LC15470'>&nbsp;&nbsp;&nbsp;&nbsp;fn.get_mouse_pos = function(e) {</div><div class='line' id='LC15471'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isTouch) {</div><div class='line' id='LC15472'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var oe = e.originalEvent;</div><div class='line' id='LC15473'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e = oe.touches.length ? oe.touches[0] : oe.changedTouches[0];</div><div class='line' id='LC15474'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15475'><br/></div><div class='line' id='LC15476'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return {</div><div class='line' id='LC15477'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left: e.clientX,</div><div class='line' id='LC15478'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top: e.clientY</div><div class='line' id='LC15479'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15480'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15481'><br/></div><div class='line' id='LC15482'><br/></div><div class='line' id='LC15483'>&nbsp;&nbsp;&nbsp;&nbsp;fn.get_offset = function(e) {</div><div class='line' id='LC15484'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.preventDefault();</div><div class='line' id='LC15485'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var mouse_actual_pos = this.get_mouse_pos(e);</div><div class='line' id='LC15486'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var diff_x = Math.round(</div><div class='line' id='LC15487'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mouse_actual_pos.left - this.mouse_init_pos.left);</div><div class='line' id='LC15488'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var diff_y = Math.round(mouse_actual_pos.top - this.mouse_init_pos.top);</div><div class='line' id='LC15489'><br/></div><div class='line' id='LC15490'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var left = Math.round(this.el_init_offset.left + diff_x - this.baseX);</div><div class='line' id='LC15491'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var top = Math.round(</div><div class='line' id='LC15492'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.el_init_offset.top + diff_y - this.baseY + this.scrollOffset);</div><div class='line' id='LC15493'><br/></div><div class='line' id='LC15494'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.options.limit) {</div><div class='line' id='LC15495'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (left &gt; this.player_max_left) {</div><div class='line' id='LC15496'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left = this.player_max_left;</div><div class='line' id='LC15497'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else if(left &lt; this.player_min_left) {</div><div class='line' id='LC15498'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left = this.player_min_left;</div><div class='line' id='LC15499'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15500'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15501'><br/></div><div class='line' id='LC15502'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return {</div><div class='line' id='LC15503'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left: left,</div><div class='line' id='LC15504'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top: top,</div><div class='line' id='LC15505'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mouse_left: mouse_actual_pos.left,</div><div class='line' id='LC15506'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mouse_top: mouse_actual_pos.top</div><div class='line' id='LC15507'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15508'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15509'><br/></div><div class='line' id='LC15510'><br/></div><div class='line' id='LC15511'>&nbsp;&nbsp;&nbsp;&nbsp;fn.manage_scroll = function(offset) {</div><div class='line' id='LC15512'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* scroll document */</div><div class='line' id='LC15513'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var nextScrollTop;</div><div class='line' id='LC15514'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var scrollTop = $window.scrollTop();</div><div class='line' id='LC15515'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var min_window_y = scrollTop;</div><div class='line' id='LC15516'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var max_window_y = min_window_y + this.window_height;</div><div class='line' id='LC15517'><br/></div><div class='line' id='LC15518'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var mouse_down_zone = max_window_y - 50;</div><div class='line' id='LC15519'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var mouse_up_zone = min_window_y + 50;</div><div class='line' id='LC15520'><br/></div><div class='line' id='LC15521'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var abs_mouse_left = offset.mouse_left;</div><div class='line' id='LC15522'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var abs_mouse_top = min_window_y + offset.mouse_top;</div><div class='line' id='LC15523'><br/></div><div class='line' id='LC15524'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var max_player_y = (this.doc_height - this.window_height +</div><div class='line' id='LC15525'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.player_height);</div><div class='line' id='LC15526'><br/></div><div class='line' id='LC15527'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (abs_mouse_top &gt;= mouse_down_zone) {</div><div class='line' id='LC15528'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nextScrollTop = scrollTop + 30;</div><div class='line' id='LC15529'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (nextScrollTop &lt; max_player_y) {</div><div class='line' id='LC15530'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$window.scrollTop(nextScrollTop);</div><div class='line' id='LC15531'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.scrollOffset = this.scrollOffset + 30;</div><div class='line' id='LC15532'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15533'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15534'><br/></div><div class='line' id='LC15535'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (abs_mouse_top &lt;= mouse_up_zone) {</div><div class='line' id='LC15536'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nextScrollTop = scrollTop - 30;</div><div class='line' id='LC15537'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (nextScrollTop &gt; 0) {</div><div class='line' id='LC15538'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$window.scrollTop(nextScrollTop);</div><div class='line' id='LC15539'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.scrollOffset = this.scrollOffset - 30;</div><div class='line' id='LC15540'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15541'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15542'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15543'><br/></div><div class='line' id='LC15544'><br/></div><div class='line' id='LC15545'>&nbsp;&nbsp;&nbsp;&nbsp;fn.calculate_positions = function(e) {</div><div class='line' id='LC15546'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.window_height = $window.height();</div><div class='line' id='LC15547'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15548'><br/></div><div class='line' id='LC15549'><br/></div><div class='line' id='LC15550'>&nbsp;&nbsp;&nbsp;&nbsp;fn.drag_handler = function(e) {</div><div class='line' id='LC15551'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var node = e.target.nodeName;</div><div class='line' id='LC15552'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.disabled || e.which !== 1 &amp;&amp; !isTouch) {</div><div class='line' id='LC15553'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC15554'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15555'><br/></div><div class='line' id='LC15556'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.ignore_drag(e)) {</div><div class='line' id='LC15557'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC15558'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15559'><br/></div><div class='line' id='LC15560'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var self = this;</div><div class='line' id='LC15561'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var first = true;</div><div class='line' id='LC15562'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$player = $(e.currentTarget);</div><div class='line' id='LC15563'><br/></div><div class='line' id='LC15564'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.el_init_pos = this.get_actual_pos(this.$player);</div><div class='line' id='LC15565'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.mouse_init_pos = this.get_mouse_pos(e);</div><div class='line' id='LC15566'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.offsetY = this.mouse_init_pos.top - this.el_init_pos.top;</div><div class='line' id='LC15567'><br/></div><div class='line' id='LC15568'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.on_pointer_events_move = function(mme){</div><div class='line' id='LC15569'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var mouse_actual_pos = self.get_mouse_pos(mme);</div><div class='line' id='LC15570'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var diff_x = Math.abs(</div><div class='line' id='LC15571'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mouse_actual_pos.left - self.mouse_init_pos.left);</div><div class='line' id='LC15572'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var diff_y = Math.abs(</div><div class='line' id='LC15573'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mouse_actual_pos.top - self.mouse_init_pos.top);</div><div class='line' id='LC15574'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(diff_x &gt; self.options.distance ||</div><div class='line' id='LC15575'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;diff_y &gt; self.options.distance)</div><div class='line' id='LC15576'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) {</div><div class='line' id='LC15577'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC15578'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15579'><br/></div><div class='line' id='LC15580'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (first) {</div><div class='line' id='LC15581'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;first = false;</div><div class='line' id='LC15582'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.on_dragstart.call(self, mme);</div><div class='line' id='LC15583'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC15584'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15585'><br/></div><div class='line' id='LC15586'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (self.is_dragging === true) {</div><div class='line' id='LC15587'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.on_dragmove.call(self, mme);</div><div class='line' id='LC15588'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15589'><br/></div><div class='line' id='LC15590'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC15591'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15592'><br/></div><div class='line' id='LC15593'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$body.on(pointer_events.move, this.on_pointer_events_move);</div><div class='line' id='LC15594'><br/></div><div class='line' id='LC15595'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC15596'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15597'><br/></div><div class='line' id='LC15598'><br/></div><div class='line' id='LC15599'>&nbsp;&nbsp;&nbsp;&nbsp;fn.on_dragstart = function(e) {</div><div class='line' id='LC15600'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.preventDefault();</div><div class='line' id='LC15601'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.drag_start = true;</div><div class='line' id='LC15602'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.is_dragging = true;</div><div class='line' id='LC15603'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var offset = this.$container.offset();</div><div class='line' id='LC15604'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.baseX = Math.round(offset.left);</div><div class='line' id='LC15605'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.baseY = Math.round(offset.top);</div><div class='line' id='LC15606'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.doc_height = $(document).height();</div><div class='line' id='LC15607'><br/></div><div class='line' id='LC15608'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.options.helper === &#39;clone&#39;) {</div><div class='line' id='LC15609'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$helper = this.$player.clone()</div><div class='line' id='LC15610'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.appendTo(this.$container).addClass(&#39;helper&#39;);</div><div class='line' id='LC15611'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.helper = true;</div><div class='line' id='LC15612'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{</div><div class='line' id='LC15613'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.helper = false;</div><div class='line' id='LC15614'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15615'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.scrollOffset = 0;</div><div class='line' id='LC15616'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.el_init_offset = this.$player.offset();</div><div class='line' id='LC15617'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.player_width = this.$player.width();</div><div class='line' id='LC15618'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.player_height = this.$player.height();</div><div class='line' id='LC15619'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.player_max_left = (this.$container.width() - this.player_width +</div><div class='line' id='LC15620'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.options.offset_left);</div><div class='line' id='LC15621'><br/></div><div class='line' id='LC15622'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.options.start) {</div><div class='line' id='LC15623'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.options.start.call(this.$player, e, {</div><div class='line' id='LC15624'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;helper: this.helper ? this.$helper : this.$player</div><div class='line' id='LC15625'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC15626'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15627'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC15628'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15629'><br/></div><div class='line' id='LC15630'><br/></div><div class='line' id='LC15631'>&nbsp;&nbsp;&nbsp;&nbsp;fn.on_dragmove = function(e) {</div><div class='line' id='LC15632'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var offset = this.get_offset(e);</div><div class='line' id='LC15633'><br/></div><div class='line' id='LC15634'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.options.autoscroll &amp;&amp; this.manage_scroll(offset);</div><div class='line' id='LC15635'><br/></div><div class='line' id='LC15636'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(this.helper ? this.$helper : this.$player).css({</div><div class='line' id='LC15637'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;position&#39;: &#39;absolute&#39;,</div><div class='line' id='LC15638'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;left&#39; : offset.left,</div><div class='line' id='LC15639'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;top&#39; : offset.top</div><div class='line' id='LC15640'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC15641'><br/></div><div class='line' id='LC15642'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var ui = {</div><div class='line' id='LC15643'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;position&#39;: {</div><div class='line' id='LC15644'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;left&#39;: offset.left,</div><div class='line' id='LC15645'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;top&#39;: offset.top</div><div class='line' id='LC15646'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15647'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15648'><br/></div><div class='line' id='LC15649'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.options.drag) {</div><div class='line' id='LC15650'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.options.drag.call(this.$player, e, ui);</div><div class='line' id='LC15651'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15652'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC15653'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15654'><br/></div><div class='line' id='LC15655'><br/></div><div class='line' id='LC15656'>&nbsp;&nbsp;&nbsp;&nbsp;fn.on_dragstop = function(e) {</div><div class='line' id='LC15657'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var offset = this.get_offset(e);</div><div class='line' id='LC15658'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.drag_start = false;</div><div class='line' id='LC15659'><br/></div><div class='line' id='LC15660'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var ui = {</div><div class='line' id='LC15661'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;position&#39;: {</div><div class='line' id='LC15662'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;left&#39;: offset.left,</div><div class='line' id='LC15663'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;top&#39;: offset.top</div><div class='line' id='LC15664'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15665'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15666'><br/></div><div class='line' id='LC15667'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.options.stop) {</div><div class='line' id='LC15668'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.options.stop.call(this.$player, e, ui);</div><div class='line' id='LC15669'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15670'><br/></div><div class='line' id='LC15671'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.helper) {</div><div class='line' id='LC15672'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$helper.remove();</div><div class='line' id='LC15673'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15674'><br/></div><div class='line' id='LC15675'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC15676'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15677'><br/></div><div class='line' id='LC15678'>&nbsp;&nbsp;&nbsp;&nbsp;fn.on_select_start = function(e) {</div><div class='line' id='LC15679'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.disabled) { return; }</div><div class='line' id='LC15680'><br/></div><div class='line' id='LC15681'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.ignore_drag(e)) {</div><div class='line' id='LC15682'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</div><div class='line' id='LC15683'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15684'><br/></div><div class='line' id='LC15685'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC15686'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15687'><br/></div><div class='line' id='LC15688'>&nbsp;&nbsp;&nbsp;&nbsp;fn.enable = function() {</div><div class='line' id='LC15689'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.disabled = false;</div><div class='line' id='LC15690'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15691'><br/></div><div class='line' id='LC15692'>&nbsp;&nbsp;&nbsp;&nbsp;fn.disable = function() {</div><div class='line' id='LC15693'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.disabled = true;</div><div class='line' id='LC15694'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15695'><br/></div><div class='line' id='LC15696'><br/></div><div class='line' id='LC15697'>&nbsp;&nbsp;&nbsp;&nbsp;fn.destroy = function(){</div><div class='line' id='LC15698'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.disable();</div><div class='line' id='LC15699'><br/></div><div class='line' id='LC15700'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$container.off(&#39;selectstart&#39;, this.proxied_on_select_start);</div><div class='line' id='LC15701'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$container.off(pointer_events.start, this.proxied_drag_handler);</div><div class='line' id='LC15702'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$body.off(pointer_events.end, this.proxied_pointer_events_end);</div><div class='line' id='LC15703'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$body.off(pointer_events.move, this.on_pointer_events_move);</div><div class='line' id='LC15704'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(window).unbind(&#39;resize&#39;, this.on_window_resize);</div><div class='line' id='LC15705'><br/></div><div class='line' id='LC15706'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.removeData(this.$container, &#39;drag&#39;);</div><div class='line' id='LC15707'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15708'><br/></div><div class='line' id='LC15709'>&nbsp;&nbsp;&nbsp;&nbsp;fn.ignore_drag = function(event) {</div><div class='line' id='LC15710'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.options.handle) {</div><div class='line' id='LC15711'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return !$(event.target).is(this.options.handle);</div><div class='line' id='LC15712'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15713'><br/></div><div class='line' id='LC15714'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $.inArray(event.target.nodeName, this.options.ignore_dragging) &gt;= 0;</div><div class='line' id='LC15715'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15716'><br/></div><div class='line' id='LC15717'>&nbsp;&nbsp;&nbsp;&nbsp;//jQuery adapter</div><div class='line' id='LC15718'>&nbsp;&nbsp;&nbsp;&nbsp;$.fn.drag = function ( options ) {</div><div class='line' id='LC15719'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.each(function () {</div><div class='line' id='LC15720'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!$.data(this, &#39;drag&#39;)) {</div><div class='line' id='LC15721'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.data(this, &#39;drag&#39;, new Draggable( this, options ));</div><div class='line' id='LC15722'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15723'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC15724'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15725'><br/></div><div class='line' id='LC15726'><br/></div><div class='line' id='LC15727'>}(jQuery, window, document));</div><div class='line' id='LC15728'><br/></div><div class='line' id='LC15729'>;(function($, window, document, undefined) {</div><div class='line' id='LC15730'><br/></div><div class='line' id='LC15731'>&nbsp;&nbsp;&nbsp;&nbsp;var defaults = {</div><div class='line' id='LC15732'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;namespace: &#39;&#39;,</div><div class='line' id='LC15733'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;widget_selector: &#39;li&#39;,</div><div class='line' id='LC15734'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;widget_margins: [10, 10],</div><div class='line' id='LC15735'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;widget_base_dimensions: [400, 225],</div><div class='line' id='LC15736'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extra_rows: 0,</div><div class='line' id='LC15737'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extra_cols: 0,</div><div class='line' id='LC15738'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;min_cols: 1,</div><div class='line' id='LC15739'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;min_rows: 15,</div><div class='line' id='LC15740'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;max_size_x: 6,</div><div class='line' id='LC15741'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;autogenerate_stylesheet: true,</div><div class='line' id='LC15742'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;avoid_overlapped_widgets: true,</div><div class='line' id='LC15743'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;serialize_params: function($w, wgd) {</div><div class='line' id='LC15744'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return {</div><div class='line' id='LC15745'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;col: wgd.col,</div><div class='line' id='LC15746'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row: wgd.row,</div><div class='line' id='LC15747'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_x: wgd.size_x,</div><div class='line' id='LC15748'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_y: wgd.size_y</div><div class='line' id='LC15749'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15750'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC15751'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;collision: {},</div><div class='line' id='LC15752'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;draggable: {</div><div class='line' id='LC15753'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;distance: 4</div><div class='line' id='LC15754'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15755'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15756'><br/></div><div class='line' id='LC15757'><br/></div><div class='line' id='LC15758'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC15759'>&nbsp;&nbsp;&nbsp;&nbsp;* @class Gridster</div><div class='line' id='LC15760'>&nbsp;&nbsp;&nbsp;&nbsp;* @uses Draggable</div><div class='line' id='LC15761'>&nbsp;&nbsp;&nbsp;&nbsp;* @uses Collision</div><div class='line' id='LC15762'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {HTMLElement} el The HTMLelement that contains all the widgets.</div><div class='line' id='LC15763'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object} [options] An Object with all options you want to</div><div class='line' id='LC15764'>&nbsp;&nbsp;&nbsp;&nbsp;*        overwrite:</div><div class='line' id='LC15765'>&nbsp;&nbsp;&nbsp;&nbsp;*    @param {HTMLElement|String} [options.widget_selector] Define who will</div><div class='line' id='LC15766'>&nbsp;&nbsp;&nbsp;&nbsp;*     be the draggable widgets. Can be a CSS Selector String or a</div><div class='line' id='LC15767'>&nbsp;&nbsp;&nbsp;&nbsp;*     collection of HTMLElements</div><div class='line' id='LC15768'>&nbsp;&nbsp;&nbsp;&nbsp;*    @param {Array} [options.widget_margins] Margin between widgets.</div><div class='line' id='LC15769'>&nbsp;&nbsp;&nbsp;&nbsp;*     The first index for the horizontal margin (left, right) and</div><div class='line' id='LC15770'>&nbsp;&nbsp;&nbsp;&nbsp;*     the second for the vertical margin (top, bottom).</div><div class='line' id='LC15771'>&nbsp;&nbsp;&nbsp;&nbsp;*    @param {Array} [options.widget_base_dimensions] Base widget dimensions</div><div class='line' id='LC15772'>&nbsp;&nbsp;&nbsp;&nbsp;*     in pixels. The first index for the width and the second for the</div><div class='line' id='LC15773'>&nbsp;&nbsp;&nbsp;&nbsp;*     height.</div><div class='line' id='LC15774'>&nbsp;&nbsp;&nbsp;&nbsp;*    @param {Number} [options.extra_cols] Add more columns in addition to</div><div class='line' id='LC15775'>&nbsp;&nbsp;&nbsp;&nbsp;*     those that have been calculated.</div><div class='line' id='LC15776'>&nbsp;&nbsp;&nbsp;&nbsp;*    @param {Number} [options.extra_rows] Add more rows in addition to</div><div class='line' id='LC15777'>&nbsp;&nbsp;&nbsp;&nbsp;*     those that have been calculated.</div><div class='line' id='LC15778'>&nbsp;&nbsp;&nbsp;&nbsp;*    @param {Number} [options.min_cols] The minimum required columns.</div><div class='line' id='LC15779'>&nbsp;&nbsp;&nbsp;&nbsp;*    @param {Number} [options.min_rows] The minimum required rows.</div><div class='line' id='LC15780'>&nbsp;&nbsp;&nbsp;&nbsp;*    @param {Number} [options.max_size_x] The maximum number of columns</div><div class='line' id='LC15781'>&nbsp;&nbsp;&nbsp;&nbsp;*     that a widget can span.</div><div class='line' id='LC15782'>&nbsp;&nbsp;&nbsp;&nbsp;*    @param {Boolean} [options.autogenerate_stylesheet] If true, all the</div><div class='line' id='LC15783'>&nbsp;&nbsp;&nbsp;&nbsp;*     CSS required to position all widgets in their respective columns</div><div class='line' id='LC15784'>&nbsp;&nbsp;&nbsp;&nbsp;*     and rows will be generated automatically and injected to the</div><div class='line' id='LC15785'>&nbsp;&nbsp;&nbsp;&nbsp;*     `&lt;head&gt;` of the document. You can set this to false, and write</div><div class='line' id='LC15786'>&nbsp;&nbsp;&nbsp;&nbsp;*     your own CSS targeting rows and cols via data-attributes like so:</div><div class='line' id='LC15787'>&nbsp;&nbsp;&nbsp;&nbsp;*     `[data-col=&quot;1&quot;] { left: 10px; }`</div><div class='line' id='LC15788'>&nbsp;&nbsp;&nbsp;&nbsp;*    @param {Boolean} [options.avoid_overlapped_widgets] Avoid that widgets loaded</div><div class='line' id='LC15789'>&nbsp;&nbsp;&nbsp;&nbsp;*     from the DOM can be overlapped. It is helpful if the positions were</div><div class='line' id='LC15790'>&nbsp;&nbsp;&nbsp;&nbsp;*     bad stored in the database or if there was any conflict.</div><div class='line' id='LC15791'>&nbsp;&nbsp;&nbsp;&nbsp;*    @param {Function} [options.serialize_params] Return the data you want</div><div class='line' id='LC15792'>&nbsp;&nbsp;&nbsp;&nbsp;*     for each widget in the serialization. Two arguments are passed:</div><div class='line' id='LC15793'>&nbsp;&nbsp;&nbsp;&nbsp;*     `$w`: the jQuery wrapped HTMLElement, and `wgd`: the grid</div><div class='line' id='LC15794'>&nbsp;&nbsp;&nbsp;&nbsp;*     coords object (`col`, `row`, `size_x`, `size_y`).</div><div class='line' id='LC15795'>&nbsp;&nbsp;&nbsp;&nbsp;*    @param {Object} [options.collision] An Object with all options for</div><div class='line' id='LC15796'>&nbsp;&nbsp;&nbsp;&nbsp;*     Collision class you want to overwrite. See Collision docs for</div><div class='line' id='LC15797'>&nbsp;&nbsp;&nbsp;&nbsp;*     more info.</div><div class='line' id='LC15798'>&nbsp;&nbsp;&nbsp;&nbsp;*    @param {Object} [options.draggable] An Object with all options for</div><div class='line' id='LC15799'>&nbsp;&nbsp;&nbsp;&nbsp;*     Draggable class you want to overwrite. See Draggable docs for more</div><div class='line' id='LC15800'>&nbsp;&nbsp;&nbsp;&nbsp;*     info.</div><div class='line' id='LC15801'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC15802'>&nbsp;&nbsp;&nbsp;&nbsp;* @constructor</div><div class='line' id='LC15803'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC15804'>&nbsp;&nbsp;&nbsp;&nbsp;function Gridster(el, options) {</div><div class='line' id='LC15805'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.options = $.extend(true, defaults, options);</div><div class='line' id='LC15806'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$el = $(el);</div><div class='line' id='LC15807'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$wrapper = this.$el.parent();</div><div class='line' id='LC15808'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$widgets = this.$el.children(this.options.widget_selector).addClass(&#39;gs_w&#39;);</div><div class='line' id='LC15809'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.widgets = [];</div><div class='line' id='LC15810'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$changed = $([]);</div><div class='line' id='LC15811'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.wrapper_width = this.$wrapper.width();</div><div class='line' id='LC15812'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.min_widget_width = (this.options.widget_margins[0] * 2) +</div><div class='line' id='LC15813'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.options.widget_base_dimensions[0];</div><div class='line' id='LC15814'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.min_widget_height = (this.options.widget_margins[1] * 2) +</div><div class='line' id='LC15815'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.options.widget_base_dimensions[1];</div><div class='line' id='LC15816'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.init();</div><div class='line' id='LC15817'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15818'><br/></div><div class='line' id='LC15819'>&nbsp;&nbsp;&nbsp;&nbsp;Gridster.generated_stylesheets = [];</div><div class='line' id='LC15820'><br/></div><div class='line' id='LC15821'>&nbsp;&nbsp;&nbsp;&nbsp;var fn = Gridster.prototype;</div><div class='line' id='LC15822'><br/></div><div class='line' id='LC15823'>&nbsp;&nbsp;&nbsp;&nbsp;fn.init = function() {</div><div class='line' id='LC15824'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.generate_grid_and_stylesheet();</div><div class='line' id='LC15825'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.get_widgets_from_DOM();</div><div class='line' id='LC15826'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set_dom_grid_height();</div><div class='line' id='LC15827'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$wrapper.addClass(&#39;ready&#39;);</div><div class='line' id='LC15828'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.draggable();</div><div class='line' id='LC15829'><br/></div><div class='line' id='LC15830'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.on_window_resize = throttle($.proxy(this.recalculate_faux_grid, this), 200);</div><div class='line' id='LC15831'><br/></div><div class='line' id='LC15832'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(window).bind(&#39;resize&#39;, this.on_window_resize);</div><div class='line' id='LC15833'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15834'><br/></div><div class='line' id='LC15835'><br/></div><div class='line' id='LC15836'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC15837'>&nbsp;&nbsp;&nbsp;&nbsp;* Disables dragging.</div><div class='line' id='LC15838'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC15839'>&nbsp;&nbsp;&nbsp;&nbsp;* @method disable</div><div class='line' id='LC15840'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Class} Returns the instance of the Gridster Class.</div><div class='line' id='LC15841'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC15842'>&nbsp;&nbsp;&nbsp;&nbsp;fn.disable = function() {</div><div class='line' id='LC15843'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$wrapper.find(&#39;.player-revert&#39;).removeClass(&#39;player-revert&#39;);</div><div class='line' id='LC15844'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.drag_api.disable();</div><div class='line' id='LC15845'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC15846'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15847'><br/></div><div class='line' id='LC15848'><br/></div><div class='line' id='LC15849'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC15850'>&nbsp;&nbsp;&nbsp;&nbsp;* Enables dragging.</div><div class='line' id='LC15851'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC15852'>&nbsp;&nbsp;&nbsp;&nbsp;* @method enable</div><div class='line' id='LC15853'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Class} Returns the instance of the Gridster Class.</div><div class='line' id='LC15854'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC15855'>&nbsp;&nbsp;&nbsp;&nbsp;fn.enable = function() {</div><div class='line' id='LC15856'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.drag_api.enable();</div><div class='line' id='LC15857'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC15858'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15859'><br/></div><div class='line' id='LC15860'><br/></div><div class='line' id='LC15861'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC15862'>&nbsp;&nbsp;&nbsp;&nbsp;* Add a new widget to the grid.</div><div class='line' id='LC15863'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC15864'>&nbsp;&nbsp;&nbsp;&nbsp;* @method add_widget</div><div class='line' id='LC15865'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {String|HTMLElement} html The string representing the HTML of the widget</div><div class='line' id='LC15866'>&nbsp;&nbsp;&nbsp;&nbsp;*  or the HTMLElement.</div><div class='line' id='LC15867'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} [size_x] The nÂº of rows the widget occupies horizontally.</div><div class='line' id='LC15868'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} [size_y] The nÂº of columns the widget occupies vertically.</div><div class='line' id='LC15869'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} [col] The column the widget should start in.</div><div class='line' id='LC15870'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} [row] The row the widget should start in.</div><div class='line' id='LC15871'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {HTMLElement} Returns the jQuery wrapped HTMLElement representing.</div><div class='line' id='LC15872'>&nbsp;&nbsp;&nbsp;&nbsp;*  the widget that was just created.</div><div class='line' id='LC15873'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC15874'>&nbsp;&nbsp;&nbsp;&nbsp;fn.add_widget = function(html, size_x, size_y, col, row) {</div><div class='line' id='LC15875'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var pos;</div><div class='line' id='LC15876'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_x || (size_x = 1);</div><div class='line' id='LC15877'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_y || (size_y = 1);</div><div class='line' id='LC15878'><br/></div><div class='line' id='LC15879'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!col &amp; !row) {</div><div class='line' id='LC15880'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pos = this.next_position(size_x, size_y);</div><div class='line' id='LC15881'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{</div><div class='line' id='LC15882'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pos = {</div><div class='line' id='LC15883'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;col: col,</div><div class='line' id='LC15884'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row: row</div><div class='line' id='LC15885'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15886'><br/></div><div class='line' id='LC15887'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.empty_cells(col, row, size_x, size_y);</div><div class='line' id='LC15888'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15889'><br/></div><div class='line' id='LC15890'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $w = $(html).attr({</div><div class='line' id='LC15891'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;data-col&#39;: pos.col,</div><div class='line' id='LC15892'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;data-row&#39;: pos.row,</div><div class='line' id='LC15893'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;data-sizex&#39; : size_x,</div><div class='line' id='LC15894'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;data-sizey&#39; : size_y</div><div class='line' id='LC15895'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}).addClass(&#39;gs_w&#39;).appendTo(this.$el).hide();</div><div class='line' id='LC15896'><br/></div><div class='line' id='LC15897'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$widgets = this.$widgets.add($w);</div><div class='line' id='LC15898'><br/></div><div class='line' id='LC15899'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.register_widget($w);</div><div class='line' id='LC15900'><br/></div><div class='line' id='LC15901'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.add_faux_rows(pos.size_y);</div><div class='line' id='LC15902'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//this.add_faux_cols(pos.size_x);</div><div class='line' id='LC15903'><br/></div><div class='line' id='LC15904'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set_dom_grid_height();</div><div class='line' id='LC15905'><br/></div><div class='line' id='LC15906'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $w.fadeIn();</div><div class='line' id='LC15907'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15908'><br/></div><div class='line' id='LC15909'><br/></div><div class='line' id='LC15910'><br/></div><div class='line' id='LC15911'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC15912'>&nbsp;&nbsp;&nbsp;&nbsp;* Change the size of a widget.</div><div class='line' id='LC15913'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC15914'>&nbsp;&nbsp;&nbsp;&nbsp;* @method resize_widget</div><div class='line' id='LC15915'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {HTMLElement} $widget The jQuery wrapped HTMLElement</div><div class='line' id='LC15916'>&nbsp;&nbsp;&nbsp;&nbsp;*  representing the widget.</div><div class='line' id='LC15917'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} size_x The number of columns that will occupy the widget.</div><div class='line' id='LC15918'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} size_y The number of rows that will occupy the widget.</div><div class='line' id='LC15919'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {HTMLElement} Returns $widget.</div><div class='line' id='LC15920'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC15921'>&nbsp;&nbsp;&nbsp;&nbsp;fn.resize_widget = function($widget, size_x, size_y) {</div><div class='line' id='LC15922'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var wgd = $widget.coords().grid;</div><div class='line' id='LC15923'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_x || (size_x = wgd.size_x);</div><div class='line' id='LC15924'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_y || (size_y = wgd.size_y);</div><div class='line' id='LC15925'><br/></div><div class='line' id='LC15926'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (size_x &gt; this.cols) {</div><div class='line' id='LC15927'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_x = this.cols;</div><div class='line' id='LC15928'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15929'><br/></div><div class='line' id='LC15930'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var old_cells_occupied = this.get_cells_occupied(wgd);</div><div class='line' id='LC15931'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var old_size_x = wgd.size_x;</div><div class='line' id='LC15932'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var old_size_y = wgd.size_y;</div><div class='line' id='LC15933'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var old_col = wgd.col;</div><div class='line' id='LC15934'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var new_col = old_col;</div><div class='line' id='LC15935'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var wider = size_x &gt; old_size_x;</div><div class='line' id='LC15936'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var taller = size_y &gt; old_size_y;</div><div class='line' id='LC15937'><br/></div><div class='line' id='LC15938'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (old_col + size_x - 1 &gt; this.cols) {</div><div class='line' id='LC15939'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var diff = old_col + (size_x - 1) - this.cols;</div><div class='line' id='LC15940'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var c = old_col - diff;</div><div class='line' id='LC15941'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new_col = Math.max(1, c);</div><div class='line' id='LC15942'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15943'><br/></div><div class='line' id='LC15944'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var new_grid_data = {</div><div class='line' id='LC15945'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;col: new_col,</div><div class='line' id='LC15946'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row: wgd.row,</div><div class='line' id='LC15947'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_x: size_x,</div><div class='line' id='LC15948'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_y: size_y</div><div class='line' id='LC15949'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC15950'><br/></div><div class='line' id='LC15951'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var new_cells_occupied = this.get_cells_occupied(new_grid_data);</div><div class='line' id='LC15952'><br/></div><div class='line' id='LC15953'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var empty_cols = [];</div><div class='line' id='LC15954'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.each(old_cells_occupied.cols, function(i, col) {</div><div class='line' id='LC15955'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($.inArray(col, new_cells_occupied.cols) === -1) {</div><div class='line' id='LC15956'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;empty_cols.push(col);</div><div class='line' id='LC15957'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15958'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC15959'><br/></div><div class='line' id='LC15960'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var occupied_cols = [];</div><div class='line' id='LC15961'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.each(new_cells_occupied.cols, function(i, col) {</div><div class='line' id='LC15962'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($.inArray(col, old_cells_occupied.cols) === -1) {</div><div class='line' id='LC15963'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;occupied_cols.push(col);</div><div class='line' id='LC15964'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15965'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC15966'><br/></div><div class='line' id='LC15967'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var empty_rows = [];</div><div class='line' id='LC15968'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.each(old_cells_occupied.rows, function(i, row) {</div><div class='line' id='LC15969'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($.inArray(row, new_cells_occupied.rows) === -1) {</div><div class='line' id='LC15970'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;empty_rows.push(row);</div><div class='line' id='LC15971'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15972'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC15973'><br/></div><div class='line' id='LC15974'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var occupied_rows = [];</div><div class='line' id='LC15975'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.each(new_cells_occupied.rows, function(i, row) {</div><div class='line' id='LC15976'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($.inArray(row, old_cells_occupied.rows) === -1) {</div><div class='line' id='LC15977'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;occupied_rows.push(row);</div><div class='line' id='LC15978'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15979'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC15980'><br/></div><div class='line' id='LC15981'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.remove_from_gridmap(wgd);</div><div class='line' id='LC15982'><br/></div><div class='line' id='LC15983'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (occupied_cols.length) {</div><div class='line' id='LC15984'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var cols_to_empty = [</div><div class='line' id='LC15985'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new_col, wgd.row, size_x, Math.min(old_size_y, size_y), $widget</div><div class='line' id='LC15986'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;];</div><div class='line' id='LC15987'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.empty_cells.apply(this, cols_to_empty);</div><div class='line' id='LC15988'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15989'><br/></div><div class='line' id='LC15990'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (occupied_rows.length) {</div><div class='line' id='LC15991'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var rows_to_empty = [new_col, wgd.row, size_x, size_y, $widget];</div><div class='line' id='LC15992'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.empty_cells.apply(this, rows_to_empty);</div><div class='line' id='LC15993'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC15994'><br/></div><div class='line' id='LC15995'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wgd.col = new_col;</div><div class='line' id='LC15996'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wgd.size_x = size_x;</div><div class='line' id='LC15997'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wgd.size_y = size_y;</div><div class='line' id='LC15998'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.add_to_gridmap(new_grid_data, $widget);</div><div class='line' id='LC15999'><br/></div><div class='line' id='LC16000'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//update coords instance attributes</div><div class='line' id='LC16001'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$widget.data(&#39;coords&#39;).update({</div><div class='line' id='LC16002'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;width: (size_x * this.options.widget_base_dimensions[0] +</div><div class='line' id='LC16003'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;((size_x - 1) * this.options.widget_margins[0]) * 2),</div><div class='line' id='LC16004'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;height: (size_y * this.options.widget_base_dimensions[1] +</div><div class='line' id='LC16005'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;((size_y - 1) * this.options.widget_margins[1]) * 2)</div><div class='line' id='LC16006'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16007'><br/></div><div class='line' id='LC16008'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (size_y &gt; old_size_y) {</div><div class='line' id='LC16009'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.add_faux_rows(size_y - old_size_y);</div><div class='line' id='LC16010'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16011'><br/></div><div class='line' id='LC16012'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (size_x &gt; old_size_x) {</div><div class='line' id='LC16013'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.add_faux_cols(size_x - old_size_x);</div><div class='line' id='LC16014'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16015'><br/></div><div class='line' id='LC16016'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$widget.attr({</div><div class='line' id='LC16017'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;data-col&#39;: new_col,</div><div class='line' id='LC16018'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;data-sizex&#39;: size_x,</div><div class='line' id='LC16019'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;data-sizey&#39;: size_y</div><div class='line' id='LC16020'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16021'><br/></div><div class='line' id='LC16022'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty_cols.length) {</div><div class='line' id='LC16023'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var cols_to_remove_holes = [</div><div class='line' id='LC16024'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;empty_cols[0], wgd.row,</div><div class='line' id='LC16025'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;empty_cols.length,</div><div class='line' id='LC16026'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Math.min(old_size_y, size_y),</div><div class='line' id='LC16027'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$widget</div><div class='line' id='LC16028'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;];</div><div class='line' id='LC16029'><br/></div><div class='line' id='LC16030'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.remove_empty_cells.apply(this, cols_to_remove_holes);</div><div class='line' id='LC16031'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16032'><br/></div><div class='line' id='LC16033'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty_rows.length) {</div><div class='line' id='LC16034'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var rows_to_remove_holes = [</div><div class='line' id='LC16035'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new_col, wgd.row, size_x, size_y, $widget</div><div class='line' id='LC16036'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;];</div><div class='line' id='LC16037'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.remove_empty_cells.apply(this, rows_to_remove_holes);</div><div class='line' id='LC16038'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16039'><br/></div><div class='line' id='LC16040'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $widget;</div><div class='line' id='LC16041'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16042'><br/></div><div class='line' id='LC16043'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16044'>&nbsp;&nbsp;&nbsp;&nbsp;* Move down widgets in cells represented by the arguments col, row, size_x,</div><div class='line' id='LC16045'>&nbsp;&nbsp;&nbsp;&nbsp;* size_y</div><div class='line' id='LC16046'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16047'>&nbsp;&nbsp;&nbsp;&nbsp;* @method empty_cells</div><div class='line' id='LC16048'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} col The column where the group of cells begin.</div><div class='line' id='LC16049'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} row The row where the group of cells begin.</div><div class='line' id='LC16050'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} size_x The number of columns that the group of cells</div><div class='line' id='LC16051'>&nbsp;&nbsp;&nbsp;&nbsp;* occupy.</div><div class='line' id='LC16052'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} size_y The number of rows that the group of cells</div><div class='line' id='LC16053'>&nbsp;&nbsp;&nbsp;&nbsp;* occupy.</div><div class='line' id='LC16054'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {HTMLElement} $exclude Exclude widgets from being moved.</div><div class='line' id='LC16055'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Class} Returns the instance of the Gridster Class.</div><div class='line' id='LC16056'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16057'>&nbsp;&nbsp;&nbsp;&nbsp;fn.empty_cells = function(col, row, size_x, size_y, $exclude) {</div><div class='line' id='LC16058'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $nexts = this.widgets_below({</div><div class='line' id='LC16059'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;col: col,</div><div class='line' id='LC16060'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row: row - size_y,</div><div class='line' id='LC16061'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_x: size_x,</div><div class='line' id='LC16062'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_y: size_y</div><div class='line' id='LC16063'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16064'><br/></div><div class='line' id='LC16065'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$nexts.not($exclude).each($.proxy(function(i, w) {</div><div class='line' id='LC16066'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var wgd = $(w).coords().grid;</div><div class='line' id='LC16067'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!(wgd.row &lt;= (row + size_y - 1))) { return; }</div><div class='line' id='LC16068'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var diff =  (row + size_y) - wgd.row;</div><div class='line' id='LC16069'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.move_widget_down($(w), diff);</div><div class='line' id='LC16070'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, this));</div><div class='line' id='LC16071'><br/></div><div class='line' id='LC16072'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set_dom_grid_height();</div><div class='line' id='LC16073'><br/></div><div class='line' id='LC16074'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC16075'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16076'><br/></div><div class='line' id='LC16077'><br/></div><div class='line' id='LC16078'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16079'>&nbsp;&nbsp;&nbsp;&nbsp;* Move up widgets below cells represented by the arguments col, row, size_x,</div><div class='line' id='LC16080'>&nbsp;&nbsp;&nbsp;&nbsp;* size_y.</div><div class='line' id='LC16081'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16082'>&nbsp;&nbsp;&nbsp;&nbsp;* @method remove_empty_cells</div><div class='line' id='LC16083'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} col The column where the group of cells begin.</div><div class='line' id='LC16084'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} row The row where the group of cells begin.</div><div class='line' id='LC16085'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} size_x The number of columns that the group of cells</div><div class='line' id='LC16086'>&nbsp;&nbsp;&nbsp;&nbsp;* occupy.</div><div class='line' id='LC16087'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} size_y The number of rows that the group of cells</div><div class='line' id='LC16088'>&nbsp;&nbsp;&nbsp;&nbsp;* occupy.</div><div class='line' id='LC16089'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {HTMLElement} exclude Exclude widgets from being moved.</div><div class='line' id='LC16090'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Class} Returns the instance of the Gridster Class.</div><div class='line' id='LC16091'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16092'>&nbsp;&nbsp;&nbsp;&nbsp;fn.remove_empty_cells = function(col, row, size_x, size_y, exclude) {</div><div class='line' id='LC16093'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $nexts = this.widgets_below({</div><div class='line' id='LC16094'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;col: col,</div><div class='line' id='LC16095'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row: row,</div><div class='line' id='LC16096'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_x: size_x,</div><div class='line' id='LC16097'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_y: size_y</div><div class='line' id='LC16098'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16099'><br/></div><div class='line' id='LC16100'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$nexts.not(exclude).each($.proxy(function(i, widget) {</div><div class='line' id='LC16101'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.move_widget_up( $(widget), size_y );</div><div class='line' id='LC16102'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, this));</div><div class='line' id='LC16103'><br/></div><div class='line' id='LC16104'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set_dom_grid_height();</div><div class='line' id='LC16105'><br/></div><div class='line' id='LC16106'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC16107'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16108'><br/></div><div class='line' id='LC16109'><br/></div><div class='line' id='LC16110'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16111'>&nbsp;&nbsp;&nbsp;&nbsp;* Get the most left column below to add a new widget.</div><div class='line' id='LC16112'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16113'>&nbsp;&nbsp;&nbsp;&nbsp;* @method next_position</div><div class='line' id='LC16114'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} size_x The nÂº of rows the widget occupies horizontally.</div><div class='line' id='LC16115'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} size_y The nÂº of columns the widget occupies vertically.</div><div class='line' id='LC16116'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Object} Returns a grid coords object representing the future</div><div class='line' id='LC16117'>&nbsp;&nbsp;&nbsp;&nbsp;*  widget coords.</div><div class='line' id='LC16118'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16119'>&nbsp;&nbsp;&nbsp;&nbsp;fn.next_position = function(size_x, size_y) {</div><div class='line' id='LC16120'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_x || (size_x = 1);</div><div class='line' id='LC16121'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_y || (size_y = 1);</div><div class='line' id='LC16122'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var ga = this.gridmap;</div><div class='line' id='LC16123'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var cols_l = ga.length;</div><div class='line' id='LC16124'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var valid_pos = [];</div><div class='line' id='LC16125'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var rows_l;</div><div class='line' id='LC16126'><br/></div><div class='line' id='LC16127'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var c = 1; c &lt; cols_l; c++) {</div><div class='line' id='LC16128'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rows_l = ga[c].length;</div><div class='line' id='LC16129'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var r = 1; r &lt;= rows_l; r++) {</div><div class='line' id='LC16130'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var can_move_to = this.can_move_to({</div><div class='line' id='LC16131'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_x: size_x,</div><div class='line' id='LC16132'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_y: size_y</div><div class='line' id='LC16133'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, c, r);</div><div class='line' id='LC16134'><br/></div><div class='line' id='LC16135'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (can_move_to) {</div><div class='line' id='LC16136'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;valid_pos.push({</div><div class='line' id='LC16137'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;col: c,</div><div class='line' id='LC16138'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row: r,</div><div class='line' id='LC16139'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_y: size_y,</div><div class='line' id='LC16140'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_x: size_x</div><div class='line' id='LC16141'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16142'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16143'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16144'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16145'><br/></div><div class='line' id='LC16146'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (valid_pos.length) {</div><div class='line' id='LC16147'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.sort_by_row_and_col_asc(valid_pos)[0];</div><div class='line' id='LC16148'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16149'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC16150'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16151'><br/></div><div class='line' id='LC16152'><br/></div><div class='line' id='LC16153'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16154'>&nbsp;&nbsp;&nbsp;&nbsp;* Remove a widget from the grid.</div><div class='line' id='LC16155'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16156'>&nbsp;&nbsp;&nbsp;&nbsp;* @method remove_widget</div><div class='line' id='LC16157'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {HTMLElement} el The jQuery wrapped HTMLElement you want to remove.</div><div class='line' id='LC16158'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Boolean|Function} silent If true, widgets below the removed one</div><div class='line' id='LC16159'>&nbsp;&nbsp;&nbsp;&nbsp;* will not move up. If a Function is passed it will be used as callback.</div><div class='line' id='LC16160'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Function} callback Function executed when the widget is removed.</div><div class='line' id='LC16161'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Class} Returns the instance of the Gridster Class.</div><div class='line' id='LC16162'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16163'>&nbsp;&nbsp;&nbsp;&nbsp;fn.remove_widget = function(el, silent, callback) {</div><div class='line' id='LC16164'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $el = el instanceof jQuery ? el : $(el);</div><div class='line' id='LC16165'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var wgd = $el.coords().grid;</div><div class='line' id='LC16166'><br/></div><div class='line' id='LC16167'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// if silent is a function assume it&#39;s a callback</div><div class='line' id='LC16168'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($.isFunction(silent)) {</div><div class='line' id='LC16169'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback = silent;</div><div class='line' id='LC16170'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;silent = false;</div><div class='line' id='LC16171'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16172'><br/></div><div class='line' id='LC16173'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cells_occupied_by_placeholder = {};</div><div class='line' id='LC16174'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$widgets = this.$widgets.not($el);</div><div class='line' id='LC16175'><br/></div><div class='line' id='LC16176'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $nexts = this.widgets_below($el);</div><div class='line' id='LC16177'><br/></div><div class='line' id='LC16178'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.remove_from_gridmap(wgd);</div><div class='line' id='LC16179'><br/></div><div class='line' id='LC16180'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$el.fadeOut($.proxy(function() {</div><div class='line' id='LC16181'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$el.remove();</div><div class='line' id='LC16182'><br/></div><div class='line' id='LC16183'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!silent) {</div><div class='line' id='LC16184'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$nexts.each($.proxy(function(i, widget) {</div><div class='line' id='LC16185'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.move_widget_up( $(widget), wgd.size_y );</div><div class='line' id='LC16186'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, this));</div><div class='line' id='LC16187'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16188'><br/></div><div class='line' id='LC16189'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set_dom_grid_height();</div><div class='line' id='LC16190'><br/></div><div class='line' id='LC16191'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (callback) {</div><div class='line' id='LC16192'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback.call(this, el);</div><div class='line' id='LC16193'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16194'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, this));</div><div class='line' id='LC16195'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16196'><br/></div><div class='line' id='LC16197'><br/></div><div class='line' id='LC16198'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16199'>&nbsp;&nbsp;&nbsp;&nbsp;* Remove all widgets from the grid.</div><div class='line' id='LC16200'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16201'>&nbsp;&nbsp;&nbsp;&nbsp;* @method remove_all_widgets</div><div class='line' id='LC16202'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Function} callback Function executed for each widget removed.</div><div class='line' id='LC16203'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Class} Returns the instance of the Gridster Class.</div><div class='line' id='LC16204'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16205'>&nbsp;&nbsp;&nbsp;&nbsp;fn.remove_all_widgets = function(callback) {</div><div class='line' id='LC16206'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$widgets.each($.proxy(function(i, el){</div><div class='line' id='LC16207'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.remove_widget(el, true, callback);</div><div class='line' id='LC16208'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, this));</div><div class='line' id='LC16209'><br/></div><div class='line' id='LC16210'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC16211'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16212'><br/></div><div class='line' id='LC16213'><br/></div><div class='line' id='LC16214'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16215'>&nbsp;&nbsp;&nbsp;&nbsp;* Returns a serialized array of the widgets in the grid.</div><div class='line' id='LC16216'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16217'>&nbsp;&nbsp;&nbsp;&nbsp;* @method serialize</div><div class='line' id='LC16218'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {HTMLElement} [$widgets] The collection of jQuery wrapped</div><div class='line' id='LC16219'>&nbsp;&nbsp;&nbsp;&nbsp;*  HTMLElements you want to serialize. If no argument is passed all widgets</div><div class='line' id='LC16220'>&nbsp;&nbsp;&nbsp;&nbsp;*  will be serialized.</div><div class='line' id='LC16221'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Array} Returns an Array of Objects with the data specified in</div><div class='line' id='LC16222'>&nbsp;&nbsp;&nbsp;&nbsp;*  the serialize_params option.</div><div class='line' id='LC16223'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16224'>&nbsp;&nbsp;&nbsp;&nbsp;fn.serialize = function($widgets) {</div><div class='line' id='LC16225'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$widgets || ($widgets = this.$widgets);</div><div class='line' id='LC16226'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result = [];</div><div class='line' id='LC16227'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$widgets.each($.proxy(function(i, widget) {</div><div class='line' id='LC16228'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.push(this.options.serialize_params(</div><div class='line' id='LC16229'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(widget), $(widget).coords().grid ) );</div><div class='line' id='LC16230'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, this));</div><div class='line' id='LC16231'><br/></div><div class='line' id='LC16232'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC16233'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16234'><br/></div><div class='line' id='LC16235'><br/></div><div class='line' id='LC16236'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16237'>&nbsp;&nbsp;&nbsp;&nbsp;* Returns a serialized array of the widgets that have changed their</div><div class='line' id='LC16238'>&nbsp;&nbsp;&nbsp;&nbsp;*  position.</div><div class='line' id='LC16239'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16240'>&nbsp;&nbsp;&nbsp;&nbsp;* @method serialize_changed</div><div class='line' id='LC16241'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Array} Returns an Array of Objects with the data specified in</div><div class='line' id='LC16242'>&nbsp;&nbsp;&nbsp;&nbsp;*  the serialize_params option.</div><div class='line' id='LC16243'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16244'>&nbsp;&nbsp;&nbsp;&nbsp;fn.serialize_changed = function() {</div><div class='line' id='LC16245'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.serialize(this.$changed);</div><div class='line' id='LC16246'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16247'><br/></div><div class='line' id='LC16248'><br/></div><div class='line' id='LC16249'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16250'>&nbsp;&nbsp;&nbsp;&nbsp;* Creates the grid coords object representing the widget a add it to the</div><div class='line' id='LC16251'>&nbsp;&nbsp;&nbsp;&nbsp;* mapped array of positions.</div><div class='line' id='LC16252'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16253'>&nbsp;&nbsp;&nbsp;&nbsp;* @method register_widget</div><div class='line' id='LC16254'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Array} Returns the instance of the Gridster class.</div><div class='line' id='LC16255'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16256'>&nbsp;&nbsp;&nbsp;&nbsp;fn.register_widget = function($el) {</div><div class='line' id='LC16257'><br/></div><div class='line' id='LC16258'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var wgd = {</div><div class='line' id='LC16259'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;col&#39;: parseInt($el.attr(&#39;data-col&#39;), 10),</div><div class='line' id='LC16260'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;row&#39;: parseInt($el.attr(&#39;data-row&#39;), 10),</div><div class='line' id='LC16261'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;size_x&#39;: parseInt($el.attr(&#39;data-sizex&#39;), 10),</div><div class='line' id='LC16262'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;size_y&#39;: parseInt($el.attr(&#39;data-sizey&#39;), 10),</div><div class='line' id='LC16263'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;el&#39;: $el</div><div class='line' id='LC16264'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16265'><br/></div><div class='line' id='LC16266'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.options.avoid_overlapped_widgets &amp;&amp;</div><div class='line' id='LC16267'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;!this.can_move_to(</div><div class='line' id='LC16268'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{size_x: wgd.size_x, size_y: wgd.size_y}, wgd.col, wgd.row)</div><div class='line' id='LC16269'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) {</div><div class='line' id='LC16270'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wgd = this.next_position(wgd.size_x, wgd.size_y);</div><div class='line' id='LC16271'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wgd.el = $el;</div><div class='line' id='LC16272'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$el.attr({</div><div class='line' id='LC16273'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;data-col&#39;: wgd.col,</div><div class='line' id='LC16274'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;data-row&#39;: wgd.row,</div><div class='line' id='LC16275'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;data-sizex&#39;: wgd.size_x,</div><div class='line' id='LC16276'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;data-sizey&#39;: wgd.size_y</div><div class='line' id='LC16277'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16278'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16279'><br/></div><div class='line' id='LC16280'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// attach Coord object to player data-coord attribute</div><div class='line' id='LC16281'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$el.data(&#39;coords&#39;, $el.coords());</div><div class='line' id='LC16282'><br/></div><div class='line' id='LC16283'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Extend Coord object with grid position info</div><div class='line' id='LC16284'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$el.data(&#39;coords&#39;).grid = wgd;</div><div class='line' id='LC16285'><br/></div><div class='line' id='LC16286'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.add_to_gridmap(wgd, $el);</div><div class='line' id='LC16287'><br/></div><div class='line' id='LC16288'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC16289'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16290'><br/></div><div class='line' id='LC16291'><br/></div><div class='line' id='LC16292'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16293'>&nbsp;&nbsp;&nbsp;&nbsp;* Update in the mapped array of positions the value of cells represented by</div><div class='line' id='LC16294'>&nbsp;&nbsp;&nbsp;&nbsp;* the grid coords object passed in the `grid_data` param.</div><div class='line' id='LC16295'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16296'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object} grid_data The grid coords object representing the cells</div><div class='line' id='LC16297'>&nbsp;&nbsp;&nbsp;&nbsp;*  to update in the mapped array.</div><div class='line' id='LC16298'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {HTMLElement|Boolean} value Pass `false` or the jQuery wrapped</div><div class='line' id='LC16299'>&nbsp;&nbsp;&nbsp;&nbsp;*  HTMLElement, depends if you want to delete an existing position or add</div><div class='line' id='LC16300'>&nbsp;&nbsp;&nbsp;&nbsp;*  a new one.</div><div class='line' id='LC16301'>&nbsp;&nbsp;&nbsp;&nbsp;* @method update_widget_position</div><div class='line' id='LC16302'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Class} Returns the instance of the Gridster Class.</div><div class='line' id='LC16303'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16304'>&nbsp;&nbsp;&nbsp;&nbsp;fn.update_widget_position = function(grid_data, value) {</div><div class='line' id='LC16305'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.for_each_cell_occupied(grid_data, function(col, row) {</div><div class='line' id='LC16306'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this.gridmap[col]) { return this; }</div><div class='line' id='LC16307'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.gridmap[col][row] = value;</div><div class='line' id='LC16308'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16309'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC16310'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16311'><br/></div><div class='line' id='LC16312'><br/></div><div class='line' id='LC16313'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16314'>&nbsp;&nbsp;&nbsp;&nbsp;* Remove a widget from the mapped array of positions.</div><div class='line' id='LC16315'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16316'>&nbsp;&nbsp;&nbsp;&nbsp;* @method remove_from_gridmap</div><div class='line' id='LC16317'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object} grid_data The grid coords object representing the cells</div><div class='line' id='LC16318'>&nbsp;&nbsp;&nbsp;&nbsp;*  to update in the mapped array.</div><div class='line' id='LC16319'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Class} Returns the instance of the Gridster Class.</div><div class='line' id='LC16320'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16321'>&nbsp;&nbsp;&nbsp;&nbsp;fn.remove_from_gridmap = function(grid_data) {</div><div class='line' id='LC16322'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.update_widget_position(grid_data, false);</div><div class='line' id='LC16323'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16324'><br/></div><div class='line' id='LC16325'><br/></div><div class='line' id='LC16326'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16327'>&nbsp;&nbsp;&nbsp;&nbsp;* Add a widget to the mapped array of positions.</div><div class='line' id='LC16328'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16329'>&nbsp;&nbsp;&nbsp;&nbsp;* @method add_to_gridmap</div><div class='line' id='LC16330'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object} grid_data The grid coords object representing the cells</div><div class='line' id='LC16331'>&nbsp;&nbsp;&nbsp;&nbsp;*  to update in the mapped array.</div><div class='line' id='LC16332'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {HTMLElement|Boolean} value The value to set in the specified</div><div class='line' id='LC16333'>&nbsp;&nbsp;&nbsp;&nbsp;*  position .</div><div class='line' id='LC16334'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Class} Returns the instance of the Gridster Class.</div><div class='line' id='LC16335'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16336'>&nbsp;&nbsp;&nbsp;&nbsp;fn.add_to_gridmap = function(grid_data, value) {</div><div class='line' id='LC16337'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.update_widget_position(grid_data, value || grid_data.el);</div><div class='line' id='LC16338'><br/></div><div class='line' id='LC16339'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (grid_data.el) {</div><div class='line' id='LC16340'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $widgets = this.widgets_below(grid_data.el);</div><div class='line' id='LC16341'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$widgets.each($.proxy(function(i, widget) {</div><div class='line' id='LC16342'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.move_widget_up( $(widget));</div><div class='line' id='LC16343'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, this));</div><div class='line' id='LC16344'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16345'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16346'><br/></div><div class='line' id='LC16347'><br/></div><div class='line' id='LC16348'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16349'>&nbsp;&nbsp;&nbsp;&nbsp;* Make widgets draggable.</div><div class='line' id='LC16350'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16351'>&nbsp;&nbsp;&nbsp;&nbsp;* @uses Draggable</div><div class='line' id='LC16352'>&nbsp;&nbsp;&nbsp;&nbsp;* @method draggable</div><div class='line' id='LC16353'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Class} Returns the instance of the Gridster Class.</div><div class='line' id='LC16354'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16355'>&nbsp;&nbsp;&nbsp;&nbsp;fn.draggable = function() {</div><div class='line' id='LC16356'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var self = this;</div><div class='line' id='LC16357'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var draggable_options = $.extend(true, {}, this.options.draggable, {</div><div class='line' id='LC16358'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;offset_left: this.options.widget_margins[0],</div><div class='line' id='LC16359'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start: function(event, ui) {</div><div class='line' id='LC16360'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.$widgets.filter(&#39;.player-revert&#39;)</div><div class='line' id='LC16361'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.removeClass(&#39;player-revert&#39;);</div><div class='line' id='LC16362'><br/></div><div class='line' id='LC16363'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.$player = $(this);</div><div class='line' id='LC16364'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.$helper = self.options.draggable.helper === &#39;clone&#39; ?</div><div class='line' id='LC16365'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(ui.helper) : self.$player;</div><div class='line' id='LC16366'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.helper = !self.$helper.is(self.$player);</div><div class='line' id='LC16367'><br/></div><div class='line' id='LC16368'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.on_start_drag.call(self, event, ui);</div><div class='line' id='LC16369'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.$el.trigger(&#39;gridster:dragstart&#39;);</div><div class='line' id='LC16370'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC16371'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop: function(event, ui) {</div><div class='line' id='LC16372'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.on_stop_drag.call(self, event, ui);</div><div class='line' id='LC16373'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.$el.trigger(&#39;gridster:dragstop&#39;);</div><div class='line' id='LC16374'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC16375'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;drag: throttle(function(event, ui) {</div><div class='line' id='LC16376'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.on_drag.call(self, event, ui);</div><div class='line' id='LC16377'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.$el.trigger(&#39;gridster:drag&#39;);</div><div class='line' id='LC16378'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, 60)</div><div class='line' id='LC16379'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16380'><br/></div><div class='line' id='LC16381'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.drag_api = this.$el.drag(draggable_options).data(&#39;drag&#39;);</div><div class='line' id='LC16382'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC16383'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16384'><br/></div><div class='line' id='LC16385'><br/></div><div class='line' id='LC16386'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16387'>&nbsp;&nbsp;&nbsp;&nbsp;* This function is executed when the player begins to be dragged.</div><div class='line' id='LC16388'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16389'>&nbsp;&nbsp;&nbsp;&nbsp;* @method on_start_drag</div><div class='line' id='LC16390'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Event} event The original browser event</div><div class='line' id='LC16391'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object} ui A prepared ui object.</div><div class='line' id='LC16392'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16393'>&nbsp;&nbsp;&nbsp;&nbsp;fn.on_start_drag = function(event, ui) {</div><div class='line' id='LC16394'><br/></div><div class='line' id='LC16395'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$helper.add(this.$player).add(this.$wrapper).addClass(&#39;dragging&#39;);</div><div class='line' id='LC16396'><br/></div><div class='line' id='LC16397'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$player.addClass(&#39;player&#39;);</div><div class='line' id='LC16398'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.player_grid_data = this.$player.coords().grid;</div><div class='line' id='LC16399'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.placeholder_grid_data = $.extend({}, this.player_grid_data);</div><div class='line' id='LC16400'><br/></div><div class='line' id='LC16401'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//set new grid height along the dragging period</div><div class='line' id='LC16402'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$el.css(&#39;height&#39;, this.$el.height() +</div><div class='line' id='LC16403'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(this.player_grid_data.size_y * this.min_widget_height));</div><div class='line' id='LC16404'><br/></div><div class='line' id='LC16405'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var colliders = this.faux_grid;</div><div class='line' id='LC16406'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var coords = this.$player.data(&#39;coords&#39;).coords;</div><div class='line' id='LC16407'><br/></div><div class='line' id='LC16408'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cells_occupied_by_player = this.get_cells_occupied(</div><div class='line' id='LC16409'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.player_grid_data);</div><div class='line' id='LC16410'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cells_occupied_by_placeholder = this.get_cells_occupied(</div><div class='line' id='LC16411'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.placeholder_grid_data);</div><div class='line' id='LC16412'><br/></div><div class='line' id='LC16413'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.last_cols = [];</div><div class='line' id='LC16414'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.last_rows = [];</div><div class='line' id='LC16415'><br/></div><div class='line' id='LC16416'><br/></div><div class='line' id='LC16417'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// see jquery.collision.js</div><div class='line' id='LC16418'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.collision_api = this.$helper.collision(</div><div class='line' id='LC16419'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colliders, this.options.collision);</div><div class='line' id='LC16420'><br/></div><div class='line' id='LC16421'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$preview_holder = $(&#39;&lt;li /&gt;&#39;, {</div><div class='line' id='LC16422'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;class&#39;: &#39;preview-holder&#39;,</div><div class='line' id='LC16423'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;data-row&#39;: this.$player.attr(&#39;data-row&#39;),</div><div class='line' id='LC16424'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;data-col&#39;: this.$player.attr(&#39;data-col&#39;),</div><div class='line' id='LC16425'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;css: {</div><div class='line' id='LC16426'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;width: coords.width,</div><div class='line' id='LC16427'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;height: coords.height</div><div class='line' id='LC16428'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16429'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}).appendTo(this.$el);</div><div class='line' id='LC16430'><br/></div><div class='line' id='LC16431'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.options.draggable.start) {</div><div class='line' id='LC16432'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.options.draggable.start.call(this, event, ui);</div><div class='line' id='LC16433'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16434'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16435'><br/></div><div class='line' id='LC16436'><br/></div><div class='line' id='LC16437'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16438'>&nbsp;&nbsp;&nbsp;&nbsp;* This function is executed when the player is being dragged.</div><div class='line' id='LC16439'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16440'>&nbsp;&nbsp;&nbsp;&nbsp;* @method on_drag</div><div class='line' id='LC16441'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Event} event The original browser event</div><div class='line' id='LC16442'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object} ui A prepared ui object.</div><div class='line' id='LC16443'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16444'>&nbsp;&nbsp;&nbsp;&nbsp;fn.on_drag = function(event, ui) {</div><div class='line' id='LC16445'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//break if dragstop has been fired</div><div class='line' id='LC16446'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.$player === null) {</div><div class='line' id='LC16447'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC16448'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16449'><br/></div><div class='line' id='LC16450'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var abs_offset = {</div><div class='line' id='LC16451'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left: ui.position.left + this.baseX,</div><div class='line' id='LC16452'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top: ui.position.top + this.baseY</div><div class='line' id='LC16453'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16454'><br/></div><div class='line' id='LC16455'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.colliders_data = this.collision_api.get_closest_colliders(</div><div class='line' id='LC16456'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;abs_offset);</div><div class='line' id='LC16457'><br/></div><div class='line' id='LC16458'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.on_overlapped_column_change(</div><div class='line' id='LC16459'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.on_start_overlapping_column,</div><div class='line' id='LC16460'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.on_stop_overlapping_column</div><div class='line' id='LC16461'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC16462'><br/></div><div class='line' id='LC16463'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.on_overlapped_row_change(</div><div class='line' id='LC16464'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.on_start_overlapping_row,</div><div class='line' id='LC16465'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.on_stop_overlapping_row</div><div class='line' id='LC16466'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC16467'><br/></div><div class='line' id='LC16468'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.helper &amp;&amp; this.$player) {</div><div class='line' id='LC16469'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$player.css({</div><div class='line' id='LC16470'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;left&#39;: ui.position.left,</div><div class='line' id='LC16471'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;top&#39;: ui.position.top</div><div class='line' id='LC16472'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16473'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16474'><br/></div><div class='line' id='LC16475'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.options.draggable.drag) {</div><div class='line' id='LC16476'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.options.draggable.drag.call(this, event, ui);</div><div class='line' id='LC16477'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16478'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16479'><br/></div><div class='line' id='LC16480'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16481'>&nbsp;&nbsp;&nbsp;&nbsp;* This function is executed when the player stops being dragged.</div><div class='line' id='LC16482'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16483'>&nbsp;&nbsp;&nbsp;&nbsp;* @method on_stop_drag</div><div class='line' id='LC16484'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Event} event The original browser event</div><div class='line' id='LC16485'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object} ui A prepared ui object.</div><div class='line' id='LC16486'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16487'>&nbsp;&nbsp;&nbsp;&nbsp;fn.on_stop_drag = function(event, ui) {</div><div class='line' id='LC16488'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$helper.add(this.$player).add(this.$wrapper)</div><div class='line' id='LC16489'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.removeClass(&#39;dragging&#39;);</div><div class='line' id='LC16490'><br/></div><div class='line' id='LC16491'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui.position.left = ui.position.left + this.baseX;</div><div class='line' id='LC16492'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui.position.top = ui.position.top + this.baseY;</div><div class='line' id='LC16493'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.colliders_data = this.collision_api.get_closest_colliders(ui.position);</div><div class='line' id='LC16494'><br/></div><div class='line' id='LC16495'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.on_overlapped_column_change(</div><div class='line' id='LC16496'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.on_start_overlapping_column,</div><div class='line' id='LC16497'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.on_stop_overlapping_column</div><div class='line' id='LC16498'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC16499'><br/></div><div class='line' id='LC16500'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.on_overlapped_row_change(</div><div class='line' id='LC16501'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.on_start_overlapping_row,</div><div class='line' id='LC16502'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.on_stop_overlapping_row</div><div class='line' id='LC16503'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC16504'><br/></div><div class='line' id='LC16505'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$player.addClass(&#39;player-revert&#39;).removeClass(&#39;player&#39;)</div><div class='line' id='LC16506'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.attr({</div><div class='line' id='LC16507'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;data-col&#39;: this.placeholder_grid_data.col,</div><div class='line' id='LC16508'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;data-row&#39;: this.placeholder_grid_data.row</div><div class='line' id='LC16509'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}).css({</div><div class='line' id='LC16510'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;left&#39;: &#39;&#39;,</div><div class='line' id='LC16511'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;top&#39;: &#39;&#39;</div><div class='line' id='LC16512'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16513'><br/></div><div class='line' id='LC16514'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$changed = this.$changed.add(this.$player);</div><div class='line' id='LC16515'><br/></div><div class='line' id='LC16516'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cells_occupied_by_player = this.get_cells_occupied(</div><div class='line' id='LC16517'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.placeholder_grid_data);</div><div class='line' id='LC16518'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set_cells_player_occupies(</div><div class='line' id='LC16519'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.placeholder_grid_data.col, this.placeholder_grid_data.row);</div><div class='line' id='LC16520'><br/></div><div class='line' id='LC16521'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$player.coords().grid.row = this.placeholder_grid_data.row;</div><div class='line' id='LC16522'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$player.coords().grid.col = this.placeholder_grid_data.col;</div><div class='line' id='LC16523'><br/></div><div class='line' id='LC16524'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.options.draggable.stop) {</div><div class='line' id='LC16525'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.options.draggable.stop.call(this, event, ui);</div><div class='line' id='LC16526'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16527'><br/></div><div class='line' id='LC16528'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$preview_holder.remove();</div><div class='line' id='LC16529'><br/></div><div class='line' id='LC16530'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$player = null;</div><div class='line' id='LC16531'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$helper = null;</div><div class='line' id='LC16532'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.placeholder_grid_data = {};</div><div class='line' id='LC16533'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.player_grid_data = {};</div><div class='line' id='LC16534'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cells_occupied_by_placeholder = {};</div><div class='line' id='LC16535'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cells_occupied_by_player = {};</div><div class='line' id='LC16536'><br/></div><div class='line' id='LC16537'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set_dom_grid_height();</div><div class='line' id='LC16538'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16539'><br/></div><div class='line' id='LC16540'><br/></div><div class='line' id='LC16541'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16542'>&nbsp;&nbsp;&nbsp;&nbsp;* Executes the callbacks passed as arguments when a column begins to be</div><div class='line' id='LC16543'>&nbsp;&nbsp;&nbsp;&nbsp;* overlapped or stops being overlapped.</div><div class='line' id='LC16544'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16545'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Function} start_callback Function executed when a new column</div><div class='line' id='LC16546'>&nbsp;&nbsp;&nbsp;&nbsp;*  begins to be overlapped. The column is passed as first argument.</div><div class='line' id='LC16547'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Function} stop_callback Function executed when a column stops</div><div class='line' id='LC16548'>&nbsp;&nbsp;&nbsp;&nbsp;*  being overlapped. The column is passed as first argument.</div><div class='line' id='LC16549'>&nbsp;&nbsp;&nbsp;&nbsp;* @method on_overlapped_column_change</div><div class='line' id='LC16550'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Class} Returns the instance of the Gridster Class.</div><div class='line' id='LC16551'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16552'>&nbsp;&nbsp;&nbsp;&nbsp;fn.on_overlapped_column_change = function(start_callback, stop_callback) {</div><div class='line' id='LC16553'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this.colliders_data.length) {</div><div class='line' id='LC16554'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC16555'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16556'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var cols = this.get_targeted_columns(</div><div class='line' id='LC16557'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.colliders_data[0].el.data.col);</div><div class='line' id='LC16558'><br/></div><div class='line' id='LC16559'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var last_n_cols = this.last_cols.length;</div><div class='line' id='LC16560'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var n_cols = cols.length;</div><div class='line' id='LC16561'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var i;</div><div class='line' id='LC16562'><br/></div><div class='line' id='LC16563'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i &lt; n_cols; i++) {</div><div class='line' id='LC16564'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($.inArray(cols[i], this.last_cols) === -1) {</div><div class='line' id='LC16565'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(start_callback || $.noop).call(this, cols[i]);</div><div class='line' id='LC16566'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16567'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16568'><br/></div><div class='line' id='LC16569'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i&lt; last_n_cols; i++) {</div><div class='line' id='LC16570'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($.inArray(this.last_cols[i], cols) === -1) {</div><div class='line' id='LC16571'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(stop_callback || $.noop).call(this, this.last_cols[i]);</div><div class='line' id='LC16572'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16573'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16574'><br/></div><div class='line' id='LC16575'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.last_cols = cols;</div><div class='line' id='LC16576'><br/></div><div class='line' id='LC16577'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC16578'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16579'><br/></div><div class='line' id='LC16580'><br/></div><div class='line' id='LC16581'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16582'>&nbsp;&nbsp;&nbsp;&nbsp;* Executes the callbacks passed as arguments when a row starts to be</div><div class='line' id='LC16583'>&nbsp;&nbsp;&nbsp;&nbsp;* overlapped or stops being overlapped.</div><div class='line' id='LC16584'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16585'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Function} start_callback Function executed when a new row begins</div><div class='line' id='LC16586'>&nbsp;&nbsp;&nbsp;&nbsp;*  to be overlapped. The row is passed as first argument.</div><div class='line' id='LC16587'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Function} end_callback Function executed when a row stops being</div><div class='line' id='LC16588'>&nbsp;&nbsp;&nbsp;&nbsp;*  overlapped. The row is passed as first argument.</div><div class='line' id='LC16589'>&nbsp;&nbsp;&nbsp;&nbsp;* @method on_overlapped_row_change</div><div class='line' id='LC16590'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Class} Returns the instance of the Gridster Class.</div><div class='line' id='LC16591'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16592'>&nbsp;&nbsp;&nbsp;&nbsp;fn.on_overlapped_row_change = function(start_callback, end_callback) {</div><div class='line' id='LC16593'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this.colliders_data.length) {</div><div class='line' id='LC16594'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC16595'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16596'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var rows = this.get_targeted_rows(this.colliders_data[0].el.data.row);</div><div class='line' id='LC16597'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var last_n_rows = this.last_rows.length;</div><div class='line' id='LC16598'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var n_rows = rows.length;</div><div class='line' id='LC16599'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var i;</div><div class='line' id='LC16600'><br/></div><div class='line' id='LC16601'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i &lt; n_rows; i++) {</div><div class='line' id='LC16602'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($.inArray(rows[i], this.last_rows) === -1) {</div><div class='line' id='LC16603'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(start_callback || $.noop).call(this, rows[i]);</div><div class='line' id='LC16604'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16605'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16606'><br/></div><div class='line' id='LC16607'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i &lt; last_n_rows; i++) {</div><div class='line' id='LC16608'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($.inArray(this.last_rows[i], rows) === -1) {</div><div class='line' id='LC16609'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(end_callback || $.noop).call(this, this.last_rows[i]);</div><div class='line' id='LC16610'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16611'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16612'><br/></div><div class='line' id='LC16613'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.last_rows = rows;</div><div class='line' id='LC16614'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16615'><br/></div><div class='line' id='LC16616'><br/></div><div class='line' id='LC16617'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16618'>&nbsp;&nbsp;&nbsp;&nbsp;* Sets the current position of the player</div><div class='line' id='LC16619'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16620'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} col</div><div class='line' id='LC16621'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} row</div><div class='line' id='LC16622'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Boolean} no_player</div><div class='line' id='LC16623'>&nbsp;&nbsp;&nbsp;&nbsp;* @method set_player</div><div class='line' id='LC16624'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {object}</div><div class='line' id='LC16625'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16626'>&nbsp;&nbsp;&nbsp;&nbsp;fn.set_player = function(col, row, no_player) {</div><div class='line' id='LC16627'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var self = this;</div><div class='line' id='LC16628'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!no_player) {</div><div class='line' id='LC16629'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.empty_cells_player_occupies();</div><div class='line' id='LC16630'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16631'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var cell = !no_player ? self.colliders_data[0].el.data : {col: col};</div><div class='line' id='LC16632'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var to_col = cell.col;</div><div class='line' id='LC16633'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var to_row = row || cell.row;</div><div class='line' id='LC16634'><br/></div><div class='line' id='LC16635'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.player_grid_data = {</div><div class='line' id='LC16636'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;col: to_col,</div><div class='line' id='LC16637'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row: to_row,</div><div class='line' id='LC16638'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_y : this.player_grid_data.size_y,</div><div class='line' id='LC16639'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_x : this.player_grid_data.size_x</div><div class='line' id='LC16640'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16641'><br/></div><div class='line' id='LC16642'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cells_occupied_by_player = this.get_cells_occupied(</div><div class='line' id='LC16643'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.player_grid_data);</div><div class='line' id='LC16644'><br/></div><div class='line' id='LC16645'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $overlapped_widgets = this.get_widgets_overlapped(</div><div class='line' id='LC16646'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.player_grid_data);</div><div class='line' id='LC16647'><br/></div><div class='line' id='LC16648'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var constraints = this.widgets_constraints($overlapped_widgets);</div><div class='line' id='LC16649'><br/></div><div class='line' id='LC16650'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.manage_movements(constraints.can_go_up, to_col, to_row);</div><div class='line' id='LC16651'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.manage_movements(constraints.can_not_go_up, to_col, to_row);</div><div class='line' id='LC16652'><br/></div><div class='line' id='LC16653'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* if there is not widgets overlapping in the new player position,</div><div class='line' id='LC16654'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* update the new placeholder position. */</div><div class='line' id='LC16655'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!$overlapped_widgets.length) {</div><div class='line' id='LC16656'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var pp = this.can_go_player_up(this.player_grid_data);</div><div class='line' id='LC16657'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (pp !== false) {</div><div class='line' id='LC16658'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to_row = pp;</div><div class='line' id='LC16659'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16660'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set_placeholder(to_col, to_row);</div><div class='line' id='LC16661'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16662'><br/></div><div class='line' id='LC16663'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return {</div><div class='line' id='LC16664'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;col: to_col,</div><div class='line' id='LC16665'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row: to_row</div><div class='line' id='LC16666'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16667'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16668'><br/></div><div class='line' id='LC16669'><br/></div><div class='line' id='LC16670'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16671'>&nbsp;&nbsp;&nbsp;&nbsp;* See which of the widgets in the $widgets param collection can go to</div><div class='line' id='LC16672'>&nbsp;&nbsp;&nbsp;&nbsp;* a upper row and which not.</div><div class='line' id='LC16673'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16674'>&nbsp;&nbsp;&nbsp;&nbsp;* @method widgets_contraints</div><div class='line' id='LC16675'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {jQuery} $widgets A jQuery wrapped collection of</div><div class='line' id='LC16676'>&nbsp;&nbsp;&nbsp;&nbsp;* HTMLElements.</div><div class='line' id='LC16677'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {object} Returns a literal Object with two keys: `can_go_up` &amp;</div><div class='line' id='LC16678'>&nbsp;&nbsp;&nbsp;&nbsp;* `can_not_go_up`. Each contains a set of HTMLElements.</div><div class='line' id='LC16679'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16680'>&nbsp;&nbsp;&nbsp;&nbsp;fn.widgets_constraints = function($widgets) {</div><div class='line' id='LC16681'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $widgets_can_go_up = $([]);</div><div class='line' id='LC16682'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $widgets_can_not_go_up;</div><div class='line' id='LC16683'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var wgd_can_go_up = [];</div><div class='line' id='LC16684'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var wgd_can_not_go_up = [];</div><div class='line' id='LC16685'><br/></div><div class='line' id='LC16686'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$widgets.each($.proxy(function(i, w) {</div><div class='line' id='LC16687'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $w = $(w);</div><div class='line' id='LC16688'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var wgd = $w.coords().grid;</div><div class='line' id='LC16689'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.can_go_widget_up(wgd)) {</div><div class='line' id='LC16690'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$widgets_can_go_up = $widgets_can_go_up.add($w);</div><div class='line' id='LC16691'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wgd_can_go_up.push(wgd);</div><div class='line' id='LC16692'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{</div><div class='line' id='LC16693'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wgd_can_not_go_up.push(wgd);</div><div class='line' id='LC16694'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16695'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, this));</div><div class='line' id='LC16696'><br/></div><div class='line' id='LC16697'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$widgets_can_not_go_up = $widgets.not($widgets_can_go_up);</div><div class='line' id='LC16698'><br/></div><div class='line' id='LC16699'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return {</div><div class='line' id='LC16700'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;can_go_up: this.sort_by_row_asc(wgd_can_go_up),</div><div class='line' id='LC16701'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;can_not_go_up: this.sort_by_row_desc(wgd_can_not_go_up)</div><div class='line' id='LC16702'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16703'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16704'><br/></div><div class='line' id='LC16705'><br/></div><div class='line' id='LC16706'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16707'>&nbsp;&nbsp;&nbsp;&nbsp;* Sorts an Array of grid coords objects (representing the grid coords of</div><div class='line' id='LC16708'>&nbsp;&nbsp;&nbsp;&nbsp;* each widget) in ascending way.</div><div class='line' id='LC16709'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16710'>&nbsp;&nbsp;&nbsp;&nbsp;* @method sort_by_row_asc</div><div class='line' id='LC16711'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Array} widgets Array of grid coords objects</div><div class='line' id='LC16712'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Array} Returns the array sorted.</div><div class='line' id='LC16713'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16714'>&nbsp;&nbsp;&nbsp;&nbsp;fn.sort_by_row_asc = function(widgets) {</div><div class='line' id='LC16715'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;widgets = widgets.sort(function(a, b) {</div><div class='line' id='LC16716'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!a.row) {</div><div class='line' id='LC16717'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = $(a).coords().grid;</div><div class='line' id='LC16718'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b = $(b).coords().grid;</div><div class='line' id='LC16719'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16720'><br/></div><div class='line' id='LC16721'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a.row &gt; b.row) {</div><div class='line' id='LC16722'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 1;</div><div class='line' id='LC16723'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16724'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;</div><div class='line' id='LC16725'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16726'><br/></div><div class='line' id='LC16727'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return widgets;</div><div class='line' id='LC16728'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16729'><br/></div><div class='line' id='LC16730'><br/></div><div class='line' id='LC16731'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16732'>&nbsp;&nbsp;&nbsp;&nbsp;* Sorts an Array of grid coords objects (representing the grid coords of</div><div class='line' id='LC16733'>&nbsp;&nbsp;&nbsp;&nbsp;* each widget) placing first the empty cells upper left.</div><div class='line' id='LC16734'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16735'>&nbsp;&nbsp;&nbsp;&nbsp;* @method sort_by_row_and_col_asc</div><div class='line' id='LC16736'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Array} widgets Array of grid coords objects</div><div class='line' id='LC16737'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Array} Returns the array sorted.</div><div class='line' id='LC16738'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16739'>&nbsp;&nbsp;&nbsp;&nbsp;fn.sort_by_row_and_col_asc = function(widgets) {</div><div class='line' id='LC16740'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;widgets = widgets.sort(function(a, b) {</div><div class='line' id='LC16741'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a.row &gt; b.row || a.row === b.row &amp;&amp; a.col &gt; b.col) {</div><div class='line' id='LC16742'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 1;</div><div class='line' id='LC16743'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16744'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;</div><div class='line' id='LC16745'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16746'><br/></div><div class='line' id='LC16747'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return widgets;</div><div class='line' id='LC16748'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16749'><br/></div><div class='line' id='LC16750'><br/></div><div class='line' id='LC16751'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16752'>&nbsp;&nbsp;&nbsp;&nbsp;* Sorts an Array of grid coords objects by column (representing the grid</div><div class='line' id='LC16753'>&nbsp;&nbsp;&nbsp;&nbsp;* coords of each widget) in ascending way.</div><div class='line' id='LC16754'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16755'>&nbsp;&nbsp;&nbsp;&nbsp;* @method sort_by_col_asc</div><div class='line' id='LC16756'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Array} widgets Array of grid coords objects</div><div class='line' id='LC16757'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Array} Returns the array sorted.</div><div class='line' id='LC16758'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16759'>&nbsp;&nbsp;&nbsp;&nbsp;fn.sort_by_col_asc = function(widgets) {</div><div class='line' id='LC16760'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;widgets = widgets.sort(function(a, b) {</div><div class='line' id='LC16761'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a.col &gt; b.col) {</div><div class='line' id='LC16762'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 1;</div><div class='line' id='LC16763'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16764'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;</div><div class='line' id='LC16765'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16766'><br/></div><div class='line' id='LC16767'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return widgets;</div><div class='line' id='LC16768'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16769'><br/></div><div class='line' id='LC16770'><br/></div><div class='line' id='LC16771'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16772'>&nbsp;&nbsp;&nbsp;&nbsp;* Sorts an Array of grid coords objects (representing the grid coords of</div><div class='line' id='LC16773'>&nbsp;&nbsp;&nbsp;&nbsp;* each widget) in descending way.</div><div class='line' id='LC16774'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16775'>&nbsp;&nbsp;&nbsp;&nbsp;* @method sort_by_row_desc</div><div class='line' id='LC16776'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Array} widgets Array of grid coords objects</div><div class='line' id='LC16777'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Array} Returns the array sorted.</div><div class='line' id='LC16778'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16779'>&nbsp;&nbsp;&nbsp;&nbsp;fn.sort_by_row_desc = function(widgets) {</div><div class='line' id='LC16780'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;widgets = widgets.sort(function(a, b) {</div><div class='line' id='LC16781'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a.row + a.size_y &lt; b.row + b.size_y) {</div><div class='line' id='LC16782'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 1;</div><div class='line' id='LC16783'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16784'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return -1;</div><div class='line' id='LC16785'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC16786'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return widgets;</div><div class='line' id='LC16787'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16788'><br/></div><div class='line' id='LC16789'><br/></div><div class='line' id='LC16790'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16791'>&nbsp;&nbsp;&nbsp;&nbsp;* Sorts an Array of grid coords objects (representing the grid coords of</div><div class='line' id='LC16792'>&nbsp;&nbsp;&nbsp;&nbsp;* each widget) in descending way.</div><div class='line' id='LC16793'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16794'>&nbsp;&nbsp;&nbsp;&nbsp;* @method manage_movements</div><div class='line' id='LC16795'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {jQuery} $widgets A jQuery collection of HTMLElements</div><div class='line' id='LC16796'>&nbsp;&nbsp;&nbsp;&nbsp;*  representing the widgets you want to move.</div><div class='line' id='LC16797'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} to_col The column to which we want to move the widgets.</div><div class='line' id='LC16798'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} to_row The row to which we want to move the widgets.</div><div class='line' id='LC16799'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Class} Returns the instance of the Gridster Class.</div><div class='line' id='LC16800'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16801'>&nbsp;&nbsp;&nbsp;&nbsp;fn.manage_movements = function($widgets, to_col, to_row) {</div><div class='line' id='LC16802'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.each($widgets, $.proxy(function(i, w) {</div><div class='line' id='LC16803'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var wgd = w;</div><div class='line' id='LC16804'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $w = wgd.el;</div><div class='line' id='LC16805'><br/></div><div class='line' id='LC16806'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var can_go_widget_up = this.can_go_widget_up(wgd);</div><div class='line' id='LC16807'><br/></div><div class='line' id='LC16808'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (can_go_widget_up) {</div><div class='line' id='LC16809'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//target CAN go up</div><div class='line' id='LC16810'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//so move widget up</div><div class='line' id='LC16811'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.move_widget_to($w, can_go_widget_up);</div><div class='line' id='LC16812'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set_placeholder(to_col, can_go_widget_up + wgd.size_y);</div><div class='line' id='LC16813'><br/></div><div class='line' id='LC16814'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC16815'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//target can&#39;t go up</div><div class='line' id='LC16816'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var can_go_player_up = this.can_go_player_up(</div><div class='line' id='LC16817'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.player_grid_data);</div><div class='line' id='LC16818'><br/></div><div class='line' id='LC16819'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!can_go_player_up) {</div><div class='line' id='LC16820'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// target can&#39;t go up</div><div class='line' id='LC16821'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// player cant&#39;t go up</div><div class='line' id='LC16822'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// so we need to move widget down to a position that dont</div><div class='line' id='LC16823'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// overlaps player</div><div class='line' id='LC16824'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var y = (to_row + this.player_grid_data.size_y) - wgd.row;</div><div class='line' id='LC16825'><br/></div><div class='line' id='LC16826'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.move_widget_down($w, y);</div><div class='line' id='LC16827'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set_placeholder(to_col, to_row);</div><div class='line' id='LC16828'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16829'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16830'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, this));</div><div class='line' id='LC16831'><br/></div><div class='line' id='LC16832'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC16833'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16834'><br/></div><div class='line' id='LC16835'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16836'>&nbsp;&nbsp;&nbsp;&nbsp;* Determines if there is a widget in the row and col given. Or if the</div><div class='line' id='LC16837'>&nbsp;&nbsp;&nbsp;&nbsp;* HTMLElement passed as first argument is the player.</div><div class='line' id='LC16838'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16839'>&nbsp;&nbsp;&nbsp;&nbsp;* @method is_player</div><div class='line' id='LC16840'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number|HTMLElement} col_or_el A jQuery wrapped collection of</div><div class='line' id='LC16841'>&nbsp;&nbsp;&nbsp;&nbsp;* HTMLElements.</div><div class='line' id='LC16842'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} [row] The column to which we want to move the widgets.</div><div class='line' id='LC16843'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Boolean} Returns true or false.</div><div class='line' id='LC16844'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16845'>&nbsp;&nbsp;&nbsp;&nbsp;fn.is_player = function(col_or_el, row) {</div><div class='line' id='LC16846'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (row &amp;&amp; !this.gridmap[col_or_el]) { return false; }</div><div class='line' id='LC16847'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $w = row ? this.gridmap[col_or_el][row] : col_or_el;</div><div class='line' id='LC16848'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $w &amp;&amp; ($w.is(this.$player) || $w.is(this.$helper));</div><div class='line' id='LC16849'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16850'><br/></div><div class='line' id='LC16851'><br/></div><div class='line' id='LC16852'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16853'>&nbsp;&nbsp;&nbsp;&nbsp;* Determines if the widget that is being dragged is currently over the row</div><div class='line' id='LC16854'>&nbsp;&nbsp;&nbsp;&nbsp;* and col given.</div><div class='line' id='LC16855'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16856'>&nbsp;&nbsp;&nbsp;&nbsp;* @method is_player_in</div><div class='line' id='LC16857'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} col The column to check.</div><div class='line' id='LC16858'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} row The row to check.</div><div class='line' id='LC16859'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Boolean} Returns true or false.</div><div class='line' id='LC16860'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16861'>&nbsp;&nbsp;&nbsp;&nbsp;fn.is_player_in = function(col, row) {</div><div class='line' id='LC16862'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var c = this.cells_occupied_by_player || {};</div><div class='line' id='LC16863'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $.inArray(col, c.cols) &gt;= 0 &amp;&amp; $.inArray(row, c.rows) &gt;= 0;</div><div class='line' id='LC16864'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16865'><br/></div><div class='line' id='LC16866'><br/></div><div class='line' id='LC16867'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16868'>&nbsp;&nbsp;&nbsp;&nbsp;* Determines if the placeholder is currently over the row and col given.</div><div class='line' id='LC16869'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16870'>&nbsp;&nbsp;&nbsp;&nbsp;* @method is_placeholder_in</div><div class='line' id='LC16871'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} col The column to check.</div><div class='line' id='LC16872'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} row The row to check.</div><div class='line' id='LC16873'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Boolean} Returns true or false.</div><div class='line' id='LC16874'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16875'>&nbsp;&nbsp;&nbsp;&nbsp;fn.is_placeholder_in = function(col, row) {</div><div class='line' id='LC16876'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var c = this.cells_occupied_by_placeholder || {};</div><div class='line' id='LC16877'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.is_placeholder_in_col(col) &amp;&amp; $.inArray(row, c.rows) &gt;= 0;</div><div class='line' id='LC16878'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16879'><br/></div><div class='line' id='LC16880'><br/></div><div class='line' id='LC16881'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16882'>&nbsp;&nbsp;&nbsp;&nbsp;* Determines if the placeholder is currently over the column given.</div><div class='line' id='LC16883'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16884'>&nbsp;&nbsp;&nbsp;&nbsp;* @method is_placeholder_in_col</div><div class='line' id='LC16885'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} col The column to check.</div><div class='line' id='LC16886'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Boolean} Returns true or false.</div><div class='line' id='LC16887'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16888'>&nbsp;&nbsp;&nbsp;&nbsp;fn.is_placeholder_in_col = function(col) {</div><div class='line' id='LC16889'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var c = this.cells_occupied_by_placeholder || [];</div><div class='line' id='LC16890'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $.inArray(col, c.cols) &gt;= 0;</div><div class='line' id='LC16891'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16892'><br/></div><div class='line' id='LC16893'><br/></div><div class='line' id='LC16894'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16895'>&nbsp;&nbsp;&nbsp;&nbsp;* Determines if the cell represented by col and row params is empty.</div><div class='line' id='LC16896'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16897'>&nbsp;&nbsp;&nbsp;&nbsp;* @method is_empty</div><div class='line' id='LC16898'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} col The column to check.</div><div class='line' id='LC16899'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} row The row to check.</div><div class='line' id='LC16900'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Boolean} Returns true or false.</div><div class='line' id='LC16901'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16902'>&nbsp;&nbsp;&nbsp;&nbsp;fn.is_empty = function(col, row) {</div><div class='line' id='LC16903'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (typeof this.gridmap[col] !== &#39;undefined&#39; &amp;&amp;</div><div class='line' id='LC16904'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;typeof this.gridmap[col][row] !== &#39;undefined&#39; &amp;&amp;</div><div class='line' id='LC16905'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.gridmap[col][row] === false</div><div class='line' id='LC16906'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) {</div><div class='line' id='LC16907'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC16908'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16909'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC16910'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16911'><br/></div><div class='line' id='LC16912'><br/></div><div class='line' id='LC16913'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16914'>&nbsp;&nbsp;&nbsp;&nbsp;* Determines if the cell represented by col and row params is occupied.</div><div class='line' id='LC16915'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16916'>&nbsp;&nbsp;&nbsp;&nbsp;* @method is_occupied</div><div class='line' id='LC16917'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} col The column to check.</div><div class='line' id='LC16918'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} row The row to check.</div><div class='line' id='LC16919'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Boolean} Returns true or false.</div><div class='line' id='LC16920'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16921'>&nbsp;&nbsp;&nbsp;&nbsp;fn.is_occupied = function(col, row) {</div><div class='line' id='LC16922'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this.gridmap[col]) {</div><div class='line' id='LC16923'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC16924'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16925'><br/></div><div class='line' id='LC16926'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.gridmap[col][row]) {</div><div class='line' id='LC16927'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC16928'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16929'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC16930'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16931'><br/></div><div class='line' id='LC16932'><br/></div><div class='line' id='LC16933'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16934'>&nbsp;&nbsp;&nbsp;&nbsp;* Determines if there is a widget in the cell represented by col/row params.</div><div class='line' id='LC16935'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16936'>&nbsp;&nbsp;&nbsp;&nbsp;* @method is_widget</div><div class='line' id='LC16937'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} col The column to check.</div><div class='line' id='LC16938'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} row The row to check.</div><div class='line' id='LC16939'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Boolean|HTMLElement} Returns false if there is no widget,</div><div class='line' id='LC16940'>&nbsp;&nbsp;&nbsp;&nbsp;* else returns the jQuery HTMLElement</div><div class='line' id='LC16941'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16942'>&nbsp;&nbsp;&nbsp;&nbsp;fn.is_widget = function(col, row) {</div><div class='line' id='LC16943'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var cell = this.gridmap[col];</div><div class='line' id='LC16944'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!cell) {</div><div class='line' id='LC16945'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC16946'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16947'><br/></div><div class='line' id='LC16948'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cell = cell[row];</div><div class='line' id='LC16949'><br/></div><div class='line' id='LC16950'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (cell) {</div><div class='line' id='LC16951'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return cell;</div><div class='line' id='LC16952'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16953'><br/></div><div class='line' id='LC16954'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC16955'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16956'><br/></div><div class='line' id='LC16957'><br/></div><div class='line' id='LC16958'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16959'>&nbsp;&nbsp;&nbsp;&nbsp;* Determines if there is a widget in the cell represented by col/row</div><div class='line' id='LC16960'>&nbsp;&nbsp;&nbsp;&nbsp;* params and if this is under the widget that is being dragged.</div><div class='line' id='LC16961'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16962'>&nbsp;&nbsp;&nbsp;&nbsp;* @method is_widget_under_player</div><div class='line' id='LC16963'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} col The column to check.</div><div class='line' id='LC16964'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} row The row to check.</div><div class='line' id='LC16965'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Boolean} Returns true or false.</div><div class='line' id='LC16966'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16967'>&nbsp;&nbsp;&nbsp;&nbsp;fn.is_widget_under_player = function(col, row) {</div><div class='line' id='LC16968'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.is_widget(col, row)) {</div><div class='line' id='LC16969'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.is_player_in(col, row);</div><div class='line' id='LC16970'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16971'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC16972'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16973'><br/></div><div class='line' id='LC16974'><br/></div><div class='line' id='LC16975'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16976'>&nbsp;&nbsp;&nbsp;&nbsp;* Get widgets overlapping with the player or with the object passed</div><div class='line' id='LC16977'>&nbsp;&nbsp;&nbsp;&nbsp;* representing the grid cells.</div><div class='line' id='LC16978'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC16979'>&nbsp;&nbsp;&nbsp;&nbsp;* @method get_widgets_under_player</div><div class='line' id='LC16980'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {HTMLElement} Returns a jQuery collection of HTMLElements</div><div class='line' id='LC16981'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC16982'>&nbsp;&nbsp;&nbsp;&nbsp;fn.get_widgets_under_player = function(cells) {</div><div class='line' id='LC16983'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cells || (cells = this.cells_occupied_by_player || {cols: [], rows: []});</div><div class='line' id='LC16984'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $widgets = $([]);</div><div class='line' id='LC16985'><br/></div><div class='line' id='LC16986'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.each(cells.cols, $.proxy(function(i, col) {</div><div class='line' id='LC16987'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.each(cells.rows, $.proxy(function(i, row) {</div><div class='line' id='LC16988'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(this.is_widget(col, row)) {</div><div class='line' id='LC16989'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$widgets = $widgets.add(this.gridmap[col][row]);</div><div class='line' id='LC16990'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC16991'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, this));</div><div class='line' id='LC16992'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, this));</div><div class='line' id='LC16993'><br/></div><div class='line' id='LC16994'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $widgets;</div><div class='line' id='LC16995'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC16996'><br/></div><div class='line' id='LC16997'><br/></div><div class='line' id='LC16998'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC16999'>&nbsp;&nbsp;&nbsp;&nbsp;* Put placeholder at the row and column specified.</div><div class='line' id='LC17000'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17001'>&nbsp;&nbsp;&nbsp;&nbsp;* @method set_placeholder</div><div class='line' id='LC17002'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} col The column to which we want to move the</div><div class='line' id='LC17003'>&nbsp;&nbsp;&nbsp;&nbsp;*  placeholder.</div><div class='line' id='LC17004'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} row The row to which we want to move the</div><div class='line' id='LC17005'>&nbsp;&nbsp;&nbsp;&nbsp;*  placeholder.</div><div class='line' id='LC17006'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Class} Returns the instance of the Gridster Class.</div><div class='line' id='LC17007'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17008'>&nbsp;&nbsp;&nbsp;&nbsp;fn.set_placeholder = function(col, row) {</div><div class='line' id='LC17009'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var phgd = $.extend({}, this.placeholder_grid_data);</div><div class='line' id='LC17010'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $nexts = this.widgets_below({</div><div class='line' id='LC17011'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;col: phgd.col,</div><div class='line' id='LC17012'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row: phgd.row,</div><div class='line' id='LC17013'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_y: phgd.size_y,</div><div class='line' id='LC17014'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_x: phgd.size_x</div><div class='line' id='LC17015'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC17016'><br/></div><div class='line' id='LC17017'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Prevents widgets go out of the grid</div><div class='line' id='LC17018'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var right_col = (col + phgd.size_x - 1);</div><div class='line' id='LC17019'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (right_col &gt; this.cols) {</div><div class='line' id='LC17020'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;col = col - (right_col - col);</div><div class='line' id='LC17021'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17022'><br/></div><div class='line' id='LC17023'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var moved_down = this.placeholder_grid_data.row &lt; row;</div><div class='line' id='LC17024'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var changed_column = this.placeholder_grid_data.col !== col;</div><div class='line' id='LC17025'><br/></div><div class='line' id='LC17026'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.placeholder_grid_data.col = col;</div><div class='line' id='LC17027'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.placeholder_grid_data.row = row;</div><div class='line' id='LC17028'><br/></div><div class='line' id='LC17029'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cells_occupied_by_placeholder = this.get_cells_occupied(</div><div class='line' id='LC17030'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.placeholder_grid_data);</div><div class='line' id='LC17031'><br/></div><div class='line' id='LC17032'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$preview_holder.attr({</div><div class='line' id='LC17033'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;data-row&#39; : row,</div><div class='line' id='LC17034'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;data-col&#39; : col</div><div class='line' id='LC17035'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC17036'><br/></div><div class='line' id='LC17037'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (moved_down || changed_column) {</div><div class='line' id='LC17038'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$nexts.each($.proxy(function(i, widget) {</div><div class='line' id='LC17039'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.move_widget_up(</div><div class='line' id='LC17040'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(widget), this.placeholder_grid_data.col - col + phgd.size_y);</div><div class='line' id='LC17041'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, this));</div><div class='line' id='LC17042'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17043'><br/></div><div class='line' id='LC17044'><br/></div><div class='line' id='LC17045'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $widgets_under_ph = this.get_widgets_under_player(this.cells_occupied_by_placeholder);</div><div class='line' id='LC17046'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($widgets_under_ph.length) {</div><div class='line' id='LC17047'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$widgets_under_ph.each($.proxy(function(i, widget) {</div><div class='line' id='LC17048'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $w = $(widget);</div><div class='line' id='LC17049'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.move_widget_down(</div><div class='line' id='LC17050'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$w, row + phgd.size_y - $w.data(&#39;coords&#39;).grid.row);</div><div class='line' id='LC17051'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, this));</div><div class='line' id='LC17052'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17053'><br/></div><div class='line' id='LC17054'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17055'><br/></div><div class='line' id='LC17056'><br/></div><div class='line' id='LC17057'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17058'>&nbsp;&nbsp;&nbsp;&nbsp;* Determines whether the player can move to a position above.</div><div class='line' id='LC17059'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17060'>&nbsp;&nbsp;&nbsp;&nbsp;* @method can_go_player_up</div><div class='line' id='LC17061'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object} widget_grid_data The actual grid coords object of the</div><div class='line' id='LC17062'>&nbsp;&nbsp;&nbsp;&nbsp;*  player.</div><div class='line' id='LC17063'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Number|Boolean} If the player can be moved to an upper row</div><div class='line' id='LC17064'>&nbsp;&nbsp;&nbsp;&nbsp;*  returns the row number, else returns false.</div><div class='line' id='LC17065'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17066'>&nbsp;&nbsp;&nbsp;&nbsp;fn.can_go_player_up = function(widget_grid_data) {</div><div class='line' id='LC17067'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var p_bottom_row = widget_grid_data.row + widget_grid_data.size_y - 1;</div><div class='line' id='LC17068'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result = true;</div><div class='line' id='LC17069'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var upper_rows = [];</div><div class='line' id='LC17070'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var min_row = 10000;</div><div class='line' id='LC17071'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $widgets_under_player = this.get_widgets_under_player();</div><div class='line' id='LC17072'><br/></div><div class='line' id='LC17073'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* generate an array with columns as index and array with upper rows</div><div class='line' id='LC17074'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* empty as value */</div><div class='line' id='LC17075'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.for_each_column_occupied(widget_grid_data, function(tcol) {</div><div class='line' id='LC17076'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var grid_col = this.gridmap[tcol];</div><div class='line' id='LC17077'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var r = p_bottom_row + 1;</div><div class='line' id='LC17078'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upper_rows[tcol] = [];</div><div class='line' id='LC17079'><br/></div><div class='line' id='LC17080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (--r &gt; 0) {</div><div class='line' id='LC17081'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.is_empty(tcol, r) || this.is_player(tcol, r) ||</div><div class='line' id='LC17082'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.is_widget(tcol, r) &amp;&amp;</div><div class='line' id='LC17083'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;grid_col[r].is($widgets_under_player)</div><div class='line' id='LC17084'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) {</div><div class='line' id='LC17085'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upper_rows[tcol].push(r);</div><div class='line' id='LC17086'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;min_row = r &lt; min_row ? r : min_row;</div><div class='line' id='LC17087'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{</div><div class='line' id='LC17088'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC17089'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17090'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17091'><br/></div><div class='line' id='LC17092'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (upper_rows[tcol].length === 0) {</div><div class='line' id='LC17093'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = false;</div><div class='line' id='LC17094'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true; //break</div><div class='line' id='LC17095'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17096'><br/></div><div class='line' id='LC17097'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upper_rows[tcol].sort();</div><div class='line' id='LC17098'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC17099'><br/></div><div class='line' id='LC17100'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!result) { return false; }</div><div class='line' id='LC17101'><br/></div><div class='line' id='LC17102'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get_valid_rows(widget_grid_data, upper_rows, min_row);</div><div class='line' id='LC17103'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17104'><br/></div><div class='line' id='LC17105'><br/></div><div class='line' id='LC17106'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17107'>&nbsp;&nbsp;&nbsp;&nbsp;* Determines whether a widget can move to a position above.</div><div class='line' id='LC17108'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17109'>&nbsp;&nbsp;&nbsp;&nbsp;* @method can_go_widget_up</div><div class='line' id='LC17110'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object} widget_grid_data The actual grid coords object of the</div><div class='line' id='LC17111'>&nbsp;&nbsp;&nbsp;&nbsp;*  widget we want to check.</div><div class='line' id='LC17112'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Number|Boolean} If the widget can be moved to an upper row</div><div class='line' id='LC17113'>&nbsp;&nbsp;&nbsp;&nbsp;*  returns the row number, else returns false.</div><div class='line' id='LC17114'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17115'>&nbsp;&nbsp;&nbsp;&nbsp;fn.can_go_widget_up = function(widget_grid_data) {</div><div class='line' id='LC17116'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var p_bottom_row = widget_grid_data.row + widget_grid_data.size_y - 1;</div><div class='line' id='LC17117'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result = true;</div><div class='line' id='LC17118'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var upper_rows = [];</div><div class='line' id='LC17119'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var min_row = 10000;</div><div class='line' id='LC17120'><br/></div><div class='line' id='LC17121'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* generate an array with columns as index and array with topmost rows</div><div class='line' id='LC17122'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* empty as value */</div><div class='line' id='LC17123'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.for_each_column_occupied(widget_grid_data, function(tcol) {</div><div class='line' id='LC17124'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var grid_col = this.gridmap[tcol];</div><div class='line' id='LC17125'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upper_rows[tcol] = [];</div><div class='line' id='LC17126'><br/></div><div class='line' id='LC17127'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var r = p_bottom_row + 1;</div><div class='line' id='LC17128'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// iterate over each row</div><div class='line' id='LC17129'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (--r &gt; 0) {</div><div class='line' id='LC17130'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.is_widget(tcol, r) &amp;&amp; !this.is_player_in(tcol, r)) {</div><div class='line' id='LC17131'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!grid_col[r].is(widget_grid_data.el)) {</div><div class='line' id='LC17132'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC17133'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17134'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17135'><br/></div><div class='line' id='LC17136'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this.is_player(tcol, r) &amp;&amp;</div><div class='line' id='LC17137'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;!this.is_placeholder_in(tcol, r) &amp;&amp;</div><div class='line' id='LC17138'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;!this.is_player_in(tcol, r)) {</div><div class='line' id='LC17139'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upper_rows[tcol].push(r);</div><div class='line' id='LC17140'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17141'><br/></div><div class='line' id='LC17142'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (r &lt; min_row) {</div><div class='line' id='LC17143'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;min_row = r;</div><div class='line' id='LC17144'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17145'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17146'><br/></div><div class='line' id='LC17147'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (upper_rows[tcol].length === 0) {</div><div class='line' id='LC17148'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = false;</div><div class='line' id='LC17149'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true; //break</div><div class='line' id='LC17150'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17151'><br/></div><div class='line' id='LC17152'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upper_rows[tcol].sort();</div><div class='line' id='LC17153'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC17154'><br/></div><div class='line' id='LC17155'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!result) { return false; }</div><div class='line' id='LC17156'><br/></div><div class='line' id='LC17157'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get_valid_rows(widget_grid_data, upper_rows, min_row);</div><div class='line' id='LC17158'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17159'><br/></div><div class='line' id='LC17160'><br/></div><div class='line' id='LC17161'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17162'>&nbsp;&nbsp;&nbsp;&nbsp;* Search a valid row for the widget represented by `widget_grid_data&#39; in</div><div class='line' id='LC17163'>&nbsp;&nbsp;&nbsp;&nbsp;* the `upper_rows` array. Iteration starts from row specified in `min_row`.</div><div class='line' id='LC17164'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17165'>&nbsp;&nbsp;&nbsp;&nbsp;* @method get_valid_rows</div><div class='line' id='LC17166'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object} widget_grid_data The actual grid coords object of the</div><div class='line' id='LC17167'>&nbsp;&nbsp;&nbsp;&nbsp;*  player.</div><div class='line' id='LC17168'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Array} upper_rows An array with columns as index and arrays</div><div class='line' id='LC17169'>&nbsp;&nbsp;&nbsp;&nbsp;*  of valid rows as values.</div><div class='line' id='LC17170'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} min_row The upper row from which the iteration will start.</div><div class='line' id='LC17171'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Number|Boolean} Returns the upper row valid from the `upper_rows`</div><div class='line' id='LC17172'>&nbsp;&nbsp;&nbsp;&nbsp;*  for the widget in question.</div><div class='line' id='LC17173'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17174'>&nbsp;&nbsp;&nbsp;&nbsp;fn.get_valid_rows = function(widget_grid_data, upper_rows, min_row) {</div><div class='line' id='LC17175'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var p_top_row = widget_grid_data.row;</div><div class='line' id='LC17176'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var p_bottom_row = widget_grid_data.row + widget_grid_data.size_y - 1;</div><div class='line' id='LC17177'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var size_y = widget_grid_data.size_y;</div><div class='line' id='LC17178'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var r = min_row - 1;</div><div class='line' id='LC17179'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var valid_rows = [];</div><div class='line' id='LC17180'><br/></div><div class='line' id='LC17181'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (++r &lt;= p_bottom_row ) {</div><div class='line' id='LC17182'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var common = true;</div><div class='line' id='LC17183'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.each(upper_rows, function(col, rows) {</div><div class='line' id='LC17184'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($.isArray(rows) &amp;&amp; $.inArray(r, rows) === -1) {</div><div class='line' id='LC17185'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;common = false;</div><div class='line' id='LC17186'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17187'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC17188'><br/></div><div class='line' id='LC17189'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (common === true) {</div><div class='line' id='LC17190'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;valid_rows.push(r);</div><div class='line' id='LC17191'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (valid_rows.length === size_y) {</div><div class='line' id='LC17192'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC17193'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17194'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17195'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17196'><br/></div><div class='line' id='LC17197'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var new_row = false;</div><div class='line' id='LC17198'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (size_y === 1) {</div><div class='line' id='LC17199'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (valid_rows[0] !== p_top_row) {</div><div class='line' id='LC17200'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new_row = valid_rows[0] || false;</div><div class='line' id='LC17201'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17202'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{</div><div class='line' id='LC17203'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (valid_rows[0] !== p_top_row) {</div><div class='line' id='LC17204'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new_row = this.get_consecutive_numbers_index(</div><div class='line' id='LC17205'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;valid_rows, size_y);</div><div class='line' id='LC17206'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17207'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17208'><br/></div><div class='line' id='LC17209'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new_row;</div><div class='line' id='LC17210'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17211'><br/></div><div class='line' id='LC17212'><br/></div><div class='line' id='LC17213'>&nbsp;&nbsp;&nbsp;&nbsp;fn.get_consecutive_numbers_index = function(arr, size_y) {</div><div class='line' id='LC17214'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var max = arr.length;</div><div class='line' id='LC17215'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result = [];</div><div class='line' id='LC17216'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var first = true;</div><div class='line' id='LC17217'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var prev = -1; // or null?</div><div class='line' id='LC17218'><br/></div><div class='line' id='LC17219'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var i=0; i &lt; max; i++) {</div><div class='line' id='LC17220'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (first || arr[i] === prev + 1) {</div><div class='line' id='LC17221'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.push(i);</div><div class='line' id='LC17222'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (result.length === size_y) {</div><div class='line' id='LC17223'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC17224'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17225'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;first = false;</div><div class='line' id='LC17226'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{</div><div class='line' id='LC17227'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = [];</div><div class='line' id='LC17228'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;first = true;</div><div class='line' id='LC17229'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17230'><br/></div><div class='line' id='LC17231'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;prev = arr[i];</div><div class='line' id='LC17232'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17233'><br/></div><div class='line' id='LC17234'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result.length &gt;= size_y ? arr[result[0]] : false;</div><div class='line' id='LC17235'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17236'><br/></div><div class='line' id='LC17237'><br/></div><div class='line' id='LC17238'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17239'>&nbsp;&nbsp;&nbsp;&nbsp;* Get widgets overlapping with the player.</div><div class='line' id='LC17240'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17241'>&nbsp;&nbsp;&nbsp;&nbsp;* @method get_widgets_overlapped</div><div class='line' id='LC17242'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {jQuery} Returns a jQuery collection of HTMLElements.</div><div class='line' id='LC17243'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17244'>&nbsp;&nbsp;&nbsp;&nbsp;fn.get_widgets_overlapped = function() {</div><div class='line' id='LC17245'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $w;</div><div class='line' id='LC17246'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $widgets = $([]);</div><div class='line' id='LC17247'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var used = [];</div><div class='line' id='LC17248'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var rows_from_bottom = this.cells_occupied_by_player.rows.slice(0);</div><div class='line' id='LC17249'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rows_from_bottom.reverse();</div><div class='line' id='LC17250'><br/></div><div class='line' id='LC17251'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.each(this.cells_occupied_by_player.cols, $.proxy(function(i, col) {</div><div class='line' id='LC17252'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.each(rows_from_bottom, $.proxy(function(i, row) {</div><div class='line' id='LC17253'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// if there is a widget in the player position</div><div class='line' id='LC17254'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this.gridmap[col]) { return true; } //next iteration</div><div class='line' id='LC17255'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $w = this.gridmap[col][row];</div><div class='line' id='LC17256'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.is_occupied(col, row) &amp;&amp; !this.is_player($w) &amp;&amp;</div><div class='line' id='LC17257'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.inArray($w, used) === -1</div><div class='line' id='LC17258'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) {</div><div class='line' id='LC17259'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$widgets = $widgets.add($w);</div><div class='line' id='LC17260'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;used.push($w);</div><div class='line' id='LC17261'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17262'><br/></div><div class='line' id='LC17263'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, this));</div><div class='line' id='LC17264'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, this));</div><div class='line' id='LC17265'><br/></div><div class='line' id='LC17266'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $widgets;</div><div class='line' id='LC17267'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17268'><br/></div><div class='line' id='LC17269'><br/></div><div class='line' id='LC17270'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17271'>&nbsp;&nbsp;&nbsp;&nbsp;* This callback is executed when the player begins to collide with a column.</div><div class='line' id='LC17272'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17273'>&nbsp;&nbsp;&nbsp;&nbsp;* @method on_start_overlapping_column</div><div class='line' id='LC17274'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} col The collided column.</div><div class='line' id='LC17275'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {jQuery} Returns a jQuery collection of HTMLElements.</div><div class='line' id='LC17276'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17277'>&nbsp;&nbsp;&nbsp;&nbsp;fn.on_start_overlapping_column = function(col) {</div><div class='line' id='LC17278'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set_player(col, false);</div><div class='line' id='LC17279'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17280'><br/></div><div class='line' id='LC17281'><br/></div><div class='line' id='LC17282'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17283'>&nbsp;&nbsp;&nbsp;&nbsp;* A callback executed when the player begins to collide with a row.</div><div class='line' id='LC17284'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17285'>&nbsp;&nbsp;&nbsp;&nbsp;* @method on_start_overlapping_row</div><div class='line' id='LC17286'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} row The collided row.</div><div class='line' id='LC17287'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {jQuery} Returns a jQuery collection of HTMLElements.</div><div class='line' id='LC17288'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17289'>&nbsp;&nbsp;&nbsp;&nbsp;fn.on_start_overlapping_row = function(row) {</div><div class='line' id='LC17290'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set_player(false, row);</div><div class='line' id='LC17291'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17292'><br/></div><div class='line' id='LC17293'><br/></div><div class='line' id='LC17294'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17295'>&nbsp;&nbsp;&nbsp;&nbsp;* A callback executed when the the player ends to collide with a column.</div><div class='line' id='LC17296'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17297'>&nbsp;&nbsp;&nbsp;&nbsp;* @method on_stop_overlapping_column</div><div class='line' id='LC17298'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} col The collided row.</div><div class='line' id='LC17299'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {jQuery} Returns a jQuery collection of HTMLElements.</div><div class='line' id='LC17300'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17301'>&nbsp;&nbsp;&nbsp;&nbsp;fn.on_stop_overlapping_column = function(col) {</div><div class='line' id='LC17302'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set_player(col, false);</div><div class='line' id='LC17303'><br/></div><div class='line' id='LC17304'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var self = this;</div><div class='line' id='LC17305'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.for_each_widget_below(col, this.cells_occupied_by_player.rows[0],</div><div class='line' id='LC17306'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function(tcol, trow) {</div><div class='line' id='LC17307'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.move_widget_up(this, self.player_grid_data.size_y);</div><div class='line' id='LC17308'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC17309'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17310'><br/></div><div class='line' id='LC17311'><br/></div><div class='line' id='LC17312'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17313'>&nbsp;&nbsp;&nbsp;&nbsp;* This callback is executed when the player ends to collide with a row.</div><div class='line' id='LC17314'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17315'>&nbsp;&nbsp;&nbsp;&nbsp;* @method on_stop_overlapping_row</div><div class='line' id='LC17316'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} row The collided row.</div><div class='line' id='LC17317'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {jQuery} Returns a jQuery collection of HTMLElements.</div><div class='line' id='LC17318'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17319'>&nbsp;&nbsp;&nbsp;&nbsp;fn.on_stop_overlapping_row = function(row) {</div><div class='line' id='LC17320'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set_player(false, row);</div><div class='line' id='LC17321'><br/></div><div class='line' id='LC17322'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var self = this;</div><div class='line' id='LC17323'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var cols = this.cells_occupied_by_player.cols;</div><div class='line' id='LC17324'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var c = 0, cl = cols.length; c &lt; cl; c++) {</div><div class='line' id='LC17325'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.for_each_widget_below(cols[c], row, function(tcol, trow) {</div><div class='line' id='LC17326'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.move_widget_up(this, self.player_grid_data.size_y);</div><div class='line' id='LC17327'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC17328'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17329'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17330'><br/></div><div class='line' id='LC17331'><br/></div><div class='line' id='LC17332'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17333'>&nbsp;&nbsp;&nbsp;&nbsp;* Move a widget to a specific row. The cell or cells must be empty.</div><div class='line' id='LC17334'>&nbsp;&nbsp;&nbsp;&nbsp;* If the widget has widgets below, all of these widgets will be moved also</div><div class='line' id='LC17335'>&nbsp;&nbsp;&nbsp;&nbsp;* if they can.</div><div class='line' id='LC17336'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17337'>&nbsp;&nbsp;&nbsp;&nbsp;* @method move_widget_to</div><div class='line' id='LC17338'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {HTMLElement} $widget The jQuery wrapped HTMLElement of the</div><div class='line' id='LC17339'>&nbsp;&nbsp;&nbsp;&nbsp;* widget is going to be moved.</div><div class='line' id='LC17340'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Class} Returns the instance of the Gridster Class.</div><div class='line' id='LC17341'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17342'>&nbsp;&nbsp;&nbsp;&nbsp;fn.move_widget_to = function($widget, row) {</div><div class='line' id='LC17343'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var self = this;</div><div class='line' id='LC17344'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var widget_grid_data = $widget.coords().grid;</div><div class='line' id='LC17345'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var diff = row - widget_grid_data.row;</div><div class='line' id='LC17346'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $next_widgets = this.widgets_below($widget);</div><div class='line' id='LC17347'><br/></div><div class='line' id='LC17348'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var can_move_to_new_cell = this.can_move_to(</div><div class='line' id='LC17349'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;widget_grid_data, widget_grid_data.col, row, $widget);</div><div class='line' id='LC17350'><br/></div><div class='line' id='LC17351'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (can_move_to_new_cell === false) {</div><div class='line' id='LC17352'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC17353'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17354'><br/></div><div class='line' id='LC17355'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.remove_from_gridmap(widget_grid_data);</div><div class='line' id='LC17356'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;widget_grid_data.row = row;</div><div class='line' id='LC17357'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.add_to_gridmap(widget_grid_data);</div><div class='line' id='LC17358'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$widget.attr(&#39;data-row&#39;, row);</div><div class='line' id='LC17359'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$changed = this.$changed.add($widget);</div><div class='line' id='LC17360'><br/></div><div class='line' id='LC17361'><br/></div><div class='line' id='LC17362'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$next_widgets.each(function(i, widget) {</div><div class='line' id='LC17363'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $w = $(widget);</div><div class='line' id='LC17364'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var wgd = $w.coords().grid;</div><div class='line' id='LC17365'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var can_go_up = self.can_go_widget_up(wgd);</div><div class='line' id='LC17366'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (can_go_up &amp;&amp; can_go_up !== wgd.row) {</div><div class='line' id='LC17367'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.move_widget_to($w, can_go_up);</div><div class='line' id='LC17368'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17369'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC17370'><br/></div><div class='line' id='LC17371'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC17372'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17373'><br/></div><div class='line' id='LC17374'><br/></div><div class='line' id='LC17375'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17376'>&nbsp;&nbsp;&nbsp;&nbsp;* Move up the specified widget and all below it.</div><div class='line' id='LC17377'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17378'>&nbsp;&nbsp;&nbsp;&nbsp;* @method move_widget_up</div><div class='line' id='LC17379'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {HTMLElement} $widget The widget you want to move.</div><div class='line' id='LC17380'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} [y_units] The number of cells that the widget has to move.</div><div class='line' id='LC17381'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Class} Returns the instance of the Gridster Class.</div><div class='line' id='LC17382'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17383'>&nbsp;&nbsp;&nbsp;&nbsp;fn.move_widget_up = function($widget, y_units) {</div><div class='line' id='LC17384'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var el_grid_data = $widget.coords().grid;</div><div class='line' id='LC17385'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var actual_row = el_grid_data.row;</div><div class='line' id='LC17386'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var moved = [];</div><div class='line' id='LC17387'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var can_go_up = true;</div><div class='line' id='LC17388'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y_units || (y_units = 1);</div><div class='line' id='LC17389'><br/></div><div class='line' id='LC17390'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this.can_go_up($widget)) { return false; } //break;</div><div class='line' id='LC17391'><br/></div><div class='line' id='LC17392'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.for_each_column_occupied(el_grid_data, function(col) {</div><div class='line' id='LC17393'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// can_go_up</div><div class='line' id='LC17394'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($.inArray($widget, moved) === -1) {</div><div class='line' id='LC17395'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var widget_grid_data = $widget.coords().grid;</div><div class='line' id='LC17396'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var next_row = actual_row - y_units;</div><div class='line' id='LC17397'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;next_row = this.can_go_up_to_row(</div><div class='line' id='LC17398'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;widget_grid_data, col, next_row);</div><div class='line' id='LC17399'><br/></div><div class='line' id='LC17400'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!next_row) {</div><div class='line' id='LC17401'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC17402'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17403'><br/></div><div class='line' id='LC17404'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $next_widgets = this.widgets_below($widget);</div><div class='line' id='LC17405'><br/></div><div class='line' id='LC17406'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.remove_from_gridmap(widget_grid_data);</div><div class='line' id='LC17407'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;widget_grid_data.row = next_row;</div><div class='line' id='LC17408'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.add_to_gridmap(widget_grid_data);</div><div class='line' id='LC17409'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$widget.attr(&#39;data-row&#39;, widget_grid_data.row);</div><div class='line' id='LC17410'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$changed = this.$changed.add($widget);</div><div class='line' id='LC17411'><br/></div><div class='line' id='LC17412'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;moved.push($widget);</div><div class='line' id='LC17413'><br/></div><div class='line' id='LC17414'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$next_widgets.each($.proxy(function(i, widget) {</div><div class='line' id='LC17415'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.move_widget_up($(widget), y_units);</div><div class='line' id='LC17416'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, this));</div><div class='line' id='LC17417'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17418'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC17419'><br/></div><div class='line' id='LC17420'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17421'><br/></div><div class='line' id='LC17422'><br/></div><div class='line' id='LC17423'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17424'>&nbsp;&nbsp;&nbsp;&nbsp;* Move down the specified widget and all below it.</div><div class='line' id='LC17425'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17426'>&nbsp;&nbsp;&nbsp;&nbsp;* @method move_widget_down</div><div class='line' id='LC17427'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {jQuery} $widget The jQuery object representing the widget</div><div class='line' id='LC17428'>&nbsp;&nbsp;&nbsp;&nbsp;*  you want to move.</div><div class='line' id='LC17429'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} y_units The number of cells that the widget has to move.</div><div class='line' id='LC17430'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Class} Returns the instance of the Gridster Class.</div><div class='line' id='LC17431'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17432'>&nbsp;&nbsp;&nbsp;&nbsp;fn.move_widget_down = function($widget, y_units) {</div><div class='line' id='LC17433'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var el_grid_data = $widget.coords().grid;</div><div class='line' id='LC17434'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var actual_row = el_grid_data.row;</div><div class='line' id='LC17435'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var moved = [];</div><div class='line' id='LC17436'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var y_diff = y_units;</div><div class='line' id='LC17437'><br/></div><div class='line' id='LC17438'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!$widget) { return false; }</div><div class='line' id='LC17439'><br/></div><div class='line' id='LC17440'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($.inArray($widget, moved) === -1) {</div><div class='line' id='LC17441'><br/></div><div class='line' id='LC17442'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var widget_grid_data = $widget.coords().grid;</div><div class='line' id='LC17443'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var next_row = actual_row + y_units;</div><div class='line' id='LC17444'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $next_widgets = this.widgets_below($widget);</div><div class='line' id='LC17445'><br/></div><div class='line' id='LC17446'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.remove_from_gridmap(widget_grid_data);</div><div class='line' id='LC17447'><br/></div><div class='line' id='LC17448'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$next_widgets.each($.proxy(function(i, widget) {</div><div class='line' id='LC17449'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $w = $(widget);</div><div class='line' id='LC17450'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var wd = $w.coords().grid;</div><div class='line' id='LC17451'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var tmp_y = this.displacement_diff(</div><div class='line' id='LC17452'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wd, widget_grid_data, y_diff);</div><div class='line' id='LC17453'><br/></div><div class='line' id='LC17454'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (tmp_y &gt; 0) {</div><div class='line' id='LC17455'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.move_widget_down($w, tmp_y);</div><div class='line' id='LC17456'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17457'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, this));</div><div class='line' id='LC17458'><br/></div><div class='line' id='LC17459'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;widget_grid_data.row = next_row;</div><div class='line' id='LC17460'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.update_widget_position(widget_grid_data, $widget);</div><div class='line' id='LC17461'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$widget.attr(&#39;data-row&#39;, widget_grid_data.row);</div><div class='line' id='LC17462'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$changed = this.$changed.add($widget);</div><div class='line' id='LC17463'><br/></div><div class='line' id='LC17464'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;moved.push($widget);</div><div class='line' id='LC17465'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17466'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17467'><br/></div><div class='line' id='LC17468'><br/></div><div class='line' id='LC17469'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17470'>&nbsp;&nbsp;&nbsp;&nbsp;* Check if the widget can move to the specified row, else returns the</div><div class='line' id='LC17471'>&nbsp;&nbsp;&nbsp;&nbsp;* upper row possible.</div><div class='line' id='LC17472'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17473'>&nbsp;&nbsp;&nbsp;&nbsp;* @method can_go_up_to_row</div><div class='line' id='LC17474'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} widget_grid_data The current grid coords object of the</div><div class='line' id='LC17475'>&nbsp;&nbsp;&nbsp;&nbsp;*  widget.</div><div class='line' id='LC17476'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} col The target column.</div><div class='line' id='LC17477'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} row The target row.</div><div class='line' id='LC17478'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Boolean|Number} Returns the row number if the widget can move</div><div class='line' id='LC17479'>&nbsp;&nbsp;&nbsp;&nbsp;*  to the target position, else returns false.</div><div class='line' id='LC17480'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17481'>&nbsp;&nbsp;&nbsp;&nbsp;fn.can_go_up_to_row = function(widget_grid_data, col, row) {</div><div class='line' id='LC17482'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var ga = this.gridmap;</div><div class='line' id='LC17483'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result = true;</div><div class='line' id='LC17484'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var urc = []; // upper_rows_in_columns</div><div class='line' id='LC17485'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var actual_row = widget_grid_data.row;</div><div class='line' id='LC17486'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var r;</div><div class='line' id='LC17487'><br/></div><div class='line' id='LC17488'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* generate an array with columns as index and array with</div><div class='line' id='LC17489'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* upper rows empty in the column */</div><div class='line' id='LC17490'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.for_each_column_occupied(widget_grid_data, function(tcol) {</div><div class='line' id='LC17491'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var grid_col = ga[tcol];</div><div class='line' id='LC17492'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;urc[tcol] = [];</div><div class='line' id='LC17493'><br/></div><div class='line' id='LC17494'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r = actual_row;</div><div class='line' id='LC17495'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (r--) {</div><div class='line' id='LC17496'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.is_empty(tcol, r) &amp;&amp;</div><div class='line' id='LC17497'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;!this.is_placeholder_in(tcol, r)</div><div class='line' id='LC17498'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) {</div><div class='line' id='LC17499'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;urc[tcol].push(r);</div><div class='line' id='LC17500'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{</div><div class='line' id='LC17501'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC17502'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17503'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17504'><br/></div><div class='line' id='LC17505'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!urc[tcol].length) {</div><div class='line' id='LC17506'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = false;</div><div class='line' id='LC17507'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;</div><div class='line' id='LC17508'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17509'><br/></div><div class='line' id='LC17510'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC17511'><br/></div><div class='line' id='LC17512'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!result) { return false; }</div><div class='line' id='LC17513'><br/></div><div class='line' id='LC17514'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* get common rows starting from upper position in all the columns</div><div class='line' id='LC17515'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* that widget occupies */</div><div class='line' id='LC17516'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r = row;</div><div class='line' id='LC17517'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (r = 1; r &lt; actual_row; r++) {</div><div class='line' id='LC17518'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var common = true;</div><div class='line' id='LC17519'><br/></div><div class='line' id='LC17520'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var uc = 0, ucl = urc.length; uc &lt; ucl; uc++) {</div><div class='line' id='LC17521'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (urc[uc] &amp;&amp; $.inArray(r, urc[uc]) === -1) {</div><div class='line' id='LC17522'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;common = false;</div><div class='line' id='LC17523'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17524'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17525'><br/></div><div class='line' id='LC17526'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (common === true) {</div><div class='line' id='LC17527'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = r;</div><div class='line' id='LC17528'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC17529'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17530'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17531'><br/></div><div class='line' id='LC17532'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC17533'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17534'><br/></div><div class='line' id='LC17535'><br/></div><div class='line' id='LC17536'>&nbsp;&nbsp;&nbsp;&nbsp;fn.displacement_diff = function(widget_grid_data, parent_bgd, y_units) {</div><div class='line' id='LC17537'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var actual_row = widget_grid_data.row;</div><div class='line' id='LC17538'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var diffs = [];</div><div class='line' id='LC17539'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var parent_max_y = parent_bgd.row + parent_bgd.size_y;</div><div class='line' id='LC17540'><br/></div><div class='line' id='LC17541'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.for_each_column_occupied(widget_grid_data, function(col) {</div><div class='line' id='LC17542'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var temp_y_units = 0;</div><div class='line' id='LC17543'><br/></div><div class='line' id='LC17544'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var r = parent_max_y; r &lt; actual_row; r++) {</div><div class='line' id='LC17545'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.is_empty(col, r)) {</div><div class='line' id='LC17546'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp_y_units = temp_y_units + 1;</div><div class='line' id='LC17547'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17548'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17549'><br/></div><div class='line' id='LC17550'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;diffs.push(temp_y_units);</div><div class='line' id='LC17551'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC17552'><br/></div><div class='line' id='LC17553'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var max_diff = Math.max.apply(Math, diffs);</div><div class='line' id='LC17554'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y_units = (y_units - max_diff);</div><div class='line' id='LC17555'><br/></div><div class='line' id='LC17556'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return y_units &gt; 0 ? y_units : 0;</div><div class='line' id='LC17557'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17558'><br/></div><div class='line' id='LC17559'><br/></div><div class='line' id='LC17560'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17561'>&nbsp;&nbsp;&nbsp;&nbsp;* Get widgets below a widget.</div><div class='line' id='LC17562'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17563'>&nbsp;&nbsp;&nbsp;&nbsp;* @method widgets_below</div><div class='line' id='LC17564'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {HTMLElement} $el The jQuery wrapped HTMLElement.</div><div class='line' id='LC17565'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {jQuery} A jQuery collection of HTMLElements.</div><div class='line' id='LC17566'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17567'>&nbsp;&nbsp;&nbsp;&nbsp;fn.widgets_below = function($el) {</div><div class='line' id='LC17568'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var el_grid_data = $.isPlainObject($el) ? $el : $el.coords().grid;</div><div class='line' id='LC17569'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var self = this;</div><div class='line' id='LC17570'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var ga = this.gridmap;</div><div class='line' id='LC17571'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var next_row = el_grid_data.row + el_grid_data.size_y - 1;</div><div class='line' id='LC17572'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $nexts = $([]);</div><div class='line' id='LC17573'><br/></div><div class='line' id='LC17574'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.for_each_column_occupied(el_grid_data, function(col) {</div><div class='line' id='LC17575'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.for_each_widget_below(col, next_row, function(tcol, trow) {</div><div class='line' id='LC17576'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!self.is_player(this) &amp;&amp; $.inArray(this, $nexts) === -1) {</div><div class='line' id='LC17577'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$nexts = $nexts.add(this);</div><div class='line' id='LC17578'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true; // break</div><div class='line' id='LC17579'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17580'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC17581'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC17582'><br/></div><div class='line' id='LC17583'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.sort_by_row_asc($nexts);</div><div class='line' id='LC17584'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17585'><br/></div><div class='line' id='LC17586'><br/></div><div class='line' id='LC17587'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17588'>&nbsp;&nbsp;&nbsp;&nbsp;* Update the array of mapped positions with the new player position.</div><div class='line' id='LC17589'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17590'>&nbsp;&nbsp;&nbsp;&nbsp;* @method set_cells_player_occupies</div><div class='line' id='LC17591'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} col The new player col.</div><div class='line' id='LC17592'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} col The new player row.</div><div class='line' id='LC17593'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Class} Returns the instance of the Gridster Class.</div><div class='line' id='LC17594'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17595'>&nbsp;&nbsp;&nbsp;&nbsp;fn.set_cells_player_occupies = function(col, row) {</div><div class='line' id='LC17596'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.remove_from_gridmap(this.placeholder_grid_data);</div><div class='line' id='LC17597'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.placeholder_grid_data.col = col;</div><div class='line' id='LC17598'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.placeholder_grid_data.row = row;</div><div class='line' id='LC17599'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.add_to_gridmap(this.placeholder_grid_data, this.$player);</div><div class='line' id='LC17600'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC17601'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17602'><br/></div><div class='line' id='LC17603'><br/></div><div class='line' id='LC17604'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17605'>&nbsp;&nbsp;&nbsp;&nbsp;* Remove from the array of mapped positions the reference to the player.</div><div class='line' id='LC17606'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17607'>&nbsp;&nbsp;&nbsp;&nbsp;* @method empty_cells_player_occupies</div><div class='line' id='LC17608'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Class} Returns the instance of the Gridster Class.</div><div class='line' id='LC17609'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17610'>&nbsp;&nbsp;&nbsp;&nbsp;fn.empty_cells_player_occupies = function() {</div><div class='line' id='LC17611'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.remove_from_gridmap(this.placeholder_grid_data);</div><div class='line' id='LC17612'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC17613'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17614'><br/></div><div class='line' id='LC17615'><br/></div><div class='line' id='LC17616'>&nbsp;&nbsp;&nbsp;&nbsp;fn.can_go_up = function($el) {</div><div class='line' id='LC17617'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var el_grid_data = $el.coords().grid;</div><div class='line' id='LC17618'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var initial_row = el_grid_data.row;</div><div class='line' id='LC17619'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var prev_row = initial_row - 1;</div><div class='line' id='LC17620'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var ga = this.gridmap;</div><div class='line' id='LC17621'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var upper_rows_by_column = [];</div><div class='line' id='LC17622'><br/></div><div class='line' id='LC17623'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result = true;</div><div class='line' id='LC17624'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (initial_row === 1) { return false; }</div><div class='line' id='LC17625'><br/></div><div class='line' id='LC17626'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.for_each_column_occupied(el_grid_data, function(col) {</div><div class='line' id='LC17627'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $w = this.is_widget(col, prev_row);</div><div class='line' id='LC17628'><br/></div><div class='line' id='LC17629'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.is_occupied(col, prev_row) ||</div><div class='line' id='LC17630'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.is_player(col, prev_row) ||</div><div class='line' id='LC17631'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.is_placeholder_in(col, prev_row) ||</div><div class='line' id='LC17632'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.is_player_in(col, prev_row)</div><div class='line' id='LC17633'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) {</div><div class='line' id='LC17634'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = false;</div><div class='line' id='LC17635'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true; //break</div><div class='line' id='LC17636'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17637'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC17638'><br/></div><div class='line' id='LC17639'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC17640'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17641'><br/></div><div class='line' id='LC17642'><br/></div><div class='line' id='LC17643'><br/></div><div class='line' id='LC17644'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17645'>&nbsp;&nbsp;&nbsp;&nbsp;* Check if it&#39;s possible to move a widget to a specific col/row. It takes</div><div class='line' id='LC17646'>&nbsp;&nbsp;&nbsp;&nbsp;* into account the dimensions (`size_y` and `size_x` attrs. of the grid</div><div class='line' id='LC17647'>&nbsp;&nbsp;&nbsp;&nbsp;*  coords object) the widget occupies.</div><div class='line' id='LC17648'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17649'>&nbsp;&nbsp;&nbsp;&nbsp;* @method can_move_to</div><div class='line' id='LC17650'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object} widget_grid_data The grid coords object that represents</div><div class='line' id='LC17651'>&nbsp;&nbsp;&nbsp;&nbsp;*  the widget.</div><div class='line' id='LC17652'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object} col The col to check.</div><div class='line' id='LC17653'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object} row The row to check.</div><div class='line' id='LC17654'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} [max_row] The max row allowed.</div><div class='line' id='LC17655'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Boolean} Returns true if all cells are empty, else return false.</div><div class='line' id='LC17656'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17657'>&nbsp;&nbsp;&nbsp;&nbsp;fn.can_move_to = function(widget_grid_data, col, row, max_row) {</div><div class='line' id='LC17658'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var ga = this.gridmap;</div><div class='line' id='LC17659'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $w = widget_grid_data.el;</div><div class='line' id='LC17660'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var future_wd = {</div><div class='line' id='LC17661'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_y: widget_grid_data.size_y,</div><div class='line' id='LC17662'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_x: widget_grid_data.size_x,</div><div class='line' id='LC17663'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;col: col,</div><div class='line' id='LC17664'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row: row</div><div class='line' id='LC17665'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17666'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var result = true;</div><div class='line' id='LC17667'><br/></div><div class='line' id='LC17668'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//Prevents widgets go out of the grid</div><div class='line' id='LC17669'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var right_col = col + widget_grid_data.size_x - 1;</div><div class='line' id='LC17670'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (right_col &gt; this.cols) {</div><div class='line' id='LC17671'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC17672'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17673'><br/></div><div class='line' id='LC17674'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (max_row &amp;&amp; max_row &lt; row + widget_grid_data.size_y - 1) {</div><div class='line' id='LC17675'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC17676'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17677'><br/></div><div class='line' id='LC17678'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.for_each_cell_occupied(future_wd, function(tcol, trow) {</div><div class='line' id='LC17679'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $tw = this.is_widget(tcol, trow);</div><div class='line' id='LC17680'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($tw &amp;&amp; (!widget_grid_data.el || $tw.is($w))) {</div><div class='line' id='LC17681'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = false;</div><div class='line' id='LC17682'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17683'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC17684'><br/></div><div class='line' id='LC17685'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</div><div class='line' id='LC17686'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17687'><br/></div><div class='line' id='LC17688'><br/></div><div class='line' id='LC17689'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17690'>&nbsp;&nbsp;&nbsp;&nbsp;* Given the leftmost column returns all columns that are overlapping</div><div class='line' id='LC17691'>&nbsp;&nbsp;&nbsp;&nbsp;*  with the player.</div><div class='line' id='LC17692'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17693'>&nbsp;&nbsp;&nbsp;&nbsp;* @method get_targeted_columns</div><div class='line' id='LC17694'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} [from_col] The leftmost column.</div><div class='line' id='LC17695'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Array} Returns an array with column numbers.</div><div class='line' id='LC17696'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17697'>&nbsp;&nbsp;&nbsp;&nbsp;fn.get_targeted_columns = function(from_col) {</div><div class='line' id='LC17698'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var max = (from_col || this.player_grid_data.col) +</div><div class='line' id='LC17699'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(this.player_grid_data.size_x - 1);</div><div class='line' id='LC17700'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var cols = [];</div><div class='line' id='LC17701'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var col = from_col; col &lt;= max; col++) {</div><div class='line' id='LC17702'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cols.push(col);</div><div class='line' id='LC17703'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17704'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return cols;</div><div class='line' id='LC17705'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17706'><br/></div><div class='line' id='LC17707'><br/></div><div class='line' id='LC17708'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17709'>&nbsp;&nbsp;&nbsp;&nbsp;* Given the upper row returns all rows that are overlapping with the player.</div><div class='line' id='LC17710'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17711'>&nbsp;&nbsp;&nbsp;&nbsp;* @method get_targeted_rows</div><div class='line' id='LC17712'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} [from_row] The upper row.</div><div class='line' id='LC17713'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Array} Returns an array with row numbers.</div><div class='line' id='LC17714'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17715'>&nbsp;&nbsp;&nbsp;&nbsp;fn.get_targeted_rows = function(from_row) {</div><div class='line' id='LC17716'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var max = (from_row || this.player_grid_data.row) +</div><div class='line' id='LC17717'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(this.player_grid_data.size_y - 1);</div><div class='line' id='LC17718'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var rows = [];</div><div class='line' id='LC17719'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var row = from_row; row &lt;= max; row++) {</div><div class='line' id='LC17720'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rows.push(row);</div><div class='line' id='LC17721'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17722'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return rows;</div><div class='line' id='LC17723'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17724'><br/></div><div class='line' id='LC17725'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17726'>&nbsp;&nbsp;&nbsp;&nbsp;* Get all columns and rows that a widget occupies.</div><div class='line' id='LC17727'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17728'>&nbsp;&nbsp;&nbsp;&nbsp;* @method get_cells_occupied</div><div class='line' id='LC17729'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object} el_grid_data The grid coords object of the widget.</div><div class='line' id='LC17730'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Object} Returns an object like `{ cols: [], rows: []}`.</div><div class='line' id='LC17731'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17732'>&nbsp;&nbsp;&nbsp;&nbsp;fn.get_cells_occupied = function(el_grid_data) {</div><div class='line' id='LC17733'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var cells = { cols: [], rows: []};</div><div class='line' id='LC17734'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var i;</div><div class='line' id='LC17735'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (arguments[1] instanceof jQuery) {</div><div class='line' id='LC17736'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;el_grid_data = arguments[1].coords().grid;</div><div class='line' id='LC17737'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17738'><br/></div><div class='line' id='LC17739'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i &lt; el_grid_data.size_x; i++) {</div><div class='line' id='LC17740'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var col = el_grid_data.col + i;</div><div class='line' id='LC17741'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cells.cols.push(col);</div><div class='line' id='LC17742'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17743'><br/></div><div class='line' id='LC17744'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i &lt; el_grid_data.size_y; i++) {</div><div class='line' id='LC17745'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var row = el_grid_data.row + i;</div><div class='line' id='LC17746'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cells.rows.push(row);</div><div class='line' id='LC17747'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17748'><br/></div><div class='line' id='LC17749'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return cells;</div><div class='line' id='LC17750'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17751'><br/></div><div class='line' id='LC17752'><br/></div><div class='line' id='LC17753'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17754'>&nbsp;&nbsp;&nbsp;&nbsp;* Iterate over the cells occupied by a widget executing a function for</div><div class='line' id='LC17755'>&nbsp;&nbsp;&nbsp;&nbsp;* each one.</div><div class='line' id='LC17756'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17757'>&nbsp;&nbsp;&nbsp;&nbsp;* @method for_each_cell_occupied</div><div class='line' id='LC17758'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object} el_grid_data The grid coords object that represents the</div><div class='line' id='LC17759'>&nbsp;&nbsp;&nbsp;&nbsp;*  widget.</div><div class='line' id='LC17760'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Function} callback The function to execute on each column</div><div class='line' id='LC17761'>&nbsp;&nbsp;&nbsp;&nbsp;*  iteration. Column and row are passed as arguments.</div><div class='line' id='LC17762'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Class} Returns the instance of the Gridster Class.</div><div class='line' id='LC17763'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17764'>&nbsp;&nbsp;&nbsp;&nbsp;fn.for_each_cell_occupied = function(grid_data, callback) {</div><div class='line' id='LC17765'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.for_each_column_occupied(grid_data, function(col) {</div><div class='line' id='LC17766'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.for_each_row_occupied(grid_data, function(row) {</div><div class='line' id='LC17767'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback.call(this, col, row);</div><div class='line' id='LC17768'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC17769'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC17770'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC17771'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17772'><br/></div><div class='line' id='LC17773'><br/></div><div class='line' id='LC17774'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17775'>&nbsp;&nbsp;&nbsp;&nbsp;* Iterate over the columns occupied by a widget executing a function for</div><div class='line' id='LC17776'>&nbsp;&nbsp;&nbsp;&nbsp;* each one.</div><div class='line' id='LC17777'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17778'>&nbsp;&nbsp;&nbsp;&nbsp;* @method for_each_column_occupied</div><div class='line' id='LC17779'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object} el_grid_data The grid coords object that represents</div><div class='line' id='LC17780'>&nbsp;&nbsp;&nbsp;&nbsp;*  the widget.</div><div class='line' id='LC17781'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Function} callback The function to execute on each column</div><div class='line' id='LC17782'>&nbsp;&nbsp;&nbsp;&nbsp;*  iteration. The column number is passed as first argument.</div><div class='line' id='LC17783'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Class} Returns the instance of the Gridster Class.</div><div class='line' id='LC17784'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17785'>&nbsp;&nbsp;&nbsp;&nbsp;fn.for_each_column_occupied = function(el_grid_data, callback) {</div><div class='line' id='LC17786'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var i = 0; i &lt; el_grid_data.size_x; i++) {</div><div class='line' id='LC17787'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var col = el_grid_data.col + i;</div><div class='line' id='LC17788'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback.call(this, col, el_grid_data);</div><div class='line' id='LC17789'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17790'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17791'><br/></div><div class='line' id='LC17792'><br/></div><div class='line' id='LC17793'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17794'>&nbsp;&nbsp;&nbsp;&nbsp;* Iterate over the rows occupied by a widget executing a function for</div><div class='line' id='LC17795'>&nbsp;&nbsp;&nbsp;&nbsp;* each one.</div><div class='line' id='LC17796'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17797'>&nbsp;&nbsp;&nbsp;&nbsp;* @method for_each_row_occupied</div><div class='line' id='LC17798'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Object} el_grid_data The grid coords object that represents</div><div class='line' id='LC17799'>&nbsp;&nbsp;&nbsp;&nbsp;*  the widget.</div><div class='line' id='LC17800'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Function} callback The function to execute on each column</div><div class='line' id='LC17801'>&nbsp;&nbsp;&nbsp;&nbsp;*  iteration. The row number is passed as first argument.</div><div class='line' id='LC17802'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Class} Returns the instance of the Gridster Class.</div><div class='line' id='LC17803'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17804'>&nbsp;&nbsp;&nbsp;&nbsp;fn.for_each_row_occupied = function(el_grid_data, callback) {</div><div class='line' id='LC17805'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var i = 0; i &lt; el_grid_data.size_y; i++) {</div><div class='line' id='LC17806'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var row = el_grid_data.row + i;</div><div class='line' id='LC17807'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback.call(this, row, el_grid_data);</div><div class='line' id='LC17808'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17809'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17810'><br/></div><div class='line' id='LC17811'><br/></div><div class='line' id='LC17812'><br/></div><div class='line' id='LC17813'>&nbsp;&nbsp;&nbsp;&nbsp;fn._traversing_widgets = function(type, direction, col, row, callback) {</div><div class='line' id='LC17814'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var ga = this.gridmap;</div><div class='line' id='LC17815'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!ga[col]) { return; }</div><div class='line' id='LC17816'><br/></div><div class='line' id='LC17817'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var cr, max;</div><div class='line' id='LC17818'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var action = type + &#39;/&#39; + direction;</div><div class='line' id='LC17819'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (arguments[2] instanceof jQuery) {</div><div class='line' id='LC17820'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var el_grid_data = arguments[2].coords().grid;</div><div class='line' id='LC17821'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;col = el_grid_data.col;</div><div class='line' id='LC17822'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row = el_grid_data.row;</div><div class='line' id='LC17823'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;callback = arguments[3];</div><div class='line' id='LC17824'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17825'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var matched = [];</div><div class='line' id='LC17826'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var trow = row;</div><div class='line' id='LC17827'><br/></div><div class='line' id='LC17828'><br/></div><div class='line' id='LC17829'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var methods = {</div><div class='line' id='LC17830'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;for_each/above&#39;: function() {</div><div class='line' id='LC17831'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (trow--) {</div><div class='line' id='LC17832'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (trow &gt; 0 &amp;&amp; this.is_widget(col, trow) &amp;&amp;</div><div class='line' id='LC17833'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.inArray(ga[col][trow], matched) === -1</div><div class='line' id='LC17834'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) {</div><div class='line' id='LC17835'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cr = callback.call(ga[col][trow], col, trow);</div><div class='line' id='LC17836'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;matched.push(ga[col][trow]);</div><div class='line' id='LC17837'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (cr) { break; }</div><div class='line' id='LC17838'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17839'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17840'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div><div class='line' id='LC17841'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;for_each/below&#39;: function() {</div><div class='line' id='LC17842'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (trow = row + 1, max = ga[col].length; trow &lt; max; trow++) {</div><div class='line' id='LC17843'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.is_widget(col, trow) &amp;&amp;</div><div class='line' id='LC17844'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.inArray(ga[col][trow], matched) === -1</div><div class='line' id='LC17845'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) {</div><div class='line' id='LC17846'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cr = callback.call(ga[col][trow], col, trow);</div><div class='line' id='LC17847'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;matched.push(ga[col][trow]);</div><div class='line' id='LC17848'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (cr) { break; }</div><div class='line' id='LC17849'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17850'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17851'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17852'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17853'><br/></div><div class='line' id='LC17854'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (methods[action]) {</div><div class='line' id='LC17855'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;methods[action].call(this);</div><div class='line' id='LC17856'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17857'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17858'><br/></div><div class='line' id='LC17859'><br/></div><div class='line' id='LC17860'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17861'>&nbsp;&nbsp;&nbsp;&nbsp;* Iterate over each widget above the column and row specified.</div><div class='line' id='LC17862'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17863'>&nbsp;&nbsp;&nbsp;&nbsp;* @method for_each_widget_above</div><div class='line' id='LC17864'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} col The column to start iterating.</div><div class='line' id='LC17865'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} row The row to start iterating.</div><div class='line' id='LC17866'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Function} callback The function to execute on each widget</div><div class='line' id='LC17867'>&nbsp;&nbsp;&nbsp;&nbsp;*  iteration. The value of `this` inside the function is the jQuery</div><div class='line' id='LC17868'>&nbsp;&nbsp;&nbsp;&nbsp;*  wrapped HTMLElement.</div><div class='line' id='LC17869'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Class} Returns the instance of the Gridster Class.</div><div class='line' id='LC17870'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17871'>&nbsp;&nbsp;&nbsp;&nbsp;fn.for_each_widget_above = function(col, row, callback) {</div><div class='line' id='LC17872'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._traversing_widgets(&#39;for_each&#39;, &#39;above&#39;, col, row, callback);</div><div class='line' id='LC17873'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC17874'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17875'><br/></div><div class='line' id='LC17876'><br/></div><div class='line' id='LC17877'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17878'>&nbsp;&nbsp;&nbsp;&nbsp;* Iterate over each widget below the column and row specified.</div><div class='line' id='LC17879'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17880'>&nbsp;&nbsp;&nbsp;&nbsp;* @method for_each_widget_below</div><div class='line' id='LC17881'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} col The column to start iterating.</div><div class='line' id='LC17882'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} row The row to start iterating.</div><div class='line' id='LC17883'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Function} callback The function to execute on each widget</div><div class='line' id='LC17884'>&nbsp;&nbsp;&nbsp;&nbsp;*  iteration. The value of `this` inside the function is the jQuery wrapped</div><div class='line' id='LC17885'>&nbsp;&nbsp;&nbsp;&nbsp;*  HTMLElement.</div><div class='line' id='LC17886'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Class} Returns the instance of the Gridster Class.</div><div class='line' id='LC17887'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17888'>&nbsp;&nbsp;&nbsp;&nbsp;fn.for_each_widget_below = function(col, row, callback) {</div><div class='line' id='LC17889'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._traversing_widgets(&#39;for_each&#39;, &#39;below&#39;, col, row, callback);</div><div class='line' id='LC17890'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC17891'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17892'><br/></div><div class='line' id='LC17893'><br/></div><div class='line' id='LC17894'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17895'>&nbsp;&nbsp;&nbsp;&nbsp;* Returns the highest occupied cell in the grid.</div><div class='line' id='LC17896'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17897'>&nbsp;&nbsp;&nbsp;&nbsp;* @method get_highest_occupied_cell</div><div class='line' id='LC17898'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Object} Returns an object with `col` and `row` numbers.</div><div class='line' id='LC17899'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17900'>&nbsp;&nbsp;&nbsp;&nbsp;fn.get_highest_occupied_cell = function() {</div><div class='line' id='LC17901'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var r;</div><div class='line' id='LC17902'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var gm = this.gridmap;</div><div class='line' id='LC17903'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var rows = [];</div><div class='line' id='LC17904'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var row_in_col = [];</div><div class='line' id='LC17905'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var c = gm.length - 1; c &gt;= 1; c--) {</div><div class='line' id='LC17906'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (r = gm[c].length - 1; r &gt;= 1; r--) {</div><div class='line' id='LC17907'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.is_widget(c, r)) {</div><div class='line' id='LC17908'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rows.push(r);</div><div class='line' id='LC17909'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row_in_col[r] = c;</div><div class='line' id='LC17910'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</div><div class='line' id='LC17911'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17912'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17913'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17914'><br/></div><div class='line' id='LC17915'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var highest_row = Math.max.apply(Math, rows);</div><div class='line' id='LC17916'><br/></div><div class='line' id='LC17917'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.highest_occupied_cell = {</div><div class='line' id='LC17918'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;col: row_in_col[highest_row],</div><div class='line' id='LC17919'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row: highest_row</div><div class='line' id='LC17920'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17921'><br/></div><div class='line' id='LC17922'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.highest_occupied_cell;</div><div class='line' id='LC17923'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17924'><br/></div><div class='line' id='LC17925'><br/></div><div class='line' id='LC17926'>&nbsp;&nbsp;&nbsp;&nbsp;fn.get_widgets_from = function(col, row) {</div><div class='line' id='LC17927'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var ga = this.gridmap;</div><div class='line' id='LC17928'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $widgets = $();</div><div class='line' id='LC17929'><br/></div><div class='line' id='LC17930'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (col) {</div><div class='line' id='LC17931'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$widgets = $widgets.add(</div><div class='line' id='LC17932'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$widgets.filter(function() {</div><div class='line' id='LC17933'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var tcol = $(this).attr(&#39;data-col&#39;);</div><div class='line' id='LC17934'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (tcol === col || tcol &gt; col);</div><div class='line' id='LC17935'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})</div><div class='line' id='LC17936'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC17937'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17938'><br/></div><div class='line' id='LC17939'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (row) {</div><div class='line' id='LC17940'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$widgets = $widgets.add(</div><div class='line' id='LC17941'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$widgets.filter(function() {</div><div class='line' id='LC17942'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var trow = $(this).attr(&#39;data-row&#39;);</div><div class='line' id='LC17943'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (trow === row || trow &gt; row);</div><div class='line' id='LC17944'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})</div><div class='line' id='LC17945'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC17946'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17947'><br/></div><div class='line' id='LC17948'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $widgets;</div><div class='line' id='LC17949'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17950'><br/></div><div class='line' id='LC17951'><br/></div><div class='line' id='LC17952'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17953'>&nbsp;&nbsp;&nbsp;&nbsp;* Set the current height of the parent grid.</div><div class='line' id='LC17954'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17955'>&nbsp;&nbsp;&nbsp;&nbsp;* @method set_dom_grid_height</div><div class='line' id='LC17956'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Object} Returns the instance of the Gridster class.</div><div class='line' id='LC17957'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17958'>&nbsp;&nbsp;&nbsp;&nbsp;fn.set_dom_grid_height = function() {</div><div class='line' id='LC17959'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var r = this.get_highest_occupied_cell().row;</div><div class='line' id='LC17960'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$el.css(&#39;height&#39;, r * this.min_widget_height);</div><div class='line' id='LC17961'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC17962'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC17963'><br/></div><div class='line' id='LC17964'><br/></div><div class='line' id='LC17965'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC17966'>&nbsp;&nbsp;&nbsp;&nbsp;* It generates the neccessary styles to position the widgets.</div><div class='line' id='LC17967'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC17968'>&nbsp;&nbsp;&nbsp;&nbsp;* @method generate_stylesheet</div><div class='line' id='LC17969'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} rows Number of columns.</div><div class='line' id='LC17970'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} cols Number of rows.</div><div class='line' id='LC17971'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Object} Returns the instance of the Gridster class.</div><div class='line' id='LC17972'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC17973'>&nbsp;&nbsp;&nbsp;&nbsp;fn.generate_stylesheet = function(opts) {</div><div class='line' id='LC17974'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var styles = &#39;&#39;;</div><div class='line' id='LC17975'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var max_size_x = this.options.max_size_x;</div><div class='line' id='LC17976'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var max_rows = 0;</div><div class='line' id='LC17977'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var max_cols = 0;</div><div class='line' id='LC17978'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var i;</div><div class='line' id='LC17979'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var rules;</div><div class='line' id='LC17980'><br/></div><div class='line' id='LC17981'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;opts || (opts = {});</div><div class='line' id='LC17982'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;opts.cols || (opts.cols = this.cols);</div><div class='line' id='LC17983'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;opts.rows || (opts.rows = this.rows);</div><div class='line' id='LC17984'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;opts.namespace || (opts.namespace = this.options.namespace);</div><div class='line' id='LC17985'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;opts.widget_base_dimensions ||</div><div class='line' id='LC17986'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(opts.widget_base_dimensions = this.options.widget_base_dimensions);</div><div class='line' id='LC17987'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;opts.widget_margins ||</div><div class='line' id='LC17988'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(opts.widget_margins = this.options.widget_margins);</div><div class='line' id='LC17989'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;opts.min_widget_width = (opts.widget_margins[0] * 2) +</div><div class='line' id='LC17990'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;opts.widget_base_dimensions[0];</div><div class='line' id='LC17991'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;opts.min_widget_height = (opts.widget_margins[1] * 2) +</div><div class='line' id='LC17992'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;opts.widget_base_dimensions[1];</div><div class='line' id='LC17993'><br/></div><div class='line' id='LC17994'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// don&#39;t duplicate stylesheets for the same configuration</div><div class='line' id='LC17995'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var serialized_opts = $.param(opts);</div><div class='line' id='LC17996'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($.inArray(serialized_opts, Gridster.generated_stylesheets) &gt;= 0) {</div><div class='line' id='LC17997'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;</div><div class='line' id='LC17998'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC17999'><br/></div><div class='line' id='LC18000'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gridster.generated_stylesheets.push(serialized_opts);</div><div class='line' id='LC18001'><br/></div><div class='line' id='LC18002'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* generate CSS styles for cols */</div><div class='line' id='LC18003'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (i = opts.cols; i &gt;= 0; i--) {</div><div class='line' id='LC18004'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;styles += (opts.namespace + &#39; [data-col=&quot;&#39;+ (i + 1) + &#39;&quot;] { left:&#39; +</div><div class='line' id='LC18005'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;((i * opts.widget_base_dimensions[0]) +</div><div class='line' id='LC18006'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(i * opts.widget_margins[0]) +</div><div class='line' id='LC18007'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;((i + 1) * opts.widget_margins[0])) + &#39;px;} &#39;);</div><div class='line' id='LC18008'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18009'><br/></div><div class='line' id='LC18010'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* generate CSS styles for rows */</div><div class='line' id='LC18011'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (i = opts.rows; i &gt;= 0; i--) {</div><div class='line' id='LC18012'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;styles += (opts.namespace + &#39; [data-row=&quot;&#39; + (i + 1) + &#39;&quot;] { top:&#39; +</div><div class='line' id='LC18013'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;((i * opts.widget_base_dimensions[1]) +</div><div class='line' id='LC18014'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(i * opts.widget_margins[1]) +</div><div class='line' id='LC18015'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;((i + 1) * opts.widget_margins[1]) ) + &#39;px;} &#39;);</div><div class='line' id='LC18016'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18017'><br/></div><div class='line' id='LC18018'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var y = 1; y &lt;= opts.rows; y++) {</div><div class='line' id='LC18019'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;styles += (opts.namespace + &#39; [data-sizey=&quot;&#39; + y + &#39;&quot;] { height:&#39; +</div><div class='line' id='LC18020'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(y * opts.widget_base_dimensions[1] +</div><div class='line' id='LC18021'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(y - 1) * (opts.widget_margins[1] * 2)) + &#39;px;}&#39;);</div><div class='line' id='LC18022'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18023'><br/></div><div class='line' id='LC18024'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var x = 1; x &lt;= max_size_x; x++) {</div><div class='line' id='LC18025'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;styles += (opts.namespace + &#39; [data-sizex=&quot;&#39; + x + &#39;&quot;] { width:&#39; +</div><div class='line' id='LC18026'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(x * opts.widget_base_dimensions[0] +</div><div class='line' id='LC18027'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(x - 1) * (opts.widget_margins[0] * 2)) + &#39;px;}&#39;);</div><div class='line' id='LC18028'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18029'><br/></div><div class='line' id='LC18030'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.add_style_tag(styles);</div><div class='line' id='LC18031'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18032'><br/></div><div class='line' id='LC18033'><br/></div><div class='line' id='LC18034'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC18035'>&nbsp;&nbsp;&nbsp;&nbsp;* Injects the given CSS as string to the head of the document.</div><div class='line' id='LC18036'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18037'>&nbsp;&nbsp;&nbsp;&nbsp;* @method add_style_tag</div><div class='line' id='LC18038'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {String} css The styles to apply.</div><div class='line' id='LC18039'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Object} Returns the instance of the Gridster class.</div><div class='line' id='LC18040'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC18041'>&nbsp;&nbsp;&nbsp;&nbsp;fn.add_style_tag = function(css) {</div><div class='line' id='LC18042'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var d = document;</div><div class='line' id='LC18043'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var tag = d.createElement(&#39;style&#39;);</div><div class='line' id='LC18044'><br/></div><div class='line' id='LC18045'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.getElementsByTagName(&#39;head&#39;)[0].appendChild(tag);</div><div class='line' id='LC18046'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tag.setAttribute(&#39;type&#39;, &#39;text/css&#39;);</div><div class='line' id='LC18047'><br/></div><div class='line' id='LC18048'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (tag.styleSheet) {</div><div class='line' id='LC18049'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tag.styleSheet.cssText = css;</div><div class='line' id='LC18050'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{</div><div class='line' id='LC18051'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tag.appendChild(document.createTextNode(css));</div><div class='line' id='LC18052'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18053'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC18054'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18055'><br/></div><div class='line' id='LC18056'><br/></div><div class='line' id='LC18057'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC18058'>&nbsp;&nbsp;&nbsp;&nbsp;* Generates a faux grid to collide with it when a widget is dragged and</div><div class='line' id='LC18059'>&nbsp;&nbsp;&nbsp;&nbsp;* detect row or column that we want to go.</div><div class='line' id='LC18060'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18061'>&nbsp;&nbsp;&nbsp;&nbsp;* @method generate_faux_grid</div><div class='line' id='LC18062'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} rows Number of columns.</div><div class='line' id='LC18063'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} cols Number of rows.</div><div class='line' id='LC18064'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Object} Returns the instance of the Gridster class.</div><div class='line' id='LC18065'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC18066'>&nbsp;&nbsp;&nbsp;&nbsp;fn.generate_faux_grid = function(rows, cols) {</div><div class='line' id='LC18067'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.faux_grid = [];</div><div class='line' id='LC18068'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.gridmap = [];</div><div class='line' id='LC18069'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var col;</div><div class='line' id='LC18070'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var row;</div><div class='line' id='LC18071'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (col = cols; col &gt; 0; col--) {</div><div class='line' id='LC18072'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.gridmap[col] = [];</div><div class='line' id='LC18073'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (row = rows; row &gt; 0; row--) {</div><div class='line' id='LC18074'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.add_faux_cell(row, col);</div><div class='line' id='LC18075'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18076'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18077'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC18078'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18079'><br/></div><div class='line' id='LC18080'><br/></div><div class='line' id='LC18081'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC18082'>&nbsp;&nbsp;&nbsp;&nbsp;* Add cell to the faux grid.</div><div class='line' id='LC18083'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18084'>&nbsp;&nbsp;&nbsp;&nbsp;* @method add_faux_cell</div><div class='line' id='LC18085'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} row The row for the new faux cell.</div><div class='line' id='LC18086'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} col The col for the new faux cell.</div><div class='line' id='LC18087'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Object} Returns the instance of the Gridster class.</div><div class='line' id='LC18088'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC18089'>&nbsp;&nbsp;&nbsp;&nbsp;fn.add_faux_cell = function(row, col) {</div><div class='line' id='LC18090'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var coords = $({</div><div class='line' id='LC18091'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left: this.baseX + ((col - 1) * this.min_widget_width),</div><div class='line' id='LC18092'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top: this.baseY + (row -1) * this.min_widget_height,</div><div class='line' id='LC18093'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;width: this.min_widget_width,</div><div class='line' id='LC18094'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;height: this.min_widget_height,</div><div class='line' id='LC18095'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;col: col,</div><div class='line' id='LC18096'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row: row,</div><div class='line' id='LC18097'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;original_col: col,</div><div class='line' id='LC18098'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;original_row: row</div><div class='line' id='LC18099'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}).coords();</div><div class='line' id='LC18100'><br/></div><div class='line' id='LC18101'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!$.isArray(this.gridmap[col])) {</div><div class='line' id='LC18102'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.gridmap[col] = [];</div><div class='line' id='LC18103'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18104'><br/></div><div class='line' id='LC18105'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.gridmap[col][row] = false;</div><div class='line' id='LC18106'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.faux_grid.push(coords);</div><div class='line' id='LC18107'><br/></div><div class='line' id='LC18108'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC18109'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18110'><br/></div><div class='line' id='LC18111'><br/></div><div class='line' id='LC18112'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC18113'>&nbsp;&nbsp;&nbsp;&nbsp;* Add rows to the faux grid.</div><div class='line' id='LC18114'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18115'>&nbsp;&nbsp;&nbsp;&nbsp;* @method add_faux_rows</div><div class='line' id='LC18116'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} rows The number of rows you want to add to the faux grid.</div><div class='line' id='LC18117'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Object} Returns the instance of the Gridster class.</div><div class='line' id='LC18118'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC18119'>&nbsp;&nbsp;&nbsp;&nbsp;fn.add_faux_rows = function(rows) {</div><div class='line' id='LC18120'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var actual_rows = this.rows;</div><div class='line' id='LC18121'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var max_rows = actual_rows + (rows || 1);</div><div class='line' id='LC18122'><br/></div><div class='line' id='LC18123'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var r = max_rows; r &gt; actual_rows; r--) {</div><div class='line' id='LC18124'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var c = this.cols; c &gt;= 1; c--) {</div><div class='line' id='LC18125'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.add_faux_cell(r, c);</div><div class='line' id='LC18126'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18127'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18128'><br/></div><div class='line' id='LC18129'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.rows = max_rows;</div><div class='line' id='LC18130'><br/></div><div class='line' id='LC18131'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.options.autogenerate_stylesheet) {</div><div class='line' id='LC18132'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.generate_stylesheet();</div><div class='line' id='LC18133'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18134'><br/></div><div class='line' id='LC18135'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC18136'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18137'><br/></div><div class='line' id='LC18138'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC18139'>&nbsp;&nbsp;&nbsp;&nbsp;* Add cols to the faux grid.</div><div class='line' id='LC18140'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18141'>&nbsp;&nbsp;&nbsp;&nbsp;* @method add_faux_cols</div><div class='line' id='LC18142'>&nbsp;&nbsp;&nbsp;&nbsp;* @param {Number} cols The number of cols you want to add to the faux grid.</div><div class='line' id='LC18143'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Object} Returns the instance of the Gridster class.</div><div class='line' id='LC18144'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC18145'>&nbsp;&nbsp;&nbsp;&nbsp;fn.add_faux_cols = function(cols) {</div><div class='line' id='LC18146'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var actual_cols = this.cols;</div><div class='line' id='LC18147'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var max_cols = actual_cols + (cols || 1);</div><div class='line' id='LC18148'><br/></div><div class='line' id='LC18149'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var c = actual_cols; c &lt; max_cols; c++) {</div><div class='line' id='LC18150'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var r = this.rows; r &gt;= 1; r--) {</div><div class='line' id='LC18151'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.add_faux_cell(r, c);</div><div class='line' id='LC18152'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18153'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18154'><br/></div><div class='line' id='LC18155'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cols = max_cols;</div><div class='line' id='LC18156'><br/></div><div class='line' id='LC18157'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.options.autogenerate_stylesheet) {</div><div class='line' id='LC18158'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.generate_stylesheet();</div><div class='line' id='LC18159'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18160'><br/></div><div class='line' id='LC18161'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC18162'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18163'><br/></div><div class='line' id='LC18164'><br/></div><div class='line' id='LC18165'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC18166'>&nbsp;&nbsp;&nbsp;&nbsp;* Recalculates the offsets for the faux grid. You need to use it when</div><div class='line' id='LC18167'>&nbsp;&nbsp;&nbsp;&nbsp;* the browser is resized.</div><div class='line' id='LC18168'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18169'>&nbsp;&nbsp;&nbsp;&nbsp;* @method recalculate_faux_grid</div><div class='line' id='LC18170'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Object} Returns the instance of the Gridster class.</div><div class='line' id='LC18171'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC18172'>&nbsp;&nbsp;&nbsp;&nbsp;fn.recalculate_faux_grid = function() {</div><div class='line' id='LC18173'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var aw = this.$wrapper.width();</div><div class='line' id='LC18174'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.baseX = ($(window).width() - aw) / 2;</div><div class='line' id='LC18175'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.baseY = this.$wrapper.offset().top;</div><div class='line' id='LC18176'><br/></div><div class='line' id='LC18177'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.each(this.faux_grid, $.proxy(function(i, coords) {</div><div class='line' id='LC18178'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.faux_grid[i] = coords.update({</div><div class='line' id='LC18179'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left: this.baseX + (coords.data.col -1) * this.min_widget_width,</div><div class='line' id='LC18180'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top: this.baseY + (coords.data.row -1) * this.min_widget_height</div><div class='line' id='LC18181'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC18182'><br/></div><div class='line' id='LC18183'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, this));</div><div class='line' id='LC18184'><br/></div><div class='line' id='LC18185'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC18186'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18187'><br/></div><div class='line' id='LC18188'><br/></div><div class='line' id='LC18189'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC18190'>&nbsp;&nbsp;&nbsp;&nbsp;* Get all widgets in the DOM and register them.</div><div class='line' id='LC18191'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18192'>&nbsp;&nbsp;&nbsp;&nbsp;* @method get_widgets_from_DOM</div><div class='line' id='LC18193'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Object} Returns the instance of the Gridster class.</div><div class='line' id='LC18194'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC18195'>&nbsp;&nbsp;&nbsp;&nbsp;fn.get_widgets_from_DOM = function() {</div><div class='line' id='LC18196'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$widgets.each($.proxy(function(i, widget) {</div><div class='line' id='LC18197'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.register_widget($(widget));</div><div class='line' id='LC18198'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, this));</div><div class='line' id='LC18199'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC18200'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18201'><br/></div><div class='line' id='LC18202'><br/></div><div class='line' id='LC18203'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC18204'>&nbsp;&nbsp;&nbsp;&nbsp;* Calculate columns and rows to be set based on the configuration</div><div class='line' id='LC18205'>&nbsp;&nbsp;&nbsp;&nbsp;*  parameters, grid dimensions, etc ...</div><div class='line' id='LC18206'>&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18207'>&nbsp;&nbsp;&nbsp;&nbsp;* @method generate_grid_and_stylesheet</div><div class='line' id='LC18208'>&nbsp;&nbsp;&nbsp;&nbsp;* @return {Object} Returns the instance of the Gridster class.</div><div class='line' id='LC18209'>&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC18210'>&nbsp;&nbsp;&nbsp;&nbsp;fn.generate_grid_and_stylesheet = function() {</div><div class='line' id='LC18211'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var aw = this.$wrapper.width();</div><div class='line' id='LC18212'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var ah = this.$wrapper.height();</div><div class='line' id='LC18213'><br/></div><div class='line' id='LC18214'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var cols = Math.floor(aw / this.min_widget_width) +</div><div class='line' id='LC18215'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.options.extra_cols;</div><div class='line' id='LC18216'><br/></div><div class='line' id='LC18217'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var actual_cols = this.$widgets.map(function() {</div><div class='line' id='LC18218'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $(this).attr(&#39;data-col&#39;);</div><div class='line' id='LC18219'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC18220'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actual_cols = Array.prototype.slice.call(actual_cols, 0);</div><div class='line' id='LC18221'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//needed to pass tests with phantomjs</div><div class='line' id='LC18222'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actual_cols.length || (actual_cols = [0]);</div><div class='line' id='LC18223'><br/></div><div class='line' id='LC18224'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var min_cols = Math.max.apply(Math, actual_cols);</div><div class='line' id='LC18225'><br/></div><div class='line' id='LC18226'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// get all rows that could be occupied by the current widgets</div><div class='line' id='LC18227'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var max_rows = this.options.extra_rows;</div><div class='line' id='LC18228'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$widgets.each(function(i, w) {</div><div class='line' id='LC18229'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;max_rows += (+$(w).attr(&#39;data-sizey&#39;));</div><div class='line' id='LC18230'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC18231'><br/></div><div class='line' id='LC18232'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cols = Math.max(min_cols, cols, this.options.min_cols);</div><div class='line' id='LC18233'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.rows = Math.max(max_rows, this.options.min_rows);</div><div class='line' id='LC18234'><br/></div><div class='line' id='LC18235'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.baseX = ($(window).width() - aw) / 2;</div><div class='line' id='LC18236'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.baseY = this.$wrapper.offset().top;</div><div class='line' id='LC18237'><br/></div><div class='line' id='LC18238'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.options.autogenerate_stylesheet) {</div><div class='line' id='LC18239'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.generate_stylesheet();</div><div class='line' id='LC18240'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18241'><br/></div><div class='line' id='LC18242'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.generate_faux_grid(this.rows, this.cols);</div><div class='line' id='LC18243'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18244'><br/></div><div class='line' id='LC18245'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC18246'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Destroy this gridster by removing any sign of its presence, making it easy to avoid memory leaks</div><div class='line' id='LC18247'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18248'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @method destroy</div><div class='line' id='LC18249'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return {undefined}</div><div class='line' id='LC18250'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC18251'>&nbsp;&nbsp;&nbsp;&nbsp;fn.destroy = function(){</div><div class='line' id='LC18252'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// remove bound callback on window resize</div><div class='line' id='LC18253'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(window).unbind(&#39;resize&#39;, this.on_window_resize);</div><div class='line' id='LC18254'><br/></div><div class='line' id='LC18255'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(this.drag_api){</div><div class='line' id='LC18256'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.drag_api.destroy();</div><div class='line' id='LC18257'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18258'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div><div class='line' id='LC18259'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// lastly, remove gridster element</div><div class='line' id='LC18260'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// this will additionally cause any data associated to this element to be removed, including this</div><div class='line' id='LC18261'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// very gridster instance</div><div class='line' id='LC18262'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$el.remove();</div><div class='line' id='LC18263'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18264'><br/></div><div class='line' id='LC18265'><br/></div><div class='line' id='LC18266'>&nbsp;&nbsp;&nbsp;&nbsp;//jQuery adapter</div><div class='line' id='LC18267'>&nbsp;&nbsp;&nbsp;&nbsp;$.fn.gridster = function(options) {</div><div class='line' id='LC18268'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.each(function() {</div><div class='line' id='LC18269'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!$(this).data(&#39;gridster&#39;)) {</div><div class='line' id='LC18270'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(this).data(&#39;gridster&#39;, new Gridster( this, options ));</div><div class='line' id='LC18271'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18272'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC18273'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18274'><br/></div><div class='line' id='LC18275'>&nbsp;&nbsp;&nbsp;&nbsp;$.Gridster = fn;</div><div class='line' id='LC18276'><br/></div><div class='line' id='LC18277'>}(jQuery, window, document));</div><div class='line' id='LC18278'>// leanModal v1.1 by Ray Stone - http://finelysliced.com.au</div><div class='line' id='LC18279'>// Dual licensed under the MIT and GPL</div><div class='line' id='LC18280'><br/></div><div class='line' id='LC18281'>(function($){$.fn.extend({leanModal:function(options){var defaults={top:100,overlay:0.5,closeButton:null};var overlay=$(&quot;&lt;div id=&#39;lean_overlay&#39;&gt;&lt;/div&gt;&quot;);$(&quot;body&quot;).append(overlay);options=$.extend(defaults,options);return this.each(function(){var o=options;$(this).click(function(e){var modal_id=$(this).attr(&quot;href&quot;);$(&quot;#lean_overlay&quot;).click(function(){close_modal(modal_id)});$(o.closeButton).click(function(){close_modal(modal_id)});var modal_height=$(modal_id).outerHeight();var modal_width=$(modal_id).outerWidth();</div><div class='line' id='LC18282'>$(&quot;#lean_overlay&quot;).css({&quot;display&quot;:&quot;block&quot;,opacity:0});$(&quot;#lean_overlay&quot;).fadeTo(200,o.overlay);$(modal_id).css({&quot;display&quot;:&quot;block&quot;,&quot;position&quot;:&quot;fixed&quot;,&quot;opacity&quot;:0,&quot;z-index&quot;:11000,&quot;left&quot;:50+&quot;%&quot;,&quot;margin-left&quot;:-(modal_width/2)+&quot;px&quot;,&quot;top&quot;:o.top+&quot;px&quot;});$(modal_id).fadeTo(200,1);e.preventDefault()})});function close_modal(modal_id){$(&quot;#lean_overlay&quot;).fadeOut(200);$(modal_id).css({&quot;display&quot;:&quot;none&quot;})}}})})(jQuery);</div><div class='line' id='LC18283'>(function() {</div><div class='line' id='LC18284'>&nbsp;&nbsp;Dashing.gridsterLayout = function(positions) {</div><div class='line' id='LC18285'>&nbsp;&nbsp;&nbsp;&nbsp;var index, widget, widgets, _i, _len, _results;</div><div class='line' id='LC18286'>&nbsp;&nbsp;&nbsp;&nbsp;Dashing.customGridsterLayout = true;</div><div class='line' id='LC18287'>&nbsp;&nbsp;&nbsp;&nbsp;positions = positions.replace(/^&quot;|&quot;$/g, &#39;&#39;);</div><div class='line' id='LC18288'>&nbsp;&nbsp;&nbsp;&nbsp;positions = $.parseJSON(positions);</div><div class='line' id='LC18289'>&nbsp;&nbsp;&nbsp;&nbsp;widgets = $(&quot;[data-row^=]&quot;);</div><div class='line' id='LC18290'>&nbsp;&nbsp;&nbsp;&nbsp;_results = [];</div><div class='line' id='LC18291'>&nbsp;&nbsp;&nbsp;&nbsp;for (index = _i = 0, _len = widgets.length; _i &lt; _len; index = ++_i) {</div><div class='line' id='LC18292'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;widget = widgets[index];</div><div class='line' id='LC18293'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(widget).attr(&#39;data-row&#39;, positions[index].row);</div><div class='line' id='LC18294'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_results.push($(widget).attr(&#39;data-col&#39;, positions[index].col));</div><div class='line' id='LC18295'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18296'>&nbsp;&nbsp;&nbsp;&nbsp;return _results;</div><div class='line' id='LC18297'>&nbsp;&nbsp;};</div><div class='line' id='LC18298'><br/></div><div class='line' id='LC18299'>&nbsp;&nbsp;Dashing.getWidgetPositions = function() {</div><div class='line' id='LC18300'>&nbsp;&nbsp;&nbsp;&nbsp;return $(&quot;.gridster ul:first&quot;).gridster().data(&#39;gridster&#39;).serialize();</div><div class='line' id='LC18301'>&nbsp;&nbsp;};</div><div class='line' id='LC18302'><br/></div><div class='line' id='LC18303'>&nbsp;&nbsp;Dashing.showGridsterInstructions = function() {</div><div class='line' id='LC18304'>&nbsp;&nbsp;&nbsp;&nbsp;var newWidgetPositions;</div><div class='line' id='LC18305'>&nbsp;&nbsp;&nbsp;&nbsp;newWidgetPositions = Dashing.getWidgetPositions();</div><div class='line' id='LC18306'>&nbsp;&nbsp;&nbsp;&nbsp;if (JSON.stringify(newWidgetPositions) !== JSON.stringify(Dashing.currentWidgetPositions)) {</div><div class='line' id='LC18307'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dashing.currentWidgetPositions = newWidgetPositions;</div><div class='line' id='LC18308'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(&#39;#save-gridster&#39;).slideDown();</div><div class='line' id='LC18309'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $(&#39;#gridster-code&#39;).text(&quot;      &lt;script type=&#39;text/javascript&#39;&gt;\n      $(function() {\n      \ \ Dashing.gridsterLayout(&#39;&quot; + (JSON.stringify(Dashing.currentWidgetPositions)) + &quot;&#39;)\n      });\n      &lt;/script&gt;    &quot;);</div><div class='line' id='LC18310'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18311'>&nbsp;&nbsp;};</div><div class='line' id='LC18312'><br/></div><div class='line' id='LC18313'>&nbsp;&nbsp;$(function() {</div><div class='line' id='LC18314'>&nbsp;&nbsp;&nbsp;&nbsp;$(&#39;#save-gridster&#39;).leanModal();</div><div class='line' id='LC18315'>&nbsp;&nbsp;&nbsp;&nbsp;return $(&#39;#save-gridster&#39;).click(function() {</div><div class='line' id='LC18316'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $(&#39;#save-gridster&#39;).slideUp();</div><div class='line' id='LC18317'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC18318'>&nbsp;&nbsp;});</div><div class='line' id='LC18319'><br/></div><div class='line' id='LC18320'>}).call(this);</div><div class='line' id='LC18321'>/*!jQuery Knob*/</div><div class='line' id='LC18322'>/**</div><div class='line' id='LC18323'>&nbsp;* Downward compatible, touchable dial</div><div class='line' id='LC18324'>&nbsp;*</div><div class='line' id='LC18325'>&nbsp;* Version: 1.2.0 (15/07/2012)</div><div class='line' id='LC18326'>&nbsp;* Requires: jQuery v1.7+</div><div class='line' id='LC18327'>&nbsp;*</div><div class='line' id='LC18328'>&nbsp;* Copyright (c) 2012 Anthony Terrien</div><div class='line' id='LC18329'>&nbsp;* Under MIT and GPL licenses:</div><div class='line' id='LC18330'>&nbsp;*  http://www.opensource.org/licenses/mit-license.php</div><div class='line' id='LC18331'>&nbsp;*  http://www.gnu.org/licenses/gpl.html</div><div class='line' id='LC18332'>&nbsp;*</div><div class='line' id='LC18333'>&nbsp;* Thanks to vor, eskimoblood, spiffistan, FabrizioC</div><div class='line' id='LC18334'>&nbsp;*/</div><div class='line' id='LC18335'><br/></div><div class='line' id='LC18336'>$(function () {</div><div class='line' id='LC18337'><br/></div><div class='line' id='LC18338'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC18339'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Kontrol library</div><div class='line' id='LC18340'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC18341'>&nbsp;&nbsp;&nbsp;&nbsp;&quot;use strict&quot;;</div><div class='line' id='LC18342'><br/></div><div class='line' id='LC18343'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC18344'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Definition of globals and core</div><div class='line' id='LC18345'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC18346'>&nbsp;&nbsp;&nbsp;&nbsp;var k = {}, // kontrol</div><div class='line' id='LC18347'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;max = Math.max,</div><div class='line' id='LC18348'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;min = Math.min;</div><div class='line' id='LC18349'><br/></div><div class='line' id='LC18350'>&nbsp;&nbsp;&nbsp;&nbsp;k.c = {};</div><div class='line' id='LC18351'>&nbsp;&nbsp;&nbsp;&nbsp;k.c.d = $(document);</div><div class='line' id='LC18352'>&nbsp;&nbsp;&nbsp;&nbsp;k.c.t = function (e) {</div><div class='line' id='LC18353'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return e.originalEvent.touches.length - 1;</div><div class='line' id='LC18354'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18355'><br/></div><div class='line' id='LC18356'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC18357'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Kontrol Object</div><div class='line' id='LC18358'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18359'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Definition of an abstract UI control</div><div class='line' id='LC18360'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</div><div class='line' id='LC18361'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Each concrete component must call this one.</div><div class='line' id='LC18362'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;code&gt;</div><div class='line' id='LC18363'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* k.o.call(this);</div><div class='line' id='LC18364'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;/code&gt;</div><div class='line' id='LC18365'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC18366'>&nbsp;&nbsp;&nbsp;&nbsp;k.o = function () {</div><div class='line' id='LC18367'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var s = this;</div><div class='line' id='LC18368'><br/></div><div class='line' id='LC18369'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.o = null; // array of options</div><div class='line' id='LC18370'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$ = null; // jQuery wrapped element</div><div class='line' id='LC18371'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.i = null; // mixed HTMLInputElement or array of HTMLInputElement</div><div class='line' id='LC18372'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.g = null; // 2D graphics context for &#39;pre-rendering&#39;</div><div class='line' id='LC18373'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.v = null; // value ; mixed array or integer</div><div class='line' id='LC18374'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cv = null; // change value ; not commited value</div><div class='line' id='LC18375'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.x = 0; // canvas x position</div><div class='line' id='LC18376'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.y = 0; // canvas y position</div><div class='line' id='LC18377'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$c = null; // jQuery canvas element</div><div class='line' id='LC18378'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.c = null; // rendered canvas context</div><div class='line' id='LC18379'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.t = 0; // touches index</div><div class='line' id='LC18380'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.isInit = false;</div><div class='line' id='LC18381'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fgColor = null; // main color</div><div class='line' id='LC18382'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.pColor = null; // previous color</div><div class='line' id='LC18383'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.dH = null; // draw hook</div><div class='line' id='LC18384'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cH = null; // change hook</div><div class='line' id='LC18385'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.eH = null; // cancel hook</div><div class='line' id='LC18386'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.rH = null; // release hook</div><div class='line' id='LC18387'><br/></div><div class='line' id='LC18388'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.run = function () {</div><div class='line' id='LC18389'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var cf = function (e, conf) {</div><div class='line' id='LC18390'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var k;</div><div class='line' id='LC18391'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (k in conf) {</div><div class='line' id='LC18392'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.o[k] = conf[k];</div><div class='line' id='LC18393'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18394'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.init();</div><div class='line' id='LC18395'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s._configure()</div><div class='line' id='LC18396'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;._draw();</div><div class='line' id='LC18397'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18398'><br/></div><div class='line' id='LC18399'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(this.$.data(&#39;kontroled&#39;)) return;</div><div class='line' id='LC18400'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$.data(&#39;kontroled&#39;, true);</div><div class='line' id='LC18401'><br/></div><div class='line' id='LC18402'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.extend();</div><div class='line' id='LC18403'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.o = $.extend(</div><div class='line' id='LC18404'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</div><div class='line' id='LC18405'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Config</div><div class='line' id='LC18406'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;min : this.$.data(&#39;min&#39;) || 0,</div><div class='line' id='LC18407'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;max : this.$.data(&#39;max&#39;) || 100,</div><div class='line' id='LC18408'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stopper : true,</div><div class='line' id='LC18409'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;readOnly : this.$.data(&#39;readonly&#39;),</div><div class='line' id='LC18410'><br/></div><div class='line' id='LC18411'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// UI</div><div class='line' id='LC18412'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cursor : (this.$.data(&#39;cursor&#39;) === true &amp;&amp; 30)</div><div class='line' id='LC18413'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|| this.$.data(&#39;cursor&#39;)</div><div class='line' id='LC18414'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|| 0,</div><div class='line' id='LC18415'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;thickness : this.$.data(&#39;thickness&#39;) || 0.35,</div><div class='line' id='LC18416'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;width : this.$.data(&#39;width&#39;) || 200,</div><div class='line' id='LC18417'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;height : this.$.data(&#39;height&#39;) || 200,</div><div class='line' id='LC18418'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;displayInput : this.$.data(&#39;displayinput&#39;) == null || this.$.data(&#39;displayinput&#39;),</div><div class='line' id='LC18419'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;displayPrevious : this.$.data(&#39;displayprevious&#39;),</div><div class='line' id='LC18420'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fgColor : this.$.data(&#39;fgcolor&#39;) || &#39;#87CEEB&#39;,</div><div class='line' id='LC18421'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inline : false,</div><div class='line' id='LC18422'><br/></div><div class='line' id='LC18423'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Hooks</div><div class='line' id='LC18424'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;draw : null, // function () {}</div><div class='line' id='LC18425'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;change : null, // function (value) {}</div><div class='line' id='LC18426'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cancel : null, // function () {}</div><div class='line' id='LC18427'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;release : null // function (value) {}</div><div class='line' id='LC18428'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, this.o</div><div class='line' id='LC18429'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC18430'><br/></div><div class='line' id='LC18431'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// routing value</div><div class='line' id='LC18432'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(this.$.is(&#39;fieldset&#39;)) {</div><div class='line' id='LC18433'><br/></div><div class='line' id='LC18434'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// fieldset = array of integer</div><div class='line' id='LC18435'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.v = {};</div><div class='line' id='LC18436'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.i = this.$.find(&#39;input&#39;)</div><div class='line' id='LC18437'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.i.each(function(k) {</div><div class='line' id='LC18438'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $this = $(this);</div><div class='line' id='LC18439'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.i[k] = $this;</div><div class='line' id='LC18440'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.v[k] = $this.val();</div><div class='line' id='LC18441'><br/></div><div class='line' id='LC18442'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this.bind(</div><div class='line' id='LC18443'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;change&#39;</div><div class='line' id='LC18444'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, function () {</div><div class='line' id='LC18445'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var val = {};</div><div class='line' id='LC18446'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;val[k] = $this.val();</div><div class='line' id='LC18447'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.val(val);</div><div class='line' id='LC18448'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18449'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC18450'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC18451'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$.find(&#39;legend&#39;).remove();</div><div class='line' id='LC18452'><br/></div><div class='line' id='LC18453'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC18454'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// input = integer</div><div class='line' id='LC18455'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.i = this.$;</div><div class='line' id='LC18456'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.v = this.$.val();</div><div class='line' id='LC18457'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(this.v == &#39;&#39;) &amp;&amp; (this.v = this.o.min);</div><div class='line' id='LC18458'><br/></div><div class='line' id='LC18459'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$.bind(</div><div class='line' id='LC18460'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;change&#39;</div><div class='line' id='LC18461'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, function () {</div><div class='line' id='LC18462'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.val(s.$.val());</div><div class='line' id='LC18463'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18464'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC18465'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18466'><br/></div><div class='line' id='LC18467'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(!this.o.displayInput) &amp;&amp; this.$.hide();</div><div class='line' id='LC18468'><br/></div><div class='line' id='LC18469'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$c = $(&#39;&lt;canvas width=&quot;&#39; +</div><div class='line' id='LC18470'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.o.width + &#39;px&quot; height=&quot;&#39; +</div><div class='line' id='LC18471'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.o.height + &#39;px&quot;&gt;&lt;/canvas&gt;&#39;);</div><div class='line' id='LC18472'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.c = this.$c[0].getContext(&quot;2d&quot;);</div><div class='line' id='LC18473'><br/></div><div class='line' id='LC18474'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$</div><div class='line' id='LC18475'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.wrap($(&#39;&lt;div style=&quot;&#39; + (this.o.inline ? &#39;display:inline;&#39; : &#39;&#39;) +</div><div class='line' id='LC18476'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;width:&#39; + this.o.width + &#39;px;height:&#39; +</div><div class='line' id='LC18477'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.o.height + &#39;px;&quot;&gt;&lt;/div&gt;&#39;))</div><div class='line' id='LC18478'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.before(this.$c);</div><div class='line' id='LC18479'><br/></div><div class='line' id='LC18480'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.v instanceof Object) {</div><div class='line' id='LC18481'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cv = {};</div><div class='line' id='LC18482'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.copy(this.v, this.cv);</div><div class='line' id='LC18483'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC18484'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cv = this.v;</div><div class='line' id='LC18485'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18486'><br/></div><div class='line' id='LC18487'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$</div><div class='line' id='LC18488'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.bind(&quot;configure&quot;, cf)</div><div class='line' id='LC18489'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.parent()</div><div class='line' id='LC18490'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.bind(&quot;configure&quot;, cf);</div><div class='line' id='LC18491'><br/></div><div class='line' id='LC18492'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._listen()</div><div class='line' id='LC18493'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;._configure()</div><div class='line' id='LC18494'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;._xy()</div><div class='line' id='LC18495'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.init();</div><div class='line' id='LC18496'><br/></div><div class='line' id='LC18497'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.isInit = true;</div><div class='line' id='LC18498'><br/></div><div class='line' id='LC18499'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._draw();</div><div class='line' id='LC18500'><br/></div><div class='line' id='LC18501'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC18502'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18503'><br/></div><div class='line' id='LC18504'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._draw = function () {</div><div class='line' id='LC18505'><br/></div><div class='line' id='LC18506'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// canvas pre-rendering</div><div class='line' id='LC18507'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var d = true,</div><div class='line' id='LC18508'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = document.createElement(&#39;canvas&#39;);</div><div class='line' id='LC18509'><br/></div><div class='line' id='LC18510'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.width = s.o.width;</div><div class='line' id='LC18511'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.height = s.o.height;</div><div class='line' id='LC18512'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.g = c.getContext(&#39;2d&#39;);</div><div class='line' id='LC18513'><br/></div><div class='line' id='LC18514'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.clear();</div><div class='line' id='LC18515'><br/></div><div class='line' id='LC18516'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.dH</div><div class='line' id='LC18517'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp; (d = s.dH());</div><div class='line' id='LC18518'><br/></div><div class='line' id='LC18519'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(d !== false) &amp;&amp; s.draw();</div><div class='line' id='LC18520'><br/></div><div class='line' id='LC18521'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.c.drawImage(c, 0, 0);</div><div class='line' id='LC18522'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = null;</div><div class='line' id='LC18523'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18524'><br/></div><div class='line' id='LC18525'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._touch = function (e) {</div><div class='line' id='LC18526'><br/></div><div class='line' id='LC18527'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var touchMove = function (e) {</div><div class='line' id='LC18528'><br/></div><div class='line' id='LC18529'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var v = s.xy2val(</div><div class='line' id='LC18530'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.originalEvent.touches[s.t].pageX,</div><div class='line' id='LC18531'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.originalEvent.touches[s.t].pageY</div><div class='line' id='LC18532'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC18533'><br/></div><div class='line' id='LC18534'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (v == s.cv) return;</div><div class='line' id='LC18535'><br/></div><div class='line' id='LC18536'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</div><div class='line' id='LC18537'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.cH</div><div class='line' id='LC18538'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp; (s.cH(v) === false)</div><div class='line' id='LC18539'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) return;</div><div class='line' id='LC18540'><br/></div><div class='line' id='LC18541'><br/></div><div class='line' id='LC18542'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.change(v);</div><div class='line' id='LC18543'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s._draw();</div><div class='line' id='LC18544'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18545'><br/></div><div class='line' id='LC18546'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// get touches index</div><div class='line' id='LC18547'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.t = k.c.t(e);</div><div class='line' id='LC18548'><br/></div><div class='line' id='LC18549'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// First touch</div><div class='line' id='LC18550'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;touchMove(e);</div><div class='line' id='LC18551'><br/></div><div class='line' id='LC18552'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Touch events listeners</div><div class='line' id='LC18553'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k.c.d</div><div class='line' id='LC18554'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.bind(&quot;touchmove.k&quot;, touchMove)</div><div class='line' id='LC18555'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.bind(</div><div class='line' id='LC18556'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;touchend.k&quot;</div><div class='line' id='LC18557'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, function () {</div><div class='line' id='LC18558'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k.c.d.unbind(&#39;touchmove.k touchend.k&#39;);</div><div class='line' id='LC18559'><br/></div><div class='line' id='LC18560'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</div><div class='line' id='LC18561'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.rH</div><div class='line' id='LC18562'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp; (s.rH(s.cv) === false)</div><div class='line' id='LC18563'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) return;</div><div class='line' id='LC18564'><br/></div><div class='line' id='LC18565'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.val(s.cv);</div><div class='line' id='LC18566'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18567'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC18568'><br/></div><div class='line' id='LC18569'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC18570'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18571'><br/></div><div class='line' id='LC18572'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._mouse = function (e) {</div><div class='line' id='LC18573'><br/></div><div class='line' id='LC18574'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var mouseMove = function (e) {</div><div class='line' id='LC18575'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var v = s.xy2val(e.pageX, e.pageY);</div><div class='line' id='LC18576'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (v == s.cv) return;</div><div class='line' id='LC18577'><br/></div><div class='line' id='LC18578'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</div><div class='line' id='LC18579'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.cH</div><div class='line' id='LC18580'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp; (s.cH(v) === false)</div><div class='line' id='LC18581'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) return;</div><div class='line' id='LC18582'><br/></div><div class='line' id='LC18583'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.change(v);</div><div class='line' id='LC18584'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s._draw();</div><div class='line' id='LC18585'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18586'><br/></div><div class='line' id='LC18587'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// First click</div><div class='line' id='LC18588'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mouseMove(e);</div><div class='line' id='LC18589'><br/></div><div class='line' id='LC18590'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Mouse events listeners</div><div class='line' id='LC18591'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k.c.d</div><div class='line' id='LC18592'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.bind(&quot;mousemove.k&quot;, mouseMove)</div><div class='line' id='LC18593'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.bind(</div><div class='line' id='LC18594'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Escape key cancel current change</div><div class='line' id='LC18595'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;keyup.k&quot;</div><div class='line' id='LC18596'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, function (e) {</div><div class='line' id='LC18597'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (e.keyCode === 27) {</div><div class='line' id='LC18598'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k.c.d.unbind(&quot;mouseup.k mousemove.k keyup.k&quot;);</div><div class='line' id='LC18599'><br/></div><div class='line' id='LC18600'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</div><div class='line' id='LC18601'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.eH</div><div class='line' id='LC18602'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp; (s.eH() === false)</div><div class='line' id='LC18603'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) return;</div><div class='line' id='LC18604'><br/></div><div class='line' id='LC18605'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.cancel();</div><div class='line' id='LC18606'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18607'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18608'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</div><div class='line' id='LC18609'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.bind(</div><div class='line' id='LC18610'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;mouseup.k&quot;</div><div class='line' id='LC18611'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, function (e) {</div><div class='line' id='LC18612'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k.c.d.unbind(&#39;mousemove.k mouseup.k keyup.k&#39;);</div><div class='line' id='LC18613'><br/></div><div class='line' id='LC18614'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</div><div class='line' id='LC18615'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.rH</div><div class='line' id='LC18616'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp; (s.rH(s.cv) === false)</div><div class='line' id='LC18617'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) return;</div><div class='line' id='LC18618'><br/></div><div class='line' id='LC18619'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.val(s.cv);</div><div class='line' id='LC18620'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18621'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC18622'><br/></div><div class='line' id='LC18623'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC18624'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18625'><br/></div><div class='line' id='LC18626'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._xy = function () {</div><div class='line' id='LC18627'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var o = this.$c.offset();</div><div class='line' id='LC18628'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.x = o.left;</div><div class='line' id='LC18629'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.y = o.top;</div><div class='line' id='LC18630'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC18631'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18632'><br/></div><div class='line' id='LC18633'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._listen = function () {</div><div class='line' id='LC18634'><br/></div><div class='line' id='LC18635'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!this.o.readOnly) {</div><div class='line' id='LC18636'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$c</div><div class='line' id='LC18637'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.bind(</div><div class='line' id='LC18638'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;mousedown&quot;</div><div class='line' id='LC18639'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, function (e) {</div><div class='line' id='LC18640'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.preventDefault();</div><div class='line' id='LC18641'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s._xy()._mouse(e);</div><div class='line' id='LC18642'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18643'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</div><div class='line' id='LC18644'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.bind(</div><div class='line' id='LC18645'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;touchstart&quot;</div><div class='line' id='LC18646'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, function (e) {</div><div class='line' id='LC18647'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.preventDefault();</div><div class='line' id='LC18648'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s._xy()._touch(e);</div><div class='line' id='LC18649'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18650'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC18651'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.listen();</div><div class='line' id='LC18652'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC18653'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$.attr(&#39;readonly&#39;, &#39;readonly&#39;);</div><div class='line' id='LC18654'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18655'><br/></div><div class='line' id='LC18656'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC18657'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18658'><br/></div><div class='line' id='LC18659'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._configure = function () {</div><div class='line' id='LC18660'><br/></div><div class='line' id='LC18661'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Hooks</div><div class='line' id='LC18662'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.o.draw) this.dH = this.o.draw;</div><div class='line' id='LC18663'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.o.change) this.cH = this.o.change;</div><div class='line' id='LC18664'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.o.cancel) this.eH = this.o.cancel;</div><div class='line' id='LC18665'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.o.release) this.rH = this.o.release;</div><div class='line' id='LC18666'><br/></div><div class='line' id='LC18667'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.o.displayPrevious) {</div><div class='line' id='LC18668'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.pColor = this.h2rgba(this.o.fgColor, &quot;0.4&quot;);</div><div class='line' id='LC18669'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fgColor = this.h2rgba(this.o.fgColor, &quot;0.6&quot;);</div><div class='line' id='LC18670'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC18671'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.fgColor = this.o.fgColor;</div><div class='line' id='LC18672'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18673'><br/></div><div class='line' id='LC18674'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this;</div><div class='line' id='LC18675'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18676'><br/></div><div class='line' id='LC18677'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._clear = function () {</div><div class='line' id='LC18678'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$c[0].width = this.$c[0].width;</div><div class='line' id='LC18679'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18680'><br/></div><div class='line' id='LC18681'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Abstract methods</div><div class='line' id='LC18682'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.listen = function () {}; // on start, one time</div><div class='line' id='LC18683'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.extend = function () {}; // each time configure triggered</div><div class='line' id='LC18684'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.init = function () {}; // each time configure triggered</div><div class='line' id='LC18685'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.change = function (v) {}; // on change</div><div class='line' id='LC18686'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.val = function (v) {}; // on release</div><div class='line' id='LC18687'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.xy2val = function (x, y) {}; //</div><div class='line' id='LC18688'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.draw = function () {}; // on change / on release</div><div class='line' id='LC18689'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.clear = function () { this._clear(); };</div><div class='line' id='LC18690'><br/></div><div class='line' id='LC18691'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Utils</div><div class='line' id='LC18692'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.h2rgba = function (h, a) {</div><div class='line' id='LC18693'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var rgb;</div><div class='line' id='LC18694'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;h = h.substring(1,7)</div><div class='line' id='LC18695'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rgb = [parseInt(h.substring(0,2),16)</div><div class='line' id='LC18696'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,parseInt(h.substring(2,4),16)</div><div class='line' id='LC18697'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,parseInt(h.substring(4,6),16)];</div><div class='line' id='LC18698'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;rgba(&quot; + rgb[0] + &quot;,&quot; + rgb[1] + &quot;,&quot; + rgb[2] + &quot;,&quot; + a + &quot;)&quot;;</div><div class='line' id='LC18699'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18700'><br/></div><div class='line' id='LC18701'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.copy = function (f, t) {</div><div class='line' id='LC18702'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (var i in f) { t[i] = f[i]; }</div><div class='line' id='LC18703'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18704'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18705'><br/></div><div class='line' id='LC18706'><br/></div><div class='line' id='LC18707'>&nbsp;&nbsp;&nbsp;&nbsp;/**</div><div class='line' id='LC18708'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* k.Dial</div><div class='line' id='LC18709'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div class='line' id='LC18710'>&nbsp;&nbsp;&nbsp;&nbsp;k.Dial = function () {</div><div class='line' id='LC18711'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k.o.call(this);</div><div class='line' id='LC18712'><br/></div><div class='line' id='LC18713'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.startAngle = null;</div><div class='line' id='LC18714'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.xy = null;</div><div class='line' id='LC18715'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.radius = null;</div><div class='line' id='LC18716'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.lineWidth = null;</div><div class='line' id='LC18717'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cursorExt = null;</div><div class='line' id='LC18718'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.w2 = null;</div><div class='line' id='LC18719'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.PI2 = 2*Math.PI;</div><div class='line' id='LC18720'><br/></div><div class='line' id='LC18721'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.extend = function () {</div><div class='line' id='LC18722'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.o = $.extend(</div><div class='line' id='LC18723'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</div><div class='line' id='LC18724'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bgColor : this.$.data(&#39;bgcolor&#39;) || &#39;#EEEEEE&#39;,</div><div class='line' id='LC18725'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;angleOffset : this.$.data(&#39;angleoffset&#39;) || 0,</div><div class='line' id='LC18726'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;angleArc : this.$.data(&#39;anglearc&#39;) || 360,</div><div class='line' id='LC18727'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inline : true</div><div class='line' id='LC18728'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, this.o</div><div class='line' id='LC18729'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC18730'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18731'><br/></div><div class='line' id='LC18732'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.val = function (v) {</div><div class='line' id='LC18733'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (null != v) {</div><div class='line' id='LC18734'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cv = this.o.stopper ? max(min(v, this.o.max), this.o.min) : v;</div><div class='line' id='LC18735'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.v = this.cv;</div><div class='line' id='LC18736'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$.val(this.v);</div><div class='line' id='LC18737'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._draw();</div><div class='line' id='LC18738'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC18739'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.v;</div><div class='line' id='LC18740'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18741'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18742'><br/></div><div class='line' id='LC18743'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.xy2val = function (x, y) {</div><div class='line' id='LC18744'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var a, ret;</div><div class='line' id='LC18745'><br/></div><div class='line' id='LC18746'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = Math.atan2(</div><div class='line' id='LC18747'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x - (this.x + this.w2)</div><div class='line' id='LC18748'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, - (y - this.y - this.w2)</div><div class='line' id='LC18749'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) - this.angleOffset;</div><div class='line' id='LC18750'><br/></div><div class='line' id='LC18751'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(this.angleArc != this.PI2 &amp;&amp; (a &lt; 0) &amp;&amp; (a &gt; -0.5)) {</div><div class='line' id='LC18752'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// if isset angleArc option, set to min if .5 under min</div><div class='line' id='LC18753'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;</div><div class='line' id='LC18754'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (a &lt; 0) {</div><div class='line' id='LC18755'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a += this.PI2;</div><div class='line' id='LC18756'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18757'><br/></div><div class='line' id='LC18758'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ret = ~~ (0.5 + (a * (this.o.max - this.o.min) / this.angleArc))</div><div class='line' id='LC18759'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+ this.o.min;</div><div class='line' id='LC18760'><br/></div><div class='line' id='LC18761'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.o.stopper</div><div class='line' id='LC18762'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp; (ret = max(min(ret, this.o.max), this.o.min));</div><div class='line' id='LC18763'><br/></div><div class='line' id='LC18764'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ret;</div><div class='line' id='LC18765'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18766'><br/></div><div class='line' id='LC18767'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.listen = function () {</div><div class='line' id='LC18768'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// bind MouseWheel</div><div class='line' id='LC18769'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var s = this,</div><div class='line' id='LC18770'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mw = function (e) {</div><div class='line' id='LC18771'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.preventDefault();</div><div class='line' id='LC18772'><br/></div><div class='line' id='LC18773'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var ori = e.originalEvent</div><div class='line' id='LC18774'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,deltaX = ori.detail || ori.wheelDeltaX</div><div class='line' id='LC18775'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,deltaY = ori.detail || ori.wheelDeltaY</div><div class='line' id='LC18776'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,v = parseInt(s.$.val()) + (deltaX&gt;0 || deltaY&gt;0 ? 1 : deltaX&lt;0 || deltaY&lt;0 ? -1 : 0);</div><div class='line' id='LC18777'><br/></div><div class='line' id='LC18778'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</div><div class='line' id='LC18779'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.cH</div><div class='line' id='LC18780'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp; (s.cH(v) === false)</div><div class='line' id='LC18781'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) return;</div><div class='line' id='LC18782'><br/></div><div class='line' id='LC18783'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.val(v);</div><div class='line' id='LC18784'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18785'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, kval, to, m = 1, kv = {37:-1, 38:1, 39:1, 40:-1};</div><div class='line' id='LC18786'><br/></div><div class='line' id='LC18787'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$</div><div class='line' id='LC18788'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.bind(</div><div class='line' id='LC18789'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;keydown&quot;</div><div class='line' id='LC18790'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,function (e) {</div><div class='line' id='LC18791'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var kc = e.keyCode;</div><div class='line' id='LC18792'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;kval = parseInt(String.fromCharCode(kc));</div><div class='line' id='LC18793'><br/></div><div class='line' id='LC18794'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isNaN(kval)) {</div><div class='line' id='LC18795'><br/></div><div class='line' id='LC18796'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(kc !== 13)         // enter</div><div class='line' id='LC18797'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp; (kc !== 8)       // bs</div><div class='line' id='LC18798'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp; (kc !== 9)       // tab</div><div class='line' id='LC18799'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp; (kc !== 189)     // -</div><div class='line' id='LC18800'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp; e.preventDefault();</div><div class='line' id='LC18801'><br/></div><div class='line' id='LC18802'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// arrows</div><div class='line' id='LC18803'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($.inArray(kc,[37,38,39,40]) &gt; -1) {</div><div class='line' id='LC18804'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.preventDefault();</div><div class='line' id='LC18805'><br/></div><div class='line' id='LC18806'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var v = parseInt(s.$.val()) + kv[kc] * m;</div><div class='line' id='LC18807'><br/></div><div class='line' id='LC18808'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.o.stopper</div><div class='line' id='LC18809'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp; (v = max(min(v, s.o.max), s.o.min));</div><div class='line' id='LC18810'><br/></div><div class='line' id='LC18811'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.change(v);</div><div class='line' id='LC18812'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s._draw();</div><div class='line' id='LC18813'><br/></div><div class='line' id='LC18814'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// long time keydown speed-up</div><div class='line' id='LC18815'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to = window.setTimeout(</div><div class='line' id='LC18816'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function () { m*=2; }</div><div class='line' id='LC18817'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,30</div><div class='line' id='LC18818'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC18819'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18820'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18821'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18822'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</div><div class='line' id='LC18823'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.bind(</div><div class='line' id='LC18824'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;keyup&quot;</div><div class='line' id='LC18825'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,function (e) {</div><div class='line' id='LC18826'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isNaN(kval)) {</div><div class='line' id='LC18827'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (to) {</div><div class='line' id='LC18828'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window.clearTimeout(to);</div><div class='line' id='LC18829'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to = null;</div><div class='line' id='LC18830'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m = 1;</div><div class='line' id='LC18831'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.val(s.$.val());</div><div class='line' id='LC18832'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18833'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC18834'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// kval postcond</div><div class='line' id='LC18835'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(s.$.val() &gt; s.o.max &amp;&amp; s.$.val(s.o.max))</div><div class='line' id='LC18836'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|| (s.$.val() &lt; s.o.min &amp;&amp; s.$.val(s.o.min));</div><div class='line' id='LC18837'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18838'><br/></div><div class='line' id='LC18839'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18840'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</div><div class='line' id='LC18841'><br/></div><div class='line' id='LC18842'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$c.bind(&quot;mousewheel DOMMouseScroll&quot;, mw);</div><div class='line' id='LC18843'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$.bind(&quot;mousewheel DOMMouseScroll&quot;, mw)</div><div class='line' id='LC18844'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18845'><br/></div><div class='line' id='LC18846'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.init = function () {</div><div class='line' id='LC18847'><br/></div><div class='line' id='LC18848'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (</div><div class='line' id='LC18849'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.v &lt; this.o.min</div><div class='line' id='LC18850'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|| this.v &gt; this.o.max</div><div class='line' id='LC18851'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) this.v = this.o.min;</div><div class='line' id='LC18852'><br/></div><div class='line' id='LC18853'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$.val(this.v);</div><div class='line' id='LC18854'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.w2 = this.o.width / 2;</div><div class='line' id='LC18855'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cursorExt = this.o.cursor / 100;</div><div class='line' id='LC18856'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.xy = this.w2;</div><div class='line' id='LC18857'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.lineWidth = this.xy * this.o.thickness;</div><div class='line' id='LC18858'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.radius = this.xy - this.lineWidth / 2;</div><div class='line' id='LC18859'><br/></div><div class='line' id='LC18860'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.o.angleOffset</div><div class='line' id='LC18861'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp; (this.o.angleOffset = isNaN(this.o.angleOffset) ? 0 : this.o.angleOffset);</div><div class='line' id='LC18862'><br/></div><div class='line' id='LC18863'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.o.angleArc</div><div class='line' id='LC18864'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp; (this.o.angleArc = isNaN(this.o.angleArc) ? this.PI2 : this.o.angleArc);</div><div class='line' id='LC18865'><br/></div><div class='line' id='LC18866'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// deg to rad</div><div class='line' id='LC18867'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.angleOffset = this.o.angleOffset * Math.PI / 180;</div><div class='line' id='LC18868'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.angleArc = this.o.angleArc * Math.PI / 180;</div><div class='line' id='LC18869'><br/></div><div class='line' id='LC18870'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// compute start and end angles</div><div class='line' id='LC18871'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.startAngle = 1.5 * Math.PI + this.angleOffset;</div><div class='line' id='LC18872'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.endAngle = 1.5 * Math.PI + this.angleOffset + this.angleArc;</div><div class='line' id='LC18873'><br/></div><div class='line' id='LC18874'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var s = max(</div><div class='line' id='LC18875'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String(Math.abs(this.o.max)).length</div><div class='line' id='LC18876'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, String(Math.abs(this.o.min)).length</div><div class='line' id='LC18877'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 2</div><div class='line' id='LC18878'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) + 2;</div><div class='line' id='LC18879'><br/></div><div class='line' id='LC18880'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.o.displayInput</div><div class='line' id='LC18881'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp; this.i.css({</div><div class='line' id='LC18882'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;width&#39; : ((this.o.width / 2 + 4) &gt;&gt; 0) + &#39;px&#39;</div><div class='line' id='LC18883'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,&#39;height&#39; : ((this.o.width / 3) &gt;&gt; 0) + &#39;px&#39;</div><div class='line' id='LC18884'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,&#39;position&#39; : &#39;absolute&#39;</div><div class='line' id='LC18885'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,&#39;vertical-align&#39; : &#39;middle&#39;</div><div class='line' id='LC18886'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,&#39;margin-top&#39; : ((this.o.width / 3) &gt;&gt; 0) + &#39;px&#39;</div><div class='line' id='LC18887'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,&#39;margin-left&#39; : &#39;-&#39; + ((this.o.width * 3 / 4 + 2) &gt;&gt; 0) + &#39;px&#39;</div><div class='line' id='LC18888'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,&#39;border&#39; : 0</div><div class='line' id='LC18889'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,&#39;background&#39; : &#39;none&#39;</div><div class='line' id='LC18890'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,&#39;font&#39; : &#39;bold &#39; + ((this.o.width / s) &gt;&gt; 0) + &#39;px Arial&#39;</div><div class='line' id='LC18891'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,&#39;text-align&#39; : &#39;center&#39;</div><div class='line' id='LC18892'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,&#39;color&#39; : this.o.fgColor</div><div class='line' id='LC18893'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,&#39;padding&#39; : &#39;0px&#39;</div><div class='line' id='LC18894'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,&#39;-webkit-appearance&#39;: &#39;none&#39;</div><div class='line' id='LC18895'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})</div><div class='line' id='LC18896'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|| this.i.css({</div><div class='line' id='LC18897'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;width&#39; : &#39;0px&#39;</div><div class='line' id='LC18898'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,&#39;visibility&#39; : &#39;hidden&#39;</div><div class='line' id='LC18899'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC18900'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18901'><br/></div><div class='line' id='LC18902'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.change = function (v) {</div><div class='line' id='LC18903'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cv = v;</div><div class='line' id='LC18904'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.$.val(v);</div><div class='line' id='LC18905'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18906'><br/></div><div class='line' id='LC18907'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.angle = function (v) {</div><div class='line' id='LC18908'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (v - this.o.min) * this.angleArc / (this.o.max - this.o.min);</div><div class='line' id='LC18909'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18910'><br/></div><div class='line' id='LC18911'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.draw = function () {</div><div class='line' id='LC18912'><br/></div><div class='line' id='LC18913'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var c = this.g,                 // context</div><div class='line' id='LC18914'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = this.angle(this.cv)    // Angle</div><div class='line' id='LC18915'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, sat = this.startAngle     // Start angle</div><div class='line' id='LC18916'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, eat = sat + a             // End angle</div><div class='line' id='LC18917'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, sa, ea                    // Previous angles</div><div class='line' id='LC18918'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, r = 1;</div><div class='line' id='LC18919'><br/></div><div class='line' id='LC18920'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.lineWidth = this.lineWidth;</div><div class='line' id='LC18921'><br/></div><div class='line' id='LC18922'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.o.cursor</div><div class='line' id='LC18923'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp; (sat = eat - this.cursorExt)</div><div class='line' id='LC18924'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp; (eat = eat + this.cursorExt);</div><div class='line' id='LC18925'><br/></div><div class='line' id='LC18926'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.beginPath();</div><div class='line' id='LC18927'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.strokeStyle = this.o.bgColor;</div><div class='line' id='LC18928'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.arc(this.xy, this.xy, this.radius, this.endAngle, this.startAngle, true);</div><div class='line' id='LC18929'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.stroke();</div><div class='line' id='LC18930'><br/></div><div class='line' id='LC18931'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.o.displayPrevious) {</div><div class='line' id='LC18932'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ea = this.startAngle + this.angle(this.v);</div><div class='line' id='LC18933'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sa = this.startAngle;</div><div class='line' id='LC18934'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.o.cursor</div><div class='line' id='LC18935'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp; (sa = ea - this.cursorExt)</div><div class='line' id='LC18936'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp; (ea = ea + this.cursorExt);</div><div class='line' id='LC18937'><br/></div><div class='line' id='LC18938'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.beginPath();</div><div class='line' id='LC18939'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.strokeStyle = this.pColor;</div><div class='line' id='LC18940'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.arc(this.xy, this.xy, this.radius, sa, ea, false);</div><div class='line' id='LC18941'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.stroke();</div><div class='line' id='LC18942'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r = (this.cv == this.v);</div><div class='line' id='LC18943'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18944'><br/></div><div class='line' id='LC18945'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.beginPath();</div><div class='line' id='LC18946'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.strokeStyle = r ? this.o.fgColor : this.fgColor ;</div><div class='line' id='LC18947'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.arc(this.xy, this.xy, this.radius, sat, eat, false);</div><div class='line' id='LC18948'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.stroke();</div><div class='line' id='LC18949'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18950'><br/></div><div class='line' id='LC18951'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cancel = function () {</div><div class='line' id='LC18952'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.val(this.v);</div><div class='line' id='LC18953'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18954'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18955'><br/></div><div class='line' id='LC18956'>&nbsp;&nbsp;&nbsp;&nbsp;$.fn.dial = $.fn.knob = function (o) {</div><div class='line' id='LC18957'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.each(</div><div class='line' id='LC18958'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function () {</div><div class='line' id='LC18959'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var d = new k.Dial();</div><div class='line' id='LC18960'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.o = o;</div><div class='line' id='LC18961'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.$ = $(this);</div><div class='line' id='LC18962'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.run();</div><div class='line' id='LC18963'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18964'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;).parent();</div><div class='line' id='LC18965'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18966'><br/></div><div class='line' id='LC18967'>});</div><div class='line' id='LC18968'>var Rickshaw={namespace:function(namespace,obj){var parts=namespace.split(&quot;.&quot;);var parent=Rickshaw;for(var i=1,length=parts.length;i&lt;length;i++){var currentPart=parts[i];parent[currentPart]=parent[currentPart]||{};parent=parent[currentPart]}return parent},keys:function(obj){var keys=[];for(var key in obj)keys.push(key);return keys},extend:function(destination,source){for(var property in source){destination[property]=source[property]}return destination},clone:function(obj){return JSON.parse(JSON.stringify(obj))}};if(typeof module!==&quot;undefined&quot;&amp;&amp;module.exports){var d3=require(&quot;d3&quot;);module.exports=Rickshaw}(function(globalContext){var _toString=Object.prototype.toString,NULL_TYPE=&quot;Null&quot;,UNDEFINED_TYPE=&quot;Undefined&quot;,BOOLEAN_TYPE=&quot;Boolean&quot;,NUMBER_TYPE=&quot;Number&quot;,STRING_TYPE=&quot;String&quot;,OBJECT_TYPE=&quot;Object&quot;,FUNCTION_CLASS=&quot;[object Function]&quot;;function isFunction(object){return _toString.call(object)===FUNCTION_CLASS}function extend(destination,source){for(var property in source)if(source.hasOwnProperty(property))destination[property]=source[property];return destination}function keys(object){if(Type(object)!==OBJECT_TYPE){throw new TypeError}var results=[];for(var property in object){if(object.hasOwnProperty(property)){results.push(property)}}return results}function Type(o){switch(o){case null:return NULL_TYPE;case void 0:return UNDEFINED_TYPE}var type=typeof o;switch(type){case&quot;boolean&quot;:return BOOLEAN_TYPE;case&quot;number&quot;:return NUMBER_TYPE;case&quot;string&quot;:return STRING_TYPE}return OBJECT_TYPE}function isUndefined(object){return typeof object===&quot;undefined&quot;}var slice=Array.prototype.slice;function argumentNames(fn){var names=fn.toString().match(/^[\s\(]*function[^(]*\(([^)]*)\)/)[1].replace(/\/\/.*?[\r\n]|\/\*(?:.|[\r\n])*?\*\//g,&quot;&quot;).replace(/\s+/g,&quot;&quot;).split(&quot;,&quot;);return names.length==1&amp;&amp;!names[0]?[]:names}function wrap(fn,wrapper){var __method=fn;return function(){var a=update([bind(__method,this)],arguments);return wrapper.apply(this,a)}}function update(array,args){var arrayLength=array.length,length=args.length;while(length--)array[arrayLength+length]=args[length];return array}function merge(array,args){array=slice.call(array,0);return update(array,args)}function bind(fn,context){if(arguments.length&lt;2&amp;&amp;isUndefined(arguments[0]))return this;var __method=fn,args=slice.call(arguments,2);return function(){var a=merge(args,arguments);return __method.apply(context,a)}}var emptyFunction=function(){};var Class=function(){var IS_DONTENUM_BUGGY=function(){for(var p in{toString:1}){if(p===&quot;toString&quot;)return false}return true}();function subclass(){}function create(){var parent=null,properties=[].slice.apply(arguments);if(isFunction(properties[0]))parent=properties.shift();function klass(){this.initialize.apply(this,arguments)}extend(klass,Class.Methods);klass.superclass=parent;klass.subclasses=[];if(parent){subclass.prototype=parent.prototype;klass.prototype=new subclass;try{parent.subclasses.push(klass)}catch(e){}}for(var i=0,length=properties.length;i&lt;length;i++)klass.addMethods(properties[i]);if(!klass.prototype.initialize)klass.prototype.initialize=emptyFunction;klass.prototype.constructor=klass;return klass}function addMethods(source){var ancestor=this.superclass&amp;&amp;this.superclass.prototype,properties=keys(source);if(IS_DONTENUM_BUGGY){if(source.toString!=Object.prototype.toString)properties.push(&quot;toString&quot;);if(source.valueOf!=Object.prototype.valueOf)properties.push(&quot;valueOf&quot;)}for(var i=0,length=properties.length;i&lt;length;i++){var property=properties[i],value=source[property];if(ancestor&amp;&amp;isFunction(value)&amp;&amp;argumentNames(value)[0]==&quot;$super&quot;){var method=value;value=wrap(function(m){return function(){return ancestor[m].apply(this,arguments)}}(property),method);value.valueOf=bind(method.valueOf,method);value.toString=bind(method.toString,method)}this.prototype[property]=value}return this}return{create:create,Methods:{addMethods:addMethods}}}();if(globalContext.exports){globalContext.exports.Class=Class}else{globalContext.Class=Class}})(Rickshaw);Rickshaw.namespace(&quot;Rickshaw.Compat.ClassList&quot;);Rickshaw.Compat.ClassList=function(){if(typeof document!==&quot;undefined&quot;&amp;&amp;!(&quot;classList&quot;in document.createElement(&quot;a&quot;))){(function(view){&quot;use strict&quot;;var classListProp=&quot;classList&quot;,protoProp=&quot;prototype&quot;,elemCtrProto=(view.HTMLElement||view.Element)[protoProp],objCtr=Object,strTrim=String[protoProp].trim||function(){return this.replace(/^\s+|\s+$/g,&quot;&quot;)},arrIndexOf=Array[protoProp].indexOf||function(item){var i=0,len=this.length;for(;i&lt;len;i++){if(i in this&amp;&amp;this[i]===item){return i}}return-1},DOMEx=function(type,message){this.name=type;this.code=DOMException[type];this.message=message},checkTokenAndGetIndex=function(classList,token){if(token===&quot;&quot;){throw new DOMEx(&quot;SYNTAX_ERR&quot;,&quot;An invalid or illegal string was specified&quot;)}if(/\s/.test(token)){throw new DOMEx(&quot;INVALID_CHARACTER_ERR&quot;,&quot;String contains an invalid character&quot;)}return arrIndexOf.call(classList,token)},ClassList=function(elem){var trimmedClasses=strTrim.call(elem.className),classes=trimmedClasses?trimmedClasses.split(/\s+/):[],i=0,len=classes.length;for(;i&lt;len;i++){this.push(classes[i])}this._updateClassName=function(){elem.className=this.toString()}},classListProto=ClassList[protoProp]=[],classListGetter=function(){return new ClassList(this)};DOMEx[protoProp]=Error[protoProp];classListProto.item=function(i){return this[i]||null};classListProto.contains=function(token){token+=&quot;&quot;;return checkTokenAndGetIndex(this,token)!==-1};classListProto.add=function(token){token+=&quot;&quot;;if(checkTokenAndGetIndex(this,token)===-1){this.push(token);this._updateClassName()}};classListProto.remove=function(token){token+=&quot;&quot;;var index=checkTokenAndGetIndex(this,token);if(index!==-1){this.splice(index,1);this._updateClassName()}};classListProto.toggle=function(token){token+=&quot;&quot;;if(checkTokenAndGetIndex(this,token)===-1){this.add(token)}else{this.remove(token)}};classListProto.toString=function(){return this.join(&quot; &quot;)};if(objCtr.defineProperty){var classListPropDesc={get:classListGetter,enumerable:true,configurable:true};try{objCtr.defineProperty(elemCtrProto,classListProp,classListPropDesc)}catch(ex){if(ex.number===-2146823252){classListPropDesc.enumerable=false;objCtr.defineProperty(elemCtrProto,classListProp,classListPropDesc)}}}else if(objCtr[protoProp].__defineGetter__){elemCtrProto.__defineGetter__(classListProp,classListGetter)}})(window)}};if(typeof RICKSHAW_NO_COMPAT!==&quot;undefined&quot;&amp;&amp;!RICKSHAW_NO_COMPAT||typeof RICKSHAW_NO_COMPAT===&quot;undefined&quot;){new Rickshaw.Compat.ClassList}Rickshaw.namespace(&quot;Rickshaw.Graph&quot;);Rickshaw.Graph=function(args){if(!args.element)throw&quot;Rickshaw.Graph needs a reference to an element&quot;;this.element=args.element;this.series=args.series;this.defaults={interpolation:&quot;cardinal&quot;,offset:&quot;zero&quot;,min:undefined,max:undefined,preserve:false};Rickshaw.keys(this.defaults).forEach(function(k){this[k]=args[k]||this.defaults[k]},this);this.window={};this.updateCallbacks=[];var self=this;this.initialize=function(args){this.validateSeries(args.series);this.series.active=function(){return self.series.filter(function(s){return!s.disabled})};this.setSize({width:args.width,height:args.height});this.element.classList.add(&quot;rickshaw_graph&quot;);this.vis=d3.select(this.element).append(&quot;svg:svg&quot;).attr(&quot;width&quot;,this.width).attr(&quot;height&quot;,this.height);for(var name in Rickshaw.Graph.Renderer){if(!name||!Rickshaw.Graph.Renderer.hasOwnProperty(name))continue;var r=Rickshaw.Graph.Renderer[name];if(!r||!r.prototype||!r.prototype.render)continue;self.registerRenderer(new r({graph:self}))}this.setRenderer(args.renderer||&quot;stack&quot;,args);this.discoverRange()};this.validateSeries=function(series){if(!Array.isArray(series)&amp;&amp;!(series instanceof Rickshaw.Series)){var seriesSignature=Object.prototype.toString.apply(series);throw&quot;series is not an array: &quot;+seriesSignature}var pointsCount;series.forEach(function(s){if(!(s instanceof Object)){throw&quot;series element is not an object: &quot;+s}if(!s.data){throw&quot;series has no data: &quot;+JSON.stringify(s)}if(!Array.isArray(s.data)){throw&quot;series data is not an array: &quot;+JSON.stringify(s.data)}var x=s.data[0].x;var y=s.data[0].y;if(typeof x!=&quot;number&quot;||typeof y!=&quot;number&quot;&amp;&amp;y!==null){throw&quot;x and y properties of points should be numbers instead of &quot;+typeof x+&quot; and &quot;+typeof y}if(s.data.length&gt;=3){if(s.data[2].x&lt;s.data[1].x||s.data[1].x&lt;s.data[0].x||s.data[s.data.length-1].x&lt;s.data[0].x){throw&quot;series data needs to be sorted on x values for series name: &quot;+s.name}}},this)};this.dataDomain=function(){var data=this.series.map(function(s){return s.data});var min=d3.min(data.map(function(d){return d[0].x}));var max=d3.max(data.map(function(d){return d[d.length-1].x}));return[min,max]};this.discoverRange=function(){var domain=this.renderer.domain();this.x=d3.scale.linear().domain(domain.x).range([0,this.width]);this.y=d3.scale.linear().domain(domain.y).range([this.height,0]);this.y.magnitude=d3.scale.linear().domain([domain.y[0]-domain.y[0],domain.y[1]-domain.y[0]]).range([0,this.height])};this.render=function(){var stackedData=this.stackData();this.discoverRange();this.renderer.render();this.updateCallbacks.forEach(function(callback){callback()})};this.update=this.render;this.stackData=function(){var data=this.series.active().map(function(d){return d.data}).map(function(d){return d.filter(function(d){return this._slice(d)},this)},this);var preserve=this.preserve;if(!preserve){this.series.forEach(function(series){if(series.scale){preserve=true}})}data=preserve?Rickshaw.clone(data):data;this.series.active().forEach(function(series,index){if(series.scale){var seriesData=data[index];if(seriesData){seriesData.forEach(function(d){d.y=series.scale(d.y)})}}});this.stackData.hooks.data.forEach(function(entry){data=entry.f.apply(self,[data])});var stackedData;if(!this.renderer.unstack){this._validateStackable();var layout=d3.layout.stack();layout.offset(self.offset);stackedData=layout(data)}stackedData=stackedData||data;this.stackData.hooks.after.forEach(function(entry){stackedData=entry.f.apply(self,[data])});var i=0;this.series.forEach(function(series){if(series.disabled)return;series.stack=stackedData[i++]});this.stackedData=stackedData;return stackedData};this._validateStackable=function(){var series=this.series;var pointsCount;series.forEach(function(s){pointsCount=pointsCount||s.data.length;if(pointsCount&amp;&amp;s.data.length!=pointsCount){throw&quot;stacked series cannot have differing numbers of points: &quot;+pointsCount+&quot; vs &quot;+s.data.length+&quot;; see Rickshaw.Series.fill()&quot;}},this)};this.stackData.hooks={data:[],after:[]};this._slice=function(d){if(this.window.xMin||this.window.xMax){var isInRange=true;if(this.window.xMin&amp;&amp;d.x&lt;this.window.xMin)isInRange=false;if(this.window.xMax&amp;&amp;d.x&gt;this.window.xMax)isInRange=false;return isInRange}return true};this.onUpdate=function(callback){this.updateCallbacks.push(callback)};this.registerRenderer=function(renderer){this._renderers=this._renderers||{};this._renderers[renderer.name]=renderer};this.configure=function(args){if(args.width||args.height){this.setSize(args)}Rickshaw.keys(this.defaults).forEach(function(k){this[k]=k in args?args[k]:k in this?this[k]:this.defaults[k]},this);this.setRenderer(args.renderer||this.renderer.name,args)};this.setRenderer=function(r,args){if(typeof r==&quot;function&quot;){this.renderer=new r({graph:self});this.registerRenderer(this.renderer)}else{if(!this._renderers[r]){throw&quot;couldn&#39;t find renderer &quot;+r}this.renderer=this._renderers[r]}if(typeof args==&quot;object&quot;){this.renderer.configure(args)}};this.setSize=function(args){args=args||{};if(typeof window!==undefined){var style=window.getComputedStyle(this.element,null);var elementWidth=parseInt(style.getPropertyValue(&quot;width&quot;),10);var elementHeight=parseInt(style.getPropertyValue(&quot;height&quot;),10)}this.width=args.width||elementWidth||400;this.height=args.height||elementHeight||250;this.vis&amp;&amp;this.vis.attr(&quot;width&quot;,this.width).attr(&quot;height&quot;,this.height)};this.initialize(args)};Rickshaw.namespace(&quot;Rickshaw.Fixtures.Color&quot;);Rickshaw.Fixtures.Color=function(){this.schemes={};this.schemes.spectrum14=[&quot;#ecb796&quot;,&quot;#dc8f70&quot;,&quot;#b2a470&quot;,&quot;#92875a&quot;,&quot;#716c49&quot;,&quot;#d2ed82&quot;,&quot;#bbe468&quot;,&quot;#a1d05d&quot;,&quot;#e7cbe6&quot;,&quot;#d8aad6&quot;,&quot;#a888c2&quot;,&quot;#9dc2d3&quot;,&quot;#649eb9&quot;,&quot;#387aa3&quot;].reverse();this.schemes.spectrum2000=[&quot;#57306f&quot;,&quot;#514c76&quot;,&quot;#646583&quot;,&quot;#738394&quot;,&quot;#6b9c7d&quot;,&quot;#84b665&quot;,&quot;#a7ca50&quot;,&quot;#bfe746&quot;,&quot;#e2f528&quot;,&quot;#fff726&quot;,&quot;#ecdd00&quot;,&quot;#d4b11d&quot;,&quot;#de8800&quot;,&quot;#de4800&quot;,&quot;#c91515&quot;,&quot;#9a0000&quot;,&quot;#7b0429&quot;,&quot;#580839&quot;,&quot;#31082b&quot;];this.schemes.spectrum2001=[&quot;#2f243f&quot;,&quot;#3c2c55&quot;,&quot;#4a3768&quot;,&quot;#565270&quot;,&quot;#6b6b7c&quot;,&quot;#72957f&quot;,&quot;#86ad6e&quot;,&quot;#a1bc5e&quot;,&quot;#b8d954&quot;,&quot;#d3e04e&quot;,&quot;#ccad2a&quot;,&quot;#cc8412&quot;,&quot;#c1521d&quot;,&quot;#ad3821&quot;,&quot;#8a1010&quot;,&quot;#681717&quot;,&quot;#531e1e&quot;,&quot;#3d1818&quot;,&quot;#320a1b&quot;];this.schemes.classic9=[&quot;#423d4f&quot;,&quot;#4a6860&quot;,&quot;#848f39&quot;,&quot;#a2b73c&quot;,&quot;#ddcb53&quot;,&quot;#c5a32f&quot;,&quot;#7d5836&quot;,&quot;#963b20&quot;,&quot;#7c2626&quot;,&quot;#491d37&quot;,&quot;#2f254a&quot;].reverse();this.schemes.httpStatus={503:&quot;#ea5029&quot;,502:&quot;#d23f14&quot;,500:&quot;#bf3613&quot;,410:&quot;#efacea&quot;,409:&quot;#e291dc&quot;,403:&quot;#f457e8&quot;,408:&quot;#e121d2&quot;,401:&quot;#b92dae&quot;,405:&quot;#f47ceb&quot;,404:&quot;#a82a9f&quot;,400:&quot;#b263c6&quot;,301:&quot;#6fa024&quot;,302:&quot;#87c32b&quot;,307:&quot;#a0d84c&quot;,304:&quot;#28b55c&quot;,200:&quot;#1a4f74&quot;,206:&quot;#27839f&quot;,201:&quot;#52adc9&quot;,202:&quot;#7c979f&quot;,203:&quot;#a5b8bd&quot;,204:&quot;#c1cdd1&quot;};this.schemes.colorwheel=[&quot;#b5b6a9&quot;,&quot;#858772&quot;,&quot;#785f43&quot;,&quot;#96557e&quot;,&quot;#4682b4&quot;,&quot;#65b9ac&quot;,&quot;#73c03a&quot;,&quot;#cb513a&quot;].reverse();this.schemes.cool=[&quot;#5e9d2f&quot;,&quot;#73c03a&quot;,&quot;#4682b4&quot;,&quot;#7bc3b8&quot;,&quot;#a9884e&quot;,&quot;#c1b266&quot;,&quot;#a47493&quot;,&quot;#c09fb5&quot;];this.schemes.munin=[&quot;#00cc00&quot;,&quot;#0066b3&quot;,&quot;#ff8000&quot;,&quot;#ffcc00&quot;,&quot;#330099&quot;,&quot;#990099&quot;,&quot;#ccff00&quot;,&quot;#ff0000&quot;,&quot;#808080&quot;,&quot;#008f00&quot;,&quot;#00487d&quot;,&quot;#b35a00&quot;,&quot;#b38f00&quot;,&quot;#6b006b&quot;,&quot;#8fb300&quot;,&quot;#b30000&quot;,&quot;#bebebe&quot;,&quot;#80ff80&quot;,&quot;#80c9ff&quot;,&quot;#ffc080&quot;,&quot;#ffe680&quot;,&quot;#aa80ff&quot;,&quot;#ee00cc&quot;,&quot;#ff8080&quot;,&quot;#666600&quot;,&quot;#ffbfff&quot;,&quot;#00ffcc&quot;,&quot;#cc6699&quot;,&quot;#999900&quot;]};Rickshaw.namespace(&quot;Rickshaw.Fixtures.RandomData&quot;);Rickshaw.Fixtures.RandomData=function(timeInterval){var addData;timeInterval=timeInterval||1;var lastRandomValue=200;var timeBase=Math.floor((new Date).getTime()/1e3);this.addData=function(data){var randomValue=Math.random()*100+15+lastRandomValue;var index=data[0].length;var counter=1;data.forEach(function(series){var randomVariance=Math.random()*20;var v=randomValue/25+counter++ +(Math.cos(index*counter*11/960)+2)*15+(Math.cos(index/7)+2)*7+(Math.cos(index/17)+2)*1;series.push({x:index*timeInterval+timeBase,y:v+randomVariance})});lastRandomValue=randomValue*.85};this.removeData=function(data){data.forEach(function(series){series.shift()});timeBase+=timeInterval}};Rickshaw.namespace(&quot;Rickshaw.Fixtures.Time&quot;);Rickshaw.Fixtures.Time=function(){var tzOffset=(new Date).getTimezoneOffset()*60;var self=this;this.months=[&quot;Jan&quot;,&quot;Feb&quot;,&quot;Mar&quot;,&quot;Apr&quot;,&quot;May&quot;,&quot;Jun&quot;,&quot;Jul&quot;,&quot;Aug&quot;,&quot;Sep&quot;,&quot;Oct&quot;,&quot;Nov&quot;,&quot;Dec&quot;];this.units=[{name:&quot;decade&quot;,seconds:86400*365.25*10,formatter:function(d){return parseInt(d.getUTCFullYear()/10,10)*10}},{name:&quot;year&quot;,seconds:86400*365.25,formatter:function(d){return d.getUTCFullYear()}},{name:&quot;month&quot;,seconds:86400*30.5,formatter:function(d){return self.months[d.getUTCMonth()]}},{name:&quot;week&quot;,seconds:86400*7,formatter:function(d){return self.formatDate(d)}},{name:&quot;day&quot;,seconds:86400,formatter:function(d){return d.getUTCDate()}},{name:&quot;6 hour&quot;,seconds:3600*6,formatter:function(d){return self.formatTime(d)}},{name:&quot;hour&quot;,seconds:3600,formatter:function(d){return self.formatTime(d)}},{name:&quot;15 minute&quot;,seconds:60*15,formatter:function(d){return self.formatTime(d)}},{name:&quot;minute&quot;,seconds:60,formatter:function(d){return d.getUTCMinutes()}},{name:&quot;15 second&quot;,seconds:15,formatter:function(d){return d.getUTCSeconds()+&quot;s&quot;}},{name:&quot;second&quot;,seconds:1,formatter:function(d){return d.getUTCSeconds()+&quot;s&quot;}}];this.unit=function(unitName){return this.units.filter(function(unit){return unitName==unit.name}).shift()};this.formatDate=function(d){return d3.time.format(&quot;%b %e&quot;)(d)};this.formatTime=function(d){return d.toUTCString().match(/(\d+:\d+):/)[1]};this.ceil=function(time,unit){var nearFuture;var rounded;if(unit.name==&quot;month&quot;){nearFuture=new Date((time+unit.seconds-1)*1e3);rounded=new Date(0);rounded.setUTCFullYear(nearFuture.getUTCFullYear());rounded.setUTCMonth(nearFuture.getUTCMonth());rounded.setUTCDate(1);rounded.setUTCHours(0);rounded.setUTCMinutes(0);rounded.setUTCSeconds(0);rounded.setUTCMilliseconds(0);return rounded.getTime()/1e3}if(unit.name==&quot;year&quot;){nearFuture=new Date((time+unit.seconds-1)*1e3);rounded=new Date(0);rounded.setUTCFullYear(nearFuture.getUTCFullYear());rounded.setUTCMonth(0);rounded.setUTCDate(1);rounded.setUTCHours(0);rounded.setUTCMinutes(0);rounded.setUTCSeconds(0);rounded.setUTCMilliseconds(0);return rounded.getTime()/1e3}return Math.ceil(time/unit.seconds)*unit.seconds}};Rickshaw.namespace(&quot;Rickshaw.Fixtures.Time.Local&quot;);Rickshaw.Fixtures.Time.Local=function(){var tzOffset=(new Date).getTimezoneOffset()*60;var self=this;this.months=[&quot;Jan&quot;,&quot;Feb&quot;,&quot;Mar&quot;,&quot;Apr&quot;,&quot;May&quot;,&quot;Jun&quot;,&quot;Jul&quot;,&quot;Aug&quot;,&quot;Sep&quot;,&quot;Oct&quot;,&quot;Nov&quot;,&quot;Dec&quot;];this.units=[{name:&quot;decade&quot;,seconds:86400*365.25*10,formatter:function(d){return parseInt(d.getFullYear()/10,10)*10}},{name:&quot;year&quot;,seconds:86400*365.25,formatter:function(d){return d.getFullYear()}},{name:&quot;month&quot;,seconds:86400*30.5,formatter:function(d){return self.months[d.getMonth()]}},{name:&quot;week&quot;,seconds:86400*7,formatter:function(d){return self.formatDate(d)}},{name:&quot;day&quot;,seconds:86400,formatter:function(d){return d.getDate()}},{name:&quot;6 hour&quot;,seconds:3600*6,formatter:function(d){return self.formatTime(d)}},{name:&quot;hour&quot;,seconds:3600,formatter:function(d){return self.formatTime(d)}},{name:&quot;15 minute&quot;,seconds:60*15,formatter:function(d){return self.formatTime(d)}},{name:&quot;minute&quot;,seconds:60,formatter:function(d){return d.getMinutes()}},{name:&quot;15 second&quot;,seconds:15,formatter:function(d){return d.getSeconds()+&quot;s&quot;}},{name:&quot;second&quot;,seconds:1,formatter:function(d){return d.getSeconds()+&quot;s&quot;}}];this.unit=function(unitName){return this.units.filter(function(unit){return unitName==unit.name}).shift()};this.formatDate=function(d){return d3.time.format(&quot;%b %e&quot;)(d)};this.formatTime=function(d){return d.toString().match(/(\d+:\d+):/)[1]};this.ceil=function(time,unit){var nearFuture;var rounded;if(unit.name==&quot;day&quot;){nearFuture=new Date((time+unit.seconds-1)*1e3);rounded=new Date(0);rounded.setMilliseconds(0);rounded.setSeconds(0);rounded.setMinutes(0);rounded.setHours(0);rounded.setDate(nearFuture.getDate());rounded.setMonth(nearFuture.getMonth());rounded.setFullYear(nearFuture.getFullYear());return rounded.getTime()/1e3}if(unit.name==&quot;month&quot;){nearFuture=new Date((time+unit.seconds-1)*1e3);rounded=new Date(0);rounded.setMilliseconds(0);rounded.setSeconds(0);rounded.setMinutes(0);rounded.setHours(0);rounded.setDate(1);rounded.setMonth(nearFuture.getMonth());rounded.setFullYear(nearFuture.getFullYear());return rounded.getTime()/1e3}if(unit.name==&quot;year&quot;){nearFuture=new Date((time+unit.seconds-1)*1e3);rounded=new Date(0);rounded.setFullYear(nearFuture.getFullYear());rounded.setMilliseconds(0);rounded.setSeconds(0);rounded.setMinutes(0);rounded.setHours(0);rounded.setDate(1);rounded.setMonth(0);return rounded.getTime()/1e3}return Math.ceil(time/unit.seconds)*unit.seconds}};Rickshaw.namespace(&quot;Rickshaw.Fixtures.Number&quot;);Rickshaw.Fixtures.Number.formatKMBT=function(y){var abs_y=Math.abs(y);if(abs_y&gt;=1e12){return y/1e12+&quot;T&quot;}else if(abs_y&gt;=1e9){return y/1e9+&quot;B&quot;}else if(abs_y&gt;=1e6){return y/1e6+&quot;M&quot;}else if(abs_y&gt;=1e3){return y/1e3+&quot;K&quot;}else if(abs_y&lt;1&amp;&amp;y&gt;0){return y.toFixed(2)}else if(abs_y===0){return&quot;&quot;}else{return y}};Rickshaw.Fixtures.Number.formatBase1024KMGTP=function(y){var abs_y=Math.abs(y);if(abs_y&gt;=0x4000000000000){return y/0x4000000000000+&quot;P&quot;}else if(abs_y&gt;=1099511627776){return y/1099511627776+&quot;T&quot;}else if(abs_y&gt;=1073741824){return y/1073741824+&quot;G&quot;}else if(abs_y&gt;=1048576){return y/1048576+&quot;M&quot;}else if(abs_y&gt;=1024){return y/1024+&quot;K&quot;}else if(abs_y&lt;1&amp;&amp;y&gt;0){return y.toFixed(2)}else if(abs_y===0){return&quot;&quot;}else{return y}};Rickshaw.namespace(&quot;Rickshaw.Color.Palette&quot;);Rickshaw.Color.Palette=function(args){var color=new Rickshaw.Fixtures.Color;args=args||{};this.schemes={};this.scheme=color.schemes[args.scheme]||args.scheme||color.schemes.colorwheel;this.runningIndex=0;this.generatorIndex=0;if(args.interpolatedStopCount){var schemeCount=this.scheme.length-1;var i,j,scheme=[];for(i=0;i&lt;schemeCount;i++){scheme.push(this.scheme[i]);var generator=d3.interpolateHsl(this.scheme[i],this.scheme[i+1]);for(j=1;j&lt;args.interpolatedStopCount;j++){scheme.push(generator(1/args.interpolatedStopCount*j))}}scheme.push(this.scheme[this.scheme.length-1]);this.scheme=scheme}this.rotateCount=this.scheme.length;this.color=function(key){return this.scheme[key]||this.scheme[this.runningIndex++]||this.interpolateColor()||&quot;#808080&quot;};this.interpolateColor=function(){if(!Array.isArray(this.scheme))return;var color;if(this.generatorIndex==this.rotateCount*2-1){color=d3.interpolateHsl(this.scheme[this.generatorIndex],this.scheme[0])(.5);this.generatorIndex=0;this.rotateCount*=2}else{color=d3.interpolateHsl(this.scheme[this.generatorIndex],this.scheme[this.generatorIndex+1])(.5);this.generatorIndex++}this.scheme.push(color);return color}};Rickshaw.namespace(&quot;Rickshaw.Graph.Ajax&quot;);Rickshaw.Graph.Ajax=Rickshaw.Class.create({initialize:function(args){this.dataURL=args.dataURL;this.onData=args.onData||function(d){return d};this.onComplete=args.onComplete||function(){};this.onError=args.onError||function(){};this.args=args;this.request()},request:function(){$.ajax({url:this.dataURL,dataType:&quot;json&quot;,success:this.success.bind(this),error:this.error.bind(this)})},error:function(){console.log(&quot;error loading dataURL: &quot;+this.dataURL);this.onError(this)},success:function(data,status){data=this.onData(data);this.args.series=this._splice({data:data,series:this.args.series});this.graph=this.graph||new Rickshaw.Graph(this.args);this.graph.render();this.onComplete(this)},_splice:function(args){var data=args.data;var series=args.series;if(!args.series)return data;series.forEach(function(s){var seriesKey=s.key||s.name;if(!seriesKey)throw&quot;series needs a key or a name&quot;;data.forEach(function(d){var dataKey=d.key||d.name;if(!dataKey)throw&quot;data needs a key or a name&quot;;if(seriesKey==dataKey){var properties=[&quot;color&quot;,&quot;name&quot;,&quot;data&quot;];properties.forEach(function(p){if(d[p])s[p]=d[p]})}})});return series}});Rickshaw.namespace(&quot;Rickshaw.Graph.Annotate&quot;);Rickshaw.Graph.Annotate=function(args){var graph=this.graph=args.graph;this.elements={timeline:args.element};var self=this;this.data={};this.elements.timeline.classList.add(&quot;rickshaw_annotation_timeline&quot;);this.add=function(time,content,end_time){self.data[time]=self.data[time]||{boxes:[]};self.data[time].boxes.push({content:content,end:end_time})};this.update=function(){Rickshaw.keys(self.data).forEach(function(time){var annotation=self.data[time];var left=self.graph.x(time);if(left&lt;0||left&gt;self.graph.x.range()[1]){if(annotation.element){annotation.line.classList.add(&quot;offscreen&quot;);annotation.element.style.display=&quot;none&quot;}annotation.boxes.forEach(function(box){if(box.rangeElement)box.rangeElement.classList.add(&quot;offscreen&quot;)});return}if(!annotation.element){var element=annotation.element=document.createElement(&quot;div&quot;);element.classList.add(&quot;annotation&quot;);this.elements.timeline.appendChild(element);element.addEventListener(&quot;click&quot;,function(e){element.classList.toggle(&quot;active&quot;);annotation.line.classList.toggle(&quot;active&quot;);annotation.boxes.forEach(function(box){if(box.rangeElement)box.rangeElement.classList.toggle(&quot;active&quot;)})},false)}annotation.element.style.left=left+&quot;px&quot;;annotation.element.style.display=&quot;block&quot;;annotation.boxes.forEach(function(box){var element=box.element;if(!element){element=box.element=document.createElement(&quot;div&quot;);element.classList.add(&quot;content&quot;);element.innerHTML=box.content;annotation.element.appendChild(element);annotation.line=document.createElement(&quot;div&quot;);annotation.line.classList.add(&quot;annotation_line&quot;);self.graph.element.appendChild(annotation.line);if(box.end){box.rangeElement=document.createElement(&quot;div&quot;);box.rangeElement.classList.add(&quot;annotation_range&quot;);self.graph.element.appendChild(box.rangeElement)}}if(box.end){var annotationRangeStart=left;var annotationRangeEnd=Math.min(self.graph.x(box.end),self.graph.x.range()[1]);if(annotationRangeStart&gt;annotationRangeEnd){annotationRangeEnd=left;annotationRangeStart=Math.max(self.graph.x(box.end),self.graph.x.range()[0])}var annotationRangeWidth=annotationRangeEnd-annotationRangeStart;box.rangeElement.style.left=annotationRangeStart+&quot;px&quot;;box.rangeElement.style.width=annotationRangeWidth+&quot;px&quot;;box.rangeElement.classList.remove(&quot;offscreen&quot;)}annotation.line.classList.remove(&quot;offscreen&quot;);annotation.line.style.left=left+&quot;px&quot;})},this)};this.graph.onUpdate(function(){self.update()})};Rickshaw.namespace(&quot;Rickshaw.Graph.Axis.Time&quot;);Rickshaw.Graph.Axis.Time=function(args){var self=this;this.graph=args.graph;this.elements=[];this.ticksTreatment=args.ticksTreatment||&quot;plain&quot;;this.fixedTimeUnit=args.timeUnit;var time=args.timeFixture||new Rickshaw.Fixtures.Time;this.appropriateTimeUnit=function(){var unit;var units=time.units;var domain=this.graph.x.domain();var rangeSeconds=domain[1]-domain[0];units.forEach(function(u){if(Math.floor(rangeSeconds/u.seconds)&gt;=2){unit=unit||u}});return unit||time.units[time.units.length-1]};this.tickOffsets=function(){var domain=this.graph.x.domain();var unit=this.fixedTimeUnit||this.appropriateTimeUnit();var count=Math.ceil((domain[1]-domain[0])/unit.seconds);var runningTick=domain[0];var offsets=[];for(var i=0;i&lt;count;i++){var tickValue=time.ceil(runningTick,unit);runningTick=tickValue+unit.seconds/2;offsets.push({value:tickValue,unit:unit})}return offsets};this.render=function(){this.elements.forEach(function(e){e.parentNode.removeChild(e)});this.elements=[];var offsets=this.tickOffsets();offsets.forEach(function(o){if(self.graph.x(o.value)&gt;self.graph.x.range()[1])return;var element=document.createElement(&quot;div&quot;);element.style.left=self.graph.x(o.value)+&quot;px&quot;;element.classList.add(&quot;x_tick&quot;);element.classList.add(self.ticksTreatment);var title=document.createElement(&quot;div&quot;);title.classList.add(&quot;title&quot;);title.innerHTML=o.unit.formatter(new Date(o.value*1e3));element.appendChild(title);self.graph.element.appendChild(element);self.elements.push(element)})};this.graph.onUpdate(function(){self.render()})};Rickshaw.namespace(&quot;Rickshaw.Graph.Axis.X&quot;);Rickshaw.Graph.Axis.X=function(args){var self=this;var berthRate=.1;this.initialize=function(args){this.graph=args.graph;this.orientation=args.orientation||&quot;top&quot;;this.pixelsPerTick=args.pixelsPerTick||75;if(args.ticks)this.staticTicks=args.ticks;if(args.tickValues)this.tickValues=args.tickValues;this.tickSize=args.tickSize||4;this.ticksTreatment=args.ticksTreatment||&quot;plain&quot;;if(args.element){this.element=args.element;this._discoverSize(args.element,args);this.vis=d3.select(args.element).append(&quot;svg:svg&quot;).attr(&quot;height&quot;,this.height).attr(&quot;width&quot;,this.width).attr(&quot;class&quot;,&quot;rickshaw_graph x_axis_d3&quot;);this.element=this.vis[0][0];this.element.style.position=&quot;relative&quot;;this.setSize({width:args.width,height:args.height})}else{this.vis=this.graph.vis}this.graph.onUpdate(function(){self.render()})};this.setSize=function(args){args=args||{};if(!this.element)return;this._discoverSize(this.element.parentNode,args);this.vis.attr(&quot;height&quot;,this.height).attr(&quot;width&quot;,this.width*(1+berthRate));var berth=Math.floor(this.width*berthRate/2);this.element.style.left=-1*berth+&quot;px&quot;};this.render=function(){if(this.graph.width!==this._renderWidth)this.setSize({auto:true});var axis=d3.svg.axis().scale(this.graph.x).orient(this.orientation);axis.tickFormat(args.tickFormat||function(x){return x});if(this.tickValues)axis.tickValues(this.tickValues);this.ticks=this.staticTicks||Math.floor(this.graph.width/this.pixelsPerTick);var berth=Math.floor(this.width*berthRate/2)||0;var transform;if(this.orientation==&quot;top&quot;){var yOffset=this.height||this.graph.height;transform=&quot;translate(&quot;+berth+&quot;,&quot;+yOffset+&quot;)&quot;}else{transform=&quot;translate(&quot;+berth+&quot;, 0)&quot;}if(this.element){this.vis.selectAll(&quot;*&quot;).remove()}this.vis.append(&quot;svg:g&quot;).attr(&quot;class&quot;,[&quot;x_ticks_d3&quot;,this.ticksTreatment].join(&quot; &quot;)).attr(&quot;transform&quot;,transform).call(axis.ticks(this.ticks).tickSubdivide(0).tickSize(this.tickSize));var gridSize=(this.orientation==&quot;bottom&quot;?1:-1)*this.graph.height;this.graph.vis.append(&quot;svg:g&quot;).attr(&quot;class&quot;,&quot;x_grid_d3&quot;).call(axis.ticks(this.ticks).tickSubdivide(0).tickSize(gridSize));this._renderHeight=this.graph.height};this._discoverSize=function(element,args){if(typeof window!==&quot;undefined&quot;){var style=window.getComputedStyle(element,null);var elementHeight=parseInt(style.getPropertyValue(&quot;height&quot;),10);if(!args.auto){var elementWidth=parseInt(style.getPropertyValue(&quot;width&quot;),10)}}this.width=(args.width||elementWidth||this.graph.width)*(1+berthRate);this.height=args.height||elementHeight||40};this.initialize(args)};Rickshaw.namespace(&quot;Rickshaw.Graph.Axis.Y&quot;);Rickshaw.Graph.Axis.Y=Rickshaw.Class.create({initialize:function(args){this.graph=args.graph;this.orientation=args.orientation||&quot;right&quot;;this.pixelsPerTick=args.pixelsPerTick||75;if(args.ticks)this.staticTicks=args.ticks;if(args.tickValues)this.tickValues=args.tickValues;this.tickSize=args.tickSize||4;this.ticksTreatment=args.ticksTreatment||&quot;plain&quot;;this.tickFormat=args.tickFormat||function(y){return y};this.berthRate=.1;if(args.element){this.element=args.element;this.vis=d3.select(args.element).append(&quot;svg:svg&quot;).attr(&quot;class&quot;,&quot;rickshaw_graph y_axis&quot;);this.element=this.vis[0][0];this.element.style.position=&quot;relative&quot;;this.setSize({width:args.width,height:args.height})}else{this.vis=this.graph.vis}var self=this;this.graph.onUpdate(function(){self.render()})},setSize:function(args){args=args||{};if(!this.element)return;if(typeof window!==&quot;undefined&quot;){var style=window.getComputedStyle(this.element.parentNode,null);var elementWidth=parseInt(style.getPropertyValue(&quot;width&quot;),10);if(!args.auto){var elementHeight=parseInt(style.getPropertyValue(&quot;height&quot;),10)}}this.width=args.width||elementWidth||this.graph.width*this.berthRate;this.height=args.height||elementHeight||this.graph.height;this.vis.attr(&quot;width&quot;,this.width).attr(&quot;height&quot;,this.height*(1+this.berthRate));var berth=this.height*this.berthRate;if(this.orientation==&quot;left&quot;){this.element.style.top=-1*berth+&quot;px&quot;}},render:function(){if(this.graph.height!==this._renderHeight)this.setSize({auto:true});this.ticks=this.staticTicks||Math.floor(this.graph.height/this.pixelsPerTick);var axis=this._drawAxis(this.graph.y);this._drawGrid(axis);this._renderHeight=this.graph.height},_drawAxis:function(scale){var axis=d3.svg.axis().scale(scale).orient(this.orientation);axis.tickFormat(this.tickFormat);if(this.tickValues)axis.tickValues(this.tickValues);if(this.orientation==&quot;left&quot;){var berth=this.height*this.berthRate;var transform=&quot;translate(&quot;+this.width+&quot;, &quot;+berth+&quot;)&quot;}if(this.element){this.vis.selectAll(&quot;*&quot;).remove()}this.vis.append(&quot;svg:g&quot;).attr(&quot;class&quot;,[&quot;y_ticks&quot;,this.ticksTreatment].join(&quot; &quot;)).attr(&quot;transform&quot;,transform).call(axis.ticks(this.ticks).tickSubdivide(0).tickSize(this.tickSize));return axis},_drawGrid:function(axis){var gridSize=(this.orientation==&quot;right&quot;?1:-1)*this.graph.width;this.graph.vis.append(&quot;svg:g&quot;).attr(&quot;class&quot;,&quot;y_grid&quot;).call(axis.ticks(this.ticks).tickSubdivide(0).tickSize(gridSize))}});Rickshaw.namespace(&quot;Rickshaw.Graph.Axis.Y.Scaled&quot;);Rickshaw.Graph.Axis.Y.Scaled=Rickshaw.Class.create(Rickshaw.Graph.Axis.Y,{initialize:function($super,args){if(typeof args.scale===&quot;undefined&quot;){throw new Error(&quot;Scaled requires scale&quot;)}this.scale=args.scale;if(typeof args.grid===&quot;undefined&quot;){this.grid=true}else{this.grid=args.grid}$super(args)},_drawAxis:function($super,scale){var adjustedScale=this.scale.copy().range(scale.range());return $super(adjustedScale)},_drawGrid:function($super,axis){if(this.grid){$super(axis)}}});Rickshaw.namespace(&quot;Rickshaw.Graph.Behavior.Series.Highlight&quot;);Rickshaw.Graph.Behavior.Series.Highlight=function(args){this.graph=args.graph;this.legend=args.legend;var self=this;var colorSafe={};var activeLine=null;var disabledColor=args.disabledColor||function(seriesColor){return d3.interpolateRgb(seriesColor,d3.rgb(&quot;#d8d8d8&quot;))(.8).toString()};this.addHighlightEvents=function(l){l.element.addEventListener(&quot;mouseover&quot;,function(e){if(activeLine)return;else activeLine=l;self.legend.lines.forEach(function(line,index){if(l===line){if(index&gt;0&amp;&amp;self.graph.renderer.unstack&amp;&amp;(line.series.renderer?line.series.renderer.unstack:true)){var seriesIndex=self.graph.series.length-index-1;</div><div class='line' id='LC18969'>line.originalIndex=seriesIndex;var series=self.graph.series.splice(seriesIndex,1)[0];self.graph.series.push(series)}return}colorSafe[line.series.name]=colorSafe[line.series.name]||line.series.color;line.series.color=disabledColor(line.series.color)});self.graph.update()},false);l.element.addEventListener(&quot;mouseout&quot;,function(e){if(!activeLine)return;else activeLine=null;self.legend.lines.forEach(function(line){if(l===line&amp;&amp;line.hasOwnProperty(&quot;originalIndex&quot;)){var series=self.graph.series.pop();self.graph.series.splice(line.originalIndex,0,series);delete line.originalIndex}if(colorSafe[line.series.name]){line.series.color=colorSafe[line.series.name]}});self.graph.update()},false)};if(this.legend){this.legend.lines.forEach(function(l){self.addHighlightEvents(l)})}};Rickshaw.namespace(&quot;Rickshaw.Graph.Behavior.Series.Order&quot;);Rickshaw.Graph.Behavior.Series.Order=function(args){this.graph=args.graph;this.legend=args.legend;var self=this;if(typeof window.$==&quot;undefined&quot;){throw&quot;couldn&#39;t find jQuery at window.$&quot;}if(typeof window.$.ui==&quot;undefined&quot;){throw&quot;couldn&#39;t find jQuery UI at window.$.ui&quot;}$(function(){$(self.legend.list).sortable({containment:&quot;parent&quot;,tolerance:&quot;pointer&quot;,update:function(event,ui){var series=[];$(self.legend.list).find(&quot;li&quot;).each(function(index,item){if(!item.series)return;series.push(item.series)});for(var i=self.graph.series.length-1;i&gt;=0;i--){self.graph.series[i]=series.shift()}self.graph.update()}});$(self.legend.list).disableSelection()});this.graph.onUpdate(function(){var h=window.getComputedStyle(self.legend.element).height;self.legend.element.style.height=h})};Rickshaw.namespace(&quot;Rickshaw.Graph.Behavior.Series.Toggle&quot;);Rickshaw.Graph.Behavior.Series.Toggle=function(args){this.graph=args.graph;this.legend=args.legend;var self=this;this.addAnchor=function(line){var anchor=document.createElement(&quot;a&quot;);anchor.innerHTML=&quot;&amp;#10004;&quot;;anchor.classList.add(&quot;action&quot;);line.element.insertBefore(anchor,line.element.firstChild);anchor.onclick=function(e){if(line.series.disabled){line.series.enable();line.element.classList.remove(&quot;disabled&quot;)}else{if(this.graph.series.filter(function(s){return!s.disabled}).length&lt;=1)return;line.series.disable();line.element.classList.add(&quot;disabled&quot;)}}.bind(this);var label=line.element.getElementsByTagName(&quot;span&quot;)[0];label.onclick=function(e){var disableAllOtherLines=line.series.disabled;if(!disableAllOtherLines){for(var i=0;i&lt;self.legend.lines.length;i++){var l=self.legend.lines[i];if(line.series===l.series){}else if(l.series.disabled){}else{disableAllOtherLines=true;break}}}if(disableAllOtherLines){line.series.enable();line.element.classList.remove(&quot;disabled&quot;);self.legend.lines.forEach(function(l){if(line.series===l.series){}else{l.series.disable();l.element.classList.add(&quot;disabled&quot;)}})}else{self.legend.lines.forEach(function(l){l.series.enable();l.element.classList.remove(&quot;disabled&quot;)})}}};if(this.legend){if(typeof $!=&quot;undefined&quot;&amp;&amp;$(this.legend.list).sortable){$(this.legend.list).sortable({start:function(event,ui){ui.item.bind(&quot;no.onclick&quot;,function(event){event.preventDefault()})},stop:function(event,ui){setTimeout(function(){ui.item.unbind(&quot;no.onclick&quot;)},250)}})}this.legend.lines.forEach(function(l){self.addAnchor(l)})}this._addBehavior=function(){this.graph.series.forEach(function(s){s.disable=function(){if(self.graph.series.length&lt;=1){throw&quot;only one series left&quot;}s.disabled=true;self.graph.update()};s.enable=function(){s.disabled=false;self.graph.update()}})};this._addBehavior();this.updateBehaviour=function(){this._addBehavior()}};Rickshaw.namespace(&quot;Rickshaw.Graph.HoverDetail&quot;);Rickshaw.Graph.HoverDetail=Rickshaw.Class.create({initialize:function(args){var graph=this.graph=args.graph;this.xFormatter=args.xFormatter||function(x){return new Date(x*1e3).toUTCString()};this.yFormatter=args.yFormatter||function(y){return y===null?y:y.toFixed(2)};var element=this.element=document.createElement(&quot;div&quot;);element.className=&quot;detail&quot;;this.visible=true;graph.element.appendChild(element);this.lastEvent=null;this._addListeners();this.onShow=args.onShow;this.onHide=args.onHide;this.onRender=args.onRender;this.formatter=args.formatter||this.formatter},formatter:function(series,x,y,formattedX,formattedY,d){return series.name+&quot;:&amp;nbsp;&quot;+formattedY},update:function(e){e=e||this.lastEvent;if(!e)return;this.lastEvent=e;if(!e.target.nodeName.match(/^(path|svg|rect|circle)$/))return;var graph=this.graph;var eventX=e.offsetX||e.layerX;var eventY=e.offsetY||e.layerY;var j=0;var points=[];var nearestPoint;this.graph.series.active().forEach(function(series){var data=this.graph.stackedData[j++];if(!data.length)return;var domainX=graph.x.invert(eventX);var domainIndexScale=d3.scale.linear().domain([data[0].x,data.slice(-1)[0].x]).range([0,data.length-1]);var approximateIndex=Math.round(domainIndexScale(domainX));if(approximateIndex==data.length-1)approximateIndex--;var dataIndex=Math.min(approximateIndex||0,data.length-1);for(var i=approximateIndex;i&lt;data.length-1;){if(!data[i]||!data[i+1])break;if(data[i].x&lt;=domainX&amp;&amp;data[i+1].x&gt;domainX){dataIndex=Math.abs(domainX-data[i].x)&lt;Math.abs(domainX-data[i+1].x)?i:i+1;break}if(data[i+1].x&lt;=domainX){i++}else{i--}}if(dataIndex&lt;0)dataIndex=0;var value=data[dataIndex];var distance=Math.sqrt(Math.pow(Math.abs(graph.x(value.x)-eventX),2)+Math.pow(Math.abs(graph.y(value.y+value.y0)-eventY),2));var xFormatter=series.xFormatter||this.xFormatter;var yFormatter=series.yFormatter||this.yFormatter;var point={formattedXValue:xFormatter(value.x),formattedYValue:yFormatter(series.scale?series.scale.invert(value.y):value.y),series:series,value:value,distance:distance,order:j,name:series.name};if(!nearestPoint||distance&lt;nearestPoint.distance){nearestPoint=point}points.push(point)},this);if(!nearestPoint)return;nearestPoint.active=true;var domainX=nearestPoint.value.x;var formattedXValue=nearestPoint.formattedXValue;this.element.innerHTML=&quot;&quot;;this.element.style.left=graph.x(domainX)+&quot;px&quot;;this.visible&amp;&amp;this.render({points:points,detail:points,mouseX:eventX,mouseY:eventY,formattedXValue:formattedXValue,domainX:domainX})},hide:function(){this.visible=false;this.element.classList.add(&quot;inactive&quot;);if(typeof this.onHide==&quot;function&quot;){this.onHide()}},show:function(){this.visible=true;this.element.classList.remove(&quot;inactive&quot;);if(typeof this.onShow==&quot;function&quot;){this.onShow()}},render:function(args){var graph=this.graph;var points=args.points;var point=points.filter(function(p){return p.active}).shift();if(point.value.y===null)return;var formattedXValue=point.formattedXValue;var formattedYValue=point.formattedYValue;this.element.innerHTML=&quot;&quot;;this.element.style.left=graph.x(point.value.x)+&quot;px&quot;;var xLabel=document.createElement(&quot;div&quot;);xLabel.className=&quot;x_label&quot;;xLabel.innerHTML=formattedXValue;this.element.appendChild(xLabel);var item=document.createElement(&quot;div&quot;);item.className=&quot;item&quot;;var series=point.series;var actualY=series.scale?series.scale.invert(point.value.y):point.value.y;item.innerHTML=this.formatter(series,point.value.x,actualY,formattedXValue,formattedYValue,point);item.style.top=this.graph.y(point.value.y0+point.value.y)+&quot;px&quot;;this.element.appendChild(item);var dot=document.createElement(&quot;div&quot;);dot.className=&quot;dot&quot;;dot.style.top=item.style.top;dot.style.borderColor=series.color;this.element.appendChild(dot);if(point.active){item.className=&quot;item active&quot;;dot.className=&quot;dot active&quot;}this.show();if(typeof this.onRender==&quot;function&quot;){this.onRender(args)}},_addListeners:function(){this.graph.element.addEventListener(&quot;mousemove&quot;,function(e){this.visible=true;this.update(e)}.bind(this),false);this.graph.onUpdate(function(){this.update()}.bind(this));this.graph.element.addEventListener(&quot;mouseout&quot;,function(e){if(e.relatedTarget&amp;&amp;!(e.relatedTarget.compareDocumentPosition(this.graph.element)&amp;Node.DOCUMENT_POSITION_CONTAINS)){this.hide()}}.bind(this),false)}});Rickshaw.namespace(&quot;Rickshaw.Graph.JSONP&quot;);Rickshaw.Graph.JSONP=Rickshaw.Class.create(Rickshaw.Graph.Ajax,{request:function(){$.ajax({url:this.dataURL,dataType:&quot;jsonp&quot;,success:this.success.bind(this),error:this.error.bind(this)})}});Rickshaw.namespace(&quot;Rickshaw.Graph.Legend&quot;);Rickshaw.Graph.Legend=function(args){var element=this.element=args.element;var graph=this.graph=args.graph;var self=this;element.classList.add(&quot;rickshaw_legend&quot;);var list=this.list=document.createElement(&quot;ul&quot;);element.appendChild(list);var series=graph.series.map(function(s){return s});if(!args.naturalOrder){series=series.reverse()}this.lines=[];this.addLine=function(series){var line=document.createElement(&quot;li&quot;);line.className=&quot;line&quot;;if(series.disabled){line.className+=&quot; disabled&quot;}var swatch=document.createElement(&quot;div&quot;);swatch.className=&quot;swatch&quot;;swatch.style.backgroundColor=series.color;line.appendChild(swatch);var label=document.createElement(&quot;span&quot;);label.className=&quot;label&quot;;label.innerHTML=series.name;line.appendChild(label);list.appendChild(line);line.series=series;if(series.noLegend){line.style.display=&quot;none&quot;}var _line={element:line,series:series};if(self.shelving){self.shelving.addAnchor(_line);self.shelving.updateBehaviour()}if(self.highlighter){self.highlighter.addHighlightEvents(_line)}self.lines.push(_line)};series.forEach(function(s){self.addLine(s)});graph.onUpdate(function(){})};Rickshaw.namespace(&quot;Rickshaw.Graph.RangeSlider&quot;);Rickshaw.Graph.RangeSlider=Rickshaw.Class.create({initialize:function(args){var element=this.element=args.element;var graph=this.graph=args.graph;this.build();graph.onUpdate(function(){this.update()}.bind(this))},build:function(){var element=this.element;var graph=this.graph;var domain=graph.dataDomain();$(function(){$(element).slider({range:true,min:domain[0],max:domain[1],values:[domain[0],domain[1]],slide:function(event,ui){if(ui.values[1]&lt;=ui.values[0])return;graph.window.xMin=ui.values[0];graph.window.xMax=ui.values[1];graph.update();var domain=graph.dataDomain();if(domain[0]==ui.values[0]){graph.window.xMin=undefined}if(domain[1]==ui.values[1]){graph.window.xMax=undefined}}})});element[0].style.width=graph.width+&quot;px&quot;},update:function(){var element=this.element;var graph=this.graph;var values=$(element).slider(&quot;option&quot;,&quot;values&quot;);var domain=graph.dataDomain();$(element).slider(&quot;option&quot;,&quot;min&quot;,domain[0]);$(element).slider(&quot;option&quot;,&quot;max&quot;,domain[1]);if(graph.window.xMin==null){values[0]=domain[0]}if(graph.window.xMax==null){values[1]=domain[1]}$(element).slider(&quot;option&quot;,&quot;values&quot;,values)}});Rickshaw.namespace(&quot;Rickshaw.Graph.Renderer&quot;);Rickshaw.Graph.Renderer=Rickshaw.Class.create({initialize:function(args){this.graph=args.graph;this.tension=args.tension||this.tension;this.graph.unstacker=this.graph.unstacker||new Rickshaw.Graph.Unstacker({graph:this.graph});this.configure(args)},seriesPathFactory:function(){},seriesStrokeFactory:function(){},defaults:function(){return{tension:.8,strokeWidth:2,unstack:true,padding:{top:.01,right:0,bottom:.01,left:0},stroke:false,fill:false}},domain:function(data){var stackedData=data||this.graph.stackedData||this.graph.stackData();var firstPoint=stackedData[0][0];if(firstPoint===undefined){return{x:[null,null],y:[null,null]}}var xMin=firstPoint.x;var xMax=firstPoint.x;var yMin=firstPoint.y+firstPoint.y0;var yMax=firstPoint.y+firstPoint.y0;stackedData.forEach(function(series){series.forEach(function(d){if(d.y==null)return;var y=d.y+d.y0;if(y&lt;yMin)yMin=y;if(y&gt;yMax)yMax=y});if(series[0].x&lt;xMin)xMin=series[0].x;if(series[series.length-1].x&gt;xMax)xMax=series[series.length-1].x});xMin-=(xMax-xMin)*this.padding.left;xMax+=(xMax-xMin)*this.padding.right;yMin=this.graph.min===&quot;auto&quot;?yMin:this.graph.min||0;yMax=this.graph.max===undefined?yMax:this.graph.max;if(this.graph.min===&quot;auto&quot;||yMin&lt;0){yMin-=(yMax-yMin)*this.padding.bottom}if(this.graph.max===undefined){yMax+=(yMax-yMin)*this.padding.top}return{x:[xMin,xMax],y:[yMin,yMax]}},render:function(args){args=args||{};var graph=this.graph;var series=args.series||graph.series;var vis=args.vis||graph.vis;vis.selectAll(&quot;*&quot;).remove();var data=series.filter(function(s){return!s.disabled}).map(function(s){return s.stack});var nodes=vis.selectAll(&quot;path&quot;).data(data).enter().append(&quot;svg:path&quot;).attr(&quot;d&quot;,this.seriesPathFactory());var i=0;series.forEach(function(series){if(series.disabled)return;series.path=nodes[0][i++];this._styleSeries(series)},this)},_styleSeries:function(series){var fill=this.fill?series.color:&quot;none&quot;;var stroke=this.stroke?series.color:&quot;none&quot;;series.path.setAttribute(&quot;fill&quot;,fill);series.path.setAttribute(&quot;stroke&quot;,stroke);series.path.setAttribute(&quot;stroke-width&quot;,this.strokeWidth);series.path.setAttribute(&quot;class&quot;,series.className)},configure:function(args){args=args||{};Rickshaw.keys(this.defaults()).forEach(function(key){if(!args.hasOwnProperty(key)){this[key]=this[key]||this.graph[key]||this.defaults()[key];return}if(typeof this.defaults()[key]==&quot;object&quot;){Rickshaw.keys(this.defaults()[key]).forEach(function(k){this[key][k]=args[key][k]!==undefined?args[key][k]:this[key][k]!==undefined?this[key][k]:this.defaults()[key][k]},this)}else{this[key]=args[key]!==undefined?args[key]:this[key]!==undefined?this[key]:this.graph[key]!==undefined?this.graph[key]:this.defaults()[key]}},this)},setStrokeWidth:function(strokeWidth){if(strokeWidth!==undefined){this.strokeWidth=strokeWidth}},setTension:function(tension){if(tension!==undefined){this.tension=tension}}});Rickshaw.namespace(&quot;Rickshaw.Graph.Renderer.Line&quot;);Rickshaw.Graph.Renderer.Line=Rickshaw.Class.create(Rickshaw.Graph.Renderer,{name:&quot;line&quot;,defaults:function($super){return Rickshaw.extend($super(),{unstack:true,fill:false,stroke:true})},seriesPathFactory:function(){var graph=this.graph;var factory=d3.svg.line().x(function(d){return graph.x(d.x)}).y(function(d){return graph.y(d.y)}).interpolate(this.graph.interpolation).tension(this.tension);factory.defined&amp;&amp;factory.defined(function(d){return d.y!==null});return factory}});Rickshaw.namespace(&quot;Rickshaw.Graph.Renderer.Stack&quot;);Rickshaw.Graph.Renderer.Stack=Rickshaw.Class.create(Rickshaw.Graph.Renderer,{name:&quot;stack&quot;,defaults:function($super){return Rickshaw.extend($super(),{fill:true,stroke:false,unstack:false})},seriesPathFactory:function(){var graph=this.graph;var factory=d3.svg.area().x(function(d){return graph.x(d.x)}).y0(function(d){return graph.y(d.y0)}).y1(function(d){return graph.y(d.y+d.y0)}).interpolate(this.graph.interpolation).tension(this.tension);factory.defined&amp;&amp;factory.defined(function(d){return d.y!==null});return factory}});Rickshaw.namespace(&quot;Rickshaw.Graph.Renderer.Bar&quot;);Rickshaw.Graph.Renderer.Bar=Rickshaw.Class.create(Rickshaw.Graph.Renderer,{name:&quot;bar&quot;,defaults:function($super){var defaults=Rickshaw.extend($super(),{gapSize:.05,unstack:false});delete defaults.tension;return defaults},initialize:function($super,args){args=args||{};this.gapSize=args.gapSize||this.gapSize;$super(args)},domain:function($super){var domain=$super();var frequentInterval=this._frequentInterval(this.graph.stackedData.slice(-1).shift());domain.x[1]+=Number(frequentInterval.magnitude);return domain},barWidth:function(series){var frequentInterval=this._frequentInterval(series.stack);var barWidth=this.graph.x(series.stack[0].x+frequentInterval.magnitude*(1-this.gapSize));return barWidth},render:function(args){args=args||{};var graph=this.graph;var series=args.series||graph.series;var vis=args.vis||graph.vis;vis.selectAll(&quot;*&quot;).remove();var barWidth=this.barWidth(series.active()[0]);var barXOffset=0;var activeSeriesCount=series.filter(function(s){return!s.disabled}).length;var seriesBarWidth=this.unstack?barWidth/activeSeriesCount:barWidth;var transform=function(d){var matrix=[1,0,0,d.y&lt;0?-1:1,0,d.y&lt;0?graph.y.magnitude(Math.abs(d.y))*2:0];return&quot;matrix(&quot;+matrix.join(&quot;,&quot;)+&quot;)&quot;};series.forEach(function(series){if(series.disabled)return;var barWidth=this.barWidth(series);var nodes=vis.selectAll(&quot;path&quot;).data(series.stack.filter(function(d){return d.y!==null})).enter().append(&quot;svg:rect&quot;).attr(&quot;x&quot;,function(d){return graph.x(d.x)+barXOffset}).attr(&quot;y&quot;,function(d){return graph.y(d.y0+Math.abs(d.y))*(d.y&lt;0?-1:1)}).attr(&quot;width&quot;,seriesBarWidth).attr(&quot;height&quot;,function(d){return graph.y.magnitude(Math.abs(d.y))}).attr(&quot;transform&quot;,transform);Array.prototype.forEach.call(nodes[0],function(n){n.setAttribute(&quot;fill&quot;,series.color)});if(this.unstack)barXOffset+=seriesBarWidth},this)},_frequentInterval:function(data){var intervalCounts={};for(var i=0;i&lt;data.length-1;i++){var interval=data[i+1].x-data[i].x;intervalCounts[interval]=intervalCounts[interval]||0;intervalCounts[interval]++}var frequentInterval={count:0,magnitude:1};Rickshaw.keys(intervalCounts).forEach(function(i){if(frequentInterval.count&lt;intervalCounts[i]){frequentInterval={count:intervalCounts[i],magnitude:i}}});return frequentInterval}});Rickshaw.namespace(&quot;Rickshaw.Graph.Renderer.Area&quot;);Rickshaw.Graph.Renderer.Area=Rickshaw.Class.create(Rickshaw.Graph.Renderer,{name:&quot;area&quot;,defaults:function($super){return Rickshaw.extend($super(),{unstack:false,fill:false,stroke:false})},seriesPathFactory:function(){var graph=this.graph;var factory=d3.svg.area().x(function(d){return graph.x(d.x)}).y0(function(d){return graph.y(d.y0)}).y1(function(d){return graph.y(d.y+d.y0)}).interpolate(graph.interpolation).tension(this.tension);factory.defined&amp;&amp;factory.defined(function(d){return d.y!==null});return factory},seriesStrokeFactory:function(){var graph=this.graph;var factory=d3.svg.line().x(function(d){return graph.x(d.x)}).y(function(d){return graph.y(d.y+d.y0)}).interpolate(graph.interpolation).tension(this.tension);factory.defined&amp;&amp;factory.defined(function(d){return d.y!==null});return factory},render:function(){var graph=this.graph;graph.vis.selectAll(&quot;*&quot;).remove();var method=this.unstack?&quot;append&quot;:&quot;insert&quot;;var nodes=graph.vis.selectAll(&quot;path&quot;).data(this.graph.stackedData).enter()[method](&quot;svg:g&quot;,&quot;g&quot;);nodes.append(&quot;svg:path&quot;).attr(&quot;d&quot;,this.seriesPathFactory()).attr(&quot;class&quot;,&quot;area&quot;);if(this.stroke){nodes.append(&quot;svg:path&quot;).attr(&quot;d&quot;,this.seriesStrokeFactory()).attr(&quot;class&quot;,&quot;line&quot;)}var i=0;graph.series.forEach(function(series){if(series.disabled)return;series.path=nodes[0][i++];this._styleSeries(series)},this)},_styleSeries:function(series){if(!series.path)return;d3.select(series.path).select(&quot;.area&quot;).attr(&quot;fill&quot;,series.color);if(this.stroke){d3.select(series.path).select(&quot;.line&quot;).attr(&quot;fill&quot;,&quot;none&quot;).attr(&quot;stroke&quot;,series.stroke||d3.interpolateRgb(series.color,&quot;black&quot;)(.125)).attr(&quot;stroke-width&quot;,this.strokeWidth)}if(series.className){series.path.setAttribute(&quot;class&quot;,series.className)}}});Rickshaw.namespace(&quot;Rickshaw.Graph.Renderer.ScatterPlot&quot;);Rickshaw.Graph.Renderer.ScatterPlot=Rickshaw.Class.create(Rickshaw.Graph.Renderer,{name:&quot;scatterplot&quot;,defaults:function($super){return Rickshaw.extend($super(),{unstack:true,fill:true,stroke:false,padding:{top:.01,right:.01,bottom:.01,left:.01},dotSize:4})},initialize:function($super,args){$super(args)},render:function(args){args=args||{};var graph=this.graph;var series=args.series||graph.series;var vis=args.vis||graph.vis;var dotSize=this.dotSize;vis.selectAll(&quot;*&quot;).remove();series.forEach(function(series){if(series.disabled)return;var nodes=vis.selectAll(&quot;path&quot;).data(series.stack.filter(function(d){return d.y!==null})).enter().append(&quot;svg:circle&quot;).attr(&quot;cx&quot;,function(d){return graph.x(d.x)}).attr(&quot;cy&quot;,function(d){return graph.y(d.y)}).attr(&quot;r&quot;,function(d){return&quot;r&quot;in d?d.r:dotSize});Array.prototype.forEach.call(nodes[0],function(n){n.setAttribute(&quot;fill&quot;,series.color)})},this)}});Rickshaw.namespace(&quot;Rickshaw.Graph.Renderer.Multi&quot;);Rickshaw.Graph.Renderer.Multi=Rickshaw.Class.create(Rickshaw.Graph.Renderer,{name:&quot;multi&quot;,initialize:function($super,args){$super(args)},defaults:function($super){return Rickshaw.extend($super(),{unstack:true,fill:false,stroke:true})},domain:function($super){this.graph.stackData();var domains=[];var groups=this._groups();this._stack(groups);groups.forEach(function(group){var data=group.series.filter(function(s){return!s.disabled}).map(function(s){return s.stack});if(!data.length)return;var domain=$super(data);domains.push(domain)});var xMin=d3.min(domains.map(function(d){return d.x[0]}));var xMax=d3.max(domains.map(function(d){return d.x[1]}));var yMin=d3.min(domains.map(function(d){return d.y[0]}));var yMax=d3.max(domains.map(function(d){return d.y[1]}));return{x:[xMin,xMax],y:[yMin,yMax]}},_groups:function(){var graph=this.graph;var renderGroups={};graph.series.forEach(function(series){if(series.disabled)return;if(!renderGroups[series.renderer]){var ns=&quot;http://www.w3.org/2000/svg&quot;;var vis=document.createElementNS(ns,&quot;g&quot;);graph.vis[0][0].appendChild(vis);var renderer=graph._renderers[series.renderer];renderGroups[series.renderer]={renderer:renderer,series:[],vis:d3.select(vis)}}renderGroups[series.renderer].series.push(series)},this);var groups=[];Object.keys(renderGroups).forEach(function(key){var group=renderGroups[key];groups.push(group)});return groups},_stack:function(groups){groups.forEach(function(group){var series=group.series.filter(function(series){return!series.disabled});var data=series.map(function(series){return series.stack});if(!group.renderer.unstack){var layout=d3.layout.stack();var stackedData=Rickshaw.clone(layout(data));series.forEach(function(series,index){series._stack=Rickshaw.clone(stackedData[index])})}},this);return groups},render:function(){this.graph.series.forEach(function(series){if(!series.renderer){throw new Error(&quot;Each series needs a renderer for graph &#39;multi&#39; renderer&quot;)}});this.graph.vis.selectAll(&quot;*&quot;).remove();var groups=this._groups();groups=this._stack(groups);groups.forEach(function(group){var series=group.series.filter(function(series){return!series.disabled});group.renderer.render({series:series,vis:group.vis});series.forEach(function(s){s.stack=s._stack||s.stack||s.data})})}});Rickshaw.namespace(&quot;Rickshaw.Graph.Renderer.LinePlot&quot;);Rickshaw.Graph.Renderer.LinePlot=Rickshaw.Class.create(Rickshaw.Graph.Renderer,{name:&quot;lineplot&quot;,defaults:function($super){return Rickshaw.extend($super(),{unstack:true,fill:false,stroke:true,padding:{top:.01,right:.01,bottom:.01,left:.01},dotSize:3,strokeWidth:2})},initialize:function($super,args){$super(args)},seriesPathFactory:function(){var graph=this.graph;var factory=d3.svg.line().x(function(d){return graph.x(d.x)}).y(function(d){return graph.y(d.y)}).interpolate(this.graph.interpolation).tension(this.tension);factory.defined&amp;&amp;factory.defined(function(d){return d.y!==null});return factory},_renderDots:function(){var graph=this.graph;graph.series.forEach(function(series){if(series.disabled)return;var nodes=graph.vis.selectAll(&quot;x&quot;).data(series.stack.filter(function(d){return d.y!==null})).enter().append(&quot;svg:circle&quot;).attr(&quot;cx&quot;,function(d){return graph.x(d.x)}).attr(&quot;cy&quot;,function(d){return graph.y(d.y)}).attr(&quot;r&quot;,function(d){return&quot;r&quot;in d?d.r:graph.renderer.dotSize});Array.prototype.forEach.call(nodes[0],function(n){if(!n)return;n.setAttribute(&quot;data-color&quot;,series.color);n.setAttribute(&quot;fill&quot;,&quot;white&quot;);n.setAttribute(&quot;stroke&quot;,series.color);n.setAttribute(&quot;stroke-width&quot;,this.strokeWidth)}.bind(this))},this)},_renderLines:function(){var graph=this.graph;var nodes=graph.vis.selectAll(&quot;path&quot;).data(this.graph.stackedData).enter().append(&quot;svg:path&quot;).attr(&quot;d&quot;,this.seriesPathFactory());var i=0;graph.series.forEach(function(series){if(series.disabled)return;series.path=nodes[0][i++];this._styleSeries(series)},this)},render:function(){var graph=this.graph;graph.vis.selectAll(&quot;*&quot;).remove();this._renderLines();this._renderDots()}});Rickshaw.namespace(&quot;Rickshaw.Graph.Smoother&quot;);Rickshaw.Graph.Smoother=Rickshaw.Class.create({initialize:function(args){this.graph=args.graph;this.element=args.element;this.aggregationScale=1;this.build();this.graph.stackData.hooks.data.push({name:&quot;smoother&quot;,orderPosition:50,f:this.transformer.bind(this)})},build:function(){var self=this;if(this.element){$(function(){$(self.element).slider({min:1,max:100,slide:function(event,ui){self.setScale(ui.value);self.graph.update()}})})}},setScale:function(scale){if(scale&lt;1){throw&quot;scale out of range: &quot;+scale}this.aggregationScale=scale;this.graph.update()},transformer:function(data){if(this.aggregationScale==1)return data;var aggregatedData=[];data.forEach(function(seriesData){var aggregatedSeriesData=[];while(seriesData.length){var avgX=0,avgY=0;var slice=seriesData.splice(0,this.aggregationScale);slice.forEach(function(d){avgX+=d.x/slice.length;avgY+=d.y/slice.length});aggregatedSeriesData.push({x:avgX,y:avgY})}aggregatedData.push(aggregatedSeriesData)}.bind(this));return aggregatedData}});Rickshaw.namespace(&quot;Rickshaw.Graph.Unstacker&quot;);Rickshaw.Graph.Unstacker=function(args){this.graph=args.graph;var self=this;this.graph.stackData.hooks.after.push({name:&quot;unstacker&quot;,f:function(data){if(!self.graph.renderer.unstack)return data;data.forEach(function(seriesData){seriesData.forEach(function(d){d.y0=0})});return data}})};Rickshaw.namespace(&quot;Rickshaw.Series&quot;);Rickshaw.Series=Rickshaw.Class.create(Array,{initialize:function(data,palette,options){options=options||{};this.palette=new Rickshaw.Color.Palette(palette);this.timeBase=typeof options.timeBase===&quot;undefined&quot;?Math.floor((new Date).getTime()/1e3):options.timeBase;var timeInterval=typeof options.timeInterval==&quot;undefined&quot;?1e3:options.timeInterval;this.setTimeInterval(timeInterval);if(data&amp;&amp;typeof data==&quot;object&quot;&amp;&amp;Array.isArray(data)){data.forEach(function(item){this.addItem(item)},this)}},addItem:function(item){if(typeof item.name===&quot;undefined&quot;){throw&quot;addItem() needs a name&quot;}item.color=item.color||this.palette.color(item.name);item.data=item.data||[];if(item.data.length===0&amp;&amp;this.length&amp;&amp;this.getIndex()&gt;0){this[0].data.forEach(function(plot){item.data.push({x:plot.x,y:0})})}else if(item.data.length===0){item.data.push({x:this.timeBase-(this.timeInterval||0),y:0})}this.push(item);if(this.legend){this.legend.addLine(this.itemByName(item.name))}},addData:function(data,x){var index=this.getIndex();Rickshaw.keys(data).forEach(function(name){if(!this.itemByName(name)){this.addItem({name:name})}},this);this.forEach(function(item){item.data.push({x:x||(index*this.timeInterval||1)+this.timeBase,y:data[item.name]||0})},this)},getIndex:function(){return this[0]&amp;&amp;this[0].data&amp;&amp;this[0].data.length?this[0].data.length:0},itemByName:function(name){for(var i=0;i&lt;this.length;i++){if(this[i].name==name)return this[i]}},setTimeInterval:function(iv){this.timeInterval=iv/1e3},setTimeBase:function(t){this.timeBase=t},dump:function(){var data={timeBase:this.timeBase,timeInterval:this.timeInterval,items:[]};this.forEach(function(item){var newItem={color:item.color,name:item.name,data:[]};item.data.forEach(function(plot){newItem.data.push({x:plot.x,y:plot.y})});data.items.push(newItem)});return data},load:function(data){if(data.timeInterval){this.timeInterval=data.timeInterval}if(data.timeBase){this.timeBase=data.timeBase}if(data.items){data.items.forEach(function(item){this.push(item);if(this.legend){this.legend.addLine(this.itemByName(item.name))}},this)}}});Rickshaw.Series.zeroFill=function(series){Rickshaw.Series.fill(series,0)};Rickshaw.Series.fill=function(series,fill){var x;var i=0;var data=series.map(function(s){return s.data});while(i&lt;Math.max.apply(null,data.map(function(d){return d.length}))){x=Math.min.apply(null,data.filter(function(d){return d[i]}).map(function(d){return d[i].x}));data.forEach(function(d){if(!d[i]||d[i].x!=x){d.splice(i,0,{x:x,y:fill})}});i++}};Rickshaw.namespace(&quot;Rickshaw.Series.FixedDuration&quot;);Rickshaw.Series.FixedDuration=Rickshaw.Class.create(Rickshaw.Series,{initialize:function(data,palette,options){options=options||{};if(typeof options.timeInterval===&quot;undefined&quot;){throw new Error(&quot;FixedDuration series requires timeInterval&quot;)}if(typeof options.maxDataPoints===&quot;undefined&quot;){throw new Error(&quot;FixedDuration series requires maxDataPoints&quot;)}this.palette=new Rickshaw.Color.Palette(palette);this.timeBase=typeof options.timeBase===&quot;undefined&quot;?Math.floor((new Date).getTime()/1e3):options.timeBase;this.setTimeInterval(options.timeInterval);if(this[0]&amp;&amp;this[0].data&amp;&amp;this[0].data.length){this.currentSize=this[0].data.length;this.currentIndex=this[0].data.length}else{this.currentSize=0;this.currentIndex=0}this.maxDataPoints=options.maxDataPoints;if(data&amp;&amp;typeof data==&quot;object&quot;&amp;&amp;Array.isArray(data)){data.forEach(function(item){this.addItem(item)},this);this.currentSize+=1;this.currentIndex+=1}this.timeBase-=(this.maxDataPoints-this.currentSize)*this.timeInterval;if(typeof this.maxDataPoints!==&quot;undefined&quot;&amp;&amp;this.currentSize&lt;this.maxDataPoints){for(var i=this.maxDataPoints-this.currentSize-1;i&gt;1;i--){this.currentSize+=1;this.currentIndex+=1;this.forEach(function(item){item.data.unshift({x:((i-1)*this.timeInterval||1)+this.timeBase,y:0,i:i})},this)}}},addData:function($super,data,x){$super(data,x);this.currentSize+=1;this.currentIndex+=1;if(this.maxDataPoints!==undefined){while(this.currentSize&gt;this.maxDataPoints){this.dropData()}}},dropData:function(){this.forEach(function(item){item.data.splice(0,1)});this.currentSize-=1},getIndex:function(){return this.currentIndex}});</div><div class='line' id='LC18970'>(function() {</div><div class='line' id='LC18971'>&nbsp;&nbsp;var _ref,</div><div class='line' id='LC18972'>&nbsp;&nbsp;&nbsp;&nbsp;__bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },</div><div class='line' id='LC18973'>&nbsp;&nbsp;&nbsp;&nbsp;__hasProp = {}.hasOwnProperty,</div><div class='line' id='LC18974'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };</div><div class='line' id='LC18975'><br/></div><div class='line' id='LC18976'>&nbsp;&nbsp;Dashing.Clock = (function(_super) {</div><div class='line' id='LC18977'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(Clock, _super);</div><div class='line' id='LC18978'><br/></div><div class='line' id='LC18979'>&nbsp;&nbsp;&nbsp;&nbsp;function Clock() {</div><div class='line' id='LC18980'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.startTime = __bind(this.startTime, this);</div><div class='line' id='LC18981'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = Clock.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC18982'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _ref;</div><div class='line' id='LC18983'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC18984'><br/></div><div class='line' id='LC18985'>&nbsp;&nbsp;&nbsp;&nbsp;Clock.prototype.ready = function() {</div><div class='line' id='LC18986'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return setInterval(this.startTime, 500);</div><div class='line' id='LC18987'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC18988'><br/></div><div class='line' id='LC18989'>&nbsp;&nbsp;&nbsp;&nbsp;Clock.prototype.startTime = function() {</div><div class='line' id='LC18990'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var h, m, s, today;</div><div class='line' id='LC18991'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;today = new Date();</div><div class='line' id='LC18992'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;h = today.getHours();</div><div class='line' id='LC18993'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m = today.getMinutes();</div><div class='line' id='LC18994'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s = today.getSeconds();</div><div class='line' id='LC18995'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m = this.formatTime(m);</div><div class='line' id='LC18996'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s = this.formatTime(s);</div><div class='line' id='LC18997'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.set(&#39;time&#39;, h + &quot;:&quot; + m + &quot;:&quot; + s);</div><div class='line' id='LC18998'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.set(&#39;date&#39;, today.toDateString());</div><div class='line' id='LC18999'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC19000'><br/></div><div class='line' id='LC19001'>&nbsp;&nbsp;&nbsp;&nbsp;Clock.prototype.formatTime = function(i) {</div><div class='line' id='LC19002'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (i &lt; 10) {</div><div class='line' id='LC19003'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;0&quot; + i;</div><div class='line' id='LC19004'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC19005'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return i;</div><div class='line' id='LC19006'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19007'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC19008'><br/></div><div class='line' id='LC19009'>&nbsp;&nbsp;&nbsp;&nbsp;return Clock;</div><div class='line' id='LC19010'><br/></div><div class='line' id='LC19011'>&nbsp;&nbsp;})(Dashing.Widget);</div><div class='line' id='LC19012'><br/></div><div class='line' id='LC19013'>}).call(this);</div><div class='line' id='LC19014'>(function() {</div><div class='line' id='LC19015'>&nbsp;&nbsp;var _ref,</div><div class='line' id='LC19016'>&nbsp;&nbsp;&nbsp;&nbsp;__bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },</div><div class='line' id='LC19017'>&nbsp;&nbsp;&nbsp;&nbsp;__hasProp = {}.hasOwnProperty,</div><div class='line' id='LC19018'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };</div><div class='line' id='LC19019'><br/></div><div class='line' id='LC19020'>&nbsp;&nbsp;Dashing.Comments = (function(_super) {</div><div class='line' id='LC19021'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(Comments, _super);</div><div class='line' id='LC19022'><br/></div><div class='line' id='LC19023'>&nbsp;&nbsp;&nbsp;&nbsp;function Comments() {</div><div class='line' id='LC19024'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.nextComment = __bind(this.nextComment, this);</div><div class='line' id='LC19025'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = Comments.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC19026'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _ref;</div><div class='line' id='LC19027'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19028'><br/></div><div class='line' id='LC19029'>&nbsp;&nbsp;&nbsp;&nbsp;Comments.accessor(&#39;quote&#39;, function() {</div><div class='line' id='LC19030'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _ref1;</div><div class='line' id='LC19031'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;â€œ&quot; + ((_ref1 = this.get(&#39;current_comment&#39;)) != null ? _ref1.body : void 0) + &quot;â€&quot;;</div><div class='line' id='LC19032'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19033'><br/></div><div class='line' id='LC19034'>&nbsp;&nbsp;&nbsp;&nbsp;Comments.prototype.ready = function() {</div><div class='line' id='LC19035'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.currentIndex = 0;</div><div class='line' id='LC19036'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.commentElem = $(this.node).find(&#39;.comment-container&#39;);</div><div class='line' id='LC19037'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.nextComment();</div><div class='line' id='LC19038'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.startCarousel();</div><div class='line' id='LC19039'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC19040'><br/></div><div class='line' id='LC19041'>&nbsp;&nbsp;&nbsp;&nbsp;Comments.prototype.onData = function(data) {</div><div class='line' id='LC19042'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.currentIndex = 0;</div><div class='line' id='LC19043'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC19044'><br/></div><div class='line' id='LC19045'>&nbsp;&nbsp;&nbsp;&nbsp;Comments.prototype.startCarousel = function() {</div><div class='line' id='LC19046'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return setInterval(this.nextComment, 8000);</div><div class='line' id='LC19047'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC19048'><br/></div><div class='line' id='LC19049'>&nbsp;&nbsp;&nbsp;&nbsp;Comments.prototype.nextComment = function() {</div><div class='line' id='LC19050'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var comments,</div><div class='line' id='LC19051'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this = this;</div><div class='line' id='LC19052'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comments = this.get(&#39;comments&#39;);</div><div class='line' id='LC19053'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (comments) {</div><div class='line' id='LC19054'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.commentElem.fadeOut(function() {</div><div class='line' id='LC19055'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.currentIndex = (_this.currentIndex + 1) % comments.length;</div><div class='line' id='LC19056'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_this.set(&#39;current_comment&#39;, comments[_this.currentIndex]);</div><div class='line' id='LC19057'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _this.commentElem.fadeIn();</div><div class='line' id='LC19058'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19059'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19060'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC19061'><br/></div><div class='line' id='LC19062'>&nbsp;&nbsp;&nbsp;&nbsp;return Comments;</div><div class='line' id='LC19063'><br/></div><div class='line' id='LC19064'>&nbsp;&nbsp;})(Dashing.Widget);</div><div class='line' id='LC19065'><br/></div><div class='line' id='LC19066'>}).call(this);</div><div class='line' id='LC19067'>(function() {</div><div class='line' id='LC19068'>&nbsp;&nbsp;var _ref,</div><div class='line' id='LC19069'>&nbsp;&nbsp;&nbsp;&nbsp;__hasProp = {}.hasOwnProperty,</div><div class='line' id='LC19070'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };</div><div class='line' id='LC19071'><br/></div><div class='line' id='LC19072'>&nbsp;&nbsp;Dashing.Graph = (function(_super) {</div><div class='line' id='LC19073'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(Graph, _super);</div><div class='line' id='LC19074'><br/></div><div class='line' id='LC19075'>&nbsp;&nbsp;&nbsp;&nbsp;function Graph() {</div><div class='line' id='LC19076'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = Graph.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC19077'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _ref;</div><div class='line' id='LC19078'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19079'><br/></div><div class='line' id='LC19080'>&nbsp;&nbsp;&nbsp;&nbsp;Graph.accessor(&#39;current&#39;, function() {</div><div class='line' id='LC19081'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var points;</div><div class='line' id='LC19082'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.get(&#39;displayedValue&#39;)) {</div><div class='line' id='LC19083'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.get(&#39;displayedValue&#39;);</div><div class='line' id='LC19084'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19085'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;points = this.get(&#39;points&#39;);</div><div class='line' id='LC19086'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (points) {</div><div class='line' id='LC19087'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return points[points.length - 1].y;</div><div class='line' id='LC19088'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19089'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19090'><br/></div><div class='line' id='LC19091'>&nbsp;&nbsp;&nbsp;&nbsp;Graph.prototype.ready = function() {</div><div class='line' id='LC19092'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var container, height, width, x_axis, y_axis;</div><div class='line' id='LC19093'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;container = $(this.node).parent();</div><div class='line' id='LC19094'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;width = (Dashing.widget_base_dimensions[0] * container.data(&quot;sizex&quot;)) + Dashing.widget_margins[0] * 2 * (container.data(&quot;sizex&quot;) - 1);</div><div class='line' id='LC19095'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;height = Dashing.widget_base_dimensions[1] * container.data(&quot;sizey&quot;);</div><div class='line' id='LC19096'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.graph = new Rickshaw.Graph({</div><div class='line' id='LC19097'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;element: this.node,</div><div class='line' id='LC19098'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;width: width,</div><div class='line' id='LC19099'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;height: height,</div><div class='line' id='LC19100'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;renderer: this.get(&quot;graphtype&quot;),</div><div class='line' id='LC19101'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;series: [</div><div class='line' id='LC19102'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</div><div class='line' id='LC19103'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color: &quot;#fff&quot;,</div><div class='line' id='LC19104'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data: [</div><div class='line' id='LC19105'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</div><div class='line' id='LC19106'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x: 0,</div><div class='line' id='LC19107'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y: 0</div><div class='line' id='LC19108'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19109'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]</div><div class='line' id='LC19110'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19111'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]</div><div class='line' id='LC19112'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19113'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.get(&#39;points&#39;)) {</div><div class='line' id='LC19114'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.graph.series[0].data = this.get(&#39;points&#39;);</div><div class='line' id='LC19115'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19116'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x_axis = new Rickshaw.Graph.Axis.Time({</div><div class='line' id='LC19117'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;graph: this.graph</div><div class='line' id='LC19118'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19119'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y_axis = new Rickshaw.Graph.Axis.Y({</div><div class='line' id='LC19120'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;graph: this.graph,</div><div class='line' id='LC19121'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tickFormat: Rickshaw.Fixtures.Number.formatKMBT</div><div class='line' id='LC19122'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19123'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.graph.render();</div><div class='line' id='LC19124'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC19125'><br/></div><div class='line' id='LC19126'>&nbsp;&nbsp;&nbsp;&nbsp;Graph.prototype.onData = function(data) {</div><div class='line' id='LC19127'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.graph) {</div><div class='line' id='LC19128'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.graph.series[0].data = data.points;</div><div class='line' id='LC19129'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return this.graph.render();</div><div class='line' id='LC19130'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19131'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC19132'><br/></div><div class='line' id='LC19133'>&nbsp;&nbsp;&nbsp;&nbsp;return Graph;</div><div class='line' id='LC19134'><br/></div><div class='line' id='LC19135'>&nbsp;&nbsp;})(Dashing.Widget);</div><div class='line' id='LC19136'><br/></div><div class='line' id='LC19137'>}).call(this);</div><div class='line' id='LC19138'>(function() {</div><div class='line' id='LC19139'>&nbsp;&nbsp;var _ref,</div><div class='line' id='LC19140'>&nbsp;&nbsp;&nbsp;&nbsp;__hasProp = {}.hasOwnProperty,</div><div class='line' id='LC19141'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };</div><div class='line' id='LC19142'><br/></div><div class='line' id='LC19143'>&nbsp;&nbsp;Dashing.Iframe = (function(_super) {</div><div class='line' id='LC19144'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(Iframe, _super);</div><div class='line' id='LC19145'><br/></div><div class='line' id='LC19146'>&nbsp;&nbsp;&nbsp;&nbsp;function Iframe() {</div><div class='line' id='LC19147'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = Iframe.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC19148'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _ref;</div><div class='line' id='LC19149'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19150'><br/></div><div class='line' id='LC19151'>&nbsp;&nbsp;&nbsp;&nbsp;Iframe.prototype.ready = function() {};</div><div class='line' id='LC19152'><br/></div><div class='line' id='LC19153'>&nbsp;&nbsp;&nbsp;&nbsp;Iframe.prototype.onData = function(data) {};</div><div class='line' id='LC19154'><br/></div><div class='line' id='LC19155'>&nbsp;&nbsp;&nbsp;&nbsp;return Iframe;</div><div class='line' id='LC19156'><br/></div><div class='line' id='LC19157'>&nbsp;&nbsp;})(Dashing.Widget);</div><div class='line' id='LC19158'><br/></div><div class='line' id='LC19159'>}).call(this);</div><div class='line' id='LC19160'>(function() {</div><div class='line' id='LC19161'>&nbsp;&nbsp;var _ref,</div><div class='line' id='LC19162'>&nbsp;&nbsp;&nbsp;&nbsp;__hasProp = {}.hasOwnProperty,</div><div class='line' id='LC19163'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };</div><div class='line' id='LC19164'><br/></div><div class='line' id='LC19165'>&nbsp;&nbsp;Dashing.Image = (function(_super) {</div><div class='line' id='LC19166'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(Image, _super);</div><div class='line' id='LC19167'><br/></div><div class='line' id='LC19168'>&nbsp;&nbsp;&nbsp;&nbsp;function Image() {</div><div class='line' id='LC19169'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = Image.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC19170'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _ref;</div><div class='line' id='LC19171'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19172'><br/></div><div class='line' id='LC19173'>&nbsp;&nbsp;&nbsp;&nbsp;Image.prototype.ready = function() {};</div><div class='line' id='LC19174'><br/></div><div class='line' id='LC19175'>&nbsp;&nbsp;&nbsp;&nbsp;Image.prototype.onData = function(data) {};</div><div class='line' id='LC19176'><br/></div><div class='line' id='LC19177'>&nbsp;&nbsp;&nbsp;&nbsp;return Image;</div><div class='line' id='LC19178'><br/></div><div class='line' id='LC19179'>&nbsp;&nbsp;})(Dashing.Widget);</div><div class='line' id='LC19180'><br/></div><div class='line' id='LC19181'>}).call(this);</div><div class='line' id='LC19182'>(function() {</div><div class='line' id='LC19183'>&nbsp;&nbsp;var _ref,</div><div class='line' id='LC19184'>&nbsp;&nbsp;&nbsp;&nbsp;__hasProp = {}.hasOwnProperty,</div><div class='line' id='LC19185'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };</div><div class='line' id='LC19186'><br/></div><div class='line' id='LC19187'>&nbsp;&nbsp;Dashing.List = (function(_super) {</div><div class='line' id='LC19188'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(List, _super);</div><div class='line' id='LC19189'><br/></div><div class='line' id='LC19190'>&nbsp;&nbsp;&nbsp;&nbsp;function List() {</div><div class='line' id='LC19191'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = List.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC19192'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _ref;</div><div class='line' id='LC19193'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19194'><br/></div><div class='line' id='LC19195'>&nbsp;&nbsp;&nbsp;&nbsp;List.prototype.ready = function() {</div><div class='line' id='LC19196'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.get(&#39;unordered&#39;)) {</div><div class='line' id='LC19197'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $(this.node).find(&#39;ol&#39;).remove();</div><div class='line' id='LC19198'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC19199'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $(this.node).find(&#39;ul&#39;).remove();</div><div class='line' id='LC19200'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19201'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC19202'><br/></div><div class='line' id='LC19203'>&nbsp;&nbsp;&nbsp;&nbsp;return List;</div><div class='line' id='LC19204'><br/></div><div class='line' id='LC19205'>&nbsp;&nbsp;})(Dashing.Widget);</div><div class='line' id='LC19206'><br/></div><div class='line' id='LC19207'>}).call(this);</div><div class='line' id='LC19208'>(function() {</div><div class='line' id='LC19209'>&nbsp;&nbsp;var __hasProp = {}.hasOwnProperty,</div><div class='line' id='LC19210'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };</div><div class='line' id='LC19211'><br/></div><div class='line' id='LC19212'>&nbsp;&nbsp;Dashing.Meter = (function(_super) {</div><div class='line' id='LC19213'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(Meter, _super);</div><div class='line' id='LC19214'><br/></div><div class='line' id='LC19215'>&nbsp;&nbsp;&nbsp;&nbsp;Meter.accessor(&#39;value&#39;, Dashing.AnimatedValue);</div><div class='line' id='LC19216'><br/></div><div class='line' id='LC19217'>&nbsp;&nbsp;&nbsp;&nbsp;function Meter() {</div><div class='line' id='LC19218'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Meter.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC19219'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.observe(&#39;value&#39;, function(value) {</div><div class='line' id='LC19220'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $(this.node).find(&quot;.meter&quot;).val(value).trigger(&#39;change&#39;);</div><div class='line' id='LC19221'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19222'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19223'><br/></div><div class='line' id='LC19224'>&nbsp;&nbsp;&nbsp;&nbsp;Meter.prototype.ready = function() {</div><div class='line' id='LC19225'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var meter;</div><div class='line' id='LC19226'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;meter = $(this.node).find(&quot;.meter&quot;);</div><div class='line' id='LC19227'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;meter.attr(&quot;data-bgcolor&quot;, meter.css(&quot;background-color&quot;));</div><div class='line' id='LC19228'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;meter.attr(&quot;data-fgcolor&quot;, meter.css(&quot;color&quot;));</div><div class='line' id='LC19229'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return meter.knob();</div><div class='line' id='LC19230'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC19231'><br/></div><div class='line' id='LC19232'>&nbsp;&nbsp;&nbsp;&nbsp;return Meter;</div><div class='line' id='LC19233'><br/></div><div class='line' id='LC19234'>&nbsp;&nbsp;})(Dashing.Widget);</div><div class='line' id='LC19235'><br/></div><div class='line' id='LC19236'>}).call(this);</div><div class='line' id='LC19237'>(function() {</div><div class='line' id='LC19238'>&nbsp;&nbsp;var _ref,</div><div class='line' id='LC19239'>&nbsp;&nbsp;&nbsp;&nbsp;__hasProp = {}.hasOwnProperty,</div><div class='line' id='LC19240'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };</div><div class='line' id='LC19241'><br/></div><div class='line' id='LC19242'>&nbsp;&nbsp;Dashing.Number = (function(_super) {</div><div class='line' id='LC19243'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(Number, _super);</div><div class='line' id='LC19244'><br/></div><div class='line' id='LC19245'>&nbsp;&nbsp;&nbsp;&nbsp;function Number() {</div><div class='line' id='LC19246'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = Number.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC19247'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _ref;</div><div class='line' id='LC19248'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19249'><br/></div><div class='line' id='LC19250'>&nbsp;&nbsp;&nbsp;&nbsp;Number.accessor(&#39;current&#39;, Dashing.AnimatedValue);</div><div class='line' id='LC19251'><br/></div><div class='line' id='LC19252'>&nbsp;&nbsp;&nbsp;&nbsp;Number.accessor(&#39;difference&#39;, function() {</div><div class='line' id='LC19253'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var current, diff, last;</div><div class='line' id='LC19254'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.get(&#39;last&#39;)) {</div><div class='line' id='LC19255'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;last = parseInt(this.get(&#39;last&#39;));</div><div class='line' id='LC19256'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;current = parseInt(this.get(&#39;current&#39;));</div><div class='line' id='LC19257'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (last !== 0) {</div><div class='line' id='LC19258'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;diff = Math.abs(Math.round((current - last) / last * 100));</div><div class='line' id='LC19259'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;&quot; + diff + &quot;%&quot;;</div><div class='line' id='LC19260'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19261'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC19262'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;&quot;;</div><div class='line' id='LC19263'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19264'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19265'><br/></div><div class='line' id='LC19266'>&nbsp;&nbsp;&nbsp;&nbsp;Number.accessor(&#39;arrow&#39;, function() {</div><div class='line' id='LC19267'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.get(&#39;last&#39;)) {</div><div class='line' id='LC19268'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (parseInt(this.get(&#39;current&#39;)) &gt; parseInt(this.get(&#39;last&#39;))) {</div><div class='line' id='LC19269'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &#39;icon-arrow-up&#39;;</div><div class='line' id='LC19270'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</div><div class='line' id='LC19271'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &#39;icon-arrow-down&#39;;</div><div class='line' id='LC19272'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19273'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19274'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19275'><br/></div><div class='line' id='LC19276'>&nbsp;&nbsp;&nbsp;&nbsp;Number.prototype.onData = function(data) {</div><div class='line' id='LC19277'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (data.status) {</div><div class='line' id='LC19278'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(this.get(&#39;node&#39;)).attr(&#39;class&#39;, function(i, c) {</div><div class='line' id='LC19279'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return c.replace(/\bstatus-\S+/g, &#39;&#39;);</div><div class='line' id='LC19280'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19281'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $(this.get(&#39;node&#39;)).addClass(&quot;status-&quot; + data.status);</div><div class='line' id='LC19282'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19283'>&nbsp;&nbsp;&nbsp;&nbsp;};</div><div class='line' id='LC19284'><br/></div><div class='line' id='LC19285'>&nbsp;&nbsp;&nbsp;&nbsp;return Number;</div><div class='line' id='LC19286'><br/></div><div class='line' id='LC19287'>&nbsp;&nbsp;})(Dashing.Widget);</div><div class='line' id='LC19288'><br/></div><div class='line' id='LC19289'>}).call(this);</div><div class='line' id='LC19290'>(function() {</div><div class='line' id='LC19291'>&nbsp;&nbsp;var _ref,</div><div class='line' id='LC19292'>&nbsp;&nbsp;&nbsp;&nbsp;__hasProp = {}.hasOwnProperty,</div><div class='line' id='LC19293'>&nbsp;&nbsp;&nbsp;&nbsp;__extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };</div><div class='line' id='LC19294'><br/></div><div class='line' id='LC19295'>&nbsp;&nbsp;Dashing.Text = (function(_super) {</div><div class='line' id='LC19296'>&nbsp;&nbsp;&nbsp;&nbsp;__extends(Text, _super);</div><div class='line' id='LC19297'><br/></div><div class='line' id='LC19298'>&nbsp;&nbsp;&nbsp;&nbsp;function Text() {</div><div class='line' id='LC19299'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ref = Text.__super__.constructor.apply(this, arguments);</div><div class='line' id='LC19300'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return _ref;</div><div class='line' id='LC19301'>&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19302'><br/></div><div class='line' id='LC19303'>&nbsp;&nbsp;&nbsp;&nbsp;return Text;</div><div class='line' id='LC19304'><br/></div><div class='line' id='LC19305'>&nbsp;&nbsp;})(Dashing.Widget);</div><div class='line' id='LC19306'><br/></div><div class='line' id='LC19307'>}).call(this);</div><div class='line' id='LC19308'>(function() {</div><div class='line' id='LC19309'>&nbsp;&nbsp;console.log(&quot;Yeah! The dashboard has started!&quot;);</div><div class='line' id='LC19310'><br/></div><div class='line' id='LC19311'>&nbsp;&nbsp;Dashing.on(&#39;ready&#39;, function() {</div><div class='line' id='LC19312'>&nbsp;&nbsp;&nbsp;&nbsp;var contentWidth;</div><div class='line' id='LC19313'>&nbsp;&nbsp;&nbsp;&nbsp;Dashing.widget_margins || (Dashing.widget_margins = [5, 5]);</div><div class='line' id='LC19314'>&nbsp;&nbsp;&nbsp;&nbsp;Dashing.widget_base_dimensions || (Dashing.widget_base_dimensions = [300, 360]);</div><div class='line' id='LC19315'>&nbsp;&nbsp;&nbsp;&nbsp;Dashing.numColumns || (Dashing.numColumns = 4);</div><div class='line' id='LC19316'>&nbsp;&nbsp;&nbsp;&nbsp;contentWidth = (Dashing.widget_base_dimensions[0] + Dashing.widget_margins[0] * 2) * Dashing.numColumns;</div><div class='line' id='LC19317'>&nbsp;&nbsp;&nbsp;&nbsp;return Batman.setImmediate(function() {</div><div class='line' id='LC19318'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(&#39;.gridster&#39;).width(contentWidth);</div><div class='line' id='LC19319'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $(&#39;.gridster ul:first&#39;).gridster({</div><div class='line' id='LC19320'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;widget_margins: Dashing.widget_margins,</div><div class='line' id='LC19321'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;widget_base_dimensions: Dashing.widget_base_dimensions,</div><div class='line' id='LC19322'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;avoid_overlapped_widgets: !Dashing.customGridsterLayout,</div><div class='line' id='LC19323'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;draggable: {</div><div class='line' id='LC19324'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop: Dashing.showGridsterInstructions,</div><div class='line' id='LC19325'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start: function() {</div><div class='line' id='LC19326'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return Dashing.currentWidgetPositions = Dashing.getWidgetPositions();</div><div class='line' id='LC19327'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19328'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div class='line' id='LC19329'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19330'>&nbsp;&nbsp;&nbsp;&nbsp;});</div><div class='line' id='LC19331'>&nbsp;&nbsp;});</div><div class='line' id='LC19332'><br/></div><div class='line' id='LC19333'>}).call(this);</div></pre></div></td>
          </tr>
        </table>
  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.08176s from github-fe119-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-remove-close close js-ajax-error-dismiss"></a>
      Something went wrong with that request. Please try again.
    </div>

  </body>
</html>

