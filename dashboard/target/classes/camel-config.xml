<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor 
	license agreements. See the NOTICE file distributed with this work for additional 
	information regarding copyright ownership. The ASF licenses this file to 
	You under the Apache License, Version 2.0 (the "License"); you may not use 
	this file except in compliance with the License. You may obtain a copy of 
	the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->

<!-- START SNIPPET: e1 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/spring"
	xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<camelContext xmlns="http://camel.apache.org/schema/spring">

		<route id="helloRoute">
			<!-- incoming requests from the servlet is routed -->
			<from uri="servlet:///hello" />
			<choice>
				<when>
					<!-- is there a header with the key name? -->
					<header>name</header>
					<!-- yes so return back a message to the user -->
					<transform>
						<simple>Hello ${header.name} how are you?</simple>
					</transform>
				</when>
				<otherwise>
					<!-- if no name parameter then output a syntax to the user -->
					<transform>
						<constant>Add a name parameter to uri, eg ?name=foo</constant>
					</transform>
				</otherwise>
			</choice>
		</route>

		<!-- URIs for demo. Later these are to be parameterized. Hit the browser with from URI without the word jetty:  -->
		<route>
			<from uri="jetty:http://localhost:8085/mdb/api/project/worse/10" />
			<process ref="jsonOutCreator" />
			<to
				uri="http://localhost:9000/api/resources?metrics=coverage&amp;limit=10" />
		</route>
		<route>
			<from uri="jetty:http://localhost:8085/mdb/api/project/worse/5" />
			<process ref="jsonOutCreator" />
			<to
				uri="http://localhost:9000/api/resources?metrics=coverage&amp;limit=5" />
		</route>
		<route>
			<from uri="jetty:http://localhost:8085/mdb/api/project/worse/1" />
			<process ref="jsonOutCreator" />
			<to
				uri="http://localhost:9000/api/resources?metrics=coverage&amp;limit=1" />
		</route>
		
		<!-- TODO: avg is yet TO BE implemented. -->
		<route>
			<from uri="jetty:http://localhost:8085/mdb/api/project/avg" />
			<process ref="jsonOutCreator" />
			<to
				uri="http://localhost:9000/api/resources?metrics=coverage&amp;limit=1&amp;bridgeEndpoint=true&amp;throwExceptionOnFailure=false" />
		</route>
		
		<!-- writes XML as output -->
<!-- 		<route>
			<from uri="jetty:http://localhost:8080/mdb/api/project/worse/10" />
			<to
				uri="http://localhost:9000/api/resources?metrics=coverage&amp;limit=10&amp;bridgeEndpoint=true&amp;throwExceptionOnFailure=false" />
		</route>
		<route>
			<from uri="jetty:http://localhost:8080/mdb/api/project/worse/5" />
			<to
				uri="http://localhost:9000/api/resources?metrics=coverage&amp;limit=5&amp;bridgeEndpoint=true&amp;throwExceptionOnFailure=false" />
		</route>
		<route>
			<from uri="jetty:http://localhost:8080/mdb/api/project/worse/1" />
			<to
				uri="http://localhost:9000/api/resources?metrics=coverage&amp;limit=1&amp;bridgeEndpoint=true&amp;throwExceptionOnFailure=false" />
		</route>
 -->		
		<!-- supply limit=n, for n number of worse projects. -->
		<route>
			<from
				uri="jetty:http://localhost:8085/mdb/api/project/worse?metrics=coverage&amp;limit=1" />
			<process ref="jsonOutCreator" />
			<to
				uri="http://localhost:9000/api/resources?metrics=${in.header.coverage}&amp;limit=${in.header.limit}" />
		</route>
	</camelContext>

	<bean id="jsonOutCreator" class="com.dashboard.route.processors.BasicProcessor"/>

</beans>
<!-- END SNIPPET: e1 -->